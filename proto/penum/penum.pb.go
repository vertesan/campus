// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: penum.proto

package penum

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AchievementCategory int32

const (
	AchievementCategory_AchievementCategory_Unknown AchievementCategory = 0
	AchievementCategory_AchievementCategory_Idol    AchievementCategory = 1
	AchievementCategory_AchievementCategory_Produce AchievementCategory = 2
	AchievementCategory_AchievementCategory_Other   AchievementCategory = 99
)

// Enum value maps for AchievementCategory.
var (
	AchievementCategory_name = map[int32]string{
		0:  "AchievementCategory_Unknown",
		1:  "AchievementCategory_Idol",
		2:  "AchievementCategory_Produce",
		99: "AchievementCategory_Other",
	}
	AchievementCategory_value = map[string]int32{
		"AchievementCategory_Unknown": 0,
		"AchievementCategory_Idol":    1,
		"AchievementCategory_Produce": 2,
		"AchievementCategory_Other":   99,
	}
)

func (x AchievementCategory) Enum() *AchievementCategory {
	p := new(AchievementCategory)
	*p = x
	return p
}

func (x AchievementCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AchievementCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[0].Descriptor()
}

func (AchievementCategory) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[0]
}

func (x AchievementCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AchievementCategory.Descriptor instead.
func (AchievementCategory) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{0}
}

type AntiCheatFeatureType int32

const (
	AntiCheatFeatureType_AntiCheatFeatureType_Unknown              AntiCheatFeatureType = 0
	AntiCheatFeatureType_AntiCheatFeatureType_ExamProduceLesson    AntiCheatFeatureType = 1
	AntiCheatFeatureType_AntiCheatFeatureType_ExamProduceAudition  AntiCheatFeatureType = 2
	AntiCheatFeatureType_AntiCheatFeatureType_ExamPvpRate          AntiCheatFeatureType = 3
	AntiCheatFeatureType_AntiCheatFeatureType_ExamTower            AntiCheatFeatureType = 4
	AntiCheatFeatureType_AntiCheatFeatureType_ExamGvgRaid          AntiCheatFeatureType = 5
	AntiCheatFeatureType_AntiCheatFeatureType_AndroidPlayIntegrity AntiCheatFeatureType = 101
)

// Enum value maps for AntiCheatFeatureType.
var (
	AntiCheatFeatureType_name = map[int32]string{
		0:   "AntiCheatFeatureType_Unknown",
		1:   "AntiCheatFeatureType_ExamProduceLesson",
		2:   "AntiCheatFeatureType_ExamProduceAudition",
		3:   "AntiCheatFeatureType_ExamPvpRate",
		4:   "AntiCheatFeatureType_ExamTower",
		5:   "AntiCheatFeatureType_ExamGvgRaid",
		101: "AntiCheatFeatureType_AndroidPlayIntegrity",
	}
	AntiCheatFeatureType_value = map[string]int32{
		"AntiCheatFeatureType_Unknown":              0,
		"AntiCheatFeatureType_ExamProduceLesson":    1,
		"AntiCheatFeatureType_ExamProduceAudition":  2,
		"AntiCheatFeatureType_ExamPvpRate":          3,
		"AntiCheatFeatureType_ExamTower":            4,
		"AntiCheatFeatureType_ExamGvgRaid":          5,
		"AntiCheatFeatureType_AndroidPlayIntegrity": 101,
	}
)

func (x AntiCheatFeatureType) Enum() *AntiCheatFeatureType {
	p := new(AntiCheatFeatureType)
	*p = x
	return p
}

func (x AntiCheatFeatureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AntiCheatFeatureType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[1].Descriptor()
}

func (AntiCheatFeatureType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[1]
}

func (x AntiCheatFeatureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AntiCheatFeatureType.Descriptor instead.
func (AntiCheatFeatureType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{1}
}

type AppReviewType int32

const (
	AppReviewType_AppReviewType_Unknown      AppReviewType = 0
	AppReviewType_AppReviewType_Gasha        AppReviewType = 1
	AppReviewType_AppReviewType_MainTask     AppReviewType = 2
	AppReviewType_AppReviewType_Achievement  AppReviewType = 3
	AppReviewType_AppReviewType_ProduceClear AppReviewType = 4
)

// Enum value maps for AppReviewType.
var (
	AppReviewType_name = map[int32]string{
		0: "AppReviewType_Unknown",
		1: "AppReviewType_Gasha",
		2: "AppReviewType_MainTask",
		3: "AppReviewType_Achievement",
		4: "AppReviewType_ProduceClear",
	}
	AppReviewType_value = map[string]int32{
		"AppReviewType_Unknown":      0,
		"AppReviewType_Gasha":        1,
		"AppReviewType_MainTask":     2,
		"AppReviewType_Achievement":  3,
		"AppReviewType_ProduceClear": 4,
	}
)

func (x AppReviewType) Enum() *AppReviewType {
	p := new(AppReviewType)
	*p = x
	return p
}

func (x AppReviewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppReviewType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[2].Descriptor()
}

func (AppReviewType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[2]
}

func (x AppReviewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppReviewType.Descriptor instead.
func (AppReviewType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{2}
}

type AssetCopyRuleGroup int32

const (
	AssetCopyRuleGroup_AssetCopyRuleGroup_Unknown AssetCopyRuleGroup = 0
	AssetCopyRuleGroup_AssetCopyRuleGroup_Common  AssetCopyRuleGroup = 1
	AssetCopyRuleGroup_AssetCopyRuleGroup_Motion  AssetCopyRuleGroup = 2
	AssetCopyRuleGroup_AssetCopyRuleGroup_Voice   AssetCopyRuleGroup = 3
	AssetCopyRuleGroup_AssetCopyRuleGroup_Camera  AssetCopyRuleGroup = 4
)

// Enum value maps for AssetCopyRuleGroup.
var (
	AssetCopyRuleGroup_name = map[int32]string{
		0: "AssetCopyRuleGroup_Unknown",
		1: "AssetCopyRuleGroup_Common",
		2: "AssetCopyRuleGroup_Motion",
		3: "AssetCopyRuleGroup_Voice",
		4: "AssetCopyRuleGroup_Camera",
	}
	AssetCopyRuleGroup_value = map[string]int32{
		"AssetCopyRuleGroup_Unknown": 0,
		"AssetCopyRuleGroup_Common":  1,
		"AssetCopyRuleGroup_Motion":  2,
		"AssetCopyRuleGroup_Voice":   3,
		"AssetCopyRuleGroup_Camera":  4,
	}
)

func (x AssetCopyRuleGroup) Enum() *AssetCopyRuleGroup {
	p := new(AssetCopyRuleGroup)
	*p = x
	return p
}

func (x AssetCopyRuleGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetCopyRuleGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[3].Descriptor()
}

func (AssetCopyRuleGroup) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[3]
}

func (x AssetCopyRuleGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetCopyRuleGroup.Descriptor instead.
func (AssetCopyRuleGroup) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{3}
}

type AssetCopyRuleType int32

const (
	AssetCopyRuleType_AssetCopyRuleType_Unknown       AssetCopyRuleType = 0
	AssetCopyRuleType_AssetCopyRuleType_Require       AssetCopyRuleType = 1
	AssetCopyRuleType_AssetCopyRuleType_Ignore        AssetCopyRuleType = 2
	AssetCopyRuleType_AssetCopyRuleType_RequireServer AssetCopyRuleType = 3
	AssetCopyRuleType_AssetCopyRuleType_RequireClient AssetCopyRuleType = 4
)

// Enum value maps for AssetCopyRuleType.
var (
	AssetCopyRuleType_name = map[int32]string{
		0: "AssetCopyRuleType_Unknown",
		1: "AssetCopyRuleType_Require",
		2: "AssetCopyRuleType_Ignore",
		3: "AssetCopyRuleType_RequireServer",
		4: "AssetCopyRuleType_RequireClient",
	}
	AssetCopyRuleType_value = map[string]int32{
		"AssetCopyRuleType_Unknown":       0,
		"AssetCopyRuleType_Require":       1,
		"AssetCopyRuleType_Ignore":        2,
		"AssetCopyRuleType_RequireServer": 3,
		"AssetCopyRuleType_RequireClient": 4,
	}
)

func (x AssetCopyRuleType) Enum() *AssetCopyRuleType {
	p := new(AssetCopyRuleType)
	*p = x
	return p
}

func (x AssetCopyRuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetCopyRuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[4].Descriptor()
}

func (AssetCopyRuleType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[4]
}

func (x AssetCopyRuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetCopyRuleType.Descriptor instead.
func (AssetCopyRuleType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{4}
}

type AssetDownloadType int32

const (
	AssetDownloadType_AssetDownloadType_Unknown AssetDownloadType = 0
	AssetDownloadType_AssetDownloadType_First   AssetDownloadType = 1
	AssetDownloadType_AssetDownloadType_Second  AssetDownloadType = 2
)

// Enum value maps for AssetDownloadType.
var (
	AssetDownloadType_name = map[int32]string{
		0: "AssetDownloadType_Unknown",
		1: "AssetDownloadType_First",
		2: "AssetDownloadType_Second",
	}
	AssetDownloadType_value = map[string]int32{
		"AssetDownloadType_Unknown": 0,
		"AssetDownloadType_First":   1,
		"AssetDownloadType_Second":  2,
	}
)

func (x AssetDownloadType) Enum() *AssetDownloadType {
	p := new(AssetDownloadType)
	*p = x
	return p
}

func (x AssetDownloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetDownloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[5].Descriptor()
}

func (AssetDownloadType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[5]
}

func (x AssetDownloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetDownloadType.Descriptor instead.
func (AssetDownloadType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{5}
}

type AssetKind int32

const (
	AssetKind_AssetKind_Unknown     AssetKind = 0
	AssetKind_AssetKind_AssetBundle AssetKind = 1
	AssetKind_AssetKind_Resource    AssetKind = 2
)

// Enum value maps for AssetKind.
var (
	AssetKind_name = map[int32]string{
		0: "AssetKind_Unknown",
		1: "AssetKind_AssetBundle",
		2: "AssetKind_Resource",
	}
	AssetKind_value = map[string]int32{
		"AssetKind_Unknown":     0,
		"AssetKind_AssetBundle": 1,
		"AssetKind_Resource":    2,
	}
)

func (x AssetKind) Enum() *AssetKind {
	p := new(AssetKind)
	*p = x
	return p
}

func (x AssetKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetKind) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[6].Descriptor()
}

func (AssetKind) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[6]
}

func (x AssetKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetKind.Descriptor instead.
func (AssetKind) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{6}
}

type AuthProviderType int32

const (
	AuthProviderType_AuthProviderType_Unknown       AuthProviderType = 0
	AuthProviderType_AuthProviderType_BandaiNamcoId AuthProviderType = 1
	AuthProviderType_AuthProviderType_DmmgamesId    AuthProviderType = 2
)

// Enum value maps for AuthProviderType.
var (
	AuthProviderType_name = map[int32]string{
		0: "AuthProviderType_Unknown",
		1: "AuthProviderType_BandaiNamcoId",
		2: "AuthProviderType_DmmgamesId",
	}
	AuthProviderType_value = map[string]int32{
		"AuthProviderType_Unknown":       0,
		"AuthProviderType_BandaiNamcoId": 1,
		"AuthProviderType_DmmgamesId":    2,
	}
)

func (x AuthProviderType) Enum() *AuthProviderType {
	p := new(AuthProviderType)
	*p = x
	return p
}

func (x AuthProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[7].Descriptor()
}

func (AuthProviderType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[7]
}

func (x AuthProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthProviderType.Descriptor instead.
func (AuthProviderType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{7}
}

type CharacterDetailType int32

const (
	CharacterDetailType_CharacterDetailType_Unknown      CharacterDetailType = 0
	CharacterDetailType_CharacterDetailType_Grade        CharacterDetailType = 1
	CharacterDetailType_CharacterDetailType_Height       CharacterDetailType = 2
	CharacterDetailType_CharacterDetailType_Weight       CharacterDetailType = 3
	CharacterDetailType_CharacterDetailType_BloodType    CharacterDetailType = 4
	CharacterDetailType_CharacterDetailType_ThreeSize    CharacterDetailType = 5
	CharacterDetailType_CharacterDetailType_ZodiacSign   CharacterDetailType = 6
	CharacterDetailType_CharacterDetailType_Cv           CharacterDetailType = 7
	CharacterDetailType_CharacterDetailType_Age          CharacterDetailType = 8
	CharacterDetailType_CharacterDetailType_Birthday     CharacterDetailType = 9
	CharacterDetailType_CharacterDetailType_DominantHand CharacterDetailType = 10
	CharacterDetailType_CharacterDetailType_Birthplace   CharacterDetailType = 11
	CharacterDetailType_CharacterDetailType_SpecialSkill CharacterDetailType = 12
	CharacterDetailType_CharacterDetailType_Hobby        CharacterDetailType = 13
	CharacterDetailType_CharacterDetailType_Introduction CharacterDetailType = 14
)

// Enum value maps for CharacterDetailType.
var (
	CharacterDetailType_name = map[int32]string{
		0:  "CharacterDetailType_Unknown",
		1:  "CharacterDetailType_Grade",
		2:  "CharacterDetailType_Height",
		3:  "CharacterDetailType_Weight",
		4:  "CharacterDetailType_BloodType",
		5:  "CharacterDetailType_ThreeSize",
		6:  "CharacterDetailType_ZodiacSign",
		7:  "CharacterDetailType_Cv",
		8:  "CharacterDetailType_Age",
		9:  "CharacterDetailType_Birthday",
		10: "CharacterDetailType_DominantHand",
		11: "CharacterDetailType_Birthplace",
		12: "CharacterDetailType_SpecialSkill",
		13: "CharacterDetailType_Hobby",
		14: "CharacterDetailType_Introduction",
	}
	CharacterDetailType_value = map[string]int32{
		"CharacterDetailType_Unknown":      0,
		"CharacterDetailType_Grade":        1,
		"CharacterDetailType_Height":       2,
		"CharacterDetailType_Weight":       3,
		"CharacterDetailType_BloodType":    4,
		"CharacterDetailType_ThreeSize":    5,
		"CharacterDetailType_ZodiacSign":   6,
		"CharacterDetailType_Cv":           7,
		"CharacterDetailType_Age":          8,
		"CharacterDetailType_Birthday":     9,
		"CharacterDetailType_DominantHand": 10,
		"CharacterDetailType_Birthplace":   11,
		"CharacterDetailType_SpecialSkill": 12,
		"CharacterDetailType_Hobby":        13,
		"CharacterDetailType_Introduction": 14,
	}
)

func (x CharacterDetailType) Enum() *CharacterDetailType {
	p := new(CharacterDetailType)
	*p = x
	return p
}

func (x CharacterDetailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterDetailType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[8].Descriptor()
}

func (CharacterDetailType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[8]
}

func (x CharacterDetailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterDetailType.Descriptor instead.
func (CharacterDetailType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{8}
}

type CharacterPersonalityType int32

const (
	CharacterPersonalityType_CharacterPersonalityType_Unknown CharacterPersonalityType = 0
	CharacterPersonalityType_CharacterPersonalityType_A       CharacterPersonalityType = 1
	CharacterPersonalityType_CharacterPersonalityType_B       CharacterPersonalityType = 2
	CharacterPersonalityType_CharacterPersonalityType_C       CharacterPersonalityType = 3
	CharacterPersonalityType_CharacterPersonalityType_D       CharacterPersonalityType = 4
)

// Enum value maps for CharacterPersonalityType.
var (
	CharacterPersonalityType_name = map[int32]string{
		0: "CharacterPersonalityType_Unknown",
		1: "CharacterPersonalityType_A",
		2: "CharacterPersonalityType_B",
		3: "CharacterPersonalityType_C",
		4: "CharacterPersonalityType_D",
	}
	CharacterPersonalityType_value = map[string]int32{
		"CharacterPersonalityType_Unknown": 0,
		"CharacterPersonalityType_A":       1,
		"CharacterPersonalityType_B":       2,
		"CharacterPersonalityType_C":       3,
		"CharacterPersonalityType_D":       4,
	}
)

func (x CharacterPersonalityType) Enum() *CharacterPersonalityType {
	p := new(CharacterPersonalityType)
	*p = x
	return p
}

func (x CharacterPersonalityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacterPersonalityType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[9].Descriptor()
}

func (CharacterPersonalityType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[9]
}

func (x CharacterPersonalityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacterPersonalityType.Descriptor instead.
func (CharacterPersonalityType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{9}
}

type CoinGashaBoxResetTypeType int32

const (
	CoinGashaBoxResetTypeType_CoinGashaBoxResetTypeType_Unknown      CoinGashaBoxResetTypeType = 0
	CoinGashaBoxResetTypeType_CoinGashaBoxResetTypeType_EmptyAll     CoinGashaBoxResetTypeType = 1
	CoinGashaBoxResetTypeType_CoinGashaBoxResetTypeType_EmptyFeature CoinGashaBoxResetTypeType = 2
	CoinGashaBoxResetTypeType_CoinGashaBoxResetTypeType_Optional     CoinGashaBoxResetTypeType = 3
)

// Enum value maps for CoinGashaBoxResetTypeType.
var (
	CoinGashaBoxResetTypeType_name = map[int32]string{
		0: "CoinGashaBoxResetTypeType_Unknown",
		1: "CoinGashaBoxResetTypeType_EmptyAll",
		2: "CoinGashaBoxResetTypeType_EmptyFeature",
		3: "CoinGashaBoxResetTypeType_Optional",
	}
	CoinGashaBoxResetTypeType_value = map[string]int32{
		"CoinGashaBoxResetTypeType_Unknown":      0,
		"CoinGashaBoxResetTypeType_EmptyAll":     1,
		"CoinGashaBoxResetTypeType_EmptyFeature": 2,
		"CoinGashaBoxResetTypeType_Optional":     3,
	}
)

func (x CoinGashaBoxResetTypeType) Enum() *CoinGashaBoxResetTypeType {
	p := new(CoinGashaBoxResetTypeType)
	*p = x
	return p
}

func (x CoinGashaBoxResetTypeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoinGashaBoxResetTypeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[10].Descriptor()
}

func (CoinGashaBoxResetTypeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[10]
}

func (x CoinGashaBoxResetTypeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoinGashaBoxResetTypeType.Descriptor instead.
func (CoinGashaBoxResetTypeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{10}
}

type CoinGashaType int32

const (
	CoinGashaType_CoinGashaType_Unknown CoinGashaType = 0
	CoinGashaType_CoinGashaType_Default CoinGashaType = 1
	CoinGashaType_CoinGashaType_Feature CoinGashaType = 2
	CoinGashaType_CoinGashaType_Box     CoinGashaType = 3
)

// Enum value maps for CoinGashaType.
var (
	CoinGashaType_name = map[int32]string{
		0: "CoinGashaType_Unknown",
		1: "CoinGashaType_Default",
		2: "CoinGashaType_Feature",
		3: "CoinGashaType_Box",
	}
	CoinGashaType_value = map[string]int32{
		"CoinGashaType_Unknown": 0,
		"CoinGashaType_Default": 1,
		"CoinGashaType_Feature": 2,
		"CoinGashaType_Box":     3,
	}
)

func (x CoinGashaType) Enum() *CoinGashaType {
	p := new(CoinGashaType)
	*p = x
	return p
}

func (x CoinGashaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoinGashaType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[11].Descriptor()
}

func (CoinGashaType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[11]
}

func (x CoinGashaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoinGashaType.Descriptor instead.
func (CoinGashaType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{11}
}

type ConditionMinMaxType int32

const (
	ConditionMinMaxType_ConditionMinMaxType_Unknown ConditionMinMaxType = 0
	ConditionMinMaxType_ConditionMinMaxType_MinMax  ConditionMinMaxType = 1
	ConditionMinMaxType_ConditionMinMaxType_Min     ConditionMinMaxType = 2
	ConditionMinMaxType_ConditionMinMaxType_Max     ConditionMinMaxType = 3
)

// Enum value maps for ConditionMinMaxType.
var (
	ConditionMinMaxType_name = map[int32]string{
		0: "ConditionMinMaxType_Unknown",
		1: "ConditionMinMaxType_MinMax",
		2: "ConditionMinMaxType_Min",
		3: "ConditionMinMaxType_Max",
	}
	ConditionMinMaxType_value = map[string]int32{
		"ConditionMinMaxType_Unknown": 0,
		"ConditionMinMaxType_MinMax":  1,
		"ConditionMinMaxType_Min":     2,
		"ConditionMinMaxType_Max":     3,
	}
)

func (x ConditionMinMaxType) Enum() *ConditionMinMaxType {
	p := new(ConditionMinMaxType)
	*p = x
	return p
}

func (x ConditionMinMaxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionMinMaxType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[12].Descriptor()
}

func (ConditionMinMaxType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[12]
}

func (x ConditionMinMaxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionMinMaxType.Descriptor instead.
func (ConditionMinMaxType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{12}
}

type ConditionOperatorType int32

const (
	ConditionOperatorType_ConditionOperatorType_Unknown ConditionOperatorType = 0
	ConditionOperatorType_ConditionOperatorType_And     ConditionOperatorType = 1
	ConditionOperatorType_ConditionOperatorType_Or      ConditionOperatorType = 2
)

// Enum value maps for ConditionOperatorType.
var (
	ConditionOperatorType_name = map[int32]string{
		0: "ConditionOperatorType_Unknown",
		1: "ConditionOperatorType_And",
		2: "ConditionOperatorType_Or",
	}
	ConditionOperatorType_value = map[string]int32{
		"ConditionOperatorType_Unknown": 0,
		"ConditionOperatorType_And":     1,
		"ConditionOperatorType_Or":      2,
	}
)

func (x ConditionOperatorType) Enum() *ConditionOperatorType {
	p := new(ConditionOperatorType)
	*p = x
	return p
}

func (x ConditionOperatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionOperatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[13].Descriptor()
}

func (ConditionOperatorType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[13]
}

func (x ConditionOperatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionOperatorType.Descriptor instead.
func (ConditionOperatorType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{13}
}

type ConditionType int32

const (
	ConditionType_ConditionType_Unknown                            ConditionType = 0
	ConditionType_ConditionType_TimeTerm                           ConditionType = 1
	ConditionType_ConditionType_TimeDuration                       ConditionType = 2
	ConditionType_ConditionType_TimeWeekday                        ConditionType = 3
	ConditionType_ConditionType_HomeTime                           ConditionType = 4
	ConditionType_ConditionType_Birthday                           ConditionType = 5
	ConditionType_ConditionType_Login                              ConditionType = 6
	ConditionType_ConditionType_TutorialClear                      ConditionType = 7
	ConditionType_ConditionType_GameStartTutorialClearHour         ConditionType = 8
	ConditionType_ConditionType_HomeCharacter                      ConditionType = 9
	ConditionType_ConditionType_ProducerLevel                      ConditionType = 10
	ConditionType_ConditionType_Character                          ConditionType = 11
	ConditionType_ConditionType_FanCount                           ConditionType = 12
	ConditionType_ConditionType_DearnessLevel                      ConditionType = 13
	ConditionType_ConditionType_Costume                            ConditionType = 14
	ConditionType_ConditionType_IdolCard                           ConditionType = 15
	ConditionType_ConditionType_DearnessStoryFirstReadTime         ConditionType = 16
	ConditionType_ConditionType_IdolCardPotentialRank              ConditionType = 17
	ConditionType_ConditionType_IdolCardLevelLimitRank             ConditionType = 18
	ConditionType_ConditionType_SupportCard                        ConditionType = 19
	ConditionType_ConditionType_SupportCardLevel                   ConditionType = 20
	ConditionType_ConditionType_SupportCardLevelLimitRank          ConditionType = 21
	ConditionType_ConditionType_MemoryCount                        ConditionType = 22
	ConditionType_ConditionType_ProduceCard                        ConditionType = 23
	ConditionType_ConditionType_Music                              ConditionType = 24
	ConditionType_ConditionType_CharacterProducePlayCount          ConditionType = 26
	ConditionType_ConditionType_CharacterProduceClearCount         ConditionType = 27
	ConditionType_ConditionType_ProduceClearCount                  ConditionType = 28
	ConditionType_ConditionType_ProducePlanClearCount              ConditionType = 29
	ConditionType_ConditionType_PvpRateOpen                        ConditionType = 30
	ConditionType_ConditionType_PvpRateSeasonPlayCount             ConditionType = 31
	ConditionType_ConditionType_PvpRateSeasonWinCount              ConditionType = 32
	ConditionType_ConditionType_PvpRateSeasonRate                  ConditionType = 33
	ConditionType_ConditionType_PvpRateUnitOverallPower            ConditionType = 34
	ConditionType_ConditionType_WorkCount                          ConditionType = 35
	ConditionType_ConditionType_WorkCharacterCount                 ConditionType = 36
	ConditionType_ConditionType_StoryRead                          ConditionType = 37
	ConditionType_ConditionType_FollowCount                        ConditionType = 38
	ConditionType_ConditionType_CostumeHead                        ConditionType = 39
	ConditionType_ConditionType_GuildJoin                          ConditionType = 40
	ConditionType_ConditionType_MeishiUpdateCount                  ConditionType = 41
	ConditionType_ConditionType_GashaOpen                          ConditionType = 42
	ConditionType_ConditionType_GashaDraw                          ConditionType = 43
	ConditionType_ConditionType_ExchangeItemCount                  ConditionType = 44
	ConditionType_ConditionType_ShopItemPurchase                   ConditionType = 45
	ConditionType_ConditionType_MissionPassProgress                ConditionType = 46
	ConditionType_ConditionType_MainTaskCompleted                  ConditionType = 47
	ConditionType_ConditionType_MissionCompleted                   ConditionType = 48
	ConditionType_ConditionType_AchievementCompleted               ConditionType = 49
	ConditionType_ConditionType_ItemObtained                       ConditionType = 50
	ConditionType_ConditionType_ItemCount                          ConditionType = 51
	ConditionType_ConditionType_SeminarExamClear                   ConditionType = 53
	ConditionType_ConditionType_PvpRateSeasonGrade                 ConditionType = 54
	ConditionType_ConditionType_PvpRateBestGrade                   ConditionType = 55
	ConditionType_ConditionType_ProduceStoryRead                   ConditionType = 56
	ConditionType_ConditionType_TowerLayerClear                    ConditionType = 57
	ConditionType_ConditionType_StoryUnlockKeyUse                  ConditionType = 58
	ConditionType_ConditionType_MissionDailyReleaseNotComplete     ConditionType = 59
	ConditionType_ConditionType_MissionPanelNotComplete            ConditionType = 60
	ConditionType_ConditionType_AchievementFirstThresholdClearHour ConditionType = 61
	ConditionType_ConditionType_MainTaskFirstThresholdClearHour    ConditionType = 62
	ConditionType_ConditionType_MissionFirstThresholdClearHour     ConditionType = 63
	ConditionType_ConditionType_PhotoBackground                    ConditionType = 64
	ConditionType_ConditionType_PhotoPose                          ConditionType = 65
	ConditionType_ConditionType_Comeback                           ConditionType = 66
	ConditionType_ConditionType_MissionGroupComplete               ConditionType = 67
	ConditionType_ConditionType_MissionGroupNotComplete            ConditionType = 68
	ConditionType_ConditionType_AppVersionGreaterThanOrEqual       ConditionType = 69
	ConditionType_ConditionType_AppVersionLessThanOrEqual          ConditionType = 70
	ConditionType_ConditionType_Set                                ConditionType = 998
	ConditionType_ConditionType_NegativeSet                        ConditionType = 999
)

// Enum value maps for ConditionType.
var (
	ConditionType_name = map[int32]string{
		0:   "ConditionType_Unknown",
		1:   "ConditionType_TimeTerm",
		2:   "ConditionType_TimeDuration",
		3:   "ConditionType_TimeWeekday",
		4:   "ConditionType_HomeTime",
		5:   "ConditionType_Birthday",
		6:   "ConditionType_Login",
		7:   "ConditionType_TutorialClear",
		8:   "ConditionType_GameStartTutorialClearHour",
		9:   "ConditionType_HomeCharacter",
		10:  "ConditionType_ProducerLevel",
		11:  "ConditionType_Character",
		12:  "ConditionType_FanCount",
		13:  "ConditionType_DearnessLevel",
		14:  "ConditionType_Costume",
		15:  "ConditionType_IdolCard",
		16:  "ConditionType_DearnessStoryFirstReadTime",
		17:  "ConditionType_IdolCardPotentialRank",
		18:  "ConditionType_IdolCardLevelLimitRank",
		19:  "ConditionType_SupportCard",
		20:  "ConditionType_SupportCardLevel",
		21:  "ConditionType_SupportCardLevelLimitRank",
		22:  "ConditionType_MemoryCount",
		23:  "ConditionType_ProduceCard",
		24:  "ConditionType_Music",
		26:  "ConditionType_CharacterProducePlayCount",
		27:  "ConditionType_CharacterProduceClearCount",
		28:  "ConditionType_ProduceClearCount",
		29:  "ConditionType_ProducePlanClearCount",
		30:  "ConditionType_PvpRateOpen",
		31:  "ConditionType_PvpRateSeasonPlayCount",
		32:  "ConditionType_PvpRateSeasonWinCount",
		33:  "ConditionType_PvpRateSeasonRate",
		34:  "ConditionType_PvpRateUnitOverallPower",
		35:  "ConditionType_WorkCount",
		36:  "ConditionType_WorkCharacterCount",
		37:  "ConditionType_StoryRead",
		38:  "ConditionType_FollowCount",
		39:  "ConditionType_CostumeHead",
		40:  "ConditionType_GuildJoin",
		41:  "ConditionType_MeishiUpdateCount",
		42:  "ConditionType_GashaOpen",
		43:  "ConditionType_GashaDraw",
		44:  "ConditionType_ExchangeItemCount",
		45:  "ConditionType_ShopItemPurchase",
		46:  "ConditionType_MissionPassProgress",
		47:  "ConditionType_MainTaskCompleted",
		48:  "ConditionType_MissionCompleted",
		49:  "ConditionType_AchievementCompleted",
		50:  "ConditionType_ItemObtained",
		51:  "ConditionType_ItemCount",
		53:  "ConditionType_SeminarExamClear",
		54:  "ConditionType_PvpRateSeasonGrade",
		55:  "ConditionType_PvpRateBestGrade",
		56:  "ConditionType_ProduceStoryRead",
		57:  "ConditionType_TowerLayerClear",
		58:  "ConditionType_StoryUnlockKeyUse",
		59:  "ConditionType_MissionDailyReleaseNotComplete",
		60:  "ConditionType_MissionPanelNotComplete",
		61:  "ConditionType_AchievementFirstThresholdClearHour",
		62:  "ConditionType_MainTaskFirstThresholdClearHour",
		63:  "ConditionType_MissionFirstThresholdClearHour",
		64:  "ConditionType_PhotoBackground",
		65:  "ConditionType_PhotoPose",
		66:  "ConditionType_Comeback",
		67:  "ConditionType_MissionGroupComplete",
		68:  "ConditionType_MissionGroupNotComplete",
		69:  "ConditionType_AppVersionGreaterThanOrEqual",
		70:  "ConditionType_AppVersionLessThanOrEqual",
		998: "ConditionType_Set",
		999: "ConditionType_NegativeSet",
	}
	ConditionType_value = map[string]int32{
		"ConditionType_Unknown":                            0,
		"ConditionType_TimeTerm":                           1,
		"ConditionType_TimeDuration":                       2,
		"ConditionType_TimeWeekday":                        3,
		"ConditionType_HomeTime":                           4,
		"ConditionType_Birthday":                           5,
		"ConditionType_Login":                              6,
		"ConditionType_TutorialClear":                      7,
		"ConditionType_GameStartTutorialClearHour":         8,
		"ConditionType_HomeCharacter":                      9,
		"ConditionType_ProducerLevel":                      10,
		"ConditionType_Character":                          11,
		"ConditionType_FanCount":                           12,
		"ConditionType_DearnessLevel":                      13,
		"ConditionType_Costume":                            14,
		"ConditionType_IdolCard":                           15,
		"ConditionType_DearnessStoryFirstReadTime":         16,
		"ConditionType_IdolCardPotentialRank":              17,
		"ConditionType_IdolCardLevelLimitRank":             18,
		"ConditionType_SupportCard":                        19,
		"ConditionType_SupportCardLevel":                   20,
		"ConditionType_SupportCardLevelLimitRank":          21,
		"ConditionType_MemoryCount":                        22,
		"ConditionType_ProduceCard":                        23,
		"ConditionType_Music":                              24,
		"ConditionType_CharacterProducePlayCount":          26,
		"ConditionType_CharacterProduceClearCount":         27,
		"ConditionType_ProduceClearCount":                  28,
		"ConditionType_ProducePlanClearCount":              29,
		"ConditionType_PvpRateOpen":                        30,
		"ConditionType_PvpRateSeasonPlayCount":             31,
		"ConditionType_PvpRateSeasonWinCount":              32,
		"ConditionType_PvpRateSeasonRate":                  33,
		"ConditionType_PvpRateUnitOverallPower":            34,
		"ConditionType_WorkCount":                          35,
		"ConditionType_WorkCharacterCount":                 36,
		"ConditionType_StoryRead":                          37,
		"ConditionType_FollowCount":                        38,
		"ConditionType_CostumeHead":                        39,
		"ConditionType_GuildJoin":                          40,
		"ConditionType_MeishiUpdateCount":                  41,
		"ConditionType_GashaOpen":                          42,
		"ConditionType_GashaDraw":                          43,
		"ConditionType_ExchangeItemCount":                  44,
		"ConditionType_ShopItemPurchase":                   45,
		"ConditionType_MissionPassProgress":                46,
		"ConditionType_MainTaskCompleted":                  47,
		"ConditionType_MissionCompleted":                   48,
		"ConditionType_AchievementCompleted":               49,
		"ConditionType_ItemObtained":                       50,
		"ConditionType_ItemCount":                          51,
		"ConditionType_SeminarExamClear":                   53,
		"ConditionType_PvpRateSeasonGrade":                 54,
		"ConditionType_PvpRateBestGrade":                   55,
		"ConditionType_ProduceStoryRead":                   56,
		"ConditionType_TowerLayerClear":                    57,
		"ConditionType_StoryUnlockKeyUse":                  58,
		"ConditionType_MissionDailyReleaseNotComplete":     59,
		"ConditionType_MissionPanelNotComplete":            60,
		"ConditionType_AchievementFirstThresholdClearHour": 61,
		"ConditionType_MainTaskFirstThresholdClearHour":    62,
		"ConditionType_MissionFirstThresholdClearHour":     63,
		"ConditionType_PhotoBackground":                    64,
		"ConditionType_PhotoPose":                          65,
		"ConditionType_Comeback":                           66,
		"ConditionType_MissionGroupComplete":               67,
		"ConditionType_MissionGroupNotComplete":            68,
		"ConditionType_AppVersionGreaterThanOrEqual":       69,
		"ConditionType_AppVersionLessThanOrEqual":          70,
		"ConditionType_Set":                                998,
		"ConditionType_NegativeSet":                        999,
	}
)

func (x ConditionType) Enum() *ConditionType {
	p := new(ConditionType)
	*p = x
	return p
}

func (x ConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[14].Descriptor()
}

func (ConditionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[14]
}

func (x ConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionType.Descriptor instead.
func (ConditionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{14}
}

type ConsentAgreementType int32

const (
	ConsentAgreementType_ConsentAgreementType_Unknown      ConsentAgreementType = 0
	ConsentAgreementType_ConsentAgreementType_Unanswered   ConsentAgreementType = 1
	ConsentAgreementType_ConsentAgreementType_Disagreement ConsentAgreementType = 2
	ConsentAgreementType_ConsentAgreementType_Agreement    ConsentAgreementType = 3
)

// Enum value maps for ConsentAgreementType.
var (
	ConsentAgreementType_name = map[int32]string{
		0: "ConsentAgreementType_Unknown",
		1: "ConsentAgreementType_Unanswered",
		2: "ConsentAgreementType_Disagreement",
		3: "ConsentAgreementType_Agreement",
	}
	ConsentAgreementType_value = map[string]int32{
		"ConsentAgreementType_Unknown":      0,
		"ConsentAgreementType_Unanswered":   1,
		"ConsentAgreementType_Disagreement": 2,
		"ConsentAgreementType_Agreement":    3,
	}
)

func (x ConsentAgreementType) Enum() *ConsentAgreementType {
	p := new(ConsentAgreementType)
	*p = x
	return p
}

func (x ConsentAgreementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsentAgreementType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[15].Descriptor()
}

func (ConsentAgreementType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[15]
}

func (x ConsentAgreementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsentAgreementType.Descriptor instead.
func (ConsentAgreementType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{15}
}

type ConsentType int32

const (
	ConsentType_ConsentType_Unknown                 ConsentType = 0
	ConsentType_ConsentType_Overview                ConsentType = 1
	ConsentType_ConsentType_Analysis                ConsentType = 2
	ConsentType_ConsentType_Advertisement           ConsentType = 3
	ConsentType_ConsentType_CustomizedAdvertisement ConsentType = 4
	ConsentType_ConsentType_Sns                     ConsentType = 5
)

// Enum value maps for ConsentType.
var (
	ConsentType_name = map[int32]string{
		0: "ConsentType_Unknown",
		1: "ConsentType_Overview",
		2: "ConsentType_Analysis",
		3: "ConsentType_Advertisement",
		4: "ConsentType_CustomizedAdvertisement",
		5: "ConsentType_Sns",
	}
	ConsentType_value = map[string]int32{
		"ConsentType_Unknown":                 0,
		"ConsentType_Overview":                1,
		"ConsentType_Analysis":                2,
		"ConsentType_Advertisement":           3,
		"ConsentType_CustomizedAdvertisement": 4,
		"ConsentType_Sns":                     5,
	}
)

func (x ConsentType) Enum() *ConsentType {
	p := new(ConsentType)
	*p = x
	return p
}

func (x ConsentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsentType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[16].Descriptor()
}

func (ConsentType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[16]
}

func (x ConsentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsentType.Descriptor instead.
func (ConsentType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{16}
}

type CostumeFeatureType int32

const (
	CostumeFeatureType_CostumeFeatureType_Unknown     CostumeFeatureType = 0
	CostumeFeatureType_CostumeFeatureType_Home        CostumeFeatureType = 1
	CostumeFeatureType_CostumeFeatureType_Produce     CostumeFeatureType = 2
	CostumeFeatureType_CostumeFeatureType_Live        CostumeFeatureType = 3
	CostumeFeatureType_CostumeFeatureType_Photography CostumeFeatureType = 4
)

// Enum value maps for CostumeFeatureType.
var (
	CostumeFeatureType_name = map[int32]string{
		0: "CostumeFeatureType_Unknown",
		1: "CostumeFeatureType_Home",
		2: "CostumeFeatureType_Produce",
		3: "CostumeFeatureType_Live",
		4: "CostumeFeatureType_Photography",
	}
	CostumeFeatureType_value = map[string]int32{
		"CostumeFeatureType_Unknown":     0,
		"CostumeFeatureType_Home":        1,
		"CostumeFeatureType_Produce":     2,
		"CostumeFeatureType_Live":        3,
		"CostumeFeatureType_Photography": 4,
	}
)

func (x CostumeFeatureType) Enum() *CostumeFeatureType {
	p := new(CostumeFeatureType)
	*p = x
	return p
}

func (x CostumeFeatureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CostumeFeatureType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[17].Descriptor()
}

func (CostumeFeatureType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[17]
}

func (x CostumeFeatureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CostumeFeatureType.Descriptor instead.
func (CostumeFeatureType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{17}
}

type CostumeMotionType int32

const (
	CostumeMotionType_CostumeMotionType_Unknown     CostumeMotionType = 0
	CostumeMotionType_CostumeMotionType_Wait        CostumeMotionType = 1
	CostumeMotionType_CostumeMotionType_Start       CostumeMotionType = 2
	CostumeMotionType_CostumeMotionType_Finish      CostumeMotionType = 3
	CostumeMotionType_CostumeMotionType_TapReaction CostumeMotionType = 4
)

// Enum value maps for CostumeMotionType.
var (
	CostumeMotionType_name = map[int32]string{
		0: "CostumeMotionType_Unknown",
		1: "CostumeMotionType_Wait",
		2: "CostumeMotionType_Start",
		3: "CostumeMotionType_Finish",
		4: "CostumeMotionType_TapReaction",
	}
	CostumeMotionType_value = map[string]int32{
		"CostumeMotionType_Unknown":     0,
		"CostumeMotionType_Wait":        1,
		"CostumeMotionType_Start":       2,
		"CostumeMotionType_Finish":      3,
		"CostumeMotionType_TapReaction": 4,
	}
)

func (x CostumeMotionType) Enum() *CostumeMotionType {
	p := new(CostumeMotionType)
	*p = x
	return p
}

func (x CostumeMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CostumeMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[18].Descriptor()
}

func (CostumeMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[18]
}

func (x CostumeMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CostumeMotionType.Descriptor instead.
func (CostumeMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{18}
}

type CostumeSetType int32

const (
	CostumeSetType_CostumeSetType_Unknown         CostumeSetType = 0
	CostumeSetType_CostumeSetType_Home            CostumeSetType = 1
	CostumeSetType_CostumeSetType_ProduceSchedule CostumeSetType = 2
	CostumeSetType_CostumeSetType_ProduceLive     CostumeSetType = 3
	CostumeSetType_CostumeSetType_ProduceTraining CostumeSetType = 4
)

// Enum value maps for CostumeSetType.
var (
	CostumeSetType_name = map[int32]string{
		0: "CostumeSetType_Unknown",
		1: "CostumeSetType_Home",
		2: "CostumeSetType_ProduceSchedule",
		3: "CostumeSetType_ProduceLive",
		4: "CostumeSetType_ProduceTraining",
	}
	CostumeSetType_value = map[string]int32{
		"CostumeSetType_Unknown":         0,
		"CostumeSetType_Home":            1,
		"CostumeSetType_ProduceSchedule": 2,
		"CostumeSetType_ProduceLive":     3,
		"CostumeSetType_ProduceTraining": 4,
	}
)

func (x CostumeSetType) Enum() *CostumeSetType {
	p := new(CostumeSetType)
	*p = x
	return p
}

func (x CostumeSetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CostumeSetType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[19].Descriptor()
}

func (CostumeSetType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[19]
}

func (x CostumeSetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CostumeSetType.Descriptor instead.
func (CostumeSetType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{19}
}

type CountType int32

const (
	CountType_CountType_Unknown                    CountType = 0
	CountType_CountType_Login                      CountType = 1
	CountType_CountType_ProduceRentalMemory        CountType = 2
	CountType_CountType_ProduceContinue            CountType = 3
	CountType_CountType_Achievement                CountType = 4
	CountType_CountType_ReceivedTotalLoginBonus    CountType = 5
	CountType_CountType_ConfirmedTotalLoginBonus   CountType = 6
	CountType_CountType_MeishiUpdate               CountType = 7
	CountType_CountType_MeishiFollow               CountType = 8
	CountType_CountType_GuildDonation              CountType = 9
	CountType_CountType_MainTask                   CountType = 10
	CountType_CountType_AchievementIdol            CountType = 11
	CountType_CountType_AchievementProduce         CountType = 12
	CountType_CountType_AchievementOther           CountType = 13
	CountType_CountType_MainTaskMainStory          CountType = 14
	CountType_CountType_MainTaskProducer           CountType = 15
	CountType_CountType_ProduceClearTimeBanWarning CountType = 16
	CountType_CountType_MainTaskProducer2          CountType = 100
	CountType_CountType_MainTaskProducer3          CountType = 101
	CountType_CountType_MainTaskProducer4          CountType = 102
)

// Enum value maps for CountType.
var (
	CountType_name = map[int32]string{
		0:   "CountType_Unknown",
		1:   "CountType_Login",
		2:   "CountType_ProduceRentalMemory",
		3:   "CountType_ProduceContinue",
		4:   "CountType_Achievement",
		5:   "CountType_ReceivedTotalLoginBonus",
		6:   "CountType_ConfirmedTotalLoginBonus",
		7:   "CountType_MeishiUpdate",
		8:   "CountType_MeishiFollow",
		9:   "CountType_GuildDonation",
		10:  "CountType_MainTask",
		11:  "CountType_AchievementIdol",
		12:  "CountType_AchievementProduce",
		13:  "CountType_AchievementOther",
		14:  "CountType_MainTaskMainStory",
		15:  "CountType_MainTaskProducer",
		16:  "CountType_ProduceClearTimeBanWarning",
		100: "CountType_MainTaskProducer2",
		101: "CountType_MainTaskProducer3",
		102: "CountType_MainTaskProducer4",
	}
	CountType_value = map[string]int32{
		"CountType_Unknown":                    0,
		"CountType_Login":                      1,
		"CountType_ProduceRentalMemory":        2,
		"CountType_ProduceContinue":            3,
		"CountType_Achievement":                4,
		"CountType_ReceivedTotalLoginBonus":    5,
		"CountType_ConfirmedTotalLoginBonus":   6,
		"CountType_MeishiUpdate":               7,
		"CountType_MeishiFollow":               8,
		"CountType_GuildDonation":              9,
		"CountType_MainTask":                   10,
		"CountType_AchievementIdol":            11,
		"CountType_AchievementProduce":         12,
		"CountType_AchievementOther":           13,
		"CountType_MainTaskMainStory":          14,
		"CountType_MainTaskProducer":           15,
		"CountType_ProduceClearTimeBanWarning": 16,
		"CountType_MainTaskProducer2":          100,
		"CountType_MainTaskProducer3":          101,
		"CountType_MainTaskProducer4":          102,
	}
)

func (x CountType) Enum() *CountType {
	p := new(CountType)
	*p = x
	return p
}

func (x CountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CountType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[20].Descriptor()
}

func (CountType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[20]
}

func (x CountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CountType.Descriptor instead.
func (CountType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{20}
}

type DearnessMotionType int32

const (
	DearnessMotionType_DearnessMotionType_Unknown        DearnessMotionType = 0
	DearnessMotionType_DearnessMotionType_Wait1          DearnessMotionType = 1
	DearnessMotionType_DearnessMotionType_Wait2          DearnessMotionType = 2
	DearnessMotionType_DearnessMotionType_Reaction       DearnessMotionType = 3
	DearnessMotionType_DearnessMotionType_ReactionOnce   DearnessMotionType = 4
	DearnessMotionType_DearnessMotionType_WaitLookAround DearnessMotionType = 5
	DearnessMotionType_DearnessMotionType_MultipleTaps   DearnessMotionType = 6
	DearnessMotionType_DearnessMotionType_Transition     DearnessMotionType = 7
	DearnessMotionType_DearnessMotionType_WaitOnce       DearnessMotionType = 8
	DearnessMotionType_DearnessMotionType_WaitLoop       DearnessMotionType = 9
)

// Enum value maps for DearnessMotionType.
var (
	DearnessMotionType_name = map[int32]string{
		0: "DearnessMotionType_Unknown",
		1: "DearnessMotionType_Wait1",
		2: "DearnessMotionType_Wait2",
		3: "DearnessMotionType_Reaction",
		4: "DearnessMotionType_ReactionOnce",
		5: "DearnessMotionType_WaitLookAround",
		6: "DearnessMotionType_MultipleTaps",
		7: "DearnessMotionType_Transition",
		8: "DearnessMotionType_WaitOnce",
		9: "DearnessMotionType_WaitLoop",
	}
	DearnessMotionType_value = map[string]int32{
		"DearnessMotionType_Unknown":        0,
		"DearnessMotionType_Wait1":          1,
		"DearnessMotionType_Wait2":          2,
		"DearnessMotionType_Reaction":       3,
		"DearnessMotionType_ReactionOnce":   4,
		"DearnessMotionType_WaitLookAround": 5,
		"DearnessMotionType_MultipleTaps":   6,
		"DearnessMotionType_Transition":     7,
		"DearnessMotionType_WaitOnce":       8,
		"DearnessMotionType_WaitLoop":       9,
	}
)

func (x DearnessMotionType) Enum() *DearnessMotionType {
	p := new(DearnessMotionType)
	*p = x
	return p
}

func (x DearnessMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DearnessMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[21].Descriptor()
}

func (DearnessMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[21]
}

func (x DearnessMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DearnessMotionType.Descriptor instead.
func (DearnessMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{21}
}

type DeckRecommendType int32

const (
	DeckRecommendType_DeckRecommendType_Unknown            DeckRecommendType = 0
	DeckRecommendType_DeckRecommendType_Manual             DeckRecommendType = 1
	DeckRecommendType_DeckRecommendType_Recommend          DeckRecommendType = 2
	DeckRecommendType_DeckRecommendType_RecommendAndManual DeckRecommendType = 3
	DeckRecommendType_DeckRecommendType_Reset              DeckRecommendType = 4
)

// Enum value maps for DeckRecommendType.
var (
	DeckRecommendType_name = map[int32]string{
		0: "DeckRecommendType_Unknown",
		1: "DeckRecommendType_Manual",
		2: "DeckRecommendType_Recommend",
		3: "DeckRecommendType_RecommendAndManual",
		4: "DeckRecommendType_Reset",
	}
	DeckRecommendType_value = map[string]int32{
		"DeckRecommendType_Unknown":            0,
		"DeckRecommendType_Manual":             1,
		"DeckRecommendType_Recommend":          2,
		"DeckRecommendType_RecommendAndManual": 3,
		"DeckRecommendType_Reset":              4,
	}
)

func (x DeckRecommendType) Enum() *DeckRecommendType {
	p := new(DeckRecommendType)
	*p = x
	return p
}

func (x DeckRecommendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeckRecommendType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[22].Descriptor()
}

func (DeckRecommendType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[22]
}

func (x DeckRecommendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeckRecommendType.Descriptor instead.
func (DeckRecommendType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{22}
}

type ErrorCode int32

const (
	ErrorCode_ErrorCode_Unknown                              ErrorCode = 0
	ErrorCode_ErrorCode_InvalidArgument                      ErrorCode = 1001
	ErrorCode_ErrorCode_Internal                             ErrorCode = 1002
	ErrorCode_ErrorCode_Unauthenticated                      ErrorCode = 1003
	ErrorCode_ErrorCode_PermissionDenied                     ErrorCode = 1004
	ErrorCode_ErrorCode_NotFound                             ErrorCode = 1005
	ErrorCode_ErrorCode_OutdatedMasterData                   ErrorCode = 2001
	ErrorCode_ErrorCode_LockFailed                           ErrorCode = 2002
	ErrorCode_ErrorCode_PurchaseRecoverFailed                ErrorCode = 2003
	ErrorCode_ErrorCode_OutdatedApp                          ErrorCode = 2004
	ErrorCode_ErrorCode_ExchangeNeedRefresh                  ErrorCode = 2005
	ErrorCode_ErrorCode_DateChanged                          ErrorCode = 2006
	ErrorCode_ErrorCode_FriendFollowCountLimitExceeded       ErrorCode = 2007
	ErrorCode_ErrorCode_FriendFollowersCountLimitExceeded    ErrorCode = 2008
	ErrorCode_ErrorCode_MeishiFollowCountLimitExceeded       ErrorCode = 2009
	ErrorCode_ErrorCode_MeishiDuplicatedFollow               ErrorCode = 2010
	ErrorCode_ErrorCode_UserNotFound                         ErrorCode = 2011
	ErrorCode_ErrorCode_GuildNotFound                        ErrorCode = 2012
	ErrorCode_ErrorCode_GuildAlreadyJoined                   ErrorCode = 2013
	ErrorCode_ErrorCode_GuildDismiss                         ErrorCode = 2014
	ErrorCode_ErrorCode_MeishiNotFound                       ErrorCode = 2015
	ErrorCode_ErrorCode_InvalidPlayIntegrity                 ErrorCode = 2016
	ErrorCode_ErrorCode_InMaintenance                        ErrorCode = 2017
	ErrorCode_ErrorCode_AccountBan                           ErrorCode = 2018
	ErrorCode_ErrorCode_TemporaryAccountBan                  ErrorCode = 2019
	ErrorCode_ErrorCode_PurchaseBan                          ErrorCode = 2020
	ErrorCode_ErrorCode_TemporaryPurchaseBan                 ErrorCode = 2021
	ErrorCode_ErrorCode_RecoveryPurchaseTransactionNotFound  ErrorCode = 2022
	ErrorCode_ErrorCode_DataUpdated                          ErrorCode = 2023
	ErrorCode_ErrorCode_InFeatureMaintenance                 ErrorCode = 2024
	ErrorCode_ErrorCode_NgWordContains                       ErrorCode = 2025
	ErrorCode_ErrorCode_MigrationBan                         ErrorCode = 2026
	ErrorCode_ErrorCode_TemporaryMigrationBan                ErrorCode = 2027
	ErrorCode_ErrorCode_InvitationInvalidCode                ErrorCode = 2028
	ErrorCode_ErrorCode_AuthLinkAccountNotFound              ErrorCode = 2029
	ErrorCode_ErrorCode_ShopInvalidBirthday                  ErrorCode = 2030
	ErrorCode_ErrorCode_RequestConflict                      ErrorCode = 2031
	ErrorCode_ErrorCode_GameAuthTokenInvalid                 ErrorCode = 2032
	ErrorCode_ErrorCode_OutOfTerm                            ErrorCode = 2033
	ErrorCode_ErrorCode_ConditionInvalid                     ErrorCode = 2034
	ErrorCode_ErrorCode_ShopExceedPurchaseThresholdOnRecover ErrorCode = 2035
	ErrorCode_ErrorCode_ShopExceedMaxJewelQuantityOnRecover  ErrorCode = 2036
	ErrorCode_ErrorCode_ShopExceedPurchaseLimit              ErrorCode = 2037
	ErrorCode_ErrorCode_UserDataUpdated                      ErrorCode = 2038
	ErrorCode_ErrorCode_DmmGamesIdDuplicated                 ErrorCode = 2039
	ErrorCode_ErrorCode_DmmGamesIdLinkAccountAlreadyExists   ErrorCode = 2040
	ErrorCode_ErrorCode_DmmGamesIdLocalUserDataNotLinked     ErrorCode = 2041
	ErrorCode_ErrorCode_ProduceOutdatedRentalSupportCard     ErrorCode = 2301
	ErrorCode_ErrorCode_ProduceOutdatedRentalMemory          ErrorCode = 2302
	ErrorCode_ErrorCode_ProduceHistoryNotFound               ErrorCode = 2303
	ErrorCode_ErrorCode_ProduceUuidInvalid                   ErrorCode = 2304
	ErrorCode_ErrorCode_ProduceNeedReset                     ErrorCode = 2305
	ErrorCode_ErrorCode_ProduceClearTimeBanWarning           ErrorCode = 2306
	ErrorCode_ErrorCode_GvgRaidStageAlreadyCleared           ErrorCode = 3000
	ErrorCode_ErrorCode_TowerProgressReset                   ErrorCode = 3300
	ErrorCode_ErrorCode_BnidlinkUserNotFound                 ErrorCode = 5000
	ErrorCode_ErrorCode_BnidlinkMasterDataInvalid            ErrorCode = 5001
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "ErrorCode_Unknown",
		1001: "ErrorCode_InvalidArgument",
		1002: "ErrorCode_Internal",
		1003: "ErrorCode_Unauthenticated",
		1004: "ErrorCode_PermissionDenied",
		1005: "ErrorCode_NotFound",
		2001: "ErrorCode_OutdatedMasterData",
		2002: "ErrorCode_LockFailed",
		2003: "ErrorCode_PurchaseRecoverFailed",
		2004: "ErrorCode_OutdatedApp",
		2005: "ErrorCode_ExchangeNeedRefresh",
		2006: "ErrorCode_DateChanged",
		2007: "ErrorCode_FriendFollowCountLimitExceeded",
		2008: "ErrorCode_FriendFollowersCountLimitExceeded",
		2009: "ErrorCode_MeishiFollowCountLimitExceeded",
		2010: "ErrorCode_MeishiDuplicatedFollow",
		2011: "ErrorCode_UserNotFound",
		2012: "ErrorCode_GuildNotFound",
		2013: "ErrorCode_GuildAlreadyJoined",
		2014: "ErrorCode_GuildDismiss",
		2015: "ErrorCode_MeishiNotFound",
		2016: "ErrorCode_InvalidPlayIntegrity",
		2017: "ErrorCode_InMaintenance",
		2018: "ErrorCode_AccountBan",
		2019: "ErrorCode_TemporaryAccountBan",
		2020: "ErrorCode_PurchaseBan",
		2021: "ErrorCode_TemporaryPurchaseBan",
		2022: "ErrorCode_RecoveryPurchaseTransactionNotFound",
		2023: "ErrorCode_DataUpdated",
		2024: "ErrorCode_InFeatureMaintenance",
		2025: "ErrorCode_NgWordContains",
		2026: "ErrorCode_MigrationBan",
		2027: "ErrorCode_TemporaryMigrationBan",
		2028: "ErrorCode_InvitationInvalidCode",
		2029: "ErrorCode_AuthLinkAccountNotFound",
		2030: "ErrorCode_ShopInvalidBirthday",
		2031: "ErrorCode_RequestConflict",
		2032: "ErrorCode_GameAuthTokenInvalid",
		2033: "ErrorCode_OutOfTerm",
		2034: "ErrorCode_ConditionInvalid",
		2035: "ErrorCode_ShopExceedPurchaseThresholdOnRecover",
		2036: "ErrorCode_ShopExceedMaxJewelQuantityOnRecover",
		2037: "ErrorCode_ShopExceedPurchaseLimit",
		2038: "ErrorCode_UserDataUpdated",
		2039: "ErrorCode_DmmGamesIdDuplicated",
		2040: "ErrorCode_DmmGamesIdLinkAccountAlreadyExists",
		2041: "ErrorCode_DmmGamesIdLocalUserDataNotLinked",
		2301: "ErrorCode_ProduceOutdatedRentalSupportCard",
		2302: "ErrorCode_ProduceOutdatedRentalMemory",
		2303: "ErrorCode_ProduceHistoryNotFound",
		2304: "ErrorCode_ProduceUuidInvalid",
		2305: "ErrorCode_ProduceNeedReset",
		2306: "ErrorCode_ProduceClearTimeBanWarning",
		3000: "ErrorCode_GvgRaidStageAlreadyCleared",
		3300: "ErrorCode_TowerProgressReset",
		5000: "ErrorCode_BnidlinkUserNotFound",
		5001: "ErrorCode_BnidlinkMasterDataInvalid",
	}
	ErrorCode_value = map[string]int32{
		"ErrorCode_Unknown":                              0,
		"ErrorCode_InvalidArgument":                      1001,
		"ErrorCode_Internal":                             1002,
		"ErrorCode_Unauthenticated":                      1003,
		"ErrorCode_PermissionDenied":                     1004,
		"ErrorCode_NotFound":                             1005,
		"ErrorCode_OutdatedMasterData":                   2001,
		"ErrorCode_LockFailed":                           2002,
		"ErrorCode_PurchaseRecoverFailed":                2003,
		"ErrorCode_OutdatedApp":                          2004,
		"ErrorCode_ExchangeNeedRefresh":                  2005,
		"ErrorCode_DateChanged":                          2006,
		"ErrorCode_FriendFollowCountLimitExceeded":       2007,
		"ErrorCode_FriendFollowersCountLimitExceeded":    2008,
		"ErrorCode_MeishiFollowCountLimitExceeded":       2009,
		"ErrorCode_MeishiDuplicatedFollow":               2010,
		"ErrorCode_UserNotFound":                         2011,
		"ErrorCode_GuildNotFound":                        2012,
		"ErrorCode_GuildAlreadyJoined":                   2013,
		"ErrorCode_GuildDismiss":                         2014,
		"ErrorCode_MeishiNotFound":                       2015,
		"ErrorCode_InvalidPlayIntegrity":                 2016,
		"ErrorCode_InMaintenance":                        2017,
		"ErrorCode_AccountBan":                           2018,
		"ErrorCode_TemporaryAccountBan":                  2019,
		"ErrorCode_PurchaseBan":                          2020,
		"ErrorCode_TemporaryPurchaseBan":                 2021,
		"ErrorCode_RecoveryPurchaseTransactionNotFound":  2022,
		"ErrorCode_DataUpdated":                          2023,
		"ErrorCode_InFeatureMaintenance":                 2024,
		"ErrorCode_NgWordContains":                       2025,
		"ErrorCode_MigrationBan":                         2026,
		"ErrorCode_TemporaryMigrationBan":                2027,
		"ErrorCode_InvitationInvalidCode":                2028,
		"ErrorCode_AuthLinkAccountNotFound":              2029,
		"ErrorCode_ShopInvalidBirthday":                  2030,
		"ErrorCode_RequestConflict":                      2031,
		"ErrorCode_GameAuthTokenInvalid":                 2032,
		"ErrorCode_OutOfTerm":                            2033,
		"ErrorCode_ConditionInvalid":                     2034,
		"ErrorCode_ShopExceedPurchaseThresholdOnRecover": 2035,
		"ErrorCode_ShopExceedMaxJewelQuantityOnRecover":  2036,
		"ErrorCode_ShopExceedPurchaseLimit":              2037,
		"ErrorCode_UserDataUpdated":                      2038,
		"ErrorCode_DmmGamesIdDuplicated":                 2039,
		"ErrorCode_DmmGamesIdLinkAccountAlreadyExists":   2040,
		"ErrorCode_DmmGamesIdLocalUserDataNotLinked":     2041,
		"ErrorCode_ProduceOutdatedRentalSupportCard":     2301,
		"ErrorCode_ProduceOutdatedRentalMemory":          2302,
		"ErrorCode_ProduceHistoryNotFound":               2303,
		"ErrorCode_ProduceUuidInvalid":                   2304,
		"ErrorCode_ProduceNeedReset":                     2305,
		"ErrorCode_ProduceClearTimeBanWarning":           2306,
		"ErrorCode_GvgRaidStageAlreadyCleared":           3000,
		"ErrorCode_TowerProgressReset":                   3300,
		"ErrorCode_BnidlinkUserNotFound":                 5000,
		"ErrorCode_BnidlinkMasterDataInvalid":            5001,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[23].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[23]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{23}
}

type EventStoryFilterType int32

const (
	EventStoryFilterType_EventStoryFilterType_Unknown     EventStoryFilterType = 0
	EventStoryFilterType_EventStoryFilterType_StoryEvent  EventStoryFilterType = 1
	EventStoryFilterType_EventStoryFilterType_SeasonEvent EventStoryFilterType = 2
	EventStoryFilterType_EventStoryFilterType_GvgRaid     EventStoryFilterType = 3
	EventStoryFilterType_EventStoryFilterType_Tour        EventStoryFilterType = 4
)

// Enum value maps for EventStoryFilterType.
var (
	EventStoryFilterType_name = map[int32]string{
		0: "EventStoryFilterType_Unknown",
		1: "EventStoryFilterType_StoryEvent",
		2: "EventStoryFilterType_SeasonEvent",
		3: "EventStoryFilterType_GvgRaid",
		4: "EventStoryFilterType_Tour",
	}
	EventStoryFilterType_value = map[string]int32{
		"EventStoryFilterType_Unknown":     0,
		"EventStoryFilterType_StoryEvent":  1,
		"EventStoryFilterType_SeasonEvent": 2,
		"EventStoryFilterType_GvgRaid":     3,
		"EventStoryFilterType_Tour":        4,
	}
)

func (x EventStoryFilterType) Enum() *EventStoryFilterType {
	p := new(EventStoryFilterType)
	*p = x
	return p
}

func (x EventStoryFilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventStoryFilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[24].Descriptor()
}

func (EventStoryFilterType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[24]
}

func (x EventStoryFilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventStoryFilterType.Descriptor instead.
func (EventStoryFilterType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{24}
}

type EventType int32

const (
	EventType_EventType_Unknown                EventType = 0
	EventType_EventType_MissionDailyRelease    EventType = 1
	EventType_EventType_MissionPanel           EventType = 2
	EventType_EventType_ProduceHighScore       EventType = 3
	EventType_EventType_StoryCampaign          EventType = 4
	EventType_EventType_StoryEvent             EventType = 5
	EventType_EventType_StoryEventMainStory    EventType = 6
	EventType_EventType_StoryEventBoxGasha     EventType = 7
	EventType_EventType_StoryEventGuildMission EventType = 8
	EventType_EventType_GvgRaid                EventType = 9
	EventType_EventType_DearnessBoost          EventType = 10
	EventType_EventType_Tour                   EventType = 11
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EventType_Unknown",
		1:  "EventType_MissionDailyRelease",
		2:  "EventType_MissionPanel",
		3:  "EventType_ProduceHighScore",
		4:  "EventType_StoryCampaign",
		5:  "EventType_StoryEvent",
		6:  "EventType_StoryEventMainStory",
		7:  "EventType_StoryEventBoxGasha",
		8:  "EventType_StoryEventGuildMission",
		9:  "EventType_GvgRaid",
		10: "EventType_DearnessBoost",
		11: "EventType_Tour",
	}
	EventType_value = map[string]int32{
		"EventType_Unknown":                0,
		"EventType_MissionDailyRelease":    1,
		"EventType_MissionPanel":           2,
		"EventType_ProduceHighScore":       3,
		"EventType_StoryCampaign":          4,
		"EventType_StoryEvent":             5,
		"EventType_StoryEventMainStory":    6,
		"EventType_StoryEventBoxGasha":     7,
		"EventType_StoryEventGuildMission": 8,
		"EventType_GvgRaid":                9,
		"EventType_DearnessBoost":          10,
		"EventType_Tour":                   11,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[25].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[25]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{25}
}

type ExamActionType int32

const (
	ExamActionType_ExamActionType_Unknown          ExamActionType = 0
	ExamActionType_ExamActionType_UseHand          ExamActionType = 1
	ExamActionType_ExamActionType_UseDrink         ExamActionType = 2
	ExamActionType_ExamActionType_TurnEnd          ExamActionType = 3
	ExamActionType_ExamActionType_EffectCardSelect ExamActionType = 4
)

// Enum value maps for ExamActionType.
var (
	ExamActionType_name = map[int32]string{
		0: "ExamActionType_Unknown",
		1: "ExamActionType_UseHand",
		2: "ExamActionType_UseDrink",
		3: "ExamActionType_TurnEnd",
		4: "ExamActionType_EffectCardSelect",
	}
	ExamActionType_value = map[string]int32{
		"ExamActionType_Unknown":          0,
		"ExamActionType_UseHand":          1,
		"ExamActionType_UseDrink":         2,
		"ExamActionType_TurnEnd":          3,
		"ExamActionType_EffectCardSelect": 4,
	}
)

func (x ExamActionType) Enum() *ExamActionType {
	p := new(ExamActionType)
	*p = x
	return p
}

func (x ExamActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[26].Descriptor()
}

func (ExamActionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[26]
}

func (x ExamActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamActionType.Descriptor instead.
func (ExamActionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{26}
}

type ExamAiModelType int32

const (
	ExamAiModelType_ExamAiModelType_Unknown  ExamAiModelType = 0
	ExamAiModelType_ExamAiModelType_Audition ExamAiModelType = 1
)

// Enum value maps for ExamAiModelType.
var (
	ExamAiModelType_name = map[int32]string{
		0: "ExamAiModelType_Unknown",
		1: "ExamAiModelType_Audition",
	}
	ExamAiModelType_value = map[string]int32{
		"ExamAiModelType_Unknown":  0,
		"ExamAiModelType_Audition": 1,
	}
)

func (x ExamAiModelType) Enum() *ExamAiModelType {
	p := new(ExamAiModelType)
	*p = x
	return p
}

func (x ExamAiModelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamAiModelType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[27].Descriptor()
}

func (ExamAiModelType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[27]
}

func (x ExamAiModelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamAiModelType.Descriptor instead.
func (ExamAiModelType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{27}
}

type ExamCommandType int32

const (
	ExamCommandType_ExamCommandType_Unknown              ExamCommandType = 0
	ExamCommandType_ExamCommandType_TurnDraw             ExamCommandType = 1
	ExamCommandType_ExamCommandType_UseHand              ExamCommandType = 2
	ExamCommandType_ExamCommandType_UseDrink             ExamCommandType = 3
	ExamCommandType_ExamCommandType_UsePool              ExamCommandType = 4
	ExamCommandType_ExamCommandType_PlayEffect           ExamCommandType = 5
	ExamCommandType_ExamCommandType_MovePlayCard         ExamCommandType = 6
	ExamCommandType_ExamCommandType_TurnCheck            ExamCommandType = 7
	ExamCommandType_ExamCommandType_PhaseChange          ExamCommandType = 8
	ExamCommandType_ExamCommandType_SeparateActivity     ExamCommandType = 9
	ExamCommandType_ExamCommandType_SeparateTrigger      ExamCommandType = 10
	ExamCommandType_ExamCommandType_NoUsableCardActivity ExamCommandType = 11
	ExamCommandType_ExamCommandType_TurnEnd              ExamCommandType = 12
	ExamCommandType_ExamCommandType_UserCardAfterCheck   ExamCommandType = 13
	ExamCommandType_ExamCommandType_CardEnchantTrigger   ExamCommandType = 14
	ExamCommandType_ExamCommandType_SupportCardUpgrade   ExamCommandType = 15
	ExamCommandType_ExamCommandType_Panic                ExamCommandType = 16
)

// Enum value maps for ExamCommandType.
var (
	ExamCommandType_name = map[int32]string{
		0:  "ExamCommandType_Unknown",
		1:  "ExamCommandType_TurnDraw",
		2:  "ExamCommandType_UseHand",
		3:  "ExamCommandType_UseDrink",
		4:  "ExamCommandType_UsePool",
		5:  "ExamCommandType_PlayEffect",
		6:  "ExamCommandType_MovePlayCard",
		7:  "ExamCommandType_TurnCheck",
		8:  "ExamCommandType_PhaseChange",
		9:  "ExamCommandType_SeparateActivity",
		10: "ExamCommandType_SeparateTrigger",
		11: "ExamCommandType_NoUsableCardActivity",
		12: "ExamCommandType_TurnEnd",
		13: "ExamCommandType_UserCardAfterCheck",
		14: "ExamCommandType_CardEnchantTrigger",
		15: "ExamCommandType_SupportCardUpgrade",
		16: "ExamCommandType_Panic",
	}
	ExamCommandType_value = map[string]int32{
		"ExamCommandType_Unknown":              0,
		"ExamCommandType_TurnDraw":             1,
		"ExamCommandType_UseHand":              2,
		"ExamCommandType_UseDrink":             3,
		"ExamCommandType_UsePool":              4,
		"ExamCommandType_PlayEffect":           5,
		"ExamCommandType_MovePlayCard":         6,
		"ExamCommandType_TurnCheck":            7,
		"ExamCommandType_PhaseChange":          8,
		"ExamCommandType_SeparateActivity":     9,
		"ExamCommandType_SeparateTrigger":      10,
		"ExamCommandType_NoUsableCardActivity": 11,
		"ExamCommandType_TurnEnd":              12,
		"ExamCommandType_UserCardAfterCheck":   13,
		"ExamCommandType_CardEnchantTrigger":   14,
		"ExamCommandType_SupportCardUpgrade":   15,
		"ExamCommandType_Panic":                16,
	}
)

func (x ExamCommandType) Enum() *ExamCommandType {
	p := new(ExamCommandType)
	*p = x
	return p
}

func (x ExamCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[28].Descriptor()
}

func (ExamCommandType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[28]
}

func (x ExamCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamCommandType.Descriptor instead.
func (ExamCommandType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{28}
}

type ExamCostType int32

const (
	ExamCostType_ExamCostType_Unknown                          ExamCostType = 0
	ExamCostType_ExamCostType_ExamLessonBuff                   ExamCostType = 1
	ExamCostType_ExamCostType_ExamReview                       ExamCostType = 2
	ExamCostType_ExamCostType_ExamCardPlayAggressive           ExamCostType = 3
	ExamCostType_ExamCostType_ExamParameterBuff                ExamCostType = 4
	ExamCostType_ExamCostType_ExamFullPowerPoint               ExamCostType = 5
	ExamCostType_ExamCostType_ExamParameterBuffMultiplePerTurn ExamCostType = 6
)

// Enum value maps for ExamCostType.
var (
	ExamCostType_name = map[int32]string{
		0: "ExamCostType_Unknown",
		1: "ExamCostType_ExamLessonBuff",
		2: "ExamCostType_ExamReview",
		3: "ExamCostType_ExamCardPlayAggressive",
		4: "ExamCostType_ExamParameterBuff",
		5: "ExamCostType_ExamFullPowerPoint",
		6: "ExamCostType_ExamParameterBuffMultiplePerTurn",
	}
	ExamCostType_value = map[string]int32{
		"ExamCostType_Unknown":                          0,
		"ExamCostType_ExamLessonBuff":                   1,
		"ExamCostType_ExamReview":                       2,
		"ExamCostType_ExamCardPlayAggressive":           3,
		"ExamCostType_ExamParameterBuff":                4,
		"ExamCostType_ExamFullPowerPoint":               5,
		"ExamCostType_ExamParameterBuffMultiplePerTurn": 6,
	}
)

func (x ExamCostType) Enum() *ExamCostType {
	p := new(ExamCostType)
	*p = x
	return p
}

func (x ExamCostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamCostType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[29].Descriptor()
}

func (ExamCostType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[29]
}

func (x ExamCostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamCostType.Descriptor instead.
func (ExamCostType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{29}
}

type ExamDescriptionType int32

const (
	ExamDescriptionType_ExamDescriptionType_Unknown                                      ExamDescriptionType = 0
	ExamDescriptionType_ExamDescriptionType_CustomizeEffectValue1                        ExamDescriptionType = 1
	ExamDescriptionType_ExamDescriptionType_CustomizeEffectValue2                        ExamDescriptionType = 2
	ExamDescriptionType_ExamDescriptionType_CustomizeEffectCount                         ExamDescriptionType = 3
	ExamDescriptionType_ExamDescriptionType_CustomizeTurn                                ExamDescriptionType = 4
	ExamDescriptionType_ExamDescriptionType_CustomizeInitialAdd                          ExamDescriptionType = 5
	ExamDescriptionType_ExamDescriptionType_CustomizePlayMovePositionLost                ExamDescriptionType = 6
	ExamDescriptionType_ExamDescriptionType_CustomizeEffectAdd                           ExamDescriptionType = 7
	ExamDescriptionType_ExamDescriptionType_CustomizeLessonCountAdd                      ExamDescriptionType = 8
	ExamDescriptionType_ExamDescriptionType_CustomizeCostValue                           ExamDescriptionType = 9
	ExamDescriptionType_ExamDescriptionType_ExamValue                                    ExamDescriptionType = 10
	ExamDescriptionType_ExamDescriptionType_ExamValue2                                   ExamDescriptionType = 11
	ExamDescriptionType_ExamDescriptionType_ExamTurn                                     ExamDescriptionType = 12
	ExamDescriptionType_ExamDescriptionType_ExamTurnTimer                                ExamDescriptionType = 13
	ExamDescriptionType_ExamDescriptionType_ExamCount                                    ExamDescriptionType = 14
	ExamDescriptionType_ExamDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName ExamDescriptionType = 15
	ExamDescriptionType_ExamDescriptionType_ExamProduceExamEffect                        ExamDescriptionType = 16
	ExamDescriptionType_ExamDescriptionType_ExamProduceCardSearch                        ExamDescriptionType = 17
	ExamDescriptionType_ExamDescriptionType_CustomizeEffectValuePercent1                 ExamDescriptionType = 20
	ExamDescriptionType_ExamDescriptionType_CustomizeEffectValuePercent2                 ExamDescriptionType = 21
)

// Enum value maps for ExamDescriptionType.
var (
	ExamDescriptionType_name = map[int32]string{
		0:  "ExamDescriptionType_Unknown",
		1:  "ExamDescriptionType_CustomizeEffectValue1",
		2:  "ExamDescriptionType_CustomizeEffectValue2",
		3:  "ExamDescriptionType_CustomizeEffectCount",
		4:  "ExamDescriptionType_CustomizeTurn",
		5:  "ExamDescriptionType_CustomizeInitialAdd",
		6:  "ExamDescriptionType_CustomizePlayMovePositionLost",
		7:  "ExamDescriptionType_CustomizeEffectAdd",
		8:  "ExamDescriptionType_CustomizeLessonCountAdd",
		9:  "ExamDescriptionType_CustomizeCostValue",
		10: "ExamDescriptionType_ExamValue",
		11: "ExamDescriptionType_ExamValue2",
		12: "ExamDescriptionType_ExamTurn",
		13: "ExamDescriptionType_ExamTurnTimer",
		14: "ExamDescriptionType_ExamCount",
		15: "ExamDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName",
		16: "ExamDescriptionType_ExamProduceExamEffect",
		17: "ExamDescriptionType_ExamProduceCardSearch",
		20: "ExamDescriptionType_CustomizeEffectValuePercent1",
		21: "ExamDescriptionType_CustomizeEffectValuePercent2",
	}
	ExamDescriptionType_value = map[string]int32{
		"ExamDescriptionType_Unknown":                                      0,
		"ExamDescriptionType_CustomizeEffectValue1":                        1,
		"ExamDescriptionType_CustomizeEffectValue2":                        2,
		"ExamDescriptionType_CustomizeEffectCount":                         3,
		"ExamDescriptionType_CustomizeTurn":                                4,
		"ExamDescriptionType_CustomizeInitialAdd":                          5,
		"ExamDescriptionType_CustomizePlayMovePositionLost":                6,
		"ExamDescriptionType_CustomizeEffectAdd":                           7,
		"ExamDescriptionType_CustomizeLessonCountAdd":                      8,
		"ExamDescriptionType_CustomizeCostValue":                           9,
		"ExamDescriptionType_ExamValue":                                    10,
		"ExamDescriptionType_ExamValue2":                                   11,
		"ExamDescriptionType_ExamTurn":                                     12,
		"ExamDescriptionType_ExamTurnTimer":                                13,
		"ExamDescriptionType_ExamCount":                                    14,
		"ExamDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName": 15,
		"ExamDescriptionType_ExamProduceExamEffect":                        16,
		"ExamDescriptionType_ExamProduceCardSearch":                        17,
		"ExamDescriptionType_CustomizeEffectValuePercent1":                 20,
		"ExamDescriptionType_CustomizeEffectValuePercent2":                 21,
	}
)

func (x ExamDescriptionType) Enum() *ExamDescriptionType {
	p := new(ExamDescriptionType)
	*p = x
	return p
}

func (x ExamDescriptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamDescriptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[30].Descriptor()
}

func (ExamDescriptionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[30]
}

func (x ExamDescriptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamDescriptionType.Descriptor instead.
func (ExamDescriptionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{30}
}

type ExamGameType int32

const (
	ExamGameType_ExamGameType_Unknown         ExamGameType = 0
	ExamGameType_ExamGameType_ProduceLesson   ExamGameType = 1
	ExamGameType_ExamGameType_ProduceAudition ExamGameType = 2
	ExamGameType_ExamGameType_PvpRate         ExamGameType = 3
	ExamGameType_ExamGameType_Tower           ExamGameType = 4
	ExamGameType_ExamGameType_GvgRaid         ExamGameType = 5
)

// Enum value maps for ExamGameType.
var (
	ExamGameType_name = map[int32]string{
		0: "ExamGameType_Unknown",
		1: "ExamGameType_ProduceLesson",
		2: "ExamGameType_ProduceAudition",
		3: "ExamGameType_PvpRate",
		4: "ExamGameType_Tower",
		5: "ExamGameType_GvgRaid",
	}
	ExamGameType_value = map[string]int32{
		"ExamGameType_Unknown":         0,
		"ExamGameType_ProduceLesson":   1,
		"ExamGameType_ProduceAudition": 2,
		"ExamGameType_PvpRate":         3,
		"ExamGameType_Tower":           4,
		"ExamGameType_GvgRaid":         5,
	}
)

func (x ExamGameType) Enum() *ExamGameType {
	p := new(ExamGameType)
	*p = x
	return p
}

func (x ExamGameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamGameType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[31].Descriptor()
}

func (ExamGameType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[31]
}

func (x ExamGameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamGameType.Descriptor instead.
func (ExamGameType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{31}
}

type ExamIdolStatusType int32

const (
	ExamIdolStatusType_ExamIdolStatusType_Unknown          ExamIdolStatusType = 0
	ExamIdolStatusType_ExamIdolStatusType_Concentration    ExamIdolStatusType = 1
	ExamIdolStatusType_ExamIdolStatusType_Preservation     ExamIdolStatusType = 2
	ExamIdolStatusType_ExamIdolStatusType_FullPower        ExamIdolStatusType = 3
	ExamIdolStatusType_ExamIdolStatusType_OverPreservation ExamIdolStatusType = 4
)

// Enum value maps for ExamIdolStatusType.
var (
	ExamIdolStatusType_name = map[int32]string{
		0: "ExamIdolStatusType_Unknown",
		1: "ExamIdolStatusType_Concentration",
		2: "ExamIdolStatusType_Preservation",
		3: "ExamIdolStatusType_FullPower",
		4: "ExamIdolStatusType_OverPreservation",
	}
	ExamIdolStatusType_value = map[string]int32{
		"ExamIdolStatusType_Unknown":          0,
		"ExamIdolStatusType_Concentration":    1,
		"ExamIdolStatusType_Preservation":     2,
		"ExamIdolStatusType_FullPower":        3,
		"ExamIdolStatusType_OverPreservation": 4,
	}
)

func (x ExamIdolStatusType) Enum() *ExamIdolStatusType {
	p := new(ExamIdolStatusType)
	*p = x
	return p
}

func (x ExamIdolStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamIdolStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[32].Descriptor()
}

func (ExamIdolStatusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[32]
}

func (x ExamIdolStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamIdolStatusType.Descriptor instead.
func (ExamIdolStatusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{32}
}

type ExamMotionTargetType int32

const (
	ExamMotionTargetType_ExamMotionTargetType_Unknown          ExamMotionTargetType = 0
	ExamMotionTargetType_ExamMotionTargetType_VocalLesson      ExamMotionTargetType = 2
	ExamMotionTargetType_ExamMotionTargetType_DanceLesson      ExamMotionTargetType = 3
	ExamMotionTargetType_ExamMotionTargetType_VisualLesson     ExamMotionTargetType = 4
	ExamMotionTargetType_ExamMotionTargetType_VocalLessonHard  ExamMotionTargetType = 5
	ExamMotionTargetType_ExamMotionTargetType_DanceLessonHard  ExamMotionTargetType = 6
	ExamMotionTargetType_ExamMotionTargetType_VisualLessonHard ExamMotionTargetType = 7
	ExamMotionTargetType_ExamMotionTargetType_Audition         ExamMotionTargetType = 8
	ExamMotionTargetType_ExamMotionTargetType_Contest          ExamMotionTargetType = 9
)

// Enum value maps for ExamMotionTargetType.
var (
	ExamMotionTargetType_name = map[int32]string{
		0: "ExamMotionTargetType_Unknown",
		2: "ExamMotionTargetType_VocalLesson",
		3: "ExamMotionTargetType_DanceLesson",
		4: "ExamMotionTargetType_VisualLesson",
		5: "ExamMotionTargetType_VocalLessonHard",
		6: "ExamMotionTargetType_DanceLessonHard",
		7: "ExamMotionTargetType_VisualLessonHard",
		8: "ExamMotionTargetType_Audition",
		9: "ExamMotionTargetType_Contest",
	}
	ExamMotionTargetType_value = map[string]int32{
		"ExamMotionTargetType_Unknown":          0,
		"ExamMotionTargetType_VocalLesson":      2,
		"ExamMotionTargetType_DanceLesson":      3,
		"ExamMotionTargetType_VisualLesson":     4,
		"ExamMotionTargetType_VocalLessonHard":  5,
		"ExamMotionTargetType_DanceLessonHard":  6,
		"ExamMotionTargetType_VisualLessonHard": 7,
		"ExamMotionTargetType_Audition":         8,
		"ExamMotionTargetType_Contest":          9,
	}
)

func (x ExamMotionTargetType) Enum() *ExamMotionTargetType {
	p := new(ExamMotionTargetType)
	*p = x
	return p
}

func (x ExamMotionTargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamMotionTargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[33].Descriptor()
}

func (ExamMotionTargetType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[33]
}

func (x ExamMotionTargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamMotionTargetType.Descriptor instead.
func (ExamMotionTargetType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{33}
}

type ExamMotionType int32

const (
	ExamMotionType_ExamMotionType_Unknown          ExamMotionType = 0
	ExamMotionType_ExamMotionType_ParameterUp      ExamMotionType = 1
	ExamMotionType_ExamMotionType_ParameterUpLarge ExamMotionType = 2
	ExamMotionType_ExamMotionType_BlockAdd         ExamMotionType = 3
	ExamMotionType_ExamMotionType_Buff             ExamMotionType = 4
	ExamMotionType_ExamMotionType_Debuff           ExamMotionType = 5
	ExamMotionType_ExamMotionType_Wait             ExamMotionType = 6
	ExamMotionType_ExamMotionType_NoMotionUseDrink ExamMotionType = 7
	ExamMotionType_ExamMotionType_WaitOnce         ExamMotionType = 8
)

// Enum value maps for ExamMotionType.
var (
	ExamMotionType_name = map[int32]string{
		0: "ExamMotionType_Unknown",
		1: "ExamMotionType_ParameterUp",
		2: "ExamMotionType_ParameterUpLarge",
		3: "ExamMotionType_BlockAdd",
		4: "ExamMotionType_Buff",
		5: "ExamMotionType_Debuff",
		6: "ExamMotionType_Wait",
		7: "ExamMotionType_NoMotionUseDrink",
		8: "ExamMotionType_WaitOnce",
	}
	ExamMotionType_value = map[string]int32{
		"ExamMotionType_Unknown":          0,
		"ExamMotionType_ParameterUp":      1,
		"ExamMotionType_ParameterUpLarge": 2,
		"ExamMotionType_BlockAdd":         3,
		"ExamMotionType_Buff":             4,
		"ExamMotionType_Debuff":           5,
		"ExamMotionType_Wait":             6,
		"ExamMotionType_NoMotionUseDrink": 7,
		"ExamMotionType_WaitOnce":         8,
	}
)

func (x ExamMotionType) Enum() *ExamMotionType {
	p := new(ExamMotionType)
	*p = x
	return p
}

func (x ExamMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[34].Descriptor()
}

func (ExamMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[34]
}

func (x ExamMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamMotionType.Descriptor instead.
func (ExamMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{34}
}

type ExamOutGameMotionType int32

const (
	ExamOutGameMotionType_ExamOutGameMotionType_Unknown       ExamOutGameMotionType = 0
	ExamOutGameMotionType_ExamOutGameMotionType_Start1        ExamOutGameMotionType = 1
	ExamOutGameMotionType_ExamOutGameMotionType_Start2        ExamOutGameMotionType = 2
	ExamOutGameMotionType_ExamOutGameMotionType_ResultPerfect ExamOutGameMotionType = 3
	ExamOutGameMotionType_ExamOutGameMotionType_ResultSuccess ExamOutGameMotionType = 4
	ExamOutGameMotionType_ExamOutGameMotionType_ResultFailure ExamOutGameMotionType = 5
	ExamOutGameMotionType_ExamOutGameMotionType_Clear         ExamOutGameMotionType = 6
)

// Enum value maps for ExamOutGameMotionType.
var (
	ExamOutGameMotionType_name = map[int32]string{
		0: "ExamOutGameMotionType_Unknown",
		1: "ExamOutGameMotionType_Start1",
		2: "ExamOutGameMotionType_Start2",
		3: "ExamOutGameMotionType_ResultPerfect",
		4: "ExamOutGameMotionType_ResultSuccess",
		5: "ExamOutGameMotionType_ResultFailure",
		6: "ExamOutGameMotionType_Clear",
	}
	ExamOutGameMotionType_value = map[string]int32{
		"ExamOutGameMotionType_Unknown":       0,
		"ExamOutGameMotionType_Start1":        1,
		"ExamOutGameMotionType_Start2":        2,
		"ExamOutGameMotionType_ResultPerfect": 3,
		"ExamOutGameMotionType_ResultSuccess": 4,
		"ExamOutGameMotionType_ResultFailure": 5,
		"ExamOutGameMotionType_Clear":         6,
	}
)

func (x ExamOutGameMotionType) Enum() *ExamOutGameMotionType {
	p := new(ExamOutGameMotionType)
	*p = x
	return p
}

func (x ExamOutGameMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamOutGameMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[35].Descriptor()
}

func (ExamOutGameMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[35]
}

func (x ExamOutGameMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamOutGameMotionType.Descriptor instead.
func (ExamOutGameMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{35}
}

type ExamPhaseType int32

const (
	ExamPhaseType_ExamPhaseType_Unknown        ExamPhaseType = 0
	ExamPhaseType_ExamPhaseType_ExamStandBy    ExamPhaseType = 1
	ExamPhaseType_ExamPhaseType_TurnStart      ExamPhaseType = 2
	ExamPhaseType_ExamPhaseType_TurnStartAfter ExamPhaseType = 3
	ExamPhaseType_ExamPhaseType_TurnStartDraw  ExamPhaseType = 4
	ExamPhaseType_ExamPhaseType_Main           ExamPhaseType = 5
	ExamPhaseType_ExamPhaseType_TurnEnd        ExamPhaseType = 6
	ExamPhaseType_ExamPhaseType_ExamEnd        ExamPhaseType = 7
)

// Enum value maps for ExamPhaseType.
var (
	ExamPhaseType_name = map[int32]string{
		0: "ExamPhaseType_Unknown",
		1: "ExamPhaseType_ExamStandBy",
		2: "ExamPhaseType_TurnStart",
		3: "ExamPhaseType_TurnStartAfter",
		4: "ExamPhaseType_TurnStartDraw",
		5: "ExamPhaseType_Main",
		6: "ExamPhaseType_TurnEnd",
		7: "ExamPhaseType_ExamEnd",
	}
	ExamPhaseType_value = map[string]int32{
		"ExamPhaseType_Unknown":        0,
		"ExamPhaseType_ExamStandBy":    1,
		"ExamPhaseType_TurnStart":      2,
		"ExamPhaseType_TurnStartAfter": 3,
		"ExamPhaseType_TurnStartDraw":  4,
		"ExamPhaseType_Main":           5,
		"ExamPhaseType_TurnEnd":        6,
		"ExamPhaseType_ExamEnd":        7,
	}
)

func (x ExamPhaseType) Enum() *ExamPhaseType {
	p := new(ExamPhaseType)
	*p = x
	return p
}

func (x ExamPhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamPhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[36].Descriptor()
}

func (ExamPhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[36]
}

func (x ExamPhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamPhaseType.Descriptor instead.
func (ExamPhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{36}
}

type ExamPlayType int32

const (
	ExamPlayType_ExamPlayType_Unknown              ExamPlayType = 0
	ExamPlayType_ExamPlayType_AutoPlay             ExamPlayType = 1
	ExamPlayType_ExamPlayType_ManualPlayLesson     ExamPlayType = 2
	ExamPlayType_ExamPlayType_ManualPlayLessonHard ExamPlayType = 3
	ExamPlayType_ExamPlayType_ManualPlayAudition   ExamPlayType = 4
)

// Enum value maps for ExamPlayType.
var (
	ExamPlayType_name = map[int32]string{
		0: "ExamPlayType_Unknown",
		1: "ExamPlayType_AutoPlay",
		2: "ExamPlayType_ManualPlayLesson",
		3: "ExamPlayType_ManualPlayLessonHard",
		4: "ExamPlayType_ManualPlayAudition",
	}
	ExamPlayType_value = map[string]int32{
		"ExamPlayType_Unknown":              0,
		"ExamPlayType_AutoPlay":             1,
		"ExamPlayType_ManualPlayLesson":     2,
		"ExamPlayType_ManualPlayLessonHard": 3,
		"ExamPlayType_ManualPlayAudition":   4,
	}
)

func (x ExamPlayType) Enum() *ExamPlayType {
	p := new(ExamPlayType)
	*p = x
	return p
}

func (x ExamPlayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamPlayType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[37].Descriptor()
}

func (ExamPlayType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[37]
}

func (x ExamPlayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamPlayType.Descriptor instead.
func (ExamPlayType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{37}
}

type ExamStatusEffectType int32

const (
	ExamStatusEffectType_ExamStatusEffectType_Unknown                                         ExamStatusEffectType = 0
	ExamStatusEffectType_ExamStatusEffectType_ParameterBuff                                   ExamStatusEffectType = 1
	ExamStatusEffectType_ExamStatusEffectType_ParameterDebuff                                 ExamStatusEffectType = 2
	ExamStatusEffectType_ExamStatusEffectType_Enthusiastic                                    ExamStatusEffectType = 3
	ExamStatusEffectType_ExamStatusEffectType_LessonBuff                                      ExamStatusEffectType = 4
	ExamStatusEffectType_ExamStatusEffectType_LessonDebuff                                    ExamStatusEffectType = 5
	ExamStatusEffectType_ExamStatusEffectType_LessonParameterMultiple                         ExamStatusEffectType = 6
	ExamStatusEffectType_ExamStatusEffectType_LessonParameterBuffMultiple                     ExamStatusEffectType = 7
	ExamStatusEffectType_ExamStatusEffectType_StaminaConsumptionAdd                           ExamStatusEffectType = 8
	ExamStatusEffectType_ExamStatusEffectType_StaminaConsumptionAddFix                        ExamStatusEffectType = 9
	ExamStatusEffectType_ExamStatusEffectType_StaminaConsumptionDown                          ExamStatusEffectType = 10
	ExamStatusEffectType_ExamStatusEffectType_StaminaConsumptionDownFix                       ExamStatusEffectType = 11
	ExamStatusEffectType_ExamStatusEffectType_BlockAddDown                                    ExamStatusEffectType = 12
	ExamStatusEffectType_ExamStatusEffectType_BlockAddDownFix                                 ExamStatusEffectType = 13
	ExamStatusEffectType_ExamStatusEffectType_StaminaConsumptionAddDown                       ExamStatusEffectType = 14
	ExamStatusEffectType_ExamStatusEffectType_StaminaConsumptionDownAdd                       ExamStatusEffectType = 15
	ExamStatusEffectType_ExamStatusEffectType_StaminaRecoverAdd                               ExamStatusEffectType = 16
	ExamStatusEffectType_ExamStatusEffectType_StaminaReduceChange                             ExamStatusEffectType = 17
	ExamStatusEffectType_ExamStatusEffectType_BlockRestriction                                ExamStatusEffectType = 18
	ExamStatusEffectType_ExamStatusEffectType_BlockAddDownRestriction                         ExamStatusEffectType = 19
	ExamStatusEffectType_ExamStatusEffectType_StaminaRecoverRestriction                       ExamStatusEffectType = 20
	ExamStatusEffectType_ExamStatusEffectType_PlayCountBuff                                   ExamStatusEffectType = 21
	ExamStatusEffectType_ExamStatusEffectType_SearchPlayCardCostChange                        ExamStatusEffectType = 22
	ExamStatusEffectType_ExamStatusEffectType_SearchPlayCardLimitLesson                       ExamStatusEffectType = 24
	ExamStatusEffectType_ExamStatusEffectType_SearchPlayCardLimitPower                        ExamStatusEffectType = 25
	ExamStatusEffectType_ExamStatusEffectType_SearchPlayCardLimitSkill                        ExamStatusEffectType = 26
	ExamStatusEffectType_ExamStatusEffectType_HandHold                                        ExamStatusEffectType = 27
	ExamStatusEffectType_ExamStatusEffectType_EffectTimer                                     ExamStatusEffectType = 30
	ExamStatusEffectType_ExamStatusEffectType_TriggerEffect                                   ExamStatusEffectType = 31
	ExamStatusEffectType_ExamStatusEffectType_ExamPlayableValueAdd                            ExamStatusEffectType = 34
	ExamStatusEffectType_ExamStatusEffectType_Review                                          ExamStatusEffectType = 35
	ExamStatusEffectType_ExamStatusEffectType_ReviewValueMultiple                             ExamStatusEffectType = 36
	ExamStatusEffectType_ExamStatusEffectType_Uplifting                                       ExamStatusEffectType = 37
	ExamStatusEffectType_ExamStatusEffectType_Aggressive                                      ExamStatusEffectType = 38
	ExamStatusEffectType_ExamStatusEffectType_StartTurnCardDrawDown                           ExamStatusEffectType = 40
	ExamStatusEffectType_ExamStatusEffectType_Slump                                           ExamStatusEffectType = 41
	ExamStatusEffectType_ExamStatusEffectType_FullPowerPoint                                  ExamStatusEffectType = 42
	ExamStatusEffectType_ExamStatusEffectType_AntiDebuff                                      ExamStatusEffectType = 43
	ExamStatusEffectType_ExamStatusEffectType_GetCardUpgrade                                  ExamStatusEffectType = 45
	ExamStatusEffectType_ExamStatusEffectType_LessonChangeSpecifyLessThan                     ExamStatusEffectType = 47
	ExamStatusEffectType_ExamStatusEffectType_LessonChangeSpecifyMoreThan                     ExamStatusEffectType = 48
	ExamStatusEffectType_ExamStatusEffectType_Panic                                           ExamStatusEffectType = 49
	ExamStatusEffectType_ExamStatusEffectType_ParameterBuffMultiplePerTurn                    ExamStatusEffectType = 50
	ExamStatusEffectType_ExamStatusEffectType_StanceLock                                      ExamStatusEffectType = 51
	ExamStatusEffectType_ExamStatusEffectType_LessonParameterMultipleDown                     ExamStatusEffectType = 52
	ExamStatusEffectType_ExamStatusEffectType_EnthusiasticAdditive                            ExamStatusEffectType = 53
	ExamStatusEffectType_ExamStatusEffectType_EnthusiasticMultiple                            ExamStatusEffectType = 54
	ExamStatusEffectType_ExamStatusEffectType_FullPowerLessonMultipleAdditive                 ExamStatusEffectType = 55
	ExamStatusEffectType_ExamStatusEffectType_ConcentrationLessonMultipleAdditive             ExamStatusEffectType = 56
	ExamStatusEffectType_ExamStatusEffectType_LessonBuffAdditive                              ExamStatusEffectType = 57
	ExamStatusEffectType_ExamStatusEffectType_ParameterBuffAdditive                           ExamStatusEffectType = 58
	ExamStatusEffectType_ExamStatusEffectType_AggressiveAdditive                              ExamStatusEffectType = 59
	ExamStatusEffectType_ExamStatusEffectType_ReviewAdditive                                  ExamStatusEffectType = 60
	ExamStatusEffectType_ExamStatusEffectType_FullPowerPointAdditive                          ExamStatusEffectType = 61
	ExamStatusEffectType_ExamStatusEffectType_GrowEffectLessonAddAdditive                     ExamStatusEffectType = 62
	ExamStatusEffectType_ExamStatusEffectType_ReviewMultiple                                  ExamStatusEffectType = 63
	ExamStatusEffectType_ExamStatusEffectType_LessonParameterMultipleDependReviewOrAggressive ExamStatusEffectType = 64
)

// Enum value maps for ExamStatusEffectType.
var (
	ExamStatusEffectType_name = map[int32]string{
		0:  "ExamStatusEffectType_Unknown",
		1:  "ExamStatusEffectType_ParameterBuff",
		2:  "ExamStatusEffectType_ParameterDebuff",
		3:  "ExamStatusEffectType_Enthusiastic",
		4:  "ExamStatusEffectType_LessonBuff",
		5:  "ExamStatusEffectType_LessonDebuff",
		6:  "ExamStatusEffectType_LessonParameterMultiple",
		7:  "ExamStatusEffectType_LessonParameterBuffMultiple",
		8:  "ExamStatusEffectType_StaminaConsumptionAdd",
		9:  "ExamStatusEffectType_StaminaConsumptionAddFix",
		10: "ExamStatusEffectType_StaminaConsumptionDown",
		11: "ExamStatusEffectType_StaminaConsumptionDownFix",
		12: "ExamStatusEffectType_BlockAddDown",
		13: "ExamStatusEffectType_BlockAddDownFix",
		14: "ExamStatusEffectType_StaminaConsumptionAddDown",
		15: "ExamStatusEffectType_StaminaConsumptionDownAdd",
		16: "ExamStatusEffectType_StaminaRecoverAdd",
		17: "ExamStatusEffectType_StaminaReduceChange",
		18: "ExamStatusEffectType_BlockRestriction",
		19: "ExamStatusEffectType_BlockAddDownRestriction",
		20: "ExamStatusEffectType_StaminaRecoverRestriction",
		21: "ExamStatusEffectType_PlayCountBuff",
		22: "ExamStatusEffectType_SearchPlayCardCostChange",
		24: "ExamStatusEffectType_SearchPlayCardLimitLesson",
		25: "ExamStatusEffectType_SearchPlayCardLimitPower",
		26: "ExamStatusEffectType_SearchPlayCardLimitSkill",
		27: "ExamStatusEffectType_HandHold",
		30: "ExamStatusEffectType_EffectTimer",
		31: "ExamStatusEffectType_TriggerEffect",
		34: "ExamStatusEffectType_ExamPlayableValueAdd",
		35: "ExamStatusEffectType_Review",
		36: "ExamStatusEffectType_ReviewValueMultiple",
		37: "ExamStatusEffectType_Uplifting",
		38: "ExamStatusEffectType_Aggressive",
		40: "ExamStatusEffectType_StartTurnCardDrawDown",
		41: "ExamStatusEffectType_Slump",
		42: "ExamStatusEffectType_FullPowerPoint",
		43: "ExamStatusEffectType_AntiDebuff",
		45: "ExamStatusEffectType_GetCardUpgrade",
		47: "ExamStatusEffectType_LessonChangeSpecifyLessThan",
		48: "ExamStatusEffectType_LessonChangeSpecifyMoreThan",
		49: "ExamStatusEffectType_Panic",
		50: "ExamStatusEffectType_ParameterBuffMultiplePerTurn",
		51: "ExamStatusEffectType_StanceLock",
		52: "ExamStatusEffectType_LessonParameterMultipleDown",
		53: "ExamStatusEffectType_EnthusiasticAdditive",
		54: "ExamStatusEffectType_EnthusiasticMultiple",
		55: "ExamStatusEffectType_FullPowerLessonMultipleAdditive",
		56: "ExamStatusEffectType_ConcentrationLessonMultipleAdditive",
		57: "ExamStatusEffectType_LessonBuffAdditive",
		58: "ExamStatusEffectType_ParameterBuffAdditive",
		59: "ExamStatusEffectType_AggressiveAdditive",
		60: "ExamStatusEffectType_ReviewAdditive",
		61: "ExamStatusEffectType_FullPowerPointAdditive",
		62: "ExamStatusEffectType_GrowEffectLessonAddAdditive",
		63: "ExamStatusEffectType_ReviewMultiple",
		64: "ExamStatusEffectType_LessonParameterMultipleDependReviewOrAggressive",
	}
	ExamStatusEffectType_value = map[string]int32{
		"ExamStatusEffectType_Unknown":                                         0,
		"ExamStatusEffectType_ParameterBuff":                                   1,
		"ExamStatusEffectType_ParameterDebuff":                                 2,
		"ExamStatusEffectType_Enthusiastic":                                    3,
		"ExamStatusEffectType_LessonBuff":                                      4,
		"ExamStatusEffectType_LessonDebuff":                                    5,
		"ExamStatusEffectType_LessonParameterMultiple":                         6,
		"ExamStatusEffectType_LessonParameterBuffMultiple":                     7,
		"ExamStatusEffectType_StaminaConsumptionAdd":                           8,
		"ExamStatusEffectType_StaminaConsumptionAddFix":                        9,
		"ExamStatusEffectType_StaminaConsumptionDown":                          10,
		"ExamStatusEffectType_StaminaConsumptionDownFix":                       11,
		"ExamStatusEffectType_BlockAddDown":                                    12,
		"ExamStatusEffectType_BlockAddDownFix":                                 13,
		"ExamStatusEffectType_StaminaConsumptionAddDown":                       14,
		"ExamStatusEffectType_StaminaConsumptionDownAdd":                       15,
		"ExamStatusEffectType_StaminaRecoverAdd":                               16,
		"ExamStatusEffectType_StaminaReduceChange":                             17,
		"ExamStatusEffectType_BlockRestriction":                                18,
		"ExamStatusEffectType_BlockAddDownRestriction":                         19,
		"ExamStatusEffectType_StaminaRecoverRestriction":                       20,
		"ExamStatusEffectType_PlayCountBuff":                                   21,
		"ExamStatusEffectType_SearchPlayCardCostChange":                        22,
		"ExamStatusEffectType_SearchPlayCardLimitLesson":                       24,
		"ExamStatusEffectType_SearchPlayCardLimitPower":                        25,
		"ExamStatusEffectType_SearchPlayCardLimitSkill":                        26,
		"ExamStatusEffectType_HandHold":                                        27,
		"ExamStatusEffectType_EffectTimer":                                     30,
		"ExamStatusEffectType_TriggerEffect":                                   31,
		"ExamStatusEffectType_ExamPlayableValueAdd":                            34,
		"ExamStatusEffectType_Review":                                          35,
		"ExamStatusEffectType_ReviewValueMultiple":                             36,
		"ExamStatusEffectType_Uplifting":                                       37,
		"ExamStatusEffectType_Aggressive":                                      38,
		"ExamStatusEffectType_StartTurnCardDrawDown":                           40,
		"ExamStatusEffectType_Slump":                                           41,
		"ExamStatusEffectType_FullPowerPoint":                                  42,
		"ExamStatusEffectType_AntiDebuff":                                      43,
		"ExamStatusEffectType_GetCardUpgrade":                                  45,
		"ExamStatusEffectType_LessonChangeSpecifyLessThan":                     47,
		"ExamStatusEffectType_LessonChangeSpecifyMoreThan":                     48,
		"ExamStatusEffectType_Panic":                                           49,
		"ExamStatusEffectType_ParameterBuffMultiplePerTurn":                    50,
		"ExamStatusEffectType_StanceLock":                                      51,
		"ExamStatusEffectType_LessonParameterMultipleDown":                     52,
		"ExamStatusEffectType_EnthusiasticAdditive":                            53,
		"ExamStatusEffectType_EnthusiasticMultiple":                            54,
		"ExamStatusEffectType_FullPowerLessonMultipleAdditive":                 55,
		"ExamStatusEffectType_ConcentrationLessonMultipleAdditive":             56,
		"ExamStatusEffectType_LessonBuffAdditive":                              57,
		"ExamStatusEffectType_ParameterBuffAdditive":                           58,
		"ExamStatusEffectType_AggressiveAdditive":                              59,
		"ExamStatusEffectType_ReviewAdditive":                                  60,
		"ExamStatusEffectType_FullPowerPointAdditive":                          61,
		"ExamStatusEffectType_GrowEffectLessonAddAdditive":                     62,
		"ExamStatusEffectType_ReviewMultiple":                                  63,
		"ExamStatusEffectType_LessonParameterMultipleDependReviewOrAggressive": 64,
	}
)

func (x ExamStatusEffectType) Enum() *ExamStatusEffectType {
	p := new(ExamStatusEffectType)
	*p = x
	return p
}

func (x ExamStatusEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamStatusEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[38].Descriptor()
}

func (ExamStatusEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[38]
}

func (x ExamStatusEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamStatusEffectType.Descriptor instead.
func (ExamStatusEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{38}
}

type ExchangeItemCategoryType int32

const (
	ExchangeItemCategoryType_ExchangeItemCategoryType_Unknown      ExchangeItemCategoryType = 0
	ExchangeItemCategoryType_ExchangeItemCategoryType_All          ExchangeItemCategoryType = 1
	ExchangeItemCategoryType_ExchangeItemCategoryType_ResourceType ExchangeItemCategoryType = 2
	ExchangeItemCategoryType_ExchangeItemCategoryType_ItemType     ExchangeItemCategoryType = 3
	ExchangeItemCategoryType_ExchangeItemCategoryType_Other        ExchangeItemCategoryType = 999
)

// Enum value maps for ExchangeItemCategoryType.
var (
	ExchangeItemCategoryType_name = map[int32]string{
		0:   "ExchangeItemCategoryType_Unknown",
		1:   "ExchangeItemCategoryType_All",
		2:   "ExchangeItemCategoryType_ResourceType",
		3:   "ExchangeItemCategoryType_ItemType",
		999: "ExchangeItemCategoryType_Other",
	}
	ExchangeItemCategoryType_value = map[string]int32{
		"ExchangeItemCategoryType_Unknown":      0,
		"ExchangeItemCategoryType_All":          1,
		"ExchangeItemCategoryType_ResourceType": 2,
		"ExchangeItemCategoryType_ItemType":     3,
		"ExchangeItemCategoryType_Other":        999,
	}
)

func (x ExchangeItemCategoryType) Enum() *ExchangeItemCategoryType {
	p := new(ExchangeItemCategoryType)
	*p = x
	return p
}

func (x ExchangeItemCategoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeItemCategoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[39].Descriptor()
}

func (ExchangeItemCategoryType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[39]
}

func (x ExchangeItemCategoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeItemCategoryType.Descriptor instead.
func (ExchangeItemCategoryType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{39}
}

type ExchangeItemResetCheckStatus int32

const (
	ExchangeItemResetCheckStatus_ExchangeItemResetCheckStatus_Unknown ExchangeItemResetCheckStatus = 0
	ExchangeItemResetCheckStatus_ExchangeItemResetCheckStatus_Open    ExchangeItemResetCheckStatus = 1
	ExchangeItemResetCheckStatus_ExchangeItemResetCheckStatus_Locked  ExchangeItemResetCheckStatus = 2
)

// Enum value maps for ExchangeItemResetCheckStatus.
var (
	ExchangeItemResetCheckStatus_name = map[int32]string{
		0: "ExchangeItemResetCheckStatus_Unknown",
		1: "ExchangeItemResetCheckStatus_Open",
		2: "ExchangeItemResetCheckStatus_Locked",
	}
	ExchangeItemResetCheckStatus_value = map[string]int32{
		"ExchangeItemResetCheckStatus_Unknown": 0,
		"ExchangeItemResetCheckStatus_Open":    1,
		"ExchangeItemResetCheckStatus_Locked":  2,
	}
)

func (x ExchangeItemResetCheckStatus) Enum() *ExchangeItemResetCheckStatus {
	p := new(ExchangeItemResetCheckStatus)
	*p = x
	return p
}

func (x ExchangeItemResetCheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeItemResetCheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[40].Descriptor()
}

func (ExchangeItemResetCheckStatus) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[40]
}

func (x ExchangeItemResetCheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeItemResetCheckStatus.Descriptor instead.
func (ExchangeItemResetCheckStatus) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{40}
}

type ExchangeType int32

const (
	ExchangeType_ExchangeType_Unknown ExchangeType = 0
	ExchangeType_ExchangeType_Daily   ExchangeType = 1
	ExchangeType_ExchangeType_Item    ExchangeType = 2
	ExchangeType_ExchangeType_Event   ExchangeType = 3
)

// Enum value maps for ExchangeType.
var (
	ExchangeType_name = map[int32]string{
		0: "ExchangeType_Unknown",
		1: "ExchangeType_Daily",
		2: "ExchangeType_Item",
		3: "ExchangeType_Event",
	}
	ExchangeType_value = map[string]int32{
		"ExchangeType_Unknown": 0,
		"ExchangeType_Daily":   1,
		"ExchangeType_Item":    2,
		"ExchangeType_Event":   3,
	}
)

func (x ExchangeType) Enum() *ExchangeType {
	p := new(ExchangeType)
	*p = x
	return p
}

func (x ExchangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[41].Descriptor()
}

func (ExchangeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[41]
}

func (x ExchangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeType.Descriptor instead.
func (ExchangeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{41}
}

type FeatureMaintenanceType int32

const (
	FeatureMaintenanceType_FeatureMaintenanceType_Unknown             FeatureMaintenanceType = 0
	FeatureMaintenanceType_FeatureMaintenanceType_Exchange            FeatureMaintenanceType = 1
	FeatureMaintenanceType_FeatureMaintenanceType_Shop                FeatureMaintenanceType = 2
	FeatureMaintenanceType_FeatureMaintenanceType_Work                FeatureMaintenanceType = 3
	FeatureMaintenanceType_FeatureMaintenanceType_Mission             FeatureMaintenanceType = 4
	FeatureMaintenanceType_FeatureMaintenanceType_CoinGasha           FeatureMaintenanceType = 5
	FeatureMaintenanceType_FeatureMaintenanceType_MissionPass         FeatureMaintenanceType = 6
	FeatureMaintenanceType_FeatureMaintenanceType_Gasha               FeatureMaintenanceType = 7
	FeatureMaintenanceType_FeatureMaintenanceType_Guild               FeatureMaintenanceType = 8
	FeatureMaintenanceType_FeatureMaintenanceType_Produce             FeatureMaintenanceType = 9
	FeatureMaintenanceType_FeatureMaintenanceType_PvpRate             FeatureMaintenanceType = 10
	FeatureMaintenanceType_FeatureMaintenanceType_Tower               FeatureMaintenanceType = 11
	FeatureMaintenanceType_FeatureMaintenanceType_TicketExchange      FeatureMaintenanceType = 12
	FeatureMaintenanceType_FeatureMaintenanceType_ShopTop             FeatureMaintenanceType = 13
	FeatureMaintenanceType_FeatureMaintenanceType_StoryEvent          FeatureMaintenanceType = 14
	FeatureMaintenanceType_FeatureMaintenanceType_ProduceHighScore    FeatureMaintenanceType = 15
	FeatureMaintenanceType_FeatureMaintenanceType_MissionPanel        FeatureMaintenanceType = 16
	FeatureMaintenanceType_FeatureMaintenanceType_MissionDailyRelease FeatureMaintenanceType = 17
	FeatureMaintenanceType_FeatureMaintenanceType_StoryCampaign       FeatureMaintenanceType = 18
	FeatureMaintenanceType_FeatureMaintenanceType_GvgRaid             FeatureMaintenanceType = 19
	FeatureMaintenanceType_FeatureMaintenanceType_Dearness            FeatureMaintenanceType = 20
	FeatureMaintenanceType_FeatureMaintenanceType_Tour                FeatureMaintenanceType = 21
)

// Enum value maps for FeatureMaintenanceType.
var (
	FeatureMaintenanceType_name = map[int32]string{
		0:  "FeatureMaintenanceType_Unknown",
		1:  "FeatureMaintenanceType_Exchange",
		2:  "FeatureMaintenanceType_Shop",
		3:  "FeatureMaintenanceType_Work",
		4:  "FeatureMaintenanceType_Mission",
		5:  "FeatureMaintenanceType_CoinGasha",
		6:  "FeatureMaintenanceType_MissionPass",
		7:  "FeatureMaintenanceType_Gasha",
		8:  "FeatureMaintenanceType_Guild",
		9:  "FeatureMaintenanceType_Produce",
		10: "FeatureMaintenanceType_PvpRate",
		11: "FeatureMaintenanceType_Tower",
		12: "FeatureMaintenanceType_TicketExchange",
		13: "FeatureMaintenanceType_ShopTop",
		14: "FeatureMaintenanceType_StoryEvent",
		15: "FeatureMaintenanceType_ProduceHighScore",
		16: "FeatureMaintenanceType_MissionPanel",
		17: "FeatureMaintenanceType_MissionDailyRelease",
		18: "FeatureMaintenanceType_StoryCampaign",
		19: "FeatureMaintenanceType_GvgRaid",
		20: "FeatureMaintenanceType_Dearness",
		21: "FeatureMaintenanceType_Tour",
	}
	FeatureMaintenanceType_value = map[string]int32{
		"FeatureMaintenanceType_Unknown":             0,
		"FeatureMaintenanceType_Exchange":            1,
		"FeatureMaintenanceType_Shop":                2,
		"FeatureMaintenanceType_Work":                3,
		"FeatureMaintenanceType_Mission":             4,
		"FeatureMaintenanceType_CoinGasha":           5,
		"FeatureMaintenanceType_MissionPass":         6,
		"FeatureMaintenanceType_Gasha":               7,
		"FeatureMaintenanceType_Guild":               8,
		"FeatureMaintenanceType_Produce":             9,
		"FeatureMaintenanceType_PvpRate":             10,
		"FeatureMaintenanceType_Tower":               11,
		"FeatureMaintenanceType_TicketExchange":      12,
		"FeatureMaintenanceType_ShopTop":             13,
		"FeatureMaintenanceType_StoryEvent":          14,
		"FeatureMaintenanceType_ProduceHighScore":    15,
		"FeatureMaintenanceType_MissionPanel":        16,
		"FeatureMaintenanceType_MissionDailyRelease": 17,
		"FeatureMaintenanceType_StoryCampaign":       18,
		"FeatureMaintenanceType_GvgRaid":             19,
		"FeatureMaintenanceType_Dearness":            20,
		"FeatureMaintenanceType_Tour":                21,
	}
)

func (x FeatureMaintenanceType) Enum() *FeatureMaintenanceType {
	p := new(FeatureMaintenanceType)
	*p = x
	return p
}

func (x FeatureMaintenanceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureMaintenanceType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[42].Descriptor()
}

func (FeatureMaintenanceType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[42]
}

func (x FeatureMaintenanceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureMaintenanceType.Descriptor instead.
func (FeatureMaintenanceType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{42}
}

type FourPanelComicSeries int32

const (
	FourPanelComicSeries_FourPanelComicSeries_Unknown FourPanelComicSeries = 0
	FourPanelComicSeries_FourPanelComicSeries_Radio   FourPanelComicSeries = 1
	FourPanelComicSeries_FourPanelComicSeries_Live    FourPanelComicSeries = 2
)

// Enum value maps for FourPanelComicSeries.
var (
	FourPanelComicSeries_name = map[int32]string{
		0: "FourPanelComicSeries_Unknown",
		1: "FourPanelComicSeries_Radio",
		2: "FourPanelComicSeries_Live",
	}
	FourPanelComicSeries_value = map[string]int32{
		"FourPanelComicSeries_Unknown": 0,
		"FourPanelComicSeries_Radio":   1,
		"FourPanelComicSeries_Live":    2,
	}
)

func (x FourPanelComicSeries) Enum() *FourPanelComicSeries {
	p := new(FourPanelComicSeries)
	*p = x
	return p
}

func (x FourPanelComicSeries) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FourPanelComicSeries) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[43].Descriptor()
}

func (FourPanelComicSeries) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[43]
}

func (x FourPanelComicSeries) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FourPanelComicSeries.Descriptor instead.
func (FourPanelComicSeries) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{43}
}

type FriendStatusType int32

const (
	FriendStatusType_FriendStatusType_Unknown      FriendStatusType = 0
	FriendStatusType_FriendStatusType_None         FriendStatusType = 1
	FriendStatusType_FriendStatusType_MutualFollow FriendStatusType = 2
	FriendStatusType_FriendStatusType_Follow       FriendStatusType = 3
	FriendStatusType_FriendStatusType_Follower     FriendStatusType = 4
)

// Enum value maps for FriendStatusType.
var (
	FriendStatusType_name = map[int32]string{
		0: "FriendStatusType_Unknown",
		1: "FriendStatusType_None",
		2: "FriendStatusType_MutualFollow",
		3: "FriendStatusType_Follow",
		4: "FriendStatusType_Follower",
	}
	FriendStatusType_value = map[string]int32{
		"FriendStatusType_Unknown":      0,
		"FriendStatusType_None":         1,
		"FriendStatusType_MutualFollow": 2,
		"FriendStatusType_Follow":       3,
		"FriendStatusType_Follower":     4,
	}
)

func (x FriendStatusType) Enum() *FriendStatusType {
	p := new(FriendStatusType)
	*p = x
	return p
}

func (x FriendStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[44].Descriptor()
}

func (FriendStatusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[44]
}

func (x FriendStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendStatusType.Descriptor instead.
func (FriendStatusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{44}
}

type GashaAnimationRarity int32

const (
	GashaAnimationRarity_GashaAnimationRarity_Unknown           GashaAnimationRarity = 0
	GashaAnimationRarity_GashaAnimationRarity_R                 GashaAnimationRarity = 1
	GashaAnimationRarity_GashaAnimationRarity_Sr                GashaAnimationRarity = 2
	GashaAnimationRarity_GashaAnimationRarity_Ssr               GashaAnimationRarity = 3
	GashaAnimationRarity_GashaAnimationRarity_PickupSsridolCard GashaAnimationRarity = 4
)

// Enum value maps for GashaAnimationRarity.
var (
	GashaAnimationRarity_name = map[int32]string{
		0: "GashaAnimationRarity_Unknown",
		1: "GashaAnimationRarity_R",
		2: "GashaAnimationRarity_Sr",
		3: "GashaAnimationRarity_Ssr",
		4: "GashaAnimationRarity_PickupSsridolCard",
	}
	GashaAnimationRarity_value = map[string]int32{
		"GashaAnimationRarity_Unknown":           0,
		"GashaAnimationRarity_R":                 1,
		"GashaAnimationRarity_Sr":                2,
		"GashaAnimationRarity_Ssr":               3,
		"GashaAnimationRarity_PickupSsridolCard": 4,
	}
)

func (x GashaAnimationRarity) Enum() *GashaAnimationRarity {
	p := new(GashaAnimationRarity)
	*p = x
	return p
}

func (x GashaAnimationRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GashaAnimationRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[45].Descriptor()
}

func (GashaAnimationRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[45]
}

func (x GashaAnimationRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GashaAnimationRarity.Descriptor instead.
func (GashaAnimationRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{45}
}

type GashaAnimationStepType int32

const (
	GashaAnimationStepType_GashaAnimationStepType_Unknown     GashaAnimationStepType = 0
	GashaAnimationStepType_GashaAnimationStepType_Start       GashaAnimationStepType = 1
	GashaAnimationStepType_GashaAnimationStepType_Tap         GashaAnimationStepType = 2
	GashaAnimationStepType_GashaAnimationStepType_Monitor     GashaAnimationStepType = 3
	GashaAnimationStepType_GashaAnimationStepType_Step1       GashaAnimationStepType = 4
	GashaAnimationStepType_GashaAnimationStepType_Step2       GashaAnimationStepType = 5
	GashaAnimationStepType_GashaAnimationStepType_Step3       GashaAnimationStepType = 6
	GashaAnimationStepType_GashaAnimationStepType_Step4       GashaAnimationStepType = 7
	GashaAnimationStepType_GashaAnimationStepType_Freeze      GashaAnimationStepType = 8
	GashaAnimationStepType_GashaAnimationStepType_FreezeAfter GashaAnimationStepType = 9
	GashaAnimationStepType_GashaAnimationStepType_LightList   GashaAnimationStepType = 10
	GashaAnimationStepType_GashaAnimationStepType_End         GashaAnimationStepType = 11
)

// Enum value maps for GashaAnimationStepType.
var (
	GashaAnimationStepType_name = map[int32]string{
		0:  "GashaAnimationStepType_Unknown",
		1:  "GashaAnimationStepType_Start",
		2:  "GashaAnimationStepType_Tap",
		3:  "GashaAnimationStepType_Monitor",
		4:  "GashaAnimationStepType_Step1",
		5:  "GashaAnimationStepType_Step2",
		6:  "GashaAnimationStepType_Step3",
		7:  "GashaAnimationStepType_Step4",
		8:  "GashaAnimationStepType_Freeze",
		9:  "GashaAnimationStepType_FreezeAfter",
		10: "GashaAnimationStepType_LightList",
		11: "GashaAnimationStepType_End",
	}
	GashaAnimationStepType_value = map[string]int32{
		"GashaAnimationStepType_Unknown":     0,
		"GashaAnimationStepType_Start":       1,
		"GashaAnimationStepType_Tap":         2,
		"GashaAnimationStepType_Monitor":     3,
		"GashaAnimationStepType_Step1":       4,
		"GashaAnimationStepType_Step2":       5,
		"GashaAnimationStepType_Step3":       6,
		"GashaAnimationStepType_Step4":       7,
		"GashaAnimationStepType_Freeze":      8,
		"GashaAnimationStepType_FreezeAfter": 9,
		"GashaAnimationStepType_LightList":   10,
		"GashaAnimationStepType_End":         11,
	}
)

func (x GashaAnimationStepType) Enum() *GashaAnimationStepType {
	p := new(GashaAnimationStepType)
	*p = x
	return p
}

func (x GashaAnimationStepType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GashaAnimationStepType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[46].Descriptor()
}

func (GashaAnimationStepType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[46]
}

func (x GashaAnimationStepType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GashaAnimationStepType.Descriptor instead.
func (GashaAnimationStepType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{46}
}

type GashaButtonAppealType int32

const (
	GashaButtonAppealType_GashaButtonAppealType_Unknown               GashaButtonAppealType = 0
	GashaButtonAppealType_GashaButtonAppealType_AppealText            GashaButtonAppealType = 1
	GashaButtonAppealType_GashaButtonAppealType_DrawableCount         GashaButtonAppealType = 2
	GashaButtonAppealType_GashaButtonAppealType_CurrentStep           GashaButtonAppealType = 3
	GashaButtonAppealType_GashaButtonAppealType_FixSsr                GashaButtonAppealType = 4
	GashaButtonAppealType_GashaButtonAppealType_DiscountDrawableCount GashaButtonAppealType = 5
)

// Enum value maps for GashaButtonAppealType.
var (
	GashaButtonAppealType_name = map[int32]string{
		0: "GashaButtonAppealType_Unknown",
		1: "GashaButtonAppealType_AppealText",
		2: "GashaButtonAppealType_DrawableCount",
		3: "GashaButtonAppealType_CurrentStep",
		4: "GashaButtonAppealType_FixSsr",
		5: "GashaButtonAppealType_DiscountDrawableCount",
	}
	GashaButtonAppealType_value = map[string]int32{
		"GashaButtonAppealType_Unknown":               0,
		"GashaButtonAppealType_AppealText":            1,
		"GashaButtonAppealType_DrawableCount":         2,
		"GashaButtonAppealType_CurrentStep":           3,
		"GashaButtonAppealType_FixSsr":                4,
		"GashaButtonAppealType_DiscountDrawableCount": 5,
	}
)

func (x GashaButtonAppealType) Enum() *GashaButtonAppealType {
	p := new(GashaButtonAppealType)
	*p = x
	return p
}

func (x GashaButtonAppealType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GashaButtonAppealType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[47].Descriptor()
}

func (GashaButtonAppealType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[47]
}

func (x GashaButtonAppealType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GashaButtonAppealType.Descriptor instead.
func (GashaButtonAppealType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{47}
}

type GashaButtonType int32

const (
	GashaButtonType_GashaButtonType_Unknown GashaButtonType = 0
	GashaButtonType_GashaButtonType_Static  GashaButtonType = 1
	GashaButtonType_GashaButtonType_Dynamic GashaButtonType = 2
)

// Enum value maps for GashaButtonType.
var (
	GashaButtonType_name = map[int32]string{
		0: "GashaButtonType_Unknown",
		1: "GashaButtonType_Static",
		2: "GashaButtonType_Dynamic",
	}
	GashaButtonType_value = map[string]int32{
		"GashaButtonType_Unknown": 0,
		"GashaButtonType_Static":  1,
		"GashaButtonType_Dynamic": 2,
	}
)

func (x GashaButtonType) Enum() *GashaButtonType {
	p := new(GashaButtonType)
	*p = x
	return p
}

func (x GashaButtonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GashaButtonType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[48].Descriptor()
}

func (GashaButtonType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[48]
}

func (x GashaButtonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GashaButtonType.Descriptor instead.
func (GashaButtonType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{48}
}

type GashaCardBonusType int32

const (
	GashaCardBonusType_GashaCardBonusType_Unknown        GashaCardBonusType = 0
	GashaCardBonusType_GashaCardBonusType_All            GashaCardBonusType = 1
	GashaCardBonusType_GashaCardBonusType_IdolCardAll    GashaCardBonusType = 2
	GashaCardBonusType_GashaCardBonusType_SupportCardAll GashaCardBonusType = 3
	GashaCardBonusType_GashaCardBonusType_IdolCard       GashaCardBonusType = 4
	GashaCardBonusType_GashaCardBonusType_SupportCard    GashaCardBonusType = 5
)

// Enum value maps for GashaCardBonusType.
var (
	GashaCardBonusType_name = map[int32]string{
		0: "GashaCardBonusType_Unknown",
		1: "GashaCardBonusType_All",
		2: "GashaCardBonusType_IdolCardAll",
		3: "GashaCardBonusType_SupportCardAll",
		4: "GashaCardBonusType_IdolCard",
		5: "GashaCardBonusType_SupportCard",
	}
	GashaCardBonusType_value = map[string]int32{
		"GashaCardBonusType_Unknown":        0,
		"GashaCardBonusType_All":            1,
		"GashaCardBonusType_IdolCardAll":    2,
		"GashaCardBonusType_SupportCardAll": 3,
		"GashaCardBonusType_IdolCard":       4,
		"GashaCardBonusType_SupportCard":    5,
	}
)

func (x GashaCardBonusType) Enum() *GashaCardBonusType {
	p := new(GashaCardBonusType)
	*p = x
	return p
}

func (x GashaCardBonusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GashaCardBonusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[49].Descriptor()
}

func (GashaCardBonusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[49]
}

func (x GashaCardBonusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GashaCardBonusType.Descriptor instead.
func (GashaCardBonusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{49}
}

type GashaLimitType int32

const (
	GashaLimitType_GashaLimitType_Unknown                GashaLimitType = 0
	GashaLimitType_GashaLimitType_None                   GashaLimitType = 1
	GashaLimitType_GashaLimitType_Total                  GashaLimitType = 2
	GashaLimitType_GashaLimitType_Daily                  GashaLimitType = 3
	GashaLimitType_GashaLimitType_DailyAccumulation      GashaLimitType = 4
	GashaLimitType_GashaLimitType_DailyLoginAccumulation GashaLimitType = 5
)

// Enum value maps for GashaLimitType.
var (
	GashaLimitType_name = map[int32]string{
		0: "GashaLimitType_Unknown",
		1: "GashaLimitType_None",
		2: "GashaLimitType_Total",
		3: "GashaLimitType_Daily",
		4: "GashaLimitType_DailyAccumulation",
		5: "GashaLimitType_DailyLoginAccumulation",
	}
	GashaLimitType_value = map[string]int32{
		"GashaLimitType_Unknown":                0,
		"GashaLimitType_None":                   1,
		"GashaLimitType_Total":                  2,
		"GashaLimitType_Daily":                  3,
		"GashaLimitType_DailyAccumulation":      4,
		"GashaLimitType_DailyLoginAccumulation": 5,
	}
)

func (x GashaLimitType) Enum() *GashaLimitType {
	p := new(GashaLimitType)
	*p = x
	return p
}

func (x GashaLimitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GashaLimitType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[50].Descriptor()
}

func (GashaLimitType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[50]
}

func (x GashaLimitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GashaLimitType.Descriptor instead.
func (GashaLimitType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{50}
}

type GashaType int32

const (
	GashaType_GashaType_Unknown      GashaType = 0
	GashaType_GashaType_Default      GashaType = 1
	GashaType_GashaType_StepUp       GashaType = 2
	GashaType_GashaType_SelectPickup GashaType = 3
)

// Enum value maps for GashaType.
var (
	GashaType_name = map[int32]string{
		0: "GashaType_Unknown",
		1: "GashaType_Default",
		2: "GashaType_StepUp",
		3: "GashaType_SelectPickup",
	}
	GashaType_value = map[string]int32{
		"GashaType_Unknown":      0,
		"GashaType_Default":      1,
		"GashaType_StepUp":       2,
		"GashaType_SelectPickup": 3,
	}
)

func (x GashaType) Enum() *GashaType {
	p := new(GashaType)
	*p = x
	return p
}

func (x GashaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GashaType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[51].Descriptor()
}

func (GashaType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[51]
}

func (x GashaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GashaType.Descriptor instead.
func (GashaType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{51}
}

type GiftFilterType int32

const (
	GiftFilterType_GiftFilterType_Unknown     GiftFilterType = 0
	GiftFilterType_GiftFilterType_Jewel       GiftFilterType = 1
	GiftFilterType_GiftFilterType_IdolCard    GiftFilterType = 2
	GiftFilterType_GiftFilterType_SupportCard GiftFilterType = 3
	GiftFilterType_GiftFilterType_Memory      GiftFilterType = 4
	GiftFilterType_GiftFilterType_Item        GiftFilterType = 5
	GiftFilterType_GiftFilterType_Costume     GiftFilterType = 6
	GiftFilterType_GiftFilterType_Other       GiftFilterType = 99
)

// Enum value maps for GiftFilterType.
var (
	GiftFilterType_name = map[int32]string{
		0:  "GiftFilterType_Unknown",
		1:  "GiftFilterType_Jewel",
		2:  "GiftFilterType_IdolCard",
		3:  "GiftFilterType_SupportCard",
		4:  "GiftFilterType_Memory",
		5:  "GiftFilterType_Item",
		6:  "GiftFilterType_Costume",
		99: "GiftFilterType_Other",
	}
	GiftFilterType_value = map[string]int32{
		"GiftFilterType_Unknown":     0,
		"GiftFilterType_Jewel":       1,
		"GiftFilterType_IdolCard":    2,
		"GiftFilterType_SupportCard": 3,
		"GiftFilterType_Memory":      4,
		"GiftFilterType_Item":        5,
		"GiftFilterType_Costume":     6,
		"GiftFilterType_Other":       99,
	}
)

func (x GiftFilterType) Enum() *GiftFilterType {
	p := new(GiftFilterType)
	*p = x
	return p
}

func (x GiftFilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GiftFilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[52].Descriptor()
}

func (GiftFilterType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[52]
}

func (x GiftFilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GiftFilterType.Descriptor instead.
func (GiftFilterType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{52}
}

type GuildActivityPolicyType int32

const (
	GuildActivityPolicyType_GuildActivityPolicyType_Unknown GuildActivityPolicyType = 0
	GuildActivityPolicyType_GuildActivityPolicyType__1      GuildActivityPolicyType = 1
	GuildActivityPolicyType_GuildActivityPolicyType__2      GuildActivityPolicyType = 2
	GuildActivityPolicyType_GuildActivityPolicyType__3      GuildActivityPolicyType = 3
	GuildActivityPolicyType_GuildActivityPolicyType__4      GuildActivityPolicyType = 4
	GuildActivityPolicyType_GuildActivityPolicyType__5      GuildActivityPolicyType = 5
	GuildActivityPolicyType_GuildActivityPolicyType__6      GuildActivityPolicyType = 6
)

// Enum value maps for GuildActivityPolicyType.
var (
	GuildActivityPolicyType_name = map[int32]string{
		0: "GuildActivityPolicyType_Unknown",
		1: "GuildActivityPolicyType__1",
		2: "GuildActivityPolicyType__2",
		3: "GuildActivityPolicyType__3",
		4: "GuildActivityPolicyType__4",
		5: "GuildActivityPolicyType__5",
		6: "GuildActivityPolicyType__6",
	}
	GuildActivityPolicyType_value = map[string]int32{
		"GuildActivityPolicyType_Unknown": 0,
		"GuildActivityPolicyType__1":      1,
		"GuildActivityPolicyType__2":      2,
		"GuildActivityPolicyType__3":      3,
		"GuildActivityPolicyType__4":      4,
		"GuildActivityPolicyType__5":      5,
		"GuildActivityPolicyType__6":      6,
	}
)

func (x GuildActivityPolicyType) Enum() *GuildActivityPolicyType {
	p := new(GuildActivityPolicyType)
	*p = x
	return p
}

func (x GuildActivityPolicyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuildActivityPolicyType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[53].Descriptor()
}

func (GuildActivityPolicyType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[53]
}

func (x GuildActivityPolicyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuildActivityPolicyType.Descriptor instead.
func (GuildActivityPolicyType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{53}
}

type GuildJoinRequestRouteType int32

const (
	GuildJoinRequestRouteType_GuildJoinRequestRouteType_Unknown    GuildJoinRequestRouteType = 0
	GuildJoinRequestRouteType_GuildJoinRequestRouteType_Search     GuildJoinRequestRouteType = 1
	GuildJoinRequestRouteType_GuildJoinRequestRouteType_Id         GuildJoinRequestRouteType = 2
	GuildJoinRequestRouteType_GuildJoinRequestRouteType_Suggestion GuildJoinRequestRouteType = 3
)

// Enum value maps for GuildJoinRequestRouteType.
var (
	GuildJoinRequestRouteType_name = map[int32]string{
		0: "GuildJoinRequestRouteType_Unknown",
		1: "GuildJoinRequestRouteType_Search",
		2: "GuildJoinRequestRouteType_Id",
		3: "GuildJoinRequestRouteType_Suggestion",
	}
	GuildJoinRequestRouteType_value = map[string]int32{
		"GuildJoinRequestRouteType_Unknown":    0,
		"GuildJoinRequestRouteType_Search":     1,
		"GuildJoinRequestRouteType_Id":         2,
		"GuildJoinRequestRouteType_Suggestion": 3,
	}
)

func (x GuildJoinRequestRouteType) Enum() *GuildJoinRequestRouteType {
	p := new(GuildJoinRequestRouteType)
	*p = x
	return p
}

func (x GuildJoinRequestRouteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuildJoinRequestRouteType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[54].Descriptor()
}

func (GuildJoinRequestRouteType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[54]
}

func (x GuildJoinRequestRouteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuildJoinRequestRouteType.Descriptor instead.
func (GuildJoinRequestRouteType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{54}
}

type GuildJoinType int32

const (
	GuildJoinType_GuildJoinType_Unknown   GuildJoinType = 0
	GuildJoinType_GuildJoinType_NotJoined GuildJoinType = 1
	GuildJoinType_GuildJoinType_Joined    GuildJoinType = 2
)

// Enum value maps for GuildJoinType.
var (
	GuildJoinType_name = map[int32]string{
		0: "GuildJoinType_Unknown",
		1: "GuildJoinType_NotJoined",
		2: "GuildJoinType_Joined",
	}
	GuildJoinType_value = map[string]int32{
		"GuildJoinType_Unknown":   0,
		"GuildJoinType_NotJoined": 1,
		"GuildJoinType_Joined":    2,
	}
)

func (x GuildJoinType) Enum() *GuildJoinType {
	p := new(GuildJoinType)
	*p = x
	return p
}

func (x GuildJoinType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuildJoinType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[55].Descriptor()
}

func (GuildJoinType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[55]
}

func (x GuildJoinType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuildJoinType.Descriptor instead.
func (GuildJoinType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{55}
}

type GuildMissionPhaseType int32

const (
	GuildMissionPhaseType_GuildMissionPhaseType_Unknown                      GuildMissionPhaseType = 0
	GuildMissionPhaseType_GuildMissionPhaseType_ProduceConditionSet1Unlocked GuildMissionPhaseType = 1
	GuildMissionPhaseType_GuildMissionPhaseType_ProduceConditionSet2Unlocked GuildMissionPhaseType = 2
	GuildMissionPhaseType_GuildMissionPhaseType_ProduceConditionSet3Unlocked GuildMissionPhaseType = 3
	GuildMissionPhaseType_GuildMissionPhaseType_Cleared                      GuildMissionPhaseType = 99
)

// Enum value maps for GuildMissionPhaseType.
var (
	GuildMissionPhaseType_name = map[int32]string{
		0:  "GuildMissionPhaseType_Unknown",
		1:  "GuildMissionPhaseType_ProduceConditionSet1Unlocked",
		2:  "GuildMissionPhaseType_ProduceConditionSet2Unlocked",
		3:  "GuildMissionPhaseType_ProduceConditionSet3Unlocked",
		99: "GuildMissionPhaseType_Cleared",
	}
	GuildMissionPhaseType_value = map[string]int32{
		"GuildMissionPhaseType_Unknown":                      0,
		"GuildMissionPhaseType_ProduceConditionSet1Unlocked": 1,
		"GuildMissionPhaseType_ProduceConditionSet2Unlocked": 2,
		"GuildMissionPhaseType_ProduceConditionSet3Unlocked": 3,
		"GuildMissionPhaseType_Cleared":                      99,
	}
)

func (x GuildMissionPhaseType) Enum() *GuildMissionPhaseType {
	p := new(GuildMissionPhaseType)
	*p = x
	return p
}

func (x GuildMissionPhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuildMissionPhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[56].Descriptor()
}

func (GuildMissionPhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[56]
}

func (x GuildMissionPhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuildMissionPhaseType.Descriptor instead.
func (GuildMissionPhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{56}
}

type GuildNotificationType int32

const (
	GuildNotificationType_GuildNotificationType_Unknown GuildNotificationType = 0
	GuildNotificationType_GuildNotificationType_Join    GuildNotificationType = 1
	GuildNotificationType_GuildNotificationType_Dismiss GuildNotificationType = 2
)

// Enum value maps for GuildNotificationType.
var (
	GuildNotificationType_name = map[int32]string{
		0: "GuildNotificationType_Unknown",
		1: "GuildNotificationType_Join",
		2: "GuildNotificationType_Dismiss",
	}
	GuildNotificationType_value = map[string]int32{
		"GuildNotificationType_Unknown": 0,
		"GuildNotificationType_Join":    1,
		"GuildNotificationType_Dismiss": 2,
	}
)

func (x GuildNotificationType) Enum() *GuildNotificationType {
	p := new(GuildNotificationType)
	*p = x
	return p
}

func (x GuildNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuildNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[57].Descriptor()
}

func (GuildNotificationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[57]
}

func (x GuildNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuildNotificationType.Descriptor instead.
func (GuildNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{57}
}

type GuildRoleType int32

const (
	GuildRoleType_GuildRoleType_Unknown       GuildRoleType = 0
	GuildRoleType_GuildRoleType_Member        GuildRoleType = 1
	GuildRoleType_GuildRoleType_Leader        GuildRoleType = 2
	GuildRoleType_GuildRoleType_JoinRequester GuildRoleType = 999
)

// Enum value maps for GuildRoleType.
var (
	GuildRoleType_name = map[int32]string{
		0:   "GuildRoleType_Unknown",
		1:   "GuildRoleType_Member",
		2:   "GuildRoleType_Leader",
		999: "GuildRoleType_JoinRequester",
	}
	GuildRoleType_value = map[string]int32{
		"GuildRoleType_Unknown":       0,
		"GuildRoleType_Member":        1,
		"GuildRoleType_Leader":        2,
		"GuildRoleType_JoinRequester": 999,
	}
)

func (x GuildRoleType) Enum() *GuildRoleType {
	p := new(GuildRoleType)
	*p = x
	return p
}

func (x GuildRoleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuildRoleType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[58].Descriptor()
}

func (GuildRoleType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[58]
}

func (x GuildRoleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuildRoleType.Descriptor instead.
func (GuildRoleType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{58}
}

type GuildSearchMemberCountRangeType int32

const (
	GuildSearchMemberCountRangeType_GuildSearchMemberCountRangeType_Unknown GuildSearchMemberCountRangeType = 0
	GuildSearchMemberCountRangeType_GuildSearchMemberCountRangeType__1      GuildSearchMemberCountRangeType = 1
	GuildSearchMemberCountRangeType_GuildSearchMemberCountRangeType__2      GuildSearchMemberCountRangeType = 2
	GuildSearchMemberCountRangeType_GuildSearchMemberCountRangeType__3      GuildSearchMemberCountRangeType = 3
)

// Enum value maps for GuildSearchMemberCountRangeType.
var (
	GuildSearchMemberCountRangeType_name = map[int32]string{
		0: "GuildSearchMemberCountRangeType_Unknown",
		1: "GuildSearchMemberCountRangeType__1",
		2: "GuildSearchMemberCountRangeType__2",
		3: "GuildSearchMemberCountRangeType__3",
	}
	GuildSearchMemberCountRangeType_value = map[string]int32{
		"GuildSearchMemberCountRangeType_Unknown": 0,
		"GuildSearchMemberCountRangeType__1":      1,
		"GuildSearchMemberCountRangeType__2":      2,
		"GuildSearchMemberCountRangeType__3":      3,
	}
)

func (x GuildSearchMemberCountRangeType) Enum() *GuildSearchMemberCountRangeType {
	p := new(GuildSearchMemberCountRangeType)
	*p = x
	return p
}

func (x GuildSearchMemberCountRangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuildSearchMemberCountRangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[59].Descriptor()
}

func (GuildSearchMemberCountRangeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[59]
}

func (x GuildSearchMemberCountRangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuildSearchMemberCountRangeType.Descriptor instead.
func (GuildSearchMemberCountRangeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{59}
}

type GvgRaidStageIconSizeType int32

const (
	GvgRaidStageIconSizeType_GvgRaidStageIconSizeType_Unknown GvgRaidStageIconSizeType = 0
	GvgRaidStageIconSizeType_GvgRaidStageIconSizeType_Small   GvgRaidStageIconSizeType = 1
	GvgRaidStageIconSizeType_GvgRaidStageIconSizeType_Medium  GvgRaidStageIconSizeType = 2
	GvgRaidStageIconSizeType_GvgRaidStageIconSizeType_Large   GvgRaidStageIconSizeType = 3
)

// Enum value maps for GvgRaidStageIconSizeType.
var (
	GvgRaidStageIconSizeType_name = map[int32]string{
		0: "GvgRaidStageIconSizeType_Unknown",
		1: "GvgRaidStageIconSizeType_Small",
		2: "GvgRaidStageIconSizeType_Medium",
		3: "GvgRaidStageIconSizeType_Large",
	}
	GvgRaidStageIconSizeType_value = map[string]int32{
		"GvgRaidStageIconSizeType_Unknown": 0,
		"GvgRaidStageIconSizeType_Small":   1,
		"GvgRaidStageIconSizeType_Medium":  2,
		"GvgRaidStageIconSizeType_Large":   3,
	}
)

func (x GvgRaidStageIconSizeType) Enum() *GvgRaidStageIconSizeType {
	p := new(GvgRaidStageIconSizeType)
	*p = x
	return p
}

func (x GvgRaidStageIconSizeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GvgRaidStageIconSizeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[60].Descriptor()
}

func (GvgRaidStageIconSizeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[60]
}

func (x GvgRaidStageIconSizeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GvgRaidStageIconSizeType.Descriptor instead.
func (GvgRaidStageIconSizeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{60}
}

type HomeLocationType int32

const (
	HomeLocationType_HomeLocationType_Unknown HomeLocationType = 0
	HomeLocationType_HomeLocationType_Home    HomeLocationType = 1
	HomeLocationType_HomeLocationType_Idol    HomeLocationType = 2
	HomeLocationType_HomeLocationType_Contest HomeLocationType = 3
	HomeLocationType_HomeLocationType_Story1  HomeLocationType = 4
	HomeLocationType_HomeLocationType_Story2  HomeLocationType = 5
)

// Enum value maps for HomeLocationType.
var (
	HomeLocationType_name = map[int32]string{
		0: "HomeLocationType_Unknown",
		1: "HomeLocationType_Home",
		2: "HomeLocationType_Idol",
		3: "HomeLocationType_Contest",
		4: "HomeLocationType_Story1",
		5: "HomeLocationType_Story2",
	}
	HomeLocationType_value = map[string]int32{
		"HomeLocationType_Unknown": 0,
		"HomeLocationType_Home":    1,
		"HomeLocationType_Idol":    2,
		"HomeLocationType_Contest": 3,
		"HomeLocationType_Story1":  4,
		"HomeLocationType_Story2":  5,
	}
)

func (x HomeLocationType) Enum() *HomeLocationType {
	p := new(HomeLocationType)
	*p = x
	return p
}

func (x HomeLocationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HomeLocationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[61].Descriptor()
}

func (HomeLocationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[61]
}

func (x HomeLocationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HomeLocationType.Descriptor instead.
func (HomeLocationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{61}
}

type HomeMotionType int32

const (
	HomeMotionType_HomeMotionType_Unknown        HomeMotionType = 0
	HomeMotionType_HomeMotionType_Wait1          HomeMotionType = 1
	HomeMotionType_HomeMotionType_Wait2          HomeMotionType = 2
	HomeMotionType_HomeMotionType_Reaction       HomeMotionType = 3
	HomeMotionType_HomeMotionType_ReactionOnce   HomeMotionType = 4
	HomeMotionType_HomeMotionType_WaitLookAround HomeMotionType = 5
	HomeMotionType_HomeMotionType_MultipleTaps   HomeMotionType = 6
	HomeMotionType_HomeMotionType_Transition     HomeMotionType = 7
	HomeMotionType_HomeMotionType_WaitOnce       HomeMotionType = 8
)

// Enum value maps for HomeMotionType.
var (
	HomeMotionType_name = map[int32]string{
		0: "HomeMotionType_Unknown",
		1: "HomeMotionType_Wait1",
		2: "HomeMotionType_Wait2",
		3: "HomeMotionType_Reaction",
		4: "HomeMotionType_ReactionOnce",
		5: "HomeMotionType_WaitLookAround",
		6: "HomeMotionType_MultipleTaps",
		7: "HomeMotionType_Transition",
		8: "HomeMotionType_WaitOnce",
	}
	HomeMotionType_value = map[string]int32{
		"HomeMotionType_Unknown":        0,
		"HomeMotionType_Wait1":          1,
		"HomeMotionType_Wait2":          2,
		"HomeMotionType_Reaction":       3,
		"HomeMotionType_ReactionOnce":   4,
		"HomeMotionType_WaitLookAround": 5,
		"HomeMotionType_MultipleTaps":   6,
		"HomeMotionType_Transition":     7,
		"HomeMotionType_WaitOnce":       8,
	}
)

func (x HomeMotionType) Enum() *HomeMotionType {
	p := new(HomeMotionType)
	*p = x
	return p
}

func (x HomeMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HomeMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[62].Descriptor()
}

func (HomeMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[62]
}

func (x HomeMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HomeMotionType.Descriptor instead.
func (HomeMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{62}
}

type HomeTimeType int32

const (
	HomeTimeType_HomeTimeType_Unknown HomeTimeType = 0
	HomeTimeType_HomeTimeType_Morning HomeTimeType = 1
	HomeTimeType_HomeTimeType_Daytime HomeTimeType = 2
	HomeTimeType_HomeTimeType_Evening HomeTimeType = 3
	HomeTimeType_HomeTimeType_Night   HomeTimeType = 4
)

// Enum value maps for HomeTimeType.
var (
	HomeTimeType_name = map[int32]string{
		0: "HomeTimeType_Unknown",
		1: "HomeTimeType_Morning",
		2: "HomeTimeType_Daytime",
		3: "HomeTimeType_Evening",
		4: "HomeTimeType_Night",
	}
	HomeTimeType_value = map[string]int32{
		"HomeTimeType_Unknown": 0,
		"HomeTimeType_Morning": 1,
		"HomeTimeType_Daytime": 2,
		"HomeTimeType_Evening": 3,
		"HomeTimeType_Night":   4,
	}
)

func (x HomeTimeType) Enum() *HomeTimeType {
	p := new(HomeTimeType)
	*p = x
	return p
}

func (x HomeTimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HomeTimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[63].Descriptor()
}

func (HomeTimeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[63]
}

func (x HomeTimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HomeTimeType.Descriptor instead.
func (HomeTimeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{63}
}

type HomeType int32

const (
	HomeType_HomeType_Unknown HomeType = 0
	HomeType_HomeType_Home    HomeType = 1
	HomeType_HomeType_Idol    HomeType = 2
	HomeType_HomeType_Contest HomeType = 3
	HomeType_HomeType_Story   HomeType = 4
)

// Enum value maps for HomeType.
var (
	HomeType_name = map[int32]string{
		0: "HomeType_Unknown",
		1: "HomeType_Home",
		2: "HomeType_Idol",
		3: "HomeType_Contest",
		4: "HomeType_Story",
	}
	HomeType_value = map[string]int32{
		"HomeType_Unknown": 0,
		"HomeType_Home":    1,
		"HomeType_Idol":    2,
		"HomeType_Contest": 3,
		"HomeType_Story":   4,
	}
)

func (x HomeType) Enum() *HomeType {
	p := new(HomeType)
	*p = x
	return p
}

func (x HomeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HomeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[64].Descriptor()
}

func (HomeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[64]
}

func (x HomeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HomeType.Descriptor instead.
func (HomeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{64}
}

type IdolCardDifficultyType int32

const (
	IdolCardDifficultyType_IdolCardDifficultyType_Unknown IdolCardDifficultyType = 0
	IdolCardDifficultyType_IdolCardDifficultyType_Low     IdolCardDifficultyType = 1
	IdolCardDifficultyType_IdolCardDifficultyType_Middle  IdolCardDifficultyType = 2
	IdolCardDifficultyType_IdolCardDifficultyType_High    IdolCardDifficultyType = 3
)

// Enum value maps for IdolCardDifficultyType.
var (
	IdolCardDifficultyType_name = map[int32]string{
		0: "IdolCardDifficultyType_Unknown",
		1: "IdolCardDifficultyType_Low",
		2: "IdolCardDifficultyType_Middle",
		3: "IdolCardDifficultyType_High",
	}
	IdolCardDifficultyType_value = map[string]int32{
		"IdolCardDifficultyType_Unknown": 0,
		"IdolCardDifficultyType_Low":     1,
		"IdolCardDifficultyType_Middle":  2,
		"IdolCardDifficultyType_High":    3,
	}
)

func (x IdolCardDifficultyType) Enum() *IdolCardDifficultyType {
	p := new(IdolCardDifficultyType)
	*p = x
	return p
}

func (x IdolCardDifficultyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdolCardDifficultyType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[65].Descriptor()
}

func (IdolCardDifficultyType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[65]
}

func (x IdolCardDifficultyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdolCardDifficultyType.Descriptor instead.
func (IdolCardDifficultyType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{65}
}

type IdolCardLevelLimitEffectType int32

const (
	IdolCardLevelLimitEffectType_IdolCardLevelLimitEffectType_Unknown            IdolCardLevelLimitEffectType = 0
	IdolCardLevelLimitEffectType_IdolCardLevelLimitEffectType_ProduceCardUpgrade IdolCardLevelLimitEffectType = 1
	IdolCardLevelLimitEffectType_IdolCardLevelLimitEffectType_ProduceVoDaVi      IdolCardLevelLimitEffectType = 2
	IdolCardLevelLimitEffectType_IdolCardLevelLimitEffectType_ProduceStamina     IdolCardLevelLimitEffectType = 3
	IdolCardLevelLimitEffectType_IdolCardLevelLimitEffectType_ProduceSkill       IdolCardLevelLimitEffectType = 4
)

// Enum value maps for IdolCardLevelLimitEffectType.
var (
	IdolCardLevelLimitEffectType_name = map[int32]string{
		0: "IdolCardLevelLimitEffectType_Unknown",
		1: "IdolCardLevelLimitEffectType_ProduceCardUpgrade",
		2: "IdolCardLevelLimitEffectType_ProduceVoDaVi",
		3: "IdolCardLevelLimitEffectType_ProduceStamina",
		4: "IdolCardLevelLimitEffectType_ProduceSkill",
	}
	IdolCardLevelLimitEffectType_value = map[string]int32{
		"IdolCardLevelLimitEffectType_Unknown":            0,
		"IdolCardLevelLimitEffectType_ProduceCardUpgrade": 1,
		"IdolCardLevelLimitEffectType_ProduceVoDaVi":      2,
		"IdolCardLevelLimitEffectType_ProduceStamina":     3,
		"IdolCardLevelLimitEffectType_ProduceSkill":       4,
	}
)

func (x IdolCardLevelLimitEffectType) Enum() *IdolCardLevelLimitEffectType {
	p := new(IdolCardLevelLimitEffectType)
	*p = x
	return p
}

func (x IdolCardLevelLimitEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdolCardLevelLimitEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[66].Descriptor()
}

func (IdolCardLevelLimitEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[66]
}

func (x IdolCardLevelLimitEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdolCardLevelLimitEffectType.Descriptor instead.
func (IdolCardLevelLimitEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{66}
}

type IdolCardLevelLimitRank int32

const (
	IdolCardLevelLimitRank_IdolCardLevelLimitRank_Unknown IdolCardLevelLimitRank = 0
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__1      IdolCardLevelLimitRank = 1
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__2      IdolCardLevelLimitRank = 2
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__3      IdolCardLevelLimitRank = 3
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__4      IdolCardLevelLimitRank = 4
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__5      IdolCardLevelLimitRank = 5
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__6      IdolCardLevelLimitRank = 6
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__7      IdolCardLevelLimitRank = 7
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__8      IdolCardLevelLimitRank = 8
	IdolCardLevelLimitRank_IdolCardLevelLimitRank__9      IdolCardLevelLimitRank = 9
)

// Enum value maps for IdolCardLevelLimitRank.
var (
	IdolCardLevelLimitRank_name = map[int32]string{
		0: "IdolCardLevelLimitRank_Unknown",
		1: "IdolCardLevelLimitRank__1",
		2: "IdolCardLevelLimitRank__2",
		3: "IdolCardLevelLimitRank__3",
		4: "IdolCardLevelLimitRank__4",
		5: "IdolCardLevelLimitRank__5",
		6: "IdolCardLevelLimitRank__6",
		7: "IdolCardLevelLimitRank__7",
		8: "IdolCardLevelLimitRank__8",
		9: "IdolCardLevelLimitRank__9",
	}
	IdolCardLevelLimitRank_value = map[string]int32{
		"IdolCardLevelLimitRank_Unknown": 0,
		"IdolCardLevelLimitRank__1":      1,
		"IdolCardLevelLimitRank__2":      2,
		"IdolCardLevelLimitRank__3":      3,
		"IdolCardLevelLimitRank__4":      4,
		"IdolCardLevelLimitRank__5":      5,
		"IdolCardLevelLimitRank__6":      6,
		"IdolCardLevelLimitRank__7":      7,
		"IdolCardLevelLimitRank__8":      8,
		"IdolCardLevelLimitRank__9":      9,
	}
)

func (x IdolCardLevelLimitRank) Enum() *IdolCardLevelLimitRank {
	p := new(IdolCardLevelLimitRank)
	*p = x
	return p
}

func (x IdolCardLevelLimitRank) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdolCardLevelLimitRank) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[67].Descriptor()
}

func (IdolCardLevelLimitRank) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[67]
}

func (x IdolCardLevelLimitRank) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdolCardLevelLimitRank.Descriptor instead.
func (IdolCardLevelLimitRank) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{67}
}

type IdolCardPotentialEffectType int32

const (
	IdolCardPotentialEffectType_IdolCardPotentialEffectType_Unknown                       IdolCardPotentialEffectType = 0
	IdolCardPotentialEffectType_IdolCardPotentialEffectType_ProduceVoDaViGrowthRatePermil IdolCardPotentialEffectType = 1
	IdolCardPotentialEffectType_IdolCardPotentialEffectType_ProduceStamina                IdolCardPotentialEffectType = 2
	IdolCardPotentialEffectType_IdolCardPotentialEffectType_InitialProduceItemChange      IdolCardPotentialEffectType = 3
	IdolCardPotentialEffectType_IdolCardPotentialEffectType_ProduceSkill                  IdolCardPotentialEffectType = 4
)

// Enum value maps for IdolCardPotentialEffectType.
var (
	IdolCardPotentialEffectType_name = map[int32]string{
		0: "IdolCardPotentialEffectType_Unknown",
		1: "IdolCardPotentialEffectType_ProduceVoDaViGrowthRatePermil",
		2: "IdolCardPotentialEffectType_ProduceStamina",
		3: "IdolCardPotentialEffectType_InitialProduceItemChange",
		4: "IdolCardPotentialEffectType_ProduceSkill",
	}
	IdolCardPotentialEffectType_value = map[string]int32{
		"IdolCardPotentialEffectType_Unknown":                       0,
		"IdolCardPotentialEffectType_ProduceVoDaViGrowthRatePermil": 1,
		"IdolCardPotentialEffectType_ProduceStamina":                2,
		"IdolCardPotentialEffectType_InitialProduceItemChange":      3,
		"IdolCardPotentialEffectType_ProduceSkill":                  4,
	}
)

func (x IdolCardPotentialEffectType) Enum() *IdolCardPotentialEffectType {
	p := new(IdolCardPotentialEffectType)
	*p = x
	return p
}

func (x IdolCardPotentialEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdolCardPotentialEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[68].Descriptor()
}

func (IdolCardPotentialEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[68]
}

func (x IdolCardPotentialEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdolCardPotentialEffectType.Descriptor instead.
func (IdolCardPotentialEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{68}
}

type IdolCardPotentialRank int32

const (
	IdolCardPotentialRank_IdolCardPotentialRank_Unknown IdolCardPotentialRank = 0
	IdolCardPotentialRank_IdolCardPotentialRank__1      IdolCardPotentialRank = 1
	IdolCardPotentialRank_IdolCardPotentialRank__2      IdolCardPotentialRank = 2
	IdolCardPotentialRank_IdolCardPotentialRank__3      IdolCardPotentialRank = 3
	IdolCardPotentialRank_IdolCardPotentialRank__4      IdolCardPotentialRank = 4
)

// Enum value maps for IdolCardPotentialRank.
var (
	IdolCardPotentialRank_name = map[int32]string{
		0: "IdolCardPotentialRank_Unknown",
		1: "IdolCardPotentialRank__1",
		2: "IdolCardPotentialRank__2",
		3: "IdolCardPotentialRank__3",
		4: "IdolCardPotentialRank__4",
	}
	IdolCardPotentialRank_value = map[string]int32{
		"IdolCardPotentialRank_Unknown": 0,
		"IdolCardPotentialRank__1":      1,
		"IdolCardPotentialRank__2":      2,
		"IdolCardPotentialRank__3":      3,
		"IdolCardPotentialRank__4":      4,
	}
)

func (x IdolCardPotentialRank) Enum() *IdolCardPotentialRank {
	p := new(IdolCardPotentialRank)
	*p = x
	return p
}

func (x IdolCardPotentialRank) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdolCardPotentialRank) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[69].Descriptor()
}

func (IdolCardPotentialRank) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[69]
}

func (x IdolCardPotentialRank) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdolCardPotentialRank.Descriptor instead.
func (IdolCardPotentialRank) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{69}
}

type IdolCardRarity int32

const (
	IdolCardRarity_IdolCardRarity_Unknown IdolCardRarity = 0
	IdolCardRarity_IdolCardRarity_R       IdolCardRarity = 1
	IdolCardRarity_IdolCardRarity_Sr      IdolCardRarity = 2
	IdolCardRarity_IdolCardRarity_Ssr     IdolCardRarity = 3
)

// Enum value maps for IdolCardRarity.
var (
	IdolCardRarity_name = map[int32]string{
		0: "IdolCardRarity_Unknown",
		1: "IdolCardRarity_R",
		2: "IdolCardRarity_Sr",
		3: "IdolCardRarity_Ssr",
	}
	IdolCardRarity_value = map[string]int32{
		"IdolCardRarity_Unknown": 0,
		"IdolCardRarity_R":       1,
		"IdolCardRarity_Sr":      2,
		"IdolCardRarity_Ssr":     3,
	}
)

func (x IdolCardRarity) Enum() *IdolCardRarity {
	p := new(IdolCardRarity)
	*p = x
	return p
}

func (x IdolCardRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdolCardRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[70].Descriptor()
}

func (IdolCardRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[70]
}

func (x IdolCardRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdolCardRarity.Descriptor instead.
func (IdolCardRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{70}
}

type IdolSkillPossessionType int32

const (
	IdolSkillPossessionType_IdolSkillPossessionType_Unknown    IdolSkillPossessionType = 0
	IdolSkillPossessionType_IdolSkillPossessionType_IdolSkill1 IdolSkillPossessionType = 1
	IdolSkillPossessionType_IdolSkillPossessionType_IdolSkill2 IdolSkillPossessionType = 2
	IdolSkillPossessionType_IdolSkillPossessionType_IdolSkill3 IdolSkillPossessionType = 3
)

// Enum value maps for IdolSkillPossessionType.
var (
	IdolSkillPossessionType_name = map[int32]string{
		0: "IdolSkillPossessionType_Unknown",
		1: "IdolSkillPossessionType_IdolSkill1",
		2: "IdolSkillPossessionType_IdolSkill2",
		3: "IdolSkillPossessionType_IdolSkill3",
	}
	IdolSkillPossessionType_value = map[string]int32{
		"IdolSkillPossessionType_Unknown":    0,
		"IdolSkillPossessionType_IdolSkill1": 1,
		"IdolSkillPossessionType_IdolSkill2": 2,
		"IdolSkillPossessionType_IdolSkill3": 3,
	}
)

func (x IdolSkillPossessionType) Enum() *IdolSkillPossessionType {
	p := new(IdolSkillPossessionType)
	*p = x
	return p
}

func (x IdolSkillPossessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdolSkillPossessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[71].Descriptor()
}

func (IdolSkillPossessionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[71]
}

func (x IdolSkillPossessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdolSkillPossessionType.Descriptor instead.
func (IdolSkillPossessionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{71}
}

type ItemRarity int32

const (
	ItemRarity_ItemRarity_Unknown ItemRarity = 0
	ItemRarity_ItemRarity_N       ItemRarity = 1
	ItemRarity_ItemRarity_R       ItemRarity = 2
	ItemRarity_ItemRarity_Sr      ItemRarity = 3
	ItemRarity_ItemRarity_Ssr     ItemRarity = 4
)

// Enum value maps for ItemRarity.
var (
	ItemRarity_name = map[int32]string{
		0: "ItemRarity_Unknown",
		1: "ItemRarity_N",
		2: "ItemRarity_R",
		3: "ItemRarity_Sr",
		4: "ItemRarity_Ssr",
	}
	ItemRarity_value = map[string]int32{
		"ItemRarity_Unknown": 0,
		"ItemRarity_N":       1,
		"ItemRarity_R":       2,
		"ItemRarity_Sr":      3,
		"ItemRarity_Ssr":     4,
	}
)

func (x ItemRarity) Enum() *ItemRarity {
	p := new(ItemRarity)
	*p = x
	return p
}

func (x ItemRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[72].Descriptor()
}

func (ItemRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[72]
}

func (x ItemRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemRarity.Descriptor instead.
func (ItemRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{72}
}

type ItemType int32

const (
	ItemType_ItemType_Unknown                                      ItemType = 0
	ItemType_ItemType_Money                                        ItemType = 1
	ItemType_ItemType_ProduceContinue                              ItemType = 2
	ItemType_ItemType_SupportCardEnhancePoint                      ItemType = 3
	ItemType_ItemType_ActionPointRecovery                          ItemType = 4
	ItemType_ItemType_IdolCardLevelLimitMaterial                   ItemType = 5
	ItemType_ItemType_ProduceRerollMemory                          ItemType = 6
	ItemType_ItemType_GashaTicket                                  ItemType = 7
	ItemType_ItemType_Coin                                         ItemType = 8
	ItemType_ItemType_ExchangeMaterial                             ItemType = 9
	ItemType_ItemType_Medal                                        ItemType = 10
	ItemType_ItemType_IdolCardPiece                                ItemType = 11
	ItemType_ItemType_FriendCoin                                   ItemType = 12
	ItemType_ItemType_PvpRateCoin                                  ItemType = 13
	ItemType_ItemType_StoryUnlockKey                               ItemType = 14
	ItemType_ItemType_ExchangeTicket                               ItemType = 15
	ItemType_ItemType_ProduceLiveUnlockItem                        ItemType = 16
	ItemType_ItemType_IdolCardPotentialRankUpgrade                 ItemType = 17
	ItemType_ItemType_SupportCardLevelLimitRankUpgrade             ItemType = 18
	ItemType_ItemType_MemoryInherit                                ItemType = 19
	ItemType_ItemType_DearnessStoryUnlock                          ItemType = 20
	ItemType_ItemType_ProduceBoostRewardSupportCardEnhancePoint    ItemType = 102
	ItemType_ItemType_ProduceBoostRewardIdolCardLevelLimitMaterial ItemType = 103
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0:   "ItemType_Unknown",
		1:   "ItemType_Money",
		2:   "ItemType_ProduceContinue",
		3:   "ItemType_SupportCardEnhancePoint",
		4:   "ItemType_ActionPointRecovery",
		5:   "ItemType_IdolCardLevelLimitMaterial",
		6:   "ItemType_ProduceRerollMemory",
		7:   "ItemType_GashaTicket",
		8:   "ItemType_Coin",
		9:   "ItemType_ExchangeMaterial",
		10:  "ItemType_Medal",
		11:  "ItemType_IdolCardPiece",
		12:  "ItemType_FriendCoin",
		13:  "ItemType_PvpRateCoin",
		14:  "ItemType_StoryUnlockKey",
		15:  "ItemType_ExchangeTicket",
		16:  "ItemType_ProduceLiveUnlockItem",
		17:  "ItemType_IdolCardPotentialRankUpgrade",
		18:  "ItemType_SupportCardLevelLimitRankUpgrade",
		19:  "ItemType_MemoryInherit",
		20:  "ItemType_DearnessStoryUnlock",
		102: "ItemType_ProduceBoostRewardSupportCardEnhancePoint",
		103: "ItemType_ProduceBoostRewardIdolCardLevelLimitMaterial",
	}
	ItemType_value = map[string]int32{
		"ItemType_Unknown":                                      0,
		"ItemType_Money":                                        1,
		"ItemType_ProduceContinue":                              2,
		"ItemType_SupportCardEnhancePoint":                      3,
		"ItemType_ActionPointRecovery":                          4,
		"ItemType_IdolCardLevelLimitMaterial":                   5,
		"ItemType_ProduceRerollMemory":                          6,
		"ItemType_GashaTicket":                                  7,
		"ItemType_Coin":                                         8,
		"ItemType_ExchangeMaterial":                             9,
		"ItemType_Medal":                                        10,
		"ItemType_IdolCardPiece":                                11,
		"ItemType_FriendCoin":                                   12,
		"ItemType_PvpRateCoin":                                  13,
		"ItemType_StoryUnlockKey":                               14,
		"ItemType_ExchangeTicket":                               15,
		"ItemType_ProduceLiveUnlockItem":                        16,
		"ItemType_IdolCardPotentialRankUpgrade":                 17,
		"ItemType_SupportCardLevelLimitRankUpgrade":             18,
		"ItemType_MemoryInherit":                                19,
		"ItemType_DearnessStoryUnlock":                          20,
		"ItemType_ProduceBoostRewardSupportCardEnhancePoint":    102,
		"ItemType_ProduceBoostRewardIdolCardLevelLimitMaterial": 103,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[73].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[73]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{73}
}

type LangType int32

const (
	LangType_LangType_Unknown LangType = 0
	LangType_LangType_Ja      LangType = 1
	LangType_LangType_Ko      LangType = 2
	LangType_LangType_ZhTw    LangType = 3
)

// Enum value maps for LangType.
var (
	LangType_name = map[int32]string{
		0: "LangType_Unknown",
		1: "LangType_Ja",
		2: "LangType_Ko",
		3: "LangType_ZhTw",
	}
	LangType_value = map[string]int32{
		"LangType_Unknown": 0,
		"LangType_Ja":      1,
		"LangType_Ko":      2,
		"LangType_ZhTw":    3,
	}
)

func (x LangType) Enum() *LangType {
	p := new(LangType)
	*p = x
	return p
}

func (x LangType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LangType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[74].Descriptor()
}

func (LangType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[74]
}

func (x LangType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LangType.Descriptor instead.
func (LangType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{74}
}

type LinkType int32

const (
	LinkType_LinkType_Unknown             LinkType = 0
	LinkType_LinkType_Story               LinkType = 1
	LinkType_LinkType_Notice              LinkType = 2
	LinkType_LinkType_Seminar             LinkType = 3
	LinkType_LinkType_Produce             LinkType = 4
	LinkType_LinkType_Memory              LinkType = 5
	LinkType_LinkType_CoinGasha           LinkType = 7
	LinkType_LinkType_TicketExchange      LinkType = 9
	LinkType_LinkType_MissionPass         LinkType = 10
	LinkType_LinkType_MissionGroup        LinkType = 11
	LinkType_LinkType_MissionDailyRelease LinkType = 12
	LinkType_LinkType_MissionPanel        LinkType = 13
	LinkType_LinkType_Music               LinkType = 14
	LinkType_LinkType_Guild               LinkType = 15
	LinkType_LinkType_Friend              LinkType = 16
	LinkType_LinkType_MediaMovie          LinkType = 17
	LinkType_LinkType_MediaComic          LinkType = 18
	LinkType_LinkType_Invitation          LinkType = 19
	LinkType_LinkType_PvpRate             LinkType = 20
	LinkType_LinkType_Meishi              LinkType = 21
	LinkType_LinkType_StoryEvent          LinkType = 22
	LinkType_LinkType_ProduceHighScore    LinkType = 23
	LinkType_LinkType_Tower               LinkType = 24
	LinkType_LinkType_Gasha               LinkType = 25
	LinkType_LinkType_ShopJewel           LinkType = 26
	LinkType_LinkType_ShopPass            LinkType = 27
	LinkType_LinkType_ShopPack            LinkType = 28
	LinkType_LinkType_ExchangeDaily       LinkType = 29
	LinkType_LinkType_ExchangeItem        LinkType = 30
	LinkType_LinkType_ExchangeEvent       LinkType = 31
	LinkType_LinkType_MediaFourPanelComic LinkType = 32
	LinkType_LinkType_PhotoTop            LinkType = 33
	LinkType_LinkType_PhotoIdol           LinkType = 34
	LinkType_LinkType_GvgRaid             LinkType = 35
	LinkType_LinkType_ShopCostume         LinkType = 36
	LinkType_LinkType_PhotoLiveSelect     LinkType = 37
	LinkType_LinkType_Tour                LinkType = 38
)

// Enum value maps for LinkType.
var (
	LinkType_name = map[int32]string{
		0:  "LinkType_Unknown",
		1:  "LinkType_Story",
		2:  "LinkType_Notice",
		3:  "LinkType_Seminar",
		4:  "LinkType_Produce",
		5:  "LinkType_Memory",
		7:  "LinkType_CoinGasha",
		9:  "LinkType_TicketExchange",
		10: "LinkType_MissionPass",
		11: "LinkType_MissionGroup",
		12: "LinkType_MissionDailyRelease",
		13: "LinkType_MissionPanel",
		14: "LinkType_Music",
		15: "LinkType_Guild",
		16: "LinkType_Friend",
		17: "LinkType_MediaMovie",
		18: "LinkType_MediaComic",
		19: "LinkType_Invitation",
		20: "LinkType_PvpRate",
		21: "LinkType_Meishi",
		22: "LinkType_StoryEvent",
		23: "LinkType_ProduceHighScore",
		24: "LinkType_Tower",
		25: "LinkType_Gasha",
		26: "LinkType_ShopJewel",
		27: "LinkType_ShopPass",
		28: "LinkType_ShopPack",
		29: "LinkType_ExchangeDaily",
		30: "LinkType_ExchangeItem",
		31: "LinkType_ExchangeEvent",
		32: "LinkType_MediaFourPanelComic",
		33: "LinkType_PhotoTop",
		34: "LinkType_PhotoIdol",
		35: "LinkType_GvgRaid",
		36: "LinkType_ShopCostume",
		37: "LinkType_PhotoLiveSelect",
		38: "LinkType_Tour",
	}
	LinkType_value = map[string]int32{
		"LinkType_Unknown":             0,
		"LinkType_Story":               1,
		"LinkType_Notice":              2,
		"LinkType_Seminar":             3,
		"LinkType_Produce":             4,
		"LinkType_Memory":              5,
		"LinkType_CoinGasha":           7,
		"LinkType_TicketExchange":      9,
		"LinkType_MissionPass":         10,
		"LinkType_MissionGroup":        11,
		"LinkType_MissionDailyRelease": 12,
		"LinkType_MissionPanel":        13,
		"LinkType_Music":               14,
		"LinkType_Guild":               15,
		"LinkType_Friend":              16,
		"LinkType_MediaMovie":          17,
		"LinkType_MediaComic":          18,
		"LinkType_Invitation":          19,
		"LinkType_PvpRate":             20,
		"LinkType_Meishi":              21,
		"LinkType_StoryEvent":          22,
		"LinkType_ProduceHighScore":    23,
		"LinkType_Tower":               24,
		"LinkType_Gasha":               25,
		"LinkType_ShopJewel":           26,
		"LinkType_ShopPass":            27,
		"LinkType_ShopPack":            28,
		"LinkType_ExchangeDaily":       29,
		"LinkType_ExchangeItem":        30,
		"LinkType_ExchangeEvent":       31,
		"LinkType_MediaFourPanelComic": 32,
		"LinkType_PhotoTop":            33,
		"LinkType_PhotoIdol":           34,
		"LinkType_GvgRaid":             35,
		"LinkType_ShopCostume":         36,
		"LinkType_PhotoLiveSelect":     37,
		"LinkType_Tour":                38,
	}
)

func (x LinkType) Enum() *LinkType {
	p := new(LinkType)
	*p = x
	return p
}

func (x LinkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[75].Descriptor()
}

func (LinkType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[75]
}

func (x LinkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkType.Descriptor instead.
func (LinkType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{75}
}

type LoginBonusType int32

const (
	LoginBonusType_LoginBonusType_Unknown LoginBonusType = 0
	LoginBonusType_LoginBonusType_Normal  LoginBonusType = 1
	LoginBonusType_LoginBonusType_Event3D LoginBonusType = 2
	LoginBonusType_LoginBonusType_Event2D LoginBonusType = 3
)

// Enum value maps for LoginBonusType.
var (
	LoginBonusType_name = map[int32]string{
		0: "LoginBonusType_Unknown",
		1: "LoginBonusType_Normal",
		2: "LoginBonusType_Event3D",
		3: "LoginBonusType_Event2D",
	}
	LoginBonusType_value = map[string]int32{
		"LoginBonusType_Unknown": 0,
		"LoginBonusType_Normal":  1,
		"LoginBonusType_Event3D": 2,
		"LoginBonusType_Event2D": 3,
	}
)

func (x LoginBonusType) Enum() *LoginBonusType {
	p := new(LoginBonusType)
	*p = x
	return p
}

func (x LoginBonusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginBonusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[76].Descriptor()
}

func (LoginBonusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[76]
}

func (x LoginBonusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginBonusType.Descriptor instead.
func (LoginBonusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{76}
}

type MainTaskType int32

const (
	MainTaskType_MainTaskType_Unknown   MainTaskType = 0
	MainTaskType_MainTaskType_MainStory MainTaskType = 1
	MainTaskType_MainTaskType_Producer  MainTaskType = 2
	MainTaskType_MainTaskType_Producer2 MainTaskType = 3
	MainTaskType_MainTaskType_Producer3 MainTaskType = 4
	MainTaskType_MainTaskType_Producer4 MainTaskType = 5
)

// Enum value maps for MainTaskType.
var (
	MainTaskType_name = map[int32]string{
		0: "MainTaskType_Unknown",
		1: "MainTaskType_MainStory",
		2: "MainTaskType_Producer",
		3: "MainTaskType_Producer2",
		4: "MainTaskType_Producer3",
		5: "MainTaskType_Producer4",
	}
	MainTaskType_value = map[string]int32{
		"MainTaskType_Unknown":   0,
		"MainTaskType_MainStory": 1,
		"MainTaskType_Producer":  2,
		"MainTaskType_Producer2": 3,
		"MainTaskType_Producer3": 4,
		"MainTaskType_Producer4": 5,
	}
)

func (x MainTaskType) Enum() *MainTaskType {
	p := new(MainTaskType)
	*p = x
	return p
}

func (x MainTaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MainTaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[77].Descriptor()
}

func (MainTaskType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[77]
}

func (x MainTaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MainTaskType.Descriptor instead.
func (MainTaskType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{77}
}

type MediaType int32

const (
	MediaType_MediaType_Unknown             MediaType = 0
	MediaType_MediaType_Movie               MediaType = 1
	MediaType_MediaType_Comic               MediaType = 2
	MediaType_MediaType_Other               MediaType = 3
	MediaType_MediaType_FourPanelComic      MediaType = 4
	MediaType_MediaType_FourPanelComicOther MediaType = 5
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MediaType_Unknown",
		1: "MediaType_Movie",
		2: "MediaType_Comic",
		3: "MediaType_Other",
		4: "MediaType_FourPanelComic",
		5: "MediaType_FourPanelComicOther",
	}
	MediaType_value = map[string]int32{
		"MediaType_Unknown":             0,
		"MediaType_Movie":               1,
		"MediaType_Comic":               2,
		"MediaType_Other":               3,
		"MediaType_FourPanelComic":      4,
		"MediaType_FourPanelComicOther": 5,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[78].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[78]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{78}
}

type MeishiBaseAssetType int32

const (
	MeishiBaseAssetType_MeishiBaseAssetType_Unknown          MeishiBaseAssetType = 0
	MeishiBaseAssetType_MeishiBaseAssetType_StoryBackground  MeishiBaseAssetType = 1
	MeishiBaseAssetType_MeishiBaseAssetType_CommonBackground MeishiBaseAssetType = 2
	MeishiBaseAssetType_MeishiBaseAssetType_Frame            MeishiBaseAssetType = 3
	MeishiBaseAssetType_MeishiBaseAssetType_Other            MeishiBaseAssetType = 99
)

// Enum value maps for MeishiBaseAssetType.
var (
	MeishiBaseAssetType_name = map[int32]string{
		0:  "MeishiBaseAssetType_Unknown",
		1:  "MeishiBaseAssetType_StoryBackground",
		2:  "MeishiBaseAssetType_CommonBackground",
		3:  "MeishiBaseAssetType_Frame",
		99: "MeishiBaseAssetType_Other",
	}
	MeishiBaseAssetType_value = map[string]int32{
		"MeishiBaseAssetType_Unknown":          0,
		"MeishiBaseAssetType_StoryBackground":  1,
		"MeishiBaseAssetType_CommonBackground": 2,
		"MeishiBaseAssetType_Frame":            3,
		"MeishiBaseAssetType_Other":            99,
	}
)

func (x MeishiBaseAssetType) Enum() *MeishiBaseAssetType {
	p := new(MeishiBaseAssetType)
	*p = x
	return p
}

func (x MeishiBaseAssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeishiBaseAssetType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[79].Descriptor()
}

func (MeishiBaseAssetType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[79]
}

func (x MeishiBaseAssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeishiBaseAssetType.Descriptor instead.
func (MeishiBaseAssetType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{79}
}

type MeishiIllustrationType int32

const (
	MeishiIllustrationType_MeishiIllustrationType_Unknown     MeishiIllustrationType = 0
	MeishiIllustrationType_MeishiIllustrationType_Idol        MeishiIllustrationType = 1
	MeishiIllustrationType_MeishiIllustrationType_Sdcharacter MeishiIllustrationType = 2
	MeishiIllustrationType_MeishiIllustrationType_IdolSign    MeishiIllustrationType = 3
	MeishiIllustrationType_MeishiIllustrationType_Logo        MeishiIllustrationType = 4
	MeishiIllustrationType_MeishiIllustrationType_PictoIcon   MeishiIllustrationType = 5
	MeishiIllustrationType_MeishiIllustrationType_Other       MeishiIllustrationType = 99
)

// Enum value maps for MeishiIllustrationType.
var (
	MeishiIllustrationType_name = map[int32]string{
		0:  "MeishiIllustrationType_Unknown",
		1:  "MeishiIllustrationType_Idol",
		2:  "MeishiIllustrationType_Sdcharacter",
		3:  "MeishiIllustrationType_IdolSign",
		4:  "MeishiIllustrationType_Logo",
		5:  "MeishiIllustrationType_PictoIcon",
		99: "MeishiIllustrationType_Other",
	}
	MeishiIllustrationType_value = map[string]int32{
		"MeishiIllustrationType_Unknown":     0,
		"MeishiIllustrationType_Idol":        1,
		"MeishiIllustrationType_Sdcharacter": 2,
		"MeishiIllustrationType_IdolSign":    3,
		"MeishiIllustrationType_Logo":        4,
		"MeishiIllustrationType_PictoIcon":   5,
		"MeishiIllustrationType_Other":       99,
	}
)

func (x MeishiIllustrationType) Enum() *MeishiIllustrationType {
	p := new(MeishiIllustrationType)
	*p = x
	return p
}

func (x MeishiIllustrationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeishiIllustrationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[80].Descriptor()
}

func (MeishiIllustrationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[80]
}

func (x MeishiIllustrationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeishiIllustrationType.Descriptor instead.
func (MeishiIllustrationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{80}
}

type MeishiObjectType int32

const (
	MeishiObjectType_MeishiObjectType_Unknown       MeishiObjectType = 0
	MeishiObjectType_MeishiObjectType_UserName      MeishiObjectType = 1
	MeishiObjectType_MeishiObjectType_Achievement   MeishiObjectType = 2
	MeishiObjectType_MeishiObjectType_Illustration  MeishiObjectType = 3
	MeishiObjectType_MeishiObjectType_PublicUserId  MeishiObjectType = 4
	MeishiObjectType_MeishiObjectType_ProducerLevel MeishiObjectType = 5
	MeishiObjectType_MeishiObjectType_Comment       MeishiObjectType = 6
	MeishiObjectType_MeishiObjectType_TotalFanCount MeishiObjectType = 7
	MeishiObjectType_MeishiObjectType_PvpRateGrade  MeishiObjectType = 8
	MeishiObjectType_MeishiObjectType_IdolCardSkin  MeishiObjectType = 9
	MeishiObjectType_MeishiObjectType_SupportCard   MeishiObjectType = 10
	MeishiObjectType_MeishiObjectType_ProduceCard   MeishiObjectType = 11
	MeishiObjectType_MeishiObjectType_ProduceItem   MeishiObjectType = 12
	MeishiObjectType_MeishiObjectType_ProduceDrink  MeishiObjectType = 13
	MeishiObjectType_MeishiObjectType_Photo         MeishiObjectType = 14
	MeishiObjectType_MeishiObjectType_Memory        MeishiObjectType = 15
	MeishiObjectType_MeishiObjectType_Movie         MeishiObjectType = 16
	MeishiObjectType_MeishiObjectType_BaseAsset     MeishiObjectType = 17
	MeishiObjectType_MeishiObjectType_Other         MeishiObjectType = 999
)

// Enum value maps for MeishiObjectType.
var (
	MeishiObjectType_name = map[int32]string{
		0:   "MeishiObjectType_Unknown",
		1:   "MeishiObjectType_UserName",
		2:   "MeishiObjectType_Achievement",
		3:   "MeishiObjectType_Illustration",
		4:   "MeishiObjectType_PublicUserId",
		5:   "MeishiObjectType_ProducerLevel",
		6:   "MeishiObjectType_Comment",
		7:   "MeishiObjectType_TotalFanCount",
		8:   "MeishiObjectType_PvpRateGrade",
		9:   "MeishiObjectType_IdolCardSkin",
		10:  "MeishiObjectType_SupportCard",
		11:  "MeishiObjectType_ProduceCard",
		12:  "MeishiObjectType_ProduceItem",
		13:  "MeishiObjectType_ProduceDrink",
		14:  "MeishiObjectType_Photo",
		15:  "MeishiObjectType_Memory",
		16:  "MeishiObjectType_Movie",
		17:  "MeishiObjectType_BaseAsset",
		999: "MeishiObjectType_Other",
	}
	MeishiObjectType_value = map[string]int32{
		"MeishiObjectType_Unknown":       0,
		"MeishiObjectType_UserName":      1,
		"MeishiObjectType_Achievement":   2,
		"MeishiObjectType_Illustration":  3,
		"MeishiObjectType_PublicUserId":  4,
		"MeishiObjectType_ProducerLevel": 5,
		"MeishiObjectType_Comment":       6,
		"MeishiObjectType_TotalFanCount": 7,
		"MeishiObjectType_PvpRateGrade":  8,
		"MeishiObjectType_IdolCardSkin":  9,
		"MeishiObjectType_SupportCard":   10,
		"MeishiObjectType_ProduceCard":   11,
		"MeishiObjectType_ProduceItem":   12,
		"MeishiObjectType_ProduceDrink":  13,
		"MeishiObjectType_Photo":         14,
		"MeishiObjectType_Memory":        15,
		"MeishiObjectType_Movie":         16,
		"MeishiObjectType_BaseAsset":     17,
		"MeishiObjectType_Other":         999,
	}
)

func (x MeishiObjectType) Enum() *MeishiObjectType {
	p := new(MeishiObjectType)
	*p = x
	return p
}

func (x MeishiObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeishiObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[81].Descriptor()
}

func (MeishiObjectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[81]
}

func (x MeishiObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeishiObjectType.Descriptor instead.
func (MeishiObjectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{81}
}

type MissionCategory int32

const (
	MissionCategory_MissionCategory_Unknown     MissionCategory = 0
	MissionCategory_MissionCategory_MainTask    MissionCategory = 1
	MissionCategory_MissionCategory_Daily       MissionCategory = 2
	MissionCategory_MissionCategory_Weekly      MissionCategory = 3
	MissionCategory_MissionCategory_Normal      MissionCategory = 4
	MissionCategory_MissionCategory_Special     MissionCategory = 5
	MissionCategory_MissionCategory_Event       MissionCategory = 6
	MissionCategory_MissionCategory_Achievement MissionCategory = 7
)

// Enum value maps for MissionCategory.
var (
	MissionCategory_name = map[int32]string{
		0: "MissionCategory_Unknown",
		1: "MissionCategory_MainTask",
		2: "MissionCategory_Daily",
		3: "MissionCategory_Weekly",
		4: "MissionCategory_Normal",
		5: "MissionCategory_Special",
		6: "MissionCategory_Event",
		7: "MissionCategory_Achievement",
	}
	MissionCategory_value = map[string]int32{
		"MissionCategory_Unknown":     0,
		"MissionCategory_MainTask":    1,
		"MissionCategory_Daily":       2,
		"MissionCategory_Weekly":      3,
		"MissionCategory_Normal":      4,
		"MissionCategory_Special":     5,
		"MissionCategory_Event":       6,
		"MissionCategory_Achievement": 7,
	}
)

func (x MissionCategory) Enum() *MissionCategory {
	p := new(MissionCategory)
	*p = x
	return p
}

func (x MissionCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[82].Descriptor()
}

func (MissionCategory) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[82]
}

func (x MissionCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionCategory.Descriptor instead.
func (MissionCategory) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{82}
}

type MissionType int32

const (
	MissionType_MissionType_Unknown                                       MissionType = 0
	MissionType_MissionType_IncrementMissionClear                         MissionType = 101
	MissionType_MissionType_IncrementLoginCount                           MissionType = 102
	MissionType_MissionType_IncrementDailyHomeEnterCount                  MissionType = 103
	MissionType_MissionType_IncrementGashaDrawCount                       MissionType = 104
	MissionType_MissionType_IncrementWorkCount                            MissionType = 105
	MissionType_MissionType_IncrementWorkExcellentCount                   MissionType = 106
	MissionType_MissionType_IncrementWorkDurationHour                     MissionType = 107
	MissionType_MissionType_IncrementConsumeActionPoint                   MissionType = 108
	MissionType_MissionType_IncrementShopCoinGashaDrawCount               MissionType = 109
	MissionType_MissionType_IncrementEventCoinGashaDrawCount              MissionType = 110
	MissionType_MissionType_IncrementDailyExchangeCount                   MissionType = 111
	MissionType_MissionType_IncrementItemExchangeCount                    MissionType = 112
	MissionType_MissionType_IncrementEventExchangeCount                   MissionType = 113
	MissionType_MissionType_IncrementProvideItemCount                     MissionType = 114
	MissionType_MissionType_IncrementReceiveMoney                         MissionType = 115
	MissionType_MissionType_IncrementIdolCardLevelLimitRankUpdateCount    MissionType = 121
	MissionType_MissionType_IncrementIdolCardPotentialRankUpdateCount     MissionType = 122
	MissionType_MissionType_IncrementSupportCardCount                     MissionType = 123
	MissionType_MissionType_IncrementSupportCardLevelUpdateCount          MissionType = 124
	MissionType_MissionType_IncrementSupportCardLevelLimitRankUpdateCount MissionType = 125
	MissionType_MissionType_IncrementFanCount                             MissionType = 134
	MissionType_MissionType_IncrementMemoryGradeCount                     MissionType = 137
	MissionType_MissionType_IncrementMemoryExchangeCount                  MissionType = 138
	MissionType_MissionType_IncrementMeishiUpdateCount                    MissionType = 142
	MissionType_MissionType_IncrementMeishiExchangeCount                  MissionType = 144
	MissionType_MissionType_IncrementMeishiXpostCount                     MissionType = 145
	MissionType_MissionType_IncrementGuildDonationRequestCount            MissionType = 146
	MissionType_MissionType_IncrementGuildDonationCount                   MissionType = 147
	MissionType_MissionType_IncrementPvpRatePlayCount                     MissionType = 160
	MissionType_MissionType_IncrementPvpRateCharacterPlayCount            MissionType = 161
	MissionType_MissionType_IncrementPvpRateWinCount                      MissionType = 162
	MissionType_MissionType_IncrementPvpRateCharacterWinCount             MissionType = 163
	MissionType_MissionType_IncrementPvpRateExamBattleScoreCount          MissionType = 164
	MissionType_MissionType_IncrementUrlTransition                        MissionType = 165
	MissionType_MissionType_IncrementProfileUpdateCount                   MissionType = 166
	MissionType_MissionType_IncrementPvpRateCharacterExamBattleScoreCount MissionType = 167
	MissionType_MissionType_IncrementPhotoIdolCount                       MissionType = 168
	MissionType_MissionType_IncrementGvgRaidChallengeCount                MissionType = 169
	MissionType_MissionType_IncrementGvgRaidLoopChallengeCount            MissionType = 170
	MissionType_MissionType_IncrementTourLevelPlayCount                   MissionType = 171
	MissionType_MissionType_IncrementProduceSupportCardDeckUpdateCount    MissionType = 201
	MissionType_MissionType_IncrementProduceMemoryDeckUpdateCount         MissionType = 202
	MissionType_MissionType_IncrementProduceTotalScore                    MissionType = 203
	MissionType_MissionType_IncrementProduceVoteCount                     MissionType = 205
	MissionType_MissionType_IncrementProduceTotalProducePoint             MissionType = 206
	MissionType_MissionType_IncrementProduceGetProduceCardCount           MissionType = 207
	MissionType_MissionType_IncrementProduceGetProduceDrinkCount          MissionType = 208
	MissionType_MissionType_IncrementProduceGetProduceItemCount           MissionType = 209
	MissionType_MissionType_IncrementProduceTotalAdditionExamBlock        MissionType = 213
	MissionType_MissionType_IncrementProduceConsumedStamina               MissionType = 214
	MissionType_MissionType_IncrementProduceExamUseProduceCardCount       MissionType = 215
	MissionType_MissionType_IncrementProduceCustomizeProduceCardCount     MissionType = 216
	MissionType_MissionType_IncrementProduceUpgradeProduceCardCount       MissionType = 217
	MissionType_MissionType_IncrementProduceUseProduceDrinkCount          MissionType = 218
	MissionType_MissionType_IncrementProduceAdditionParameter             MissionType = 219
	MissionType_MissionType_IncrementProducePlayCount                     MissionType = 220
	MissionType_MissionType_IncrementProducePlanPlayCount                 MissionType = 221
	MissionType_MissionType_IncrementProduceCharacterPlayCount            MissionType = 222
	MissionType_MissionType_IncrementProduceIdolCardPlayCount             MissionType = 223
	MissionType_MissionType_IncrementProduceClearCount                    MissionType = 224
	MissionType_MissionType_IncrementProducePlanClearCount                MissionType = 225
	MissionType_MissionType_IncrementProduceCharacterClearCount           MissionType = 226
	MissionType_MissionType_IncrementProduceIdolCardClearCount            MissionType = 227
	MissionType_MissionType_IncrementProduceSelectStepCount               MissionType = 228
	MissionType_MissionType_IncrementProduceShopBuyCount                  MissionType = 229
	MissionType_MissionType_IncrementProduceLessonClearCount              MissionType = 230
	MissionType_MissionType_IncrementProduceGroupSelectStepCount          MissionType = 231
	MissionType_MissionType_AbsoluteLinkBandaiNamco                       MissionType = 301
	MissionType_MissionType_AbsoluteLoginCount                            MissionType = 302
	MissionType_MissionType_AbsoluteAchievementCount                      MissionType = 303
	MissionType_MissionType_AbsoluteCharacterIdolAchievementCount         MissionType = 304
	MissionType_MissionType_AbsoluteMainTaskCount                         MissionType = 305
	MissionType_MissionType_AbsoluteProducerLevel                         MissionType = 310
	MissionType_MissionType_AbsoluteIdolCardCount                         MissionType = 311
	MissionType_MissionType_AbsoluteIdolCardLevelLimitRank                MissionType = 312
	MissionType_MissionType_AbsoluteIdolCardLevelLimitRankCount           MissionType = 313
	MissionType_MissionType_AbsoluteIdolCardPotentialRankCount            MissionType = 314
	MissionType_MissionType_AbsoluteSupportCardCount                      MissionType = 315
	MissionType_MissionType_AbsoluteSupportCardLevelCount                 MissionType = 316
	MissionType_MissionType_AbsoluteSupportCardLevelLimitRankCount        MissionType = 317
	MissionType_MissionType_AbsoluteSupportCardLevel                      MissionType = 319
	MissionType_MissionType_AbsoluteFanCount                              MissionType = 335
	MissionType_MissionType_AbsoluteDearnessLevel                         MissionType = 337
	MissionType_MissionType_AbsoluteMeishiUpdateCount                     MissionType = 343
	MissionType_MissionType_AbsoluteMeishiExchangeCount                   MissionType = 346
	MissionType_MissionType_AbsoluteFollowCount                           MissionType = 348
	MissionType_MissionType_AbsoluteFollowerCount                         MissionType = 349
	MissionType_MissionType_AbsoluteStoryRead                             MissionType = 364
	MissionType_MissionType_AbsoluteGuildJoin                             MissionType = 365
	MissionType_MissionType_AbsolutePvpRateGrade                          MissionType = 366
	MissionType_MissionType_AbsolutePvpRateUnitOverallPower               MissionType = 367
	MissionType_MissionType_AbsolutePvpRateExamBattleMaxScore             MissionType = 368
	MissionType_MissionType_AbsolutePvpRateCharacterExamBattleMaxScore    MissionType = 369
	MissionType_MissionType_AbsolutePvpRateRank                           MissionType = 370
	MissionType_MissionType_AbsoluteTowerTotalClearRank                   MissionType = 371
	MissionType_MissionType_AbsoluteTowerCharacterTotalClearRank          MissionType = 372
	MissionType_MissionType_AbsoluteTowerClearRank                        MissionType = 373
	MissionType_MissionType_AbsoluteIdolCardSkin                          MissionType = 374
	MissionType_MissionType_AbsoluteSupportCard                           MissionType = 375
	MissionType_MissionType_AbsoluteTowerLayerClear                       MissionType = 376
	MissionType_MissionType_AbsolutePvpRateCurrentGrade                   MissionType = 377
	MissionType_MissionType_AbsoluteLinkSmartphoneWithDmm                 MissionType = 378
	MissionType_MissionType_AbsoluteProduceIdolCardHighScore              MissionType = 401
	MissionType_MissionType_AbsoluteProducePlanTotalHighScore             MissionType = 402
	MissionType_MissionType_AbsoluteProducePictureBookProduceCardCount    MissionType = 410
	MissionType_MissionType_AbsoluteProducePictureBookProduceDrinkCount   MissionType = 411
	MissionType_MissionType_AbsoluteProducePictureBookProduceItemCount    MissionType = 412
	MissionType_MissionType_AbsoluteProduceCharacterEnding                MissionType = 420
	MissionType_MissionType_AbsoluteSeminarExamClear                      MissionType = 421
	MissionType_MissionType_AbsoluteProducePlayCharacterCount             MissionType = 422
	MissionType_MissionType_AbsoluteProduceStoryRead                      MissionType = 423
	MissionType_MissionType_ConditionClear                                MissionType = 998
	MissionType_MissionType_ProduceConditionClear                         MissionType = 999
	MissionType_MissionType_ProduceConditionClearBeforeLiveEvaluation     MissionType = 1000
)

// Enum value maps for MissionType.
var (
	MissionType_name = map[int32]string{
		0:    "MissionType_Unknown",
		101:  "MissionType_IncrementMissionClear",
		102:  "MissionType_IncrementLoginCount",
		103:  "MissionType_IncrementDailyHomeEnterCount",
		104:  "MissionType_IncrementGashaDrawCount",
		105:  "MissionType_IncrementWorkCount",
		106:  "MissionType_IncrementWorkExcellentCount",
		107:  "MissionType_IncrementWorkDurationHour",
		108:  "MissionType_IncrementConsumeActionPoint",
		109:  "MissionType_IncrementShopCoinGashaDrawCount",
		110:  "MissionType_IncrementEventCoinGashaDrawCount",
		111:  "MissionType_IncrementDailyExchangeCount",
		112:  "MissionType_IncrementItemExchangeCount",
		113:  "MissionType_IncrementEventExchangeCount",
		114:  "MissionType_IncrementProvideItemCount",
		115:  "MissionType_IncrementReceiveMoney",
		121:  "MissionType_IncrementIdolCardLevelLimitRankUpdateCount",
		122:  "MissionType_IncrementIdolCardPotentialRankUpdateCount",
		123:  "MissionType_IncrementSupportCardCount",
		124:  "MissionType_IncrementSupportCardLevelUpdateCount",
		125:  "MissionType_IncrementSupportCardLevelLimitRankUpdateCount",
		134:  "MissionType_IncrementFanCount",
		137:  "MissionType_IncrementMemoryGradeCount",
		138:  "MissionType_IncrementMemoryExchangeCount",
		142:  "MissionType_IncrementMeishiUpdateCount",
		144:  "MissionType_IncrementMeishiExchangeCount",
		145:  "MissionType_IncrementMeishiXpostCount",
		146:  "MissionType_IncrementGuildDonationRequestCount",
		147:  "MissionType_IncrementGuildDonationCount",
		160:  "MissionType_IncrementPvpRatePlayCount",
		161:  "MissionType_IncrementPvpRateCharacterPlayCount",
		162:  "MissionType_IncrementPvpRateWinCount",
		163:  "MissionType_IncrementPvpRateCharacterWinCount",
		164:  "MissionType_IncrementPvpRateExamBattleScoreCount",
		165:  "MissionType_IncrementUrlTransition",
		166:  "MissionType_IncrementProfileUpdateCount",
		167:  "MissionType_IncrementPvpRateCharacterExamBattleScoreCount",
		168:  "MissionType_IncrementPhotoIdolCount",
		169:  "MissionType_IncrementGvgRaidChallengeCount",
		170:  "MissionType_IncrementGvgRaidLoopChallengeCount",
		171:  "MissionType_IncrementTourLevelPlayCount",
		201:  "MissionType_IncrementProduceSupportCardDeckUpdateCount",
		202:  "MissionType_IncrementProduceMemoryDeckUpdateCount",
		203:  "MissionType_IncrementProduceTotalScore",
		205:  "MissionType_IncrementProduceVoteCount",
		206:  "MissionType_IncrementProduceTotalProducePoint",
		207:  "MissionType_IncrementProduceGetProduceCardCount",
		208:  "MissionType_IncrementProduceGetProduceDrinkCount",
		209:  "MissionType_IncrementProduceGetProduceItemCount",
		213:  "MissionType_IncrementProduceTotalAdditionExamBlock",
		214:  "MissionType_IncrementProduceConsumedStamina",
		215:  "MissionType_IncrementProduceExamUseProduceCardCount",
		216:  "MissionType_IncrementProduceCustomizeProduceCardCount",
		217:  "MissionType_IncrementProduceUpgradeProduceCardCount",
		218:  "MissionType_IncrementProduceUseProduceDrinkCount",
		219:  "MissionType_IncrementProduceAdditionParameter",
		220:  "MissionType_IncrementProducePlayCount",
		221:  "MissionType_IncrementProducePlanPlayCount",
		222:  "MissionType_IncrementProduceCharacterPlayCount",
		223:  "MissionType_IncrementProduceIdolCardPlayCount",
		224:  "MissionType_IncrementProduceClearCount",
		225:  "MissionType_IncrementProducePlanClearCount",
		226:  "MissionType_IncrementProduceCharacterClearCount",
		227:  "MissionType_IncrementProduceIdolCardClearCount",
		228:  "MissionType_IncrementProduceSelectStepCount",
		229:  "MissionType_IncrementProduceShopBuyCount",
		230:  "MissionType_IncrementProduceLessonClearCount",
		231:  "MissionType_IncrementProduceGroupSelectStepCount",
		301:  "MissionType_AbsoluteLinkBandaiNamco",
		302:  "MissionType_AbsoluteLoginCount",
		303:  "MissionType_AbsoluteAchievementCount",
		304:  "MissionType_AbsoluteCharacterIdolAchievementCount",
		305:  "MissionType_AbsoluteMainTaskCount",
		310:  "MissionType_AbsoluteProducerLevel",
		311:  "MissionType_AbsoluteIdolCardCount",
		312:  "MissionType_AbsoluteIdolCardLevelLimitRank",
		313:  "MissionType_AbsoluteIdolCardLevelLimitRankCount",
		314:  "MissionType_AbsoluteIdolCardPotentialRankCount",
		315:  "MissionType_AbsoluteSupportCardCount",
		316:  "MissionType_AbsoluteSupportCardLevelCount",
		317:  "MissionType_AbsoluteSupportCardLevelLimitRankCount",
		319:  "MissionType_AbsoluteSupportCardLevel",
		335:  "MissionType_AbsoluteFanCount",
		337:  "MissionType_AbsoluteDearnessLevel",
		343:  "MissionType_AbsoluteMeishiUpdateCount",
		346:  "MissionType_AbsoluteMeishiExchangeCount",
		348:  "MissionType_AbsoluteFollowCount",
		349:  "MissionType_AbsoluteFollowerCount",
		364:  "MissionType_AbsoluteStoryRead",
		365:  "MissionType_AbsoluteGuildJoin",
		366:  "MissionType_AbsolutePvpRateGrade",
		367:  "MissionType_AbsolutePvpRateUnitOverallPower",
		368:  "MissionType_AbsolutePvpRateExamBattleMaxScore",
		369:  "MissionType_AbsolutePvpRateCharacterExamBattleMaxScore",
		370:  "MissionType_AbsolutePvpRateRank",
		371:  "MissionType_AbsoluteTowerTotalClearRank",
		372:  "MissionType_AbsoluteTowerCharacterTotalClearRank",
		373:  "MissionType_AbsoluteTowerClearRank",
		374:  "MissionType_AbsoluteIdolCardSkin",
		375:  "MissionType_AbsoluteSupportCard",
		376:  "MissionType_AbsoluteTowerLayerClear",
		377:  "MissionType_AbsolutePvpRateCurrentGrade",
		378:  "MissionType_AbsoluteLinkSmartphoneWithDmm",
		401:  "MissionType_AbsoluteProduceIdolCardHighScore",
		402:  "MissionType_AbsoluteProducePlanTotalHighScore",
		410:  "MissionType_AbsoluteProducePictureBookProduceCardCount",
		411:  "MissionType_AbsoluteProducePictureBookProduceDrinkCount",
		412:  "MissionType_AbsoluteProducePictureBookProduceItemCount",
		420:  "MissionType_AbsoluteProduceCharacterEnding",
		421:  "MissionType_AbsoluteSeminarExamClear",
		422:  "MissionType_AbsoluteProducePlayCharacterCount",
		423:  "MissionType_AbsoluteProduceStoryRead",
		998:  "MissionType_ConditionClear",
		999:  "MissionType_ProduceConditionClear",
		1000: "MissionType_ProduceConditionClearBeforeLiveEvaluation",
	}
	MissionType_value = map[string]int32{
		"MissionType_Unknown":                                       0,
		"MissionType_IncrementMissionClear":                         101,
		"MissionType_IncrementLoginCount":                           102,
		"MissionType_IncrementDailyHomeEnterCount":                  103,
		"MissionType_IncrementGashaDrawCount":                       104,
		"MissionType_IncrementWorkCount":                            105,
		"MissionType_IncrementWorkExcellentCount":                   106,
		"MissionType_IncrementWorkDurationHour":                     107,
		"MissionType_IncrementConsumeActionPoint":                   108,
		"MissionType_IncrementShopCoinGashaDrawCount":               109,
		"MissionType_IncrementEventCoinGashaDrawCount":              110,
		"MissionType_IncrementDailyExchangeCount":                   111,
		"MissionType_IncrementItemExchangeCount":                    112,
		"MissionType_IncrementEventExchangeCount":                   113,
		"MissionType_IncrementProvideItemCount":                     114,
		"MissionType_IncrementReceiveMoney":                         115,
		"MissionType_IncrementIdolCardLevelLimitRankUpdateCount":    121,
		"MissionType_IncrementIdolCardPotentialRankUpdateCount":     122,
		"MissionType_IncrementSupportCardCount":                     123,
		"MissionType_IncrementSupportCardLevelUpdateCount":          124,
		"MissionType_IncrementSupportCardLevelLimitRankUpdateCount": 125,
		"MissionType_IncrementFanCount":                             134,
		"MissionType_IncrementMemoryGradeCount":                     137,
		"MissionType_IncrementMemoryExchangeCount":                  138,
		"MissionType_IncrementMeishiUpdateCount":                    142,
		"MissionType_IncrementMeishiExchangeCount":                  144,
		"MissionType_IncrementMeishiXpostCount":                     145,
		"MissionType_IncrementGuildDonationRequestCount":            146,
		"MissionType_IncrementGuildDonationCount":                   147,
		"MissionType_IncrementPvpRatePlayCount":                     160,
		"MissionType_IncrementPvpRateCharacterPlayCount":            161,
		"MissionType_IncrementPvpRateWinCount":                      162,
		"MissionType_IncrementPvpRateCharacterWinCount":             163,
		"MissionType_IncrementPvpRateExamBattleScoreCount":          164,
		"MissionType_IncrementUrlTransition":                        165,
		"MissionType_IncrementProfileUpdateCount":                   166,
		"MissionType_IncrementPvpRateCharacterExamBattleScoreCount": 167,
		"MissionType_IncrementPhotoIdolCount":                       168,
		"MissionType_IncrementGvgRaidChallengeCount":                169,
		"MissionType_IncrementGvgRaidLoopChallengeCount":            170,
		"MissionType_IncrementTourLevelPlayCount":                   171,
		"MissionType_IncrementProduceSupportCardDeckUpdateCount":    201,
		"MissionType_IncrementProduceMemoryDeckUpdateCount":         202,
		"MissionType_IncrementProduceTotalScore":                    203,
		"MissionType_IncrementProduceVoteCount":                     205,
		"MissionType_IncrementProduceTotalProducePoint":             206,
		"MissionType_IncrementProduceGetProduceCardCount":           207,
		"MissionType_IncrementProduceGetProduceDrinkCount":          208,
		"MissionType_IncrementProduceGetProduceItemCount":           209,
		"MissionType_IncrementProduceTotalAdditionExamBlock":        213,
		"MissionType_IncrementProduceConsumedStamina":               214,
		"MissionType_IncrementProduceExamUseProduceCardCount":       215,
		"MissionType_IncrementProduceCustomizeProduceCardCount":     216,
		"MissionType_IncrementProduceUpgradeProduceCardCount":       217,
		"MissionType_IncrementProduceUseProduceDrinkCount":          218,
		"MissionType_IncrementProduceAdditionParameter":             219,
		"MissionType_IncrementProducePlayCount":                     220,
		"MissionType_IncrementProducePlanPlayCount":                 221,
		"MissionType_IncrementProduceCharacterPlayCount":            222,
		"MissionType_IncrementProduceIdolCardPlayCount":             223,
		"MissionType_IncrementProduceClearCount":                    224,
		"MissionType_IncrementProducePlanClearCount":                225,
		"MissionType_IncrementProduceCharacterClearCount":           226,
		"MissionType_IncrementProduceIdolCardClearCount":            227,
		"MissionType_IncrementProduceSelectStepCount":               228,
		"MissionType_IncrementProduceShopBuyCount":                  229,
		"MissionType_IncrementProduceLessonClearCount":              230,
		"MissionType_IncrementProduceGroupSelectStepCount":          231,
		"MissionType_AbsoluteLinkBandaiNamco":                       301,
		"MissionType_AbsoluteLoginCount":                            302,
		"MissionType_AbsoluteAchievementCount":                      303,
		"MissionType_AbsoluteCharacterIdolAchievementCount":         304,
		"MissionType_AbsoluteMainTaskCount":                         305,
		"MissionType_AbsoluteProducerLevel":                         310,
		"MissionType_AbsoluteIdolCardCount":                         311,
		"MissionType_AbsoluteIdolCardLevelLimitRank":                312,
		"MissionType_AbsoluteIdolCardLevelLimitRankCount":           313,
		"MissionType_AbsoluteIdolCardPotentialRankCount":            314,
		"MissionType_AbsoluteSupportCardCount":                      315,
		"MissionType_AbsoluteSupportCardLevelCount":                 316,
		"MissionType_AbsoluteSupportCardLevelLimitRankCount":        317,
		"MissionType_AbsoluteSupportCardLevel":                      319,
		"MissionType_AbsoluteFanCount":                              335,
		"MissionType_AbsoluteDearnessLevel":                         337,
		"MissionType_AbsoluteMeishiUpdateCount":                     343,
		"MissionType_AbsoluteMeishiExchangeCount":                   346,
		"MissionType_AbsoluteFollowCount":                           348,
		"MissionType_AbsoluteFollowerCount":                         349,
		"MissionType_AbsoluteStoryRead":                             364,
		"MissionType_AbsoluteGuildJoin":                             365,
		"MissionType_AbsolutePvpRateGrade":                          366,
		"MissionType_AbsolutePvpRateUnitOverallPower":               367,
		"MissionType_AbsolutePvpRateExamBattleMaxScore":             368,
		"MissionType_AbsolutePvpRateCharacterExamBattleMaxScore":    369,
		"MissionType_AbsolutePvpRateRank":                           370,
		"MissionType_AbsoluteTowerTotalClearRank":                   371,
		"MissionType_AbsoluteTowerCharacterTotalClearRank":          372,
		"MissionType_AbsoluteTowerClearRank":                        373,
		"MissionType_AbsoluteIdolCardSkin":                          374,
		"MissionType_AbsoluteSupportCard":                           375,
		"MissionType_AbsoluteTowerLayerClear":                       376,
		"MissionType_AbsolutePvpRateCurrentGrade":                   377,
		"MissionType_AbsoluteLinkSmartphoneWithDmm":                 378,
		"MissionType_AbsoluteProduceIdolCardHighScore":              401,
		"MissionType_AbsoluteProducePlanTotalHighScore":             402,
		"MissionType_AbsoluteProducePictureBookProduceCardCount":    410,
		"MissionType_AbsoluteProducePictureBookProduceDrinkCount":   411,
		"MissionType_AbsoluteProducePictureBookProduceItemCount":    412,
		"MissionType_AbsoluteProduceCharacterEnding":                420,
		"MissionType_AbsoluteSeminarExamClear":                      421,
		"MissionType_AbsoluteProducePlayCharacterCount":             422,
		"MissionType_AbsoluteProduceStoryRead":                      423,
		"MissionType_ConditionClear":                                998,
		"MissionType_ProduceConditionClear":                         999,
		"MissionType_ProduceConditionClearBeforeLiveEvaluation":     1000,
	}
)

func (x MissionType) Enum() *MissionType {
	p := new(MissionType)
	*p = x
	return p
}

func (x MissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[83].Descriptor()
}

func (MissionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[83]
}

func (x MissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MissionType.Descriptor instead.
func (MissionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{83}
}

type MusicType int32

const (
	MusicType_MusicType_Unknown      MusicType = 0
	MusicType_MusicType_Music        MusicType = 1
	MusicType_MusicType_Instrumental MusicType = 2
	MusicType_MusicType_Bgm          MusicType = 3
)

// Enum value maps for MusicType.
var (
	MusicType_name = map[int32]string{
		0: "MusicType_Unknown",
		1: "MusicType_Music",
		2: "MusicType_Instrumental",
		3: "MusicType_Bgm",
	}
	MusicType_value = map[string]int32{
		"MusicType_Unknown":      0,
		"MusicType_Music":        1,
		"MusicType_Instrumental": 2,
		"MusicType_Bgm":          3,
	}
)

func (x MusicType) Enum() *MusicType {
	p := new(MusicType)
	*p = x
	return p
}

func (x MusicType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MusicType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[84].Descriptor()
}

func (MusicType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[84]
}

func (x MusicType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MusicType.Descriptor instead.
func (MusicType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{84}
}

type MusicWishListRequesterType int32

const (
	MusicWishListRequesterType_MusicWishListRequesterType_Unknown   MusicWishListRequesterType = 0
	MusicWishListRequesterType_MusicWishListRequesterType_Self      MusicWishListRequesterType = 1
	MusicWishListRequesterType_MusicWishListRequesterType_OtherUser MusicWishListRequesterType = 2
	MusicWishListRequesterType_MusicWishListRequesterType_Character MusicWishListRequesterType = 3
)

// Enum value maps for MusicWishListRequesterType.
var (
	MusicWishListRequesterType_name = map[int32]string{
		0: "MusicWishListRequesterType_Unknown",
		1: "MusicWishListRequesterType_Self",
		2: "MusicWishListRequesterType_OtherUser",
		3: "MusicWishListRequesterType_Character",
	}
	MusicWishListRequesterType_value = map[string]int32{
		"MusicWishListRequesterType_Unknown":   0,
		"MusicWishListRequesterType_Self":      1,
		"MusicWishListRequesterType_OtherUser": 2,
		"MusicWishListRequesterType_Character": 3,
	}
)

func (x MusicWishListRequesterType) Enum() *MusicWishListRequesterType {
	p := new(MusicWishListRequesterType)
	*p = x
	return p
}

func (x MusicWishListRequesterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MusicWishListRequesterType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[85].Descriptor()
}

func (MusicWishListRequesterType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[85]
}

func (x MusicWishListRequesterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MusicWishListRequesterType.Descriptor instead.
func (MusicWishListRequesterType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{85}
}

type NoticeCategory int32

const (
	NoticeCategory_NoticeCategory_Unknown NoticeCategory = 0
	NoticeCategory_NoticeCategory_Info    NoticeCategory = 1
	NoticeCategory_NoticeCategory_Bug     NoticeCategory = 2
	NoticeCategory_NoticeCategory_Pr      NoticeCategory = 3
)

// Enum value maps for NoticeCategory.
var (
	NoticeCategory_name = map[int32]string{
		0: "NoticeCategory_Unknown",
		1: "NoticeCategory_Info",
		2: "NoticeCategory_Bug",
		3: "NoticeCategory_Pr",
	}
	NoticeCategory_value = map[string]int32{
		"NoticeCategory_Unknown": 0,
		"NoticeCategory_Info":    1,
		"NoticeCategory_Bug":     2,
		"NoticeCategory_Pr":      3,
	}
)

func (x NoticeCategory) Enum() *NoticeCategory {
	p := new(NoticeCategory)
	*p = x
	return p
}

func (x NoticeCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoticeCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[86].Descriptor()
}

func (NoticeCategory) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[86]
}

func (x NoticeCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NoticeCategory.Descriptor instead.
func (NoticeCategory) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{86}
}

type NoticeType int32

const (
	NoticeType_NoticeType_Unknown     NoticeType = 0
	NoticeType_NoticeType_Update      NoticeType = 1
	NoticeType_NoticeType_Gasha       NoticeType = 2
	NoticeType_NoticeType_Campaign    NoticeType = 3
	NoticeType_NoticeType_Event       NoticeType = 4
	NoticeType_NoticeType_Important   NoticeType = 5
	NoticeType_NoticeType_Information NoticeType = 6
	NoticeType_NoticeType_Maintenance NoticeType = 7
	NoticeType_NoticeType_Bug         NoticeType = 8
)

// Enum value maps for NoticeType.
var (
	NoticeType_name = map[int32]string{
		0: "NoticeType_Unknown",
		1: "NoticeType_Update",
		2: "NoticeType_Gasha",
		3: "NoticeType_Campaign",
		4: "NoticeType_Event",
		5: "NoticeType_Important",
		6: "NoticeType_Information",
		7: "NoticeType_Maintenance",
		8: "NoticeType_Bug",
	}
	NoticeType_value = map[string]int32{
		"NoticeType_Unknown":     0,
		"NoticeType_Update":      1,
		"NoticeType_Gasha":       2,
		"NoticeType_Campaign":    3,
		"NoticeType_Event":       4,
		"NoticeType_Important":   5,
		"NoticeType_Information": 6,
		"NoticeType_Maintenance": 7,
		"NoticeType_Bug":         8,
	}
)

func (x NoticeType) Enum() *NoticeType {
	p := new(NoticeType)
	*p = x
	return p
}

func (x NoticeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoticeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[87].Descriptor()
}

func (NoticeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[87]
}

func (x NoticeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NoticeType.Descriptor instead.
func (NoticeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{87}
}

type PaymentPendingReceiptDialogTimingType int32

const (
	PaymentPendingReceiptDialogTimingType_PaymentPendingReceiptDialogTimingType_Unknown PaymentPendingReceiptDialogTimingType = 0
	PaymentPendingReceiptDialogTimingType_PaymentPendingReceiptDialogTimingType_Skip    PaymentPendingReceiptDialogTimingType = 1
	PaymentPendingReceiptDialogTimingType_PaymentPendingReceiptDialogTimingType_Daily   PaymentPendingReceiptDialogTimingType = 2
)

// Enum value maps for PaymentPendingReceiptDialogTimingType.
var (
	PaymentPendingReceiptDialogTimingType_name = map[int32]string{
		0: "PaymentPendingReceiptDialogTimingType_Unknown",
		1: "PaymentPendingReceiptDialogTimingType_Skip",
		2: "PaymentPendingReceiptDialogTimingType_Daily",
	}
	PaymentPendingReceiptDialogTimingType_value = map[string]int32{
		"PaymentPendingReceiptDialogTimingType_Unknown": 0,
		"PaymentPendingReceiptDialogTimingType_Skip":    1,
		"PaymentPendingReceiptDialogTimingType_Daily":   2,
	}
)

func (x PaymentPendingReceiptDialogTimingType) Enum() *PaymentPendingReceiptDialogTimingType {
	p := new(PaymentPendingReceiptDialogTimingType)
	*p = x
	return p
}

func (x PaymentPendingReceiptDialogTimingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentPendingReceiptDialogTimingType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[88].Descriptor()
}

func (PaymentPendingReceiptDialogTimingType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[88]
}

func (x PaymentPendingReceiptDialogTimingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentPendingReceiptDialogTimingType.Descriptor instead.
func (PaymentPendingReceiptDialogTimingType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{88}
}

type PhotoBackgroundCategory int32

const (
	PhotoBackgroundCategory_PhotoBackgroundCategory_Unknown   PhotoBackgroundCategory = 0
	PhotoBackgroundCategory_PhotoBackgroundCategory_Gakuen    PhotoBackgroundCategory = 1
	PhotoBackgroundCategory_PhotoBackgroundCategory_Dormitory PhotoBackgroundCategory = 2
	PhotoBackgroundCategory_PhotoBackgroundCategory_Around    PhotoBackgroundCategory = 3
	PhotoBackgroundCategory_PhotoBackgroundCategory_Other     PhotoBackgroundCategory = 99
)

// Enum value maps for PhotoBackgroundCategory.
var (
	PhotoBackgroundCategory_name = map[int32]string{
		0:  "PhotoBackgroundCategory_Unknown",
		1:  "PhotoBackgroundCategory_Gakuen",
		2:  "PhotoBackgroundCategory_Dormitory",
		3:  "PhotoBackgroundCategory_Around",
		99: "PhotoBackgroundCategory_Other",
	}
	PhotoBackgroundCategory_value = map[string]int32{
		"PhotoBackgroundCategory_Unknown":   0,
		"PhotoBackgroundCategory_Gakuen":    1,
		"PhotoBackgroundCategory_Dormitory": 2,
		"PhotoBackgroundCategory_Around":    3,
		"PhotoBackgroundCategory_Other":     99,
	}
)

func (x PhotoBackgroundCategory) Enum() *PhotoBackgroundCategory {
	p := new(PhotoBackgroundCategory)
	*p = x
	return p
}

func (x PhotoBackgroundCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotoBackgroundCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[89].Descriptor()
}

func (PhotoBackgroundCategory) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[89]
}

func (x PhotoBackgroundCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhotoBackgroundCategory.Descriptor instead.
func (PhotoBackgroundCategory) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{89}
}

type PhotoBackgroundTimeType int32

const (
	PhotoBackgroundTimeType_PhotoBackgroundTimeType_Unknown PhotoBackgroundTimeType = 0
	PhotoBackgroundTimeType_PhotoBackgroundTimeType_Morning PhotoBackgroundTimeType = 1
	PhotoBackgroundTimeType_PhotoBackgroundTimeType_Noon    PhotoBackgroundTimeType = 2
	PhotoBackgroundTimeType_PhotoBackgroundTimeType_Evening PhotoBackgroundTimeType = 3
	PhotoBackgroundTimeType_PhotoBackgroundTimeType_Night   PhotoBackgroundTimeType = 4
)

// Enum value maps for PhotoBackgroundTimeType.
var (
	PhotoBackgroundTimeType_name = map[int32]string{
		0: "PhotoBackgroundTimeType_Unknown",
		1: "PhotoBackgroundTimeType_Morning",
		2: "PhotoBackgroundTimeType_Noon",
		3: "PhotoBackgroundTimeType_Evening",
		4: "PhotoBackgroundTimeType_Night",
	}
	PhotoBackgroundTimeType_value = map[string]int32{
		"PhotoBackgroundTimeType_Unknown": 0,
		"PhotoBackgroundTimeType_Morning": 1,
		"PhotoBackgroundTimeType_Noon":    2,
		"PhotoBackgroundTimeType_Evening": 3,
		"PhotoBackgroundTimeType_Night":   4,
	}
)

func (x PhotoBackgroundTimeType) Enum() *PhotoBackgroundTimeType {
	p := new(PhotoBackgroundTimeType)
	*p = x
	return p
}

func (x PhotoBackgroundTimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotoBackgroundTimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[90].Descriptor()
}

func (PhotoBackgroundTimeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[90]
}

func (x PhotoBackgroundTimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhotoBackgroundTimeType.Descriptor instead.
func (PhotoBackgroundTimeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{90}
}

type PhotoButtonExecuteType int32

const (
	PhotoButtonExecuteType_PhotoButtonExecuteType_Unknown    PhotoButtonExecuteType = 0
	PhotoButtonExecuteType_PhotoButtonExecuteType_Click      PhotoButtonExecuteType = 1
	PhotoButtonExecuteType_PhotoButtonExecuteType_PressStart PhotoButtonExecuteType = 2
	PhotoButtonExecuteType_PhotoButtonExecuteType_PressEnd   PhotoButtonExecuteType = 3
)

// Enum value maps for PhotoButtonExecuteType.
var (
	PhotoButtonExecuteType_name = map[int32]string{
		0: "PhotoButtonExecuteType_Unknown",
		1: "PhotoButtonExecuteType_Click",
		2: "PhotoButtonExecuteType_PressStart",
		3: "PhotoButtonExecuteType_PressEnd",
	}
	PhotoButtonExecuteType_value = map[string]int32{
		"PhotoButtonExecuteType_Unknown":    0,
		"PhotoButtonExecuteType_Click":      1,
		"PhotoButtonExecuteType_PressStart": 2,
		"PhotoButtonExecuteType_PressEnd":   3,
	}
)

func (x PhotoButtonExecuteType) Enum() *PhotoButtonExecuteType {
	p := new(PhotoButtonExecuteType)
	*p = x
	return p
}

func (x PhotoButtonExecuteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotoButtonExecuteType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[91].Descriptor()
}

func (PhotoButtonExecuteType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[91]
}

func (x PhotoButtonExecuteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhotoButtonExecuteType.Descriptor instead.
func (PhotoButtonExecuteType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{91}
}

type PhotoLookTargetType int32

const (
	PhotoLookTargetType_PhotoLookTargetType_Unknown  PhotoLookTargetType = 0
	PhotoLookTargetType_PhotoLookTargetType_Ng       PhotoLookTargetType = 1
	PhotoLookTargetType_PhotoLookTargetType_Eye      PhotoLookTargetType = 2
	PhotoLookTargetType_PhotoLookTargetType_FullBody PhotoLookTargetType = 3
)

// Enum value maps for PhotoLookTargetType.
var (
	PhotoLookTargetType_name = map[int32]string{
		0: "PhotoLookTargetType_Unknown",
		1: "PhotoLookTargetType_Ng",
		2: "PhotoLookTargetType_Eye",
		3: "PhotoLookTargetType_FullBody",
	}
	PhotoLookTargetType_value = map[string]int32{
		"PhotoLookTargetType_Unknown":  0,
		"PhotoLookTargetType_Ng":       1,
		"PhotoLookTargetType_Eye":      2,
		"PhotoLookTargetType_FullBody": 3,
	}
)

func (x PhotoLookTargetType) Enum() *PhotoLookTargetType {
	p := new(PhotoLookTargetType)
	*p = x
	return p
}

func (x PhotoLookTargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotoLookTargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[92].Descriptor()
}

func (PhotoLookTargetType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[92]
}

func (x PhotoLookTargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhotoLookTargetType.Descriptor instead.
func (PhotoLookTargetType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{92}
}

type PhotoPoseMotionType int32

const (
	PhotoPoseMotionType_PhotoPoseMotionType_Unknown  PhotoPoseMotionType = 0
	PhotoPoseMotionType_PhotoPoseMotionType_Reaction PhotoPoseMotionType = 1
	PhotoPoseMotionType_PhotoPoseMotionType_Wait     PhotoPoseMotionType = 2
)

// Enum value maps for PhotoPoseMotionType.
var (
	PhotoPoseMotionType_name = map[int32]string{
		0: "PhotoPoseMotionType_Unknown",
		1: "PhotoPoseMotionType_Reaction",
		2: "PhotoPoseMotionType_Wait",
	}
	PhotoPoseMotionType_value = map[string]int32{
		"PhotoPoseMotionType_Unknown":  0,
		"PhotoPoseMotionType_Reaction": 1,
		"PhotoPoseMotionType_Wait":     2,
	}
)

func (x PhotoPoseMotionType) Enum() *PhotoPoseMotionType {
	p := new(PhotoPoseMotionType)
	*p = x
	return p
}

func (x PhotoPoseMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotoPoseMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[93].Descriptor()
}

func (PhotoPoseMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[93]
}

func (x PhotoPoseMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhotoPoseMotionType.Descriptor instead.
func (PhotoPoseMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{93}
}

type PlatformType int32

const (
	PlatformType_PlatformType_Unknown PlatformType = 0
	PlatformType_PlatformType_Ios     PlatformType = 1
	PlatformType_PlatformType_Android PlatformType = 2
	PlatformType_PlatformType_Dmm     PlatformType = 3
	PlatformType_PlatformType_Other   PlatformType = 999
)

// Enum value maps for PlatformType.
var (
	PlatformType_name = map[int32]string{
		0:   "PlatformType_Unknown",
		1:   "PlatformType_Ios",
		2:   "PlatformType_Android",
		3:   "PlatformType_Dmm",
		999: "PlatformType_Other",
	}
	PlatformType_value = map[string]int32{
		"PlatformType_Unknown": 0,
		"PlatformType_Ios":     1,
		"PlatformType_Android": 2,
		"PlatformType_Dmm":     3,
		"PlatformType_Other":   999,
	}
)

func (x PlatformType) Enum() *PlatformType {
	p := new(PlatformType)
	*p = x
	return p
}

func (x PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[94].Descriptor()
}

func (PlatformType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[94]
}

func (x PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformType.Descriptor instead.
func (PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{94}
}

type PreferenceType int32

const (
	PreferenceType_PreferenceType_Unknown                       PreferenceType = 0
	PreferenceType_PreferenceType_PhotoButtonExecuteType        PreferenceType = 1
	PreferenceType_PreferenceType_ProduceDisableForceLiveCommon PreferenceType = 2
)

// Enum value maps for PreferenceType.
var (
	PreferenceType_name = map[int32]string{
		0: "PreferenceType_Unknown",
		1: "PreferenceType_PhotoButtonExecuteType",
		2: "PreferenceType_ProduceDisableForceLiveCommon",
	}
	PreferenceType_value = map[string]int32{
		"PreferenceType_Unknown":                       0,
		"PreferenceType_PhotoButtonExecuteType":        1,
		"PreferenceType_ProduceDisableForceLiveCommon": 2,
	}
)

func (x PreferenceType) Enum() *PreferenceType {
	p := new(PreferenceType)
	*p = x
	return p
}

func (x PreferenceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreferenceType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[95].Descriptor()
}

func (PreferenceType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[95]
}

func (x PreferenceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PreferenceType.Descriptor instead.
func (PreferenceType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{95}
}

type ProduceAdvType int32

const (
	ProduceAdvType_ProduceAdvType_Unknown                    ProduceAdvType = 0
	ProduceAdvType_ProduceAdvType_BeforeFinalLessonHard      ProduceAdvType = 1
	ProduceAdvType_ProduceAdvType_BeforeMid1LessonHard       ProduceAdvType = 2
	ProduceAdvType_ProduceAdvType_BeforeMid2LessonHard       ProduceAdvType = 3
	ProduceAdvType_ProduceAdvType_BeforeFinalAuditionRefresh ProduceAdvType = 10
	ProduceAdvType_ProduceAdvType_BeforeMid1AuditionRefresh  ProduceAdvType = 11
	ProduceAdvType_ProduceAdvType_BeforeMid2AuditionRefresh  ProduceAdvType = 12
	ProduceAdvType_ProduceAdvType_BeforeFinalAuditionSelect  ProduceAdvType = 13
	ProduceAdvType_ProduceAdvType_BeforeMid1AuditionSelect   ProduceAdvType = 14
	ProduceAdvType_ProduceAdvType_BeforeMid2AuditionSelect   ProduceAdvType = 15
	ProduceAdvType_ProduceAdvType_Introduction               ProduceAdvType = 17
	ProduceAdvType_ProduceAdvType_StepSkip                   ProduceAdvType = 18
	ProduceAdvType_ProduceAdvType_Opening                    ProduceAdvType = 19
	ProduceAdvType_ProduceAdvType_ProduceResultTrueEnd       ProduceAdvType = 20
	ProduceAdvType_ProduceAdvType_ProduceResultA             ProduceAdvType = 21
	ProduceAdvType_ProduceAdvType_ProduceResultB             ProduceAdvType = 22
	ProduceAdvType_ProduceAdvType_ProduceResultC             ProduceAdvType = 23
	ProduceAdvType_ProduceAdvType_ProduceResultFailedFinal   ProduceAdvType = 24
	ProduceAdvType_ProduceAdvType_ProduceResultFailedMid1    ProduceAdvType = 25
	ProduceAdvType_ProduceAdvType_ProduceResultFailedMid2    ProduceAdvType = 26
)

// Enum value maps for ProduceAdvType.
var (
	ProduceAdvType_name = map[int32]string{
		0:  "ProduceAdvType_Unknown",
		1:  "ProduceAdvType_BeforeFinalLessonHard",
		2:  "ProduceAdvType_BeforeMid1LessonHard",
		3:  "ProduceAdvType_BeforeMid2LessonHard",
		10: "ProduceAdvType_BeforeFinalAuditionRefresh",
		11: "ProduceAdvType_BeforeMid1AuditionRefresh",
		12: "ProduceAdvType_BeforeMid2AuditionRefresh",
		13: "ProduceAdvType_BeforeFinalAuditionSelect",
		14: "ProduceAdvType_BeforeMid1AuditionSelect",
		15: "ProduceAdvType_BeforeMid2AuditionSelect",
		17: "ProduceAdvType_Introduction",
		18: "ProduceAdvType_StepSkip",
		19: "ProduceAdvType_Opening",
		20: "ProduceAdvType_ProduceResultTrueEnd",
		21: "ProduceAdvType_ProduceResultA",
		22: "ProduceAdvType_ProduceResultB",
		23: "ProduceAdvType_ProduceResultC",
		24: "ProduceAdvType_ProduceResultFailedFinal",
		25: "ProduceAdvType_ProduceResultFailedMid1",
		26: "ProduceAdvType_ProduceResultFailedMid2",
	}
	ProduceAdvType_value = map[string]int32{
		"ProduceAdvType_Unknown":                    0,
		"ProduceAdvType_BeforeFinalLessonHard":      1,
		"ProduceAdvType_BeforeMid1LessonHard":       2,
		"ProduceAdvType_BeforeMid2LessonHard":       3,
		"ProduceAdvType_BeforeFinalAuditionRefresh": 10,
		"ProduceAdvType_BeforeMid1AuditionRefresh":  11,
		"ProduceAdvType_BeforeMid2AuditionRefresh":  12,
		"ProduceAdvType_BeforeFinalAuditionSelect":  13,
		"ProduceAdvType_BeforeMid1AuditionSelect":   14,
		"ProduceAdvType_BeforeMid2AuditionSelect":   15,
		"ProduceAdvType_Introduction":               17,
		"ProduceAdvType_StepSkip":                   18,
		"ProduceAdvType_Opening":                    19,
		"ProduceAdvType_ProduceResultTrueEnd":       20,
		"ProduceAdvType_ProduceResultA":             21,
		"ProduceAdvType_ProduceResultB":             22,
		"ProduceAdvType_ProduceResultC":             23,
		"ProduceAdvType_ProduceResultFailedFinal":   24,
		"ProduceAdvType_ProduceResultFailedMid1":    25,
		"ProduceAdvType_ProduceResultFailedMid2":    26,
	}
)

func (x ProduceAdvType) Enum() *ProduceAdvType {
	p := new(ProduceAdvType)
	*p = x
	return p
}

func (x ProduceAdvType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceAdvType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[96].Descriptor()
}

func (ProduceAdvType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[96]
}

func (x ProduceAdvType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceAdvType.Descriptor instead.
func (ProduceAdvType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{96}
}

type ProduceCampaignType int32

const (
	ProduceCampaignType_ProduceCampaignType_Unknown                   ProduceCampaignType = 0
	ProduceCampaignType_ProduceCampaignType_ActionPointDown           ProduceCampaignType = 1
	ProduceCampaignType_ProduceCampaignType_MemoryRentalCountUp       ProduceCampaignType = 2
	ProduceCampaignType_ProduceCampaignType_RewardQuantityUp          ProduceCampaignType = 3
	ProduceCampaignType_ProduceCampaignType_ProduceResultRewardAdd    ProduceCampaignType = 4
	ProduceCampaignType_ProduceCampaignType_ProduceResultRewardChange ProduceCampaignType = 5
	ProduceCampaignType_ProduceCampaignType_MemoryRerollCountUp       ProduceCampaignType = 6
	ProduceCampaignType_ProduceCampaignType_MemoryRerollFree          ProduceCampaignType = 7
	ProduceCampaignType_ProduceCampaignType_Event                     ProduceCampaignType = 8
)

// Enum value maps for ProduceCampaignType.
var (
	ProduceCampaignType_name = map[int32]string{
		0: "ProduceCampaignType_Unknown",
		1: "ProduceCampaignType_ActionPointDown",
		2: "ProduceCampaignType_MemoryRentalCountUp",
		3: "ProduceCampaignType_RewardQuantityUp",
		4: "ProduceCampaignType_ProduceResultRewardAdd",
		5: "ProduceCampaignType_ProduceResultRewardChange",
		6: "ProduceCampaignType_MemoryRerollCountUp",
		7: "ProduceCampaignType_MemoryRerollFree",
		8: "ProduceCampaignType_Event",
	}
	ProduceCampaignType_value = map[string]int32{
		"ProduceCampaignType_Unknown":                   0,
		"ProduceCampaignType_ActionPointDown":           1,
		"ProduceCampaignType_MemoryRentalCountUp":       2,
		"ProduceCampaignType_RewardQuantityUp":          3,
		"ProduceCampaignType_ProduceResultRewardAdd":    4,
		"ProduceCampaignType_ProduceResultRewardChange": 5,
		"ProduceCampaignType_MemoryRerollCountUp":       6,
		"ProduceCampaignType_MemoryRerollFree":          7,
		"ProduceCampaignType_Event":                     8,
	}
)

func (x ProduceCampaignType) Enum() *ProduceCampaignType {
	p := new(ProduceCampaignType)
	*p = x
	return p
}

func (x ProduceCampaignType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCampaignType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[97].Descriptor()
}

func (ProduceCampaignType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[97]
}

func (x ProduceCampaignType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCampaignType.Descriptor instead.
func (ProduceCampaignType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{97}
}

type ProduceCardCategory int32

const (
	ProduceCardCategory_ProduceCardCategory_Unknown     ProduceCardCategory = 0
	ProduceCardCategory_ProduceCardCategory_ActiveSkill ProduceCardCategory = 1
	ProduceCardCategory_ProduceCardCategory_MentalSkill ProduceCardCategory = 2
	ProduceCardCategory_ProduceCardCategory_Trouble     ProduceCardCategory = 3
)

// Enum value maps for ProduceCardCategory.
var (
	ProduceCardCategory_name = map[int32]string{
		0: "ProduceCardCategory_Unknown",
		1: "ProduceCardCategory_ActiveSkill",
		2: "ProduceCardCategory_MentalSkill",
		3: "ProduceCardCategory_Trouble",
	}
	ProduceCardCategory_value = map[string]int32{
		"ProduceCardCategory_Unknown":     0,
		"ProduceCardCategory_ActiveSkill": 1,
		"ProduceCardCategory_MentalSkill": 2,
		"ProduceCardCategory_Trouble":     3,
	}
)

func (x ProduceCardCategory) Enum() *ProduceCardCategory {
	p := new(ProduceCardCategory)
	*p = x
	return p
}

func (x ProduceCardCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[98].Descriptor()
}

func (ProduceCardCategory) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[98]
}

func (x ProduceCardCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardCategory.Descriptor instead.
func (ProduceCardCategory) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{98}
}

type ProduceCardGrowEffectType int32

const (
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_Unknown                                ProduceCardGrowEffectType = 0
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonAdd                              ProduceCardGrowEffectType = 1
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonReduce                           ProduceCardGrowEffectType = 2
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonCountAdd                         ProduceCardGrowEffectType = 3
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonCountReduce                      ProduceCardGrowEffectType = 4
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_BlockAdd                               ProduceCardGrowEffectType = 5
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_BlockReduce                            ProduceCardGrowEffectType = 6
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_FullPowerPointAdd                      ProduceCardGrowEffectType = 7
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_FullPowerPointReduce                   ProduceCardGrowEffectType = 8
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostBuffReduce                         ProduceCardGrowEffectType = 10
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostBuffAdd                            ProduceCardGrowEffectType = 11
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostReduce                             ProduceCardGrowEffectType = 12
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostAdd                                ProduceCardGrowEffectType = 13
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostPenetrateReduce                    ProduceCardGrowEffectType = 14
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostPenetrateAdd                       ProduceCardGrowEffectType = 15
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_ParameterBuffTurnAdd                   ProduceCardGrowEffectType = 16
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_ParameterBuffTurnReduce                ProduceCardGrowEffectType = 17
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonBuffAdd                          ProduceCardGrowEffectType = 18
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonBuffReduce                       ProduceCardGrowEffectType = 19
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_ReviewAdd                              ProduceCardGrowEffectType = 20
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_ReviewReduce                           ProduceCardGrowEffectType = 21
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_AggressiveAdd                          ProduceCardGrowEffectType = 22
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_AggressiveReduce                       ProduceCardGrowEffectType = 23
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CardDrawAdd                            ProduceCardGrowEffectType = 24
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CardDrawReduce                         ProduceCardGrowEffectType = 25
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnAdd        ProduceCardGrowEffectType = 26
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnReduce     ProduceCardGrowEffectType = 27
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_StaminaConsumptionDownTurnAdd          ProduceCardGrowEffectType = 28
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_StaminaConsumptionDownTurnReduce       ProduceCardGrowEffectType = 29
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_StaminaConsumptionAddTurnAdd           ProduceCardGrowEffectType = 30
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_StaminaConsumptionAddTurnReduce        ProduceCardGrowEffectType = 31
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_EffectAdd                              ProduceCardGrowEffectType = 32
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_EffectDelete                           ProduceCardGrowEffectType = 33
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_EffectChange                           ProduceCardGrowEffectType = 34
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CardStatusEnchantChange                ProduceCardGrowEffectType = 35
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_PlayTriggerChange                      ProduceCardGrowEffectType = 36
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_PlayEffectTriggerChange                ProduceCardGrowEffectType = 37
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_PlayMovePositionTypeChange             ProduceCardGrowEffectType = 38
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_InitialAdd                             ProduceCardGrowEffectType = 39
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostLessonBuffReduce                   ProduceCardGrowEffectType = 40
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostLessonBuffAdd                      ProduceCardGrowEffectType = 41
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostReviewReduce                       ProduceCardGrowEffectType = 42
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostReviewAdd                          ProduceCardGrowEffectType = 43
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostAggressiveReduce                   ProduceCardGrowEffectType = 44
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostAggressiveAdd                      ProduceCardGrowEffectType = 45
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostParameterBuffReduce                ProduceCardGrowEffectType = 46
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostParameterBuffAdd                   ProduceCardGrowEffectType = 47
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostFullPowerPointReduce               ProduceCardGrowEffectType = 48
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostFullPowerPointAdd                  ProduceCardGrowEffectType = 49
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonDependBlockAdd                   ProduceCardGrowEffectType = 50
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonDependExamCardPlayAggressiveAdd  ProduceCardGrowEffectType = 51
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_LessonDependExamReviewAdd              ProduceCardGrowEffectType = 52
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnAdd    ProduceCardGrowEffectType = 53
	ProduceCardGrowEffectType_ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnReduce ProduceCardGrowEffectType = 54
)

// Enum value maps for ProduceCardGrowEffectType.
var (
	ProduceCardGrowEffectType_name = map[int32]string{
		0:  "ProduceCardGrowEffectType_Unknown",
		1:  "ProduceCardGrowEffectType_LessonAdd",
		2:  "ProduceCardGrowEffectType_LessonReduce",
		3:  "ProduceCardGrowEffectType_LessonCountAdd",
		4:  "ProduceCardGrowEffectType_LessonCountReduce",
		5:  "ProduceCardGrowEffectType_BlockAdd",
		6:  "ProduceCardGrowEffectType_BlockReduce",
		7:  "ProduceCardGrowEffectType_FullPowerPointAdd",
		8:  "ProduceCardGrowEffectType_FullPowerPointReduce",
		10: "ProduceCardGrowEffectType_CostBuffReduce",
		11: "ProduceCardGrowEffectType_CostBuffAdd",
		12: "ProduceCardGrowEffectType_CostReduce",
		13: "ProduceCardGrowEffectType_CostAdd",
		14: "ProduceCardGrowEffectType_CostPenetrateReduce",
		15: "ProduceCardGrowEffectType_CostPenetrateAdd",
		16: "ProduceCardGrowEffectType_ParameterBuffTurnAdd",
		17: "ProduceCardGrowEffectType_ParameterBuffTurnReduce",
		18: "ProduceCardGrowEffectType_LessonBuffAdd",
		19: "ProduceCardGrowEffectType_LessonBuffReduce",
		20: "ProduceCardGrowEffectType_ReviewAdd",
		21: "ProduceCardGrowEffectType_ReviewReduce",
		22: "ProduceCardGrowEffectType_AggressiveAdd",
		23: "ProduceCardGrowEffectType_AggressiveReduce",
		24: "ProduceCardGrowEffectType_CardDrawAdd",
		25: "ProduceCardGrowEffectType_CardDrawReduce",
		26: "ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnAdd",
		27: "ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnReduce",
		28: "ProduceCardGrowEffectType_StaminaConsumptionDownTurnAdd",
		29: "ProduceCardGrowEffectType_StaminaConsumptionDownTurnReduce",
		30: "ProduceCardGrowEffectType_StaminaConsumptionAddTurnAdd",
		31: "ProduceCardGrowEffectType_StaminaConsumptionAddTurnReduce",
		32: "ProduceCardGrowEffectType_EffectAdd",
		33: "ProduceCardGrowEffectType_EffectDelete",
		34: "ProduceCardGrowEffectType_EffectChange",
		35: "ProduceCardGrowEffectType_CardStatusEnchantChange",
		36: "ProduceCardGrowEffectType_PlayTriggerChange",
		37: "ProduceCardGrowEffectType_PlayEffectTriggerChange",
		38: "ProduceCardGrowEffectType_PlayMovePositionTypeChange",
		39: "ProduceCardGrowEffectType_InitialAdd",
		40: "ProduceCardGrowEffectType_CostLessonBuffReduce",
		41: "ProduceCardGrowEffectType_CostLessonBuffAdd",
		42: "ProduceCardGrowEffectType_CostReviewReduce",
		43: "ProduceCardGrowEffectType_CostReviewAdd",
		44: "ProduceCardGrowEffectType_CostAggressiveReduce",
		45: "ProduceCardGrowEffectType_CostAggressiveAdd",
		46: "ProduceCardGrowEffectType_CostParameterBuffReduce",
		47: "ProduceCardGrowEffectType_CostParameterBuffAdd",
		48: "ProduceCardGrowEffectType_CostFullPowerPointReduce",
		49: "ProduceCardGrowEffectType_CostFullPowerPointAdd",
		50: "ProduceCardGrowEffectType_LessonDependBlockAdd",
		51: "ProduceCardGrowEffectType_LessonDependExamCardPlayAggressiveAdd",
		52: "ProduceCardGrowEffectType_LessonDependExamReviewAdd",
		53: "ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnAdd",
		54: "ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnReduce",
	}
	ProduceCardGrowEffectType_value = map[string]int32{
		"ProduceCardGrowEffectType_Unknown":                                0,
		"ProduceCardGrowEffectType_LessonAdd":                              1,
		"ProduceCardGrowEffectType_LessonReduce":                           2,
		"ProduceCardGrowEffectType_LessonCountAdd":                         3,
		"ProduceCardGrowEffectType_LessonCountReduce":                      4,
		"ProduceCardGrowEffectType_BlockAdd":                               5,
		"ProduceCardGrowEffectType_BlockReduce":                            6,
		"ProduceCardGrowEffectType_FullPowerPointAdd":                      7,
		"ProduceCardGrowEffectType_FullPowerPointReduce":                   8,
		"ProduceCardGrowEffectType_CostBuffReduce":                         10,
		"ProduceCardGrowEffectType_CostBuffAdd":                            11,
		"ProduceCardGrowEffectType_CostReduce":                             12,
		"ProduceCardGrowEffectType_CostAdd":                                13,
		"ProduceCardGrowEffectType_CostPenetrateReduce":                    14,
		"ProduceCardGrowEffectType_CostPenetrateAdd":                       15,
		"ProduceCardGrowEffectType_ParameterBuffTurnAdd":                   16,
		"ProduceCardGrowEffectType_ParameterBuffTurnReduce":                17,
		"ProduceCardGrowEffectType_LessonBuffAdd":                          18,
		"ProduceCardGrowEffectType_LessonBuffReduce":                       19,
		"ProduceCardGrowEffectType_ReviewAdd":                              20,
		"ProduceCardGrowEffectType_ReviewReduce":                           21,
		"ProduceCardGrowEffectType_AggressiveAdd":                          22,
		"ProduceCardGrowEffectType_AggressiveReduce":                       23,
		"ProduceCardGrowEffectType_CardDrawAdd":                            24,
		"ProduceCardGrowEffectType_CardDrawReduce":                         25,
		"ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnAdd":        26,
		"ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnReduce":     27,
		"ProduceCardGrowEffectType_StaminaConsumptionDownTurnAdd":          28,
		"ProduceCardGrowEffectType_StaminaConsumptionDownTurnReduce":       29,
		"ProduceCardGrowEffectType_StaminaConsumptionAddTurnAdd":           30,
		"ProduceCardGrowEffectType_StaminaConsumptionAddTurnReduce":        31,
		"ProduceCardGrowEffectType_EffectAdd":                              32,
		"ProduceCardGrowEffectType_EffectDelete":                           33,
		"ProduceCardGrowEffectType_EffectChange":                           34,
		"ProduceCardGrowEffectType_CardStatusEnchantChange":                35,
		"ProduceCardGrowEffectType_PlayTriggerChange":                      36,
		"ProduceCardGrowEffectType_PlayEffectTriggerChange":                37,
		"ProduceCardGrowEffectType_PlayMovePositionTypeChange":             38,
		"ProduceCardGrowEffectType_InitialAdd":                             39,
		"ProduceCardGrowEffectType_CostLessonBuffReduce":                   40,
		"ProduceCardGrowEffectType_CostLessonBuffAdd":                      41,
		"ProduceCardGrowEffectType_CostReviewReduce":                       42,
		"ProduceCardGrowEffectType_CostReviewAdd":                          43,
		"ProduceCardGrowEffectType_CostAggressiveReduce":                   44,
		"ProduceCardGrowEffectType_CostAggressiveAdd":                      45,
		"ProduceCardGrowEffectType_CostParameterBuffReduce":                46,
		"ProduceCardGrowEffectType_CostParameterBuffAdd":                   47,
		"ProduceCardGrowEffectType_CostFullPowerPointReduce":               48,
		"ProduceCardGrowEffectType_CostFullPowerPointAdd":                  49,
		"ProduceCardGrowEffectType_LessonDependBlockAdd":                   50,
		"ProduceCardGrowEffectType_LessonDependExamCardPlayAggressiveAdd":  51,
		"ProduceCardGrowEffectType_LessonDependExamReviewAdd":              52,
		"ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnAdd":    53,
		"ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnReduce": 54,
	}
)

func (x ProduceCardGrowEffectType) Enum() *ProduceCardGrowEffectType {
	p := new(ProduceCardGrowEffectType)
	*p = x
	return p
}

func (x ProduceCardGrowEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardGrowEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[99].Descriptor()
}

func (ProduceCardGrowEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[99]
}

func (x ProduceCardGrowEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardGrowEffectType.Descriptor instead.
func (ProduceCardGrowEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{99}
}

type ProduceCardMoveEffectTriggerType int32

const (
	ProduceCardMoveEffectTriggerType_ProduceCardMoveEffectTriggerType_Unknown ProduceCardMoveEffectTriggerType = 0
	ProduceCardMoveEffectTriggerType_ProduceCardMoveEffectTriggerType_Lost    ProduceCardMoveEffectTriggerType = 1
	ProduceCardMoveEffectTriggerType_ProduceCardMoveEffectTriggerType_Grave   ProduceCardMoveEffectTriggerType = 2
	ProduceCardMoveEffectTriggerType_ProduceCardMoveEffectTriggerType_Draw    ProduceCardMoveEffectTriggerType = 3
	ProduceCardMoveEffectTriggerType_ProduceCardMoveEffectTriggerType_Hold    ProduceCardMoveEffectTriggerType = 4
)

// Enum value maps for ProduceCardMoveEffectTriggerType.
var (
	ProduceCardMoveEffectTriggerType_name = map[int32]string{
		0: "ProduceCardMoveEffectTriggerType_Unknown",
		1: "ProduceCardMoveEffectTriggerType_Lost",
		2: "ProduceCardMoveEffectTriggerType_Grave",
		3: "ProduceCardMoveEffectTriggerType_Draw",
		4: "ProduceCardMoveEffectTriggerType_Hold",
	}
	ProduceCardMoveEffectTriggerType_value = map[string]int32{
		"ProduceCardMoveEffectTriggerType_Unknown": 0,
		"ProduceCardMoveEffectTriggerType_Lost":    1,
		"ProduceCardMoveEffectTriggerType_Grave":   2,
		"ProduceCardMoveEffectTriggerType_Draw":    3,
		"ProduceCardMoveEffectTriggerType_Hold":    4,
	}
)

func (x ProduceCardMoveEffectTriggerType) Enum() *ProduceCardMoveEffectTriggerType {
	p := new(ProduceCardMoveEffectTriggerType)
	*p = x
	return p
}

func (x ProduceCardMoveEffectTriggerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardMoveEffectTriggerType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[100].Descriptor()
}

func (ProduceCardMoveEffectTriggerType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[100]
}

func (x ProduceCardMoveEffectTriggerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardMoveEffectTriggerType.Descriptor instead.
func (ProduceCardMoveEffectTriggerType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{100}
}

type ProduceCardMovePositionType int32

const (
	ProduceCardMovePositionType_ProduceCardMovePositionType_Unknown    ProduceCardMovePositionType = 0
	ProduceCardMovePositionType_ProduceCardMovePositionType_Hand       ProduceCardMovePositionType = 1
	ProduceCardMovePositionType_ProduceCardMovePositionType_DeckFirst  ProduceCardMovePositionType = 2
	ProduceCardMovePositionType_ProduceCardMovePositionType_DeckLast   ProduceCardMovePositionType = 3
	ProduceCardMovePositionType_ProduceCardMovePositionType_DeckRandom ProduceCardMovePositionType = 4
	ProduceCardMovePositionType_ProduceCardMovePositionType_Grave      ProduceCardMovePositionType = 5
	ProduceCardMovePositionType_ProduceCardMovePositionType_Lost       ProduceCardMovePositionType = 6
	ProduceCardMovePositionType_ProduceCardMovePositionType_Hold       ProduceCardMovePositionType = 7
)

// Enum value maps for ProduceCardMovePositionType.
var (
	ProduceCardMovePositionType_name = map[int32]string{
		0: "ProduceCardMovePositionType_Unknown",
		1: "ProduceCardMovePositionType_Hand",
		2: "ProduceCardMovePositionType_DeckFirst",
		3: "ProduceCardMovePositionType_DeckLast",
		4: "ProduceCardMovePositionType_DeckRandom",
		5: "ProduceCardMovePositionType_Grave",
		6: "ProduceCardMovePositionType_Lost",
		7: "ProduceCardMovePositionType_Hold",
	}
	ProduceCardMovePositionType_value = map[string]int32{
		"ProduceCardMovePositionType_Unknown":    0,
		"ProduceCardMovePositionType_Hand":       1,
		"ProduceCardMovePositionType_DeckFirst":  2,
		"ProduceCardMovePositionType_DeckLast":   3,
		"ProduceCardMovePositionType_DeckRandom": 4,
		"ProduceCardMovePositionType_Grave":      5,
		"ProduceCardMovePositionType_Lost":       6,
		"ProduceCardMovePositionType_Hold":       7,
	}
)

func (x ProduceCardMovePositionType) Enum() *ProduceCardMovePositionType {
	p := new(ProduceCardMovePositionType)
	*p = x
	return p
}

func (x ProduceCardMovePositionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardMovePositionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[101].Descriptor()
}

func (ProduceCardMovePositionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[101]
}

func (x ProduceCardMovePositionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardMovePositionType.Descriptor instead.
func (ProduceCardMovePositionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{101}
}

type ProduceCardOrderType int32

const (
	ProduceCardOrderType_ProduceCardOrderType_Unknown ProduceCardOrderType = 0
	ProduceCardOrderType_ProduceCardOrderType_First   ProduceCardOrderType = 1
	ProduceCardOrderType_ProduceCardOrderType_Last    ProduceCardOrderType = 2
	ProduceCardOrderType_ProduceCardOrderType_Random  ProduceCardOrderType = 3
)

// Enum value maps for ProduceCardOrderType.
var (
	ProduceCardOrderType_name = map[int32]string{
		0: "ProduceCardOrderType_Unknown",
		1: "ProduceCardOrderType_First",
		2: "ProduceCardOrderType_Last",
		3: "ProduceCardOrderType_Random",
	}
	ProduceCardOrderType_value = map[string]int32{
		"ProduceCardOrderType_Unknown": 0,
		"ProduceCardOrderType_First":   1,
		"ProduceCardOrderType_Last":    2,
		"ProduceCardOrderType_Random":  3,
	}
)

func (x ProduceCardOrderType) Enum() *ProduceCardOrderType {
	p := new(ProduceCardOrderType)
	*p = x
	return p
}

func (x ProduceCardOrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardOrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[102].Descriptor()
}

func (ProduceCardOrderType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[102]
}

func (x ProduceCardOrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardOrderType.Descriptor instead.
func (ProduceCardOrderType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{102}
}

type ProduceCardPositionType int32

const (
	ProduceCardPositionType_ProduceCardPositionType_Unknown    ProduceCardPositionType = 0
	ProduceCardPositionType_ProduceCardPositionType_None       ProduceCardPositionType = 1
	ProduceCardPositionType_ProduceCardPositionType_Hand       ProduceCardPositionType = 2
	ProduceCardPositionType_ProduceCardPositionType_Deck       ProduceCardPositionType = 3
	ProduceCardPositionType_ProduceCardPositionType_Grave      ProduceCardPositionType = 4
	ProduceCardPositionType_ProduceCardPositionType_Lost       ProduceCardPositionType = 5
	ProduceCardPositionType_ProduceCardPositionType_DeckAll    ProduceCardPositionType = 6
	ProduceCardPositionType_ProduceCardPositionType_RandomPool ProduceCardPositionType = 7
	ProduceCardPositionType_ProduceCardPositionType_Playing    ProduceCardPositionType = 8
	ProduceCardPositionType_ProduceCardPositionType_PlayHand   ProduceCardPositionType = 9
	ProduceCardPositionType_ProduceCardPositionType_Target     ProduceCardPositionType = 11
	ProduceCardPositionType_ProduceCardPositionType_Self       ProduceCardPositionType = 12
	ProduceCardPositionType_ProduceCardPositionType_Hold       ProduceCardPositionType = 13
	ProduceCardPositionType_ProduceCardPositionType_DeckGrave  ProduceCardPositionType = 14
)

// Enum value maps for ProduceCardPositionType.
var (
	ProduceCardPositionType_name = map[int32]string{
		0:  "ProduceCardPositionType_Unknown",
		1:  "ProduceCardPositionType_None",
		2:  "ProduceCardPositionType_Hand",
		3:  "ProduceCardPositionType_Deck",
		4:  "ProduceCardPositionType_Grave",
		5:  "ProduceCardPositionType_Lost",
		6:  "ProduceCardPositionType_DeckAll",
		7:  "ProduceCardPositionType_RandomPool",
		8:  "ProduceCardPositionType_Playing",
		9:  "ProduceCardPositionType_PlayHand",
		11: "ProduceCardPositionType_Target",
		12: "ProduceCardPositionType_Self",
		13: "ProduceCardPositionType_Hold",
		14: "ProduceCardPositionType_DeckGrave",
	}
	ProduceCardPositionType_value = map[string]int32{
		"ProduceCardPositionType_Unknown":    0,
		"ProduceCardPositionType_None":       1,
		"ProduceCardPositionType_Hand":       2,
		"ProduceCardPositionType_Deck":       3,
		"ProduceCardPositionType_Grave":      4,
		"ProduceCardPositionType_Lost":       5,
		"ProduceCardPositionType_DeckAll":    6,
		"ProduceCardPositionType_RandomPool": 7,
		"ProduceCardPositionType_Playing":    8,
		"ProduceCardPositionType_PlayHand":   9,
		"ProduceCardPositionType_Target":     11,
		"ProduceCardPositionType_Self":       12,
		"ProduceCardPositionType_Hold":       13,
		"ProduceCardPositionType_DeckGrave":  14,
	}
)

func (x ProduceCardPositionType) Enum() *ProduceCardPositionType {
	p := new(ProduceCardPositionType)
	*p = x
	return p
}

func (x ProduceCardPositionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardPositionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[103].Descriptor()
}

func (ProduceCardPositionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[103]
}

func (x ProduceCardPositionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardPositionType.Descriptor instead.
func (ProduceCardPositionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{103}
}

type ProduceCardRarity int32

const (
	ProduceCardRarity_ProduceCardRarity_Unknown ProduceCardRarity = 0
	ProduceCardRarity_ProduceCardRarity_N       ProduceCardRarity = 1
	ProduceCardRarity_ProduceCardRarity_R       ProduceCardRarity = 2
	ProduceCardRarity_ProduceCardRarity_Sr      ProduceCardRarity = 3
	ProduceCardRarity_ProduceCardRarity_Ssr     ProduceCardRarity = 4
)

// Enum value maps for ProduceCardRarity.
var (
	ProduceCardRarity_name = map[int32]string{
		0: "ProduceCardRarity_Unknown",
		1: "ProduceCardRarity_N",
		2: "ProduceCardRarity_R",
		3: "ProduceCardRarity_Sr",
		4: "ProduceCardRarity_Ssr",
	}
	ProduceCardRarity_value = map[string]int32{
		"ProduceCardRarity_Unknown": 0,
		"ProduceCardRarity_N":       1,
		"ProduceCardRarity_R":       2,
		"ProduceCardRarity_Sr":      3,
		"ProduceCardRarity_Ssr":     4,
	}
)

func (x ProduceCardRarity) Enum() *ProduceCardRarity {
	p := new(ProduceCardRarity)
	*p = x
	return p
}

func (x ProduceCardRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[104].Descriptor()
}

func (ProduceCardRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[104]
}

func (x ProduceCardRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardRarity.Descriptor instead.
func (ProduceCardRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{104}
}

type ProduceCardSearchStatusType int32

const (
	ProduceCardSearchStatusType_ProduceCardSearchStatusType_Unknown     ProduceCardSearchStatusType = 0
	ProduceCardSearchStatusType_ProduceCardSearchStatusType_LostPlay    ProduceCardSearchStatusType = 1
	ProduceCardSearchStatusType_ProduceCardSearchStatusType_EndTurnLost ProduceCardSearchStatusType = 2
	ProduceCardSearchStatusType_ProduceCardSearchStatusType_Initial     ProduceCardSearchStatusType = 4
	ProduceCardSearchStatusType_ProduceCardSearchStatusType_Restrict    ProduceCardSearchStatusType = 5
)

// Enum value maps for ProduceCardSearchStatusType.
var (
	ProduceCardSearchStatusType_name = map[int32]string{
		0: "ProduceCardSearchStatusType_Unknown",
		1: "ProduceCardSearchStatusType_LostPlay",
		2: "ProduceCardSearchStatusType_EndTurnLost",
		4: "ProduceCardSearchStatusType_Initial",
		5: "ProduceCardSearchStatusType_Restrict",
	}
	ProduceCardSearchStatusType_value = map[string]int32{
		"ProduceCardSearchStatusType_Unknown":     0,
		"ProduceCardSearchStatusType_LostPlay":    1,
		"ProduceCardSearchStatusType_EndTurnLost": 2,
		"ProduceCardSearchStatusType_Initial":     4,
		"ProduceCardSearchStatusType_Restrict":    5,
	}
)

func (x ProduceCardSearchStatusType) Enum() *ProduceCardSearchStatusType {
	p := new(ProduceCardSearchStatusType)
	*p = x
	return p
}

func (x ProduceCardSearchStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceCardSearchStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[105].Descriptor()
}

func (ProduceCardSearchStatusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[105]
}

func (x ProduceCardSearchStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceCardSearchStatusType.Descriptor instead.
func (ProduceCardSearchStatusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{105}
}

type ProduceConditionType int32

const (
	ProduceConditionType_ProduceConditionType_Unknown                          ProduceConditionType = 0
	ProduceConditionType_ProduceConditionType_EventOccurred                    ProduceConditionType = 1
	ProduceConditionType_ProduceConditionType_EventNotOccurred                 ProduceConditionType = 2
	ProduceConditionType_ProduceConditionType_SupportCard                      ProduceConditionType = 3
	ProduceConditionType_ProduceConditionType_MemoryCharacter                  ProduceConditionType = 4
	ProduceConditionType_ProduceConditionType_SelectStepCount                  ProduceConditionType = 6
	ProduceConditionType_ProduceConditionType_ProduceCardUpgradeCount          ProduceConditionType = 9
	ProduceConditionType_ProduceConditionType_ProduceCardDeleteCount           ProduceConditionType = 10
	ProduceConditionType_ProduceConditionType_CurrentStepCountPermil           ProduceConditionType = 12
	ProduceConditionType_ProduceConditionType_LessonClearCount                 ProduceConditionType = 13
	ProduceConditionType_ProduceConditionType_CurrentStepCount                 ProduceConditionType = 14
	ProduceConditionType_ProduceConditionType_Vocal                            ProduceConditionType = 15
	ProduceConditionType_ProduceConditionType_Dance                            ProduceConditionType = 16
	ProduceConditionType_ProduceConditionType_Visual                           ProduceConditionType = 17
	ProduceConditionType_ProduceConditionType_Stamina                          ProduceConditionType = 18
	ProduceConditionType_ProduceConditionType_ProducePoint                     ProduceConditionType = 20
	ProduceConditionType_ProduceConditionType_HasProduceCard                   ProduceConditionType = 21
	ProduceConditionType_ProduceConditionType_ProduceCardCount                 ProduceConditionType = 22
	ProduceConditionType_ProduceConditionType_ProduceDrinkCount                ProduceConditionType = 23
	ProduceConditionType_ProduceConditionType_ProduceItemCount                 ProduceConditionType = 24
	ProduceConditionType_ProduceConditionType_ShopPreviousConsumedProducePoint ProduceConditionType = 26
	ProduceConditionType_ProduceConditionType_ShopProduceCardBuyCount          ProduceConditionType = 27
	ProduceConditionType_ProduceConditionType_ShopProduceItemBuyCount          ProduceConditionType = 28
	ProduceConditionType_ProduceConditionType_ShopProduceDrinkBuyCount         ProduceConditionType = 29
	ProduceConditionType_ProduceConditionType_LessonVocalScore                 ProduceConditionType = 30
	ProduceConditionType_ProduceConditionType_LessonDanceScore                 ProduceConditionType = 31
	ProduceConditionType_ProduceConditionType_LessonVisualScore                ProduceConditionType = 32
	ProduceConditionType_ProduceConditionType_ProduceEffectTypeCount           ProduceConditionType = 33
	ProduceConditionType_ProduceConditionType_AuditionMid1Score                ProduceConditionType = 34
	ProduceConditionType_ProduceConditionType_AuditionMid2Score                ProduceConditionType = 35
	ProduceConditionType_ProduceConditionType_AuditionFinalScore               ProduceConditionType = 36
	ProduceConditionType_ProduceConditionType_AuditionMid1Pass                 ProduceConditionType = 37
	ProduceConditionType_ProduceConditionType_AuditionMid2Pass                 ProduceConditionType = 38
	ProduceConditionType_ProduceConditionType_AuditionFinalPass                ProduceConditionType = 39
	ProduceConditionType_ProduceConditionType_SelectStepCountVocalLesson       ProduceConditionType = 43
	ProduceConditionType_ProduceConditionType_SelectStepCountDanceLesson       ProduceConditionType = 44
	ProduceConditionType_ProduceConditionType_SelectStepCountVisualLesson      ProduceConditionType = 45
	ProduceConditionType_ProduceConditionType_SelectableStep                   ProduceConditionType = 46
	ProduceConditionType_ProduceConditionType_NextAuditionBaseVocalPermil      ProduceConditionType = 47
	ProduceConditionType_ProduceConditionType_NextAuditionBaseDancePermil      ProduceConditionType = 48
	ProduceConditionType_ProduceConditionType_NextAuditionBaseVisualPermil     ProduceConditionType = 49
	ProduceConditionType_ProduceConditionType_DearnessLevel                    ProduceConditionType = 50
	ProduceConditionType_ProduceConditionType_ClearProduceAchievement          ProduceConditionType = 51
	ProduceConditionType_ProduceConditionType_ConditionSet                     ProduceConditionType = 52
	ProduceConditionType_ProduceConditionType_CurrentProduce                   ProduceConditionType = 53
	ProduceConditionType_ProduceConditionType_ProduceScoreGrade                ProduceConditionType = 55
	ProduceConditionType_ProduceConditionType_ProduceScore                     ProduceConditionType = 56
	ProduceConditionType_ProduceConditionType_Character                        ProduceConditionType = 57
	ProduceConditionType_ProduceConditionType_IdolCard                         ProduceConditionType = 58
	ProduceConditionType_ProduceConditionType_IdolCardExamEffectType           ProduceConditionType = 59
	ProduceConditionType_ProduceConditionType_LatestAuditionRank               ProduceConditionType = 60
	ProduceConditionType_ProduceConditionType_LatestAuditionReachForceEndScore ProduceConditionType = 61
	ProduceConditionType_ProduceConditionType_LatestAuditionBaseScorePermil    ProduceConditionType = 62
	ProduceConditionType_ProduceConditionType_LatestAuditionExamSkipCount      ProduceConditionType = 63
	ProduceConditionType_ProduceConditionType_Result                           ProduceConditionType = 64
	ProduceConditionType_ProduceConditionType_NextAuditionEasyBaseVocalPermil  ProduceConditionType = 65
	ProduceConditionType_ProduceConditionType_NextAuditionEasyBaseDancePermil  ProduceConditionType = 66
	ProduceConditionType_ProduceConditionType_NextAuditionEasyBaseVisualPermil ProduceConditionType = 67
	ProduceConditionType_ProduceConditionType_ProduceCardGet                   ProduceConditionType = 68
	ProduceConditionType_ProduceConditionType_ProduceDrinkGet                  ProduceConditionType = 69
	ProduceConditionType_ProduceConditionType_ProduceItemGet                   ProduceConditionType = 70
	ProduceConditionType_ProduceConditionType_ProduceCardUseCount              ProduceConditionType = 71
	ProduceConditionType_ProduceConditionType_ProduceDrinkUseCount             ProduceConditionType = 72
	ProduceConditionType_ProduceConditionType_ProduceItemUseCount              ProduceConditionType = 73
	ProduceConditionType_ProduceConditionType_ExamTriggerCount                 ProduceConditionType = 74
	ProduceConditionType_ProduceConditionType_LessonExamTriggerCount           ProduceConditionType = 75
	ProduceConditionType_ProduceConditionType_AuditionExamTriggerCount         ProduceConditionType = 76
	ProduceConditionType_ProduceConditionType_IdolCardProducePlanType          ProduceConditionType = 77
	ProduceConditionType_ProduceConditionType_VoteCount                        ProduceConditionType = 78
	ProduceConditionType_ProduceConditionType_LatestAuditionStepSelectNumber   ProduceConditionType = 79
	ProduceConditionType_ProduceConditionType_CurrentAuditionStepType          ProduceConditionType = 80
	ProduceConditionType_ProduceConditionType_CurrentAuditionStepSelectNumber  ProduceConditionType = 81
	ProduceConditionType_ProduceConditionType_DearnessPoint                    ProduceConditionType = 82
	ProduceConditionType_ProduceConditionType_Set                              ProduceConditionType = 998
	ProduceConditionType_ProduceConditionType_NegativeSet                      ProduceConditionType = 999
)

// Enum value maps for ProduceConditionType.
var (
	ProduceConditionType_name = map[int32]string{
		0:   "ProduceConditionType_Unknown",
		1:   "ProduceConditionType_EventOccurred",
		2:   "ProduceConditionType_EventNotOccurred",
		3:   "ProduceConditionType_SupportCard",
		4:   "ProduceConditionType_MemoryCharacter",
		6:   "ProduceConditionType_SelectStepCount",
		9:   "ProduceConditionType_ProduceCardUpgradeCount",
		10:  "ProduceConditionType_ProduceCardDeleteCount",
		12:  "ProduceConditionType_CurrentStepCountPermil",
		13:  "ProduceConditionType_LessonClearCount",
		14:  "ProduceConditionType_CurrentStepCount",
		15:  "ProduceConditionType_Vocal",
		16:  "ProduceConditionType_Dance",
		17:  "ProduceConditionType_Visual",
		18:  "ProduceConditionType_Stamina",
		20:  "ProduceConditionType_ProducePoint",
		21:  "ProduceConditionType_HasProduceCard",
		22:  "ProduceConditionType_ProduceCardCount",
		23:  "ProduceConditionType_ProduceDrinkCount",
		24:  "ProduceConditionType_ProduceItemCount",
		26:  "ProduceConditionType_ShopPreviousConsumedProducePoint",
		27:  "ProduceConditionType_ShopProduceCardBuyCount",
		28:  "ProduceConditionType_ShopProduceItemBuyCount",
		29:  "ProduceConditionType_ShopProduceDrinkBuyCount",
		30:  "ProduceConditionType_LessonVocalScore",
		31:  "ProduceConditionType_LessonDanceScore",
		32:  "ProduceConditionType_LessonVisualScore",
		33:  "ProduceConditionType_ProduceEffectTypeCount",
		34:  "ProduceConditionType_AuditionMid1Score",
		35:  "ProduceConditionType_AuditionMid2Score",
		36:  "ProduceConditionType_AuditionFinalScore",
		37:  "ProduceConditionType_AuditionMid1Pass",
		38:  "ProduceConditionType_AuditionMid2Pass",
		39:  "ProduceConditionType_AuditionFinalPass",
		43:  "ProduceConditionType_SelectStepCountVocalLesson",
		44:  "ProduceConditionType_SelectStepCountDanceLesson",
		45:  "ProduceConditionType_SelectStepCountVisualLesson",
		46:  "ProduceConditionType_SelectableStep",
		47:  "ProduceConditionType_NextAuditionBaseVocalPermil",
		48:  "ProduceConditionType_NextAuditionBaseDancePermil",
		49:  "ProduceConditionType_NextAuditionBaseVisualPermil",
		50:  "ProduceConditionType_DearnessLevel",
		51:  "ProduceConditionType_ClearProduceAchievement",
		52:  "ProduceConditionType_ConditionSet",
		53:  "ProduceConditionType_CurrentProduce",
		55:  "ProduceConditionType_ProduceScoreGrade",
		56:  "ProduceConditionType_ProduceScore",
		57:  "ProduceConditionType_Character",
		58:  "ProduceConditionType_IdolCard",
		59:  "ProduceConditionType_IdolCardExamEffectType",
		60:  "ProduceConditionType_LatestAuditionRank",
		61:  "ProduceConditionType_LatestAuditionReachForceEndScore",
		62:  "ProduceConditionType_LatestAuditionBaseScorePermil",
		63:  "ProduceConditionType_LatestAuditionExamSkipCount",
		64:  "ProduceConditionType_Result",
		65:  "ProduceConditionType_NextAuditionEasyBaseVocalPermil",
		66:  "ProduceConditionType_NextAuditionEasyBaseDancePermil",
		67:  "ProduceConditionType_NextAuditionEasyBaseVisualPermil",
		68:  "ProduceConditionType_ProduceCardGet",
		69:  "ProduceConditionType_ProduceDrinkGet",
		70:  "ProduceConditionType_ProduceItemGet",
		71:  "ProduceConditionType_ProduceCardUseCount",
		72:  "ProduceConditionType_ProduceDrinkUseCount",
		73:  "ProduceConditionType_ProduceItemUseCount",
		74:  "ProduceConditionType_ExamTriggerCount",
		75:  "ProduceConditionType_LessonExamTriggerCount",
		76:  "ProduceConditionType_AuditionExamTriggerCount",
		77:  "ProduceConditionType_IdolCardProducePlanType",
		78:  "ProduceConditionType_VoteCount",
		79:  "ProduceConditionType_LatestAuditionStepSelectNumber",
		80:  "ProduceConditionType_CurrentAuditionStepType",
		81:  "ProduceConditionType_CurrentAuditionStepSelectNumber",
		82:  "ProduceConditionType_DearnessPoint",
		998: "ProduceConditionType_Set",
		999: "ProduceConditionType_NegativeSet",
	}
	ProduceConditionType_value = map[string]int32{
		"ProduceConditionType_Unknown":                          0,
		"ProduceConditionType_EventOccurred":                    1,
		"ProduceConditionType_EventNotOccurred":                 2,
		"ProduceConditionType_SupportCard":                      3,
		"ProduceConditionType_MemoryCharacter":                  4,
		"ProduceConditionType_SelectStepCount":                  6,
		"ProduceConditionType_ProduceCardUpgradeCount":          9,
		"ProduceConditionType_ProduceCardDeleteCount":           10,
		"ProduceConditionType_CurrentStepCountPermil":           12,
		"ProduceConditionType_LessonClearCount":                 13,
		"ProduceConditionType_CurrentStepCount":                 14,
		"ProduceConditionType_Vocal":                            15,
		"ProduceConditionType_Dance":                            16,
		"ProduceConditionType_Visual":                           17,
		"ProduceConditionType_Stamina":                          18,
		"ProduceConditionType_ProducePoint":                     20,
		"ProduceConditionType_HasProduceCard":                   21,
		"ProduceConditionType_ProduceCardCount":                 22,
		"ProduceConditionType_ProduceDrinkCount":                23,
		"ProduceConditionType_ProduceItemCount":                 24,
		"ProduceConditionType_ShopPreviousConsumedProducePoint": 26,
		"ProduceConditionType_ShopProduceCardBuyCount":          27,
		"ProduceConditionType_ShopProduceItemBuyCount":          28,
		"ProduceConditionType_ShopProduceDrinkBuyCount":         29,
		"ProduceConditionType_LessonVocalScore":                 30,
		"ProduceConditionType_LessonDanceScore":                 31,
		"ProduceConditionType_LessonVisualScore":                32,
		"ProduceConditionType_ProduceEffectTypeCount":           33,
		"ProduceConditionType_AuditionMid1Score":                34,
		"ProduceConditionType_AuditionMid2Score":                35,
		"ProduceConditionType_AuditionFinalScore":               36,
		"ProduceConditionType_AuditionMid1Pass":                 37,
		"ProduceConditionType_AuditionMid2Pass":                 38,
		"ProduceConditionType_AuditionFinalPass":                39,
		"ProduceConditionType_SelectStepCountVocalLesson":       43,
		"ProduceConditionType_SelectStepCountDanceLesson":       44,
		"ProduceConditionType_SelectStepCountVisualLesson":      45,
		"ProduceConditionType_SelectableStep":                   46,
		"ProduceConditionType_NextAuditionBaseVocalPermil":      47,
		"ProduceConditionType_NextAuditionBaseDancePermil":      48,
		"ProduceConditionType_NextAuditionBaseVisualPermil":     49,
		"ProduceConditionType_DearnessLevel":                    50,
		"ProduceConditionType_ClearProduceAchievement":          51,
		"ProduceConditionType_ConditionSet":                     52,
		"ProduceConditionType_CurrentProduce":                   53,
		"ProduceConditionType_ProduceScoreGrade":                55,
		"ProduceConditionType_ProduceScore":                     56,
		"ProduceConditionType_Character":                        57,
		"ProduceConditionType_IdolCard":                         58,
		"ProduceConditionType_IdolCardExamEffectType":           59,
		"ProduceConditionType_LatestAuditionRank":               60,
		"ProduceConditionType_LatestAuditionReachForceEndScore": 61,
		"ProduceConditionType_LatestAuditionBaseScorePermil":    62,
		"ProduceConditionType_LatestAuditionExamSkipCount":      63,
		"ProduceConditionType_Result":                           64,
		"ProduceConditionType_NextAuditionEasyBaseVocalPermil":  65,
		"ProduceConditionType_NextAuditionEasyBaseDancePermil":  66,
		"ProduceConditionType_NextAuditionEasyBaseVisualPermil": 67,
		"ProduceConditionType_ProduceCardGet":                   68,
		"ProduceConditionType_ProduceDrinkGet":                  69,
		"ProduceConditionType_ProduceItemGet":                   70,
		"ProduceConditionType_ProduceCardUseCount":              71,
		"ProduceConditionType_ProduceDrinkUseCount":             72,
		"ProduceConditionType_ProduceItemUseCount":              73,
		"ProduceConditionType_ExamTriggerCount":                 74,
		"ProduceConditionType_LessonExamTriggerCount":           75,
		"ProduceConditionType_AuditionExamTriggerCount":         76,
		"ProduceConditionType_IdolCardProducePlanType":          77,
		"ProduceConditionType_VoteCount":                        78,
		"ProduceConditionType_LatestAuditionStepSelectNumber":   79,
		"ProduceConditionType_CurrentAuditionStepType":          80,
		"ProduceConditionType_CurrentAuditionStepSelectNumber":  81,
		"ProduceConditionType_DearnessPoint":                    82,
		"ProduceConditionType_Set":                              998,
		"ProduceConditionType_NegativeSet":                      999,
	}
)

func (x ProduceConditionType) Enum() *ProduceConditionType {
	p := new(ProduceConditionType)
	*p = x
	return p
}

func (x ProduceConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[106].Descriptor()
}

func (ProduceConditionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[106]
}

func (x ProduceConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceConditionType.Descriptor instead.
func (ProduceConditionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{106}
}

type ProduceDescriptionSwapType int32

const (
	ProduceDescriptionSwapType_ProduceDescriptionSwapType_Unknown  ProduceDescriptionSwapType = 0
	ProduceDescriptionSwapType_ProduceDescriptionSwapType_Lesson   ProduceDescriptionSwapType = 1
	ProduceDescriptionSwapType_ProduceDescriptionSwapType_Audition ProduceDescriptionSwapType = 2
	ProduceDescriptionSwapType_ProduceDescriptionSwapType_Contest  ProduceDescriptionSwapType = 3
)

// Enum value maps for ProduceDescriptionSwapType.
var (
	ProduceDescriptionSwapType_name = map[int32]string{
		0: "ProduceDescriptionSwapType_Unknown",
		1: "ProduceDescriptionSwapType_Lesson",
		2: "ProduceDescriptionSwapType_Audition",
		3: "ProduceDescriptionSwapType_Contest",
	}
	ProduceDescriptionSwapType_value = map[string]int32{
		"ProduceDescriptionSwapType_Unknown":  0,
		"ProduceDescriptionSwapType_Lesson":   1,
		"ProduceDescriptionSwapType_Audition": 2,
		"ProduceDescriptionSwapType_Contest":  3,
	}
)

func (x ProduceDescriptionSwapType) Enum() *ProduceDescriptionSwapType {
	p := new(ProduceDescriptionSwapType)
	*p = x
	return p
}

func (x ProduceDescriptionSwapType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceDescriptionSwapType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[107].Descriptor()
}

func (ProduceDescriptionSwapType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[107]
}

func (x ProduceDescriptionSwapType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceDescriptionSwapType.Descriptor instead.
func (ProduceDescriptionSwapType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{107}
}

type ProduceDescriptionType int32

const (
	ProduceDescriptionType_ProduceDescriptionType_Unknown                                      ProduceDescriptionType = 0
	ProduceDescriptionType_ProduceDescriptionType_PlainText                                    ProduceDescriptionType = 1
	ProduceDescriptionType_ProduceDescriptionType_ProduceExamEffectType                        ProduceDescriptionType = 2
	ProduceDescriptionType_ProduceDescriptionType_ProduceCardCategory                          ProduceDescriptionType = 3
	ProduceDescriptionType_ProduceDescriptionType_DiffText                                     ProduceDescriptionType = 5
	ProduceDescriptionType_ProduceDescriptionType_Exam                                         ProduceDescriptionType = 6
	ProduceDescriptionType_ProduceDescriptionType_ProduceCardGrowEffectType                    ProduceDescriptionType = 7
	ProduceDescriptionType_ProduceDescriptionType_ProduceStepType                              ProduceDescriptionType = 8
	ProduceDescriptionType_ProduceDescriptionType_ProduceDescription                           ProduceDescriptionType = 10
	ProduceDescriptionType_ProduceDescriptionType_ProduceDescriptionName                       ProduceDescriptionType = 11
	ProduceDescriptionType_ProduceDescriptionType_ProduceCard                                  ProduceDescriptionType = 12
	ProduceDescriptionType_ProduceDescriptionType_ProduceCardAnyUpgradeCount                   ProduceDescriptionType = 13
	ProduceDescriptionType_ProduceDescriptionType_ProduceItem                                  ProduceDescriptionType = 14
	ProduceDescriptionType_ProduceDescriptionType_ProduceDrink                                 ProduceDescriptionType = 15
	ProduceDescriptionType_ProduceDescriptionType_ExamValue                                    ProduceDescriptionType = 30
	ProduceDescriptionType_ProduceDescriptionType_ExamValue2                                   ProduceDescriptionType = 31
	ProduceDescriptionType_ProduceDescriptionType_ExamTurn                                     ProduceDescriptionType = 32
	ProduceDescriptionType_ProduceDescriptionType_ExamTurnTimer                                ProduceDescriptionType = 33
	ProduceDescriptionType_ProduceDescriptionType_ExamCount                                    ProduceDescriptionType = 34
	ProduceDescriptionType_ProduceDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName ProduceDescriptionType = 35
	ProduceDescriptionType_ProduceDescriptionType_ExamProduceExamEffect                        ProduceDescriptionType = 36
	ProduceDescriptionType_ProduceDescriptionType_ExamProduceCardSearch                        ProduceDescriptionType = 37
)

// Enum value maps for ProduceDescriptionType.
var (
	ProduceDescriptionType_name = map[int32]string{
		0:  "ProduceDescriptionType_Unknown",
		1:  "ProduceDescriptionType_PlainText",
		2:  "ProduceDescriptionType_ProduceExamEffectType",
		3:  "ProduceDescriptionType_ProduceCardCategory",
		5:  "ProduceDescriptionType_DiffText",
		6:  "ProduceDescriptionType_Exam",
		7:  "ProduceDescriptionType_ProduceCardGrowEffectType",
		8:  "ProduceDescriptionType_ProduceStepType",
		10: "ProduceDescriptionType_ProduceDescription",
		11: "ProduceDescriptionType_ProduceDescriptionName",
		12: "ProduceDescriptionType_ProduceCard",
		13: "ProduceDescriptionType_ProduceCardAnyUpgradeCount",
		14: "ProduceDescriptionType_ProduceItem",
		15: "ProduceDescriptionType_ProduceDrink",
		30: "ProduceDescriptionType_ExamValue",
		31: "ProduceDescriptionType_ExamValue2",
		32: "ProduceDescriptionType_ExamTurn",
		33: "ProduceDescriptionType_ExamTurnTimer",
		34: "ProduceDescriptionType_ExamCount",
		35: "ProduceDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName",
		36: "ProduceDescriptionType_ExamProduceExamEffect",
		37: "ProduceDescriptionType_ExamProduceCardSearch",
	}
	ProduceDescriptionType_value = map[string]int32{
		"ProduceDescriptionType_Unknown":                                      0,
		"ProduceDescriptionType_PlainText":                                    1,
		"ProduceDescriptionType_ProduceExamEffectType":                        2,
		"ProduceDescriptionType_ProduceCardCategory":                          3,
		"ProduceDescriptionType_DiffText":                                     5,
		"ProduceDescriptionType_Exam":                                         6,
		"ProduceDescriptionType_ProduceCardGrowEffectType":                    7,
		"ProduceDescriptionType_ProduceStepType":                              8,
		"ProduceDescriptionType_ProduceDescription":                           10,
		"ProduceDescriptionType_ProduceDescriptionName":                       11,
		"ProduceDescriptionType_ProduceCard":                                  12,
		"ProduceDescriptionType_ProduceCardAnyUpgradeCount":                   13,
		"ProduceDescriptionType_ProduceItem":                                  14,
		"ProduceDescriptionType_ProduceDrink":                                 15,
		"ProduceDescriptionType_ExamValue":                                    30,
		"ProduceDescriptionType_ExamValue2":                                   31,
		"ProduceDescriptionType_ExamTurn":                                     32,
		"ProduceDescriptionType_ExamTurnTimer":                                33,
		"ProduceDescriptionType_ExamCount":                                    34,
		"ProduceDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName": 35,
		"ProduceDescriptionType_ExamProduceExamEffect":                        36,
		"ProduceDescriptionType_ExamProduceCardSearch":                        37,
	}
)

func (x ProduceDescriptionType) Enum() *ProduceDescriptionType {
	p := new(ProduceDescriptionType)
	*p = x
	return p
}

func (x ProduceDescriptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceDescriptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[108].Descriptor()
}

func (ProduceDescriptionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[108]
}

func (x ProduceDescriptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceDescriptionType.Descriptor instead.
func (ProduceDescriptionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{108}
}

type ProduceDisplayType int32

const (
	ProduceDisplayType_ProduceDisplayType_Unknown ProduceDisplayType = 0
	ProduceDisplayType_ProduceDisplayType_Itself  ProduceDisplayType = 1
	ProduceDisplayType_ProduceDisplayType_Choice  ProduceDisplayType = 2
)

// Enum value maps for ProduceDisplayType.
var (
	ProduceDisplayType_name = map[int32]string{
		0: "ProduceDisplayType_Unknown",
		1: "ProduceDisplayType_Itself",
		2: "ProduceDisplayType_Choice",
	}
	ProduceDisplayType_value = map[string]int32{
		"ProduceDisplayType_Unknown": 0,
		"ProduceDisplayType_Itself":  1,
		"ProduceDisplayType_Choice":  2,
	}
)

func (x ProduceDisplayType) Enum() *ProduceDisplayType {
	p := new(ProduceDisplayType)
	*p = x
	return p
}

func (x ProduceDisplayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceDisplayType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[109].Descriptor()
}

func (ProduceDisplayType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[109]
}

func (x ProduceDisplayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceDisplayType.Descriptor instead.
func (ProduceDisplayType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{109}
}

type ProduceDrinkRarity int32

const (
	ProduceDrinkRarity_ProduceDrinkRarity_Unknown ProduceDrinkRarity = 0
	ProduceDrinkRarity_ProduceDrinkRarity_N       ProduceDrinkRarity = 1
	ProduceDrinkRarity_ProduceDrinkRarity_R       ProduceDrinkRarity = 2
	ProduceDrinkRarity_ProduceDrinkRarity_Sr      ProduceDrinkRarity = 3
	ProduceDrinkRarity_ProduceDrinkRarity_Ssr     ProduceDrinkRarity = 4
)

// Enum value maps for ProduceDrinkRarity.
var (
	ProduceDrinkRarity_name = map[int32]string{
		0: "ProduceDrinkRarity_Unknown",
		1: "ProduceDrinkRarity_N",
		2: "ProduceDrinkRarity_R",
		3: "ProduceDrinkRarity_Sr",
		4: "ProduceDrinkRarity_Ssr",
	}
	ProduceDrinkRarity_value = map[string]int32{
		"ProduceDrinkRarity_Unknown": 0,
		"ProduceDrinkRarity_N":       1,
		"ProduceDrinkRarity_R":       2,
		"ProduceDrinkRarity_Sr":      3,
		"ProduceDrinkRarity_Ssr":     4,
	}
)

func (x ProduceDrinkRarity) Enum() *ProduceDrinkRarity {
	p := new(ProduceDrinkRarity)
	*p = x
	return p
}

func (x ProduceDrinkRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceDrinkRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[110].Descriptor()
}

func (ProduceDrinkRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[110]
}

func (x ProduceDrinkRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceDrinkRarity.Descriptor instead.
func (ProduceDrinkRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{110}
}

type ProduceEffectType int32

const (
	ProduceEffectType_ProduceEffectType_Unknown                                      ProduceEffectType = 0
	ProduceEffectType_ProduceEffectType_VocalAddition                                ProduceEffectType = 1
	ProduceEffectType_ProduceEffectType_DanceAddition                                ProduceEffectType = 2
	ProduceEffectType_ProduceEffectType_VisualAddition                               ProduceEffectType = 3
	ProduceEffectType_ProduceEffectType_VocalDown                                    ProduceEffectType = 4
	ProduceEffectType_ProduceEffectType_DanceDown                                    ProduceEffectType = 5
	ProduceEffectType_ProduceEffectType_VisualDown                                   ProduceEffectType = 6
	ProduceEffectType_ProduceEffectType_VocalGrowthRateAddition                      ProduceEffectType = 7
	ProduceEffectType_ProduceEffectType_DanceGrowthRateAddition                      ProduceEffectType = 8
	ProduceEffectType_ProduceEffectType_VisualGrowthRateAddition                     ProduceEffectType = 9
	ProduceEffectType_ProduceEffectType_VocalGrowthRateDown                          ProduceEffectType = 10
	ProduceEffectType_ProduceEffectType_DanceGrowthRateDown                          ProduceEffectType = 11
	ProduceEffectType_ProduceEffectType_VisualGrowthRateDown                         ProduceEffectType = 12
	ProduceEffectType_ProduceEffectType_StaminaRecoverFix                            ProduceEffectType = 13
	ProduceEffectType_ProduceEffectType_StaminaRecoverMultiple                       ProduceEffectType = 14
	ProduceEffectType_ProduceEffectType_StaminaReduceFix                             ProduceEffectType = 15
	ProduceEffectType_ProduceEffectType_StaminaReduceMultiple                        ProduceEffectType = 16
	ProduceEffectType_ProduceEffectType_StaminaSpecify                               ProduceEffectType = 17
	ProduceEffectType_ProduceEffectType_StaminaRecoverValueUp                        ProduceEffectType = 18
	ProduceEffectType_ProduceEffectType_StaminaRecoverValueDown                      ProduceEffectType = 19
	ProduceEffectType_ProduceEffectType_StaminaReduceValueUp                         ProduceEffectType = 20
	ProduceEffectType_ProduceEffectType_StaminaReduceValueDown                       ProduceEffectType = 21
	ProduceEffectType_ProduceEffectType_StaminaRecoverDisable                        ProduceEffectType = 22
	ProduceEffectType_ProduceEffectType_MaxStaminaAddition                           ProduceEffectType = 23
	ProduceEffectType_ProduceEffectType_MaxStaminaReduceFix                          ProduceEffectType = 24
	ProduceEffectType_ProduceEffectType_MaxStaminaReduceMultiple                     ProduceEffectType = 25
	ProduceEffectType_ProduceEffectType_ProducePointReduceFix                        ProduceEffectType = 26
	ProduceEffectType_ProduceEffectType_ProducePointReduceMultiple                   ProduceEffectType = 27
	ProduceEffectType_ProduceEffectType_ProducePointSpecify                          ProduceEffectType = 28
	ProduceEffectType_ProduceEffectType_ProducePointAdditionValueUp                  ProduceEffectType = 29
	ProduceEffectType_ProduceEffectType_ProducePointAdditionValueDown                ProduceEffectType = 30
	ProduceEffectType_ProduceEffectType_ProducePointReduceValueUp                    ProduceEffectType = 31
	ProduceEffectType_ProduceEffectType_ProducePointReduceValueDown                  ProduceEffectType = 32
	ProduceEffectType_ProduceEffectType_ProduceCardUpgrade                           ProduceEffectType = 33
	ProduceEffectType_ProduceEffectType_ProduceCardDuplicate                         ProduceEffectType = 34
	ProduceEffectType_ProduceEffectType_ProduceCardDuplicateUpgrade                  ProduceEffectType = 35
	ProduceEffectType_ProduceEffectType_ProduceCardChange                            ProduceEffectType = 36
	ProduceEffectType_ProduceEffectType_ProduceCardChangeUpgrade                     ProduceEffectType = 37
	ProduceEffectType_ProduceEffectType_ProduceCardDelete                            ProduceEffectType = 38
	ProduceEffectType_ProduceEffectType_ProducePointAddition                         ProduceEffectType = 39
	ProduceEffectType_ProduceEffectType_ProducePointGetDisable                       ProduceEffectType = 40
	ProduceEffectType_ProduceEffectType_ProduceItemGetDisable                        ProduceEffectType = 41
	ProduceEffectType_ProduceEffectType_ProduceDrinkGetDisable                       ProduceEffectType = 42
	ProduceEffectType_ProduceEffectType_ProduceReward                                ProduceEffectType = 43
	ProduceEffectType_ProduceEffectType_ProduceRewardSet                             ProduceEffectType = 44
	ProduceEffectType_ProduceEffectType_AuditionParameterBonusMultiple               ProduceEffectType = 53
	ProduceEffectType_ProduceEffectType_LessonSpChangeRatePermilAddition             ProduceEffectType = 54
	ProduceEffectType_ProduceEffectType_LessonVocalSpChangeRatePermilAddition        ProduceEffectType = 55
	ProduceEffectType_ProduceEffectType_LessonDanceSpChangeRatePermilAddition        ProduceEffectType = 56
	ProduceEffectType_ProduceEffectType_LessonVisualSpChangeRatePermilAddition       ProduceEffectType = 57
	ProduceEffectType_ProduceEffectType_LessonSpChangeRatePermilDown                 ProduceEffectType = 58
	ProduceEffectType_ProduceEffectType_ExamStatusEnchant                            ProduceEffectType = 60
	ProduceEffectType_ProduceEffectType_LessonPresentProduceCardRewardCountUp        ProduceEffectType = 61
	ProduceEffectType_ProduceEffectType_LessonPresentProduceCardRewardCountDown      ProduceEffectType = 62
	ProduceEffectType_ProduceEffectType_LessonPresentSearchProduceCardRewardCountUp  ProduceEffectType = 63
	ProduceEffectType_ProduceEffectType_ShopPriceDiscountMultiple                    ProduceEffectType = 65
	ProduceEffectType_ProduceEffectType_ShopProduceCardPriceDiscountMultiple         ProduceEffectType = 66
	ProduceEffectType_ProduceEffectType_ShopProduceDrinkPriceDiscountMultiple        ProduceEffectType = 68
	ProduceEffectType_ProduceEffectType_ShopProduceCardUpgradePriceDiscountMultiple  ProduceEffectType = 69
	ProduceEffectType_ProduceEffectType_ShopProduceCardUpgradePriceSpecify           ProduceEffectType = 70
	ProduceEffectType_ProduceEffectType_ShopProduceCardDeletePriceDiscountMultiple   ProduceEffectType = 71
	ProduceEffectType_ProduceEffectType_ShopProduceCardDeletePriceSpecify            ProduceEffectType = 72
	ProduceEffectType_ProduceEffectType_ProduceResultRewardMoneyUp                   ProduceEffectType = 77
	ProduceEffectType_ProduceEffectType_ProduceResultRewardSupportCardEnhancePointUp ProduceEffectType = 79
	ProduceEffectType_ProduceEffectType_SupportCardEventStaminaRecoverUp             ProduceEffectType = 80
	ProduceEffectType_ProduceEffectType_SupportCardEventProducePointAdditionValueUp  ProduceEffectType = 81
	ProduceEffectType_ProduceEffectType_SupportCardEventParameterAdditionValueUp     ProduceEffectType = 82
	ProduceEffectType_ProduceEffectType_SupportCardEventProbabilityUp                ProduceEffectType = 83
	ProduceEffectType_ProduceEffectType_LessonPresentProducePointUp                  ProduceEffectType = 84
	ProduceEffectType_ProduceEffectType_LessonPresentProducePointDown                ProduceEffectType = 85
	ProduceEffectType_ProduceEffectType_SupportCardProduceCardUpgradeProbabilityUp   ProduceEffectType = 86
	ProduceEffectType_ProduceEffectType_ProduceCardSelectRerollCountUp               ProduceEffectType = 87
	ProduceEffectType_ProduceEffectType_ProducePointAdditionDisableTrigger           ProduceEffectType = 88
	ProduceEffectType_ProduceEffectType_LessonLimitUp                                ProduceEffectType = 89
	ProduceEffectType_ProduceEffectType_ParameterLimitUp                             ProduceEffectType = 90
	ProduceEffectType_ProduceEffectType_VocalLimitUp                                 ProduceEffectType = 91
	ProduceEffectType_ProduceEffectType_DanceLimitUp                                 ProduceEffectType = 92
	ProduceEffectType_ProduceEffectType_VisualLimitUp                                ProduceEffectType = 93
	ProduceEffectType_ProduceEffectType_SupportCardEventProduceCardUpgrade           ProduceEffectType = 94
	ProduceEffectType_ProduceEffectType_ExamTurnUp                                   ProduceEffectType = 95
	ProduceEffectType_ProduceEffectType_ExamTurnDown                                 ProduceEffectType = 96
	ProduceEffectType_ProduceEffectType_AuditionNpcEnhance                           ProduceEffectType = 97
	ProduceEffectType_ProduceEffectType_ShopPriceUpMultiple                          ProduceEffectType = 98
	ProduceEffectType_ProduceEffectType_ShopProduceCardPriceUpMultiple               ProduceEffectType = 99
	ProduceEffectType_ProduceEffectType_ShopProduceDrinkPriceUpMultiple              ProduceEffectType = 100
	ProduceEffectType_ProduceEffectType_ShopProduceCardUpgradePriceUpMultiple        ProduceEffectType = 101
	ProduceEffectType_ProduceEffectType_ShopProduceCardDeletePriceUpMultiple         ProduceEffectType = 102
	ProduceEffectType_ProduceEffectType_EventSchoolStaminaUp                         ProduceEffectType = 103
	ProduceEffectType_ProduceEffectType_EventSchoolStaminaDown                       ProduceEffectType = 104
	ProduceEffectType_ProduceEffectType_EventActivityProducePointUp                  ProduceEffectType = 105
	ProduceEffectType_ProduceEffectType_EventActivityProducePointDown                ProduceEffectType = 106
	ProduceEffectType_ProduceEffectType_BeforeAuditionRefreshStaminaUp               ProduceEffectType = 107
	ProduceEffectType_ProduceEffectType_BeforeAuditionRefreshStaminaDown             ProduceEffectType = 108
	ProduceEffectType_ProduceEffectType_ShopRerollCountUp                            ProduceEffectType = 109
	ProduceEffectType_ProduceEffectType_ProduceCardExcludeCountUp                    ProduceEffectType = 110
	ProduceEffectType_ProduceEffectType_CustomizeProduceCardCountUp                  ProduceEffectType = 111
	ProduceEffectType_ProduceEffectType_CustomizeProduceCardProducePointUpMultiple   ProduceEffectType = 112
	ProduceEffectType_ProduceEffectType_CustomizeProduceCardProducePointDownMultiple ProduceEffectType = 113
	ProduceEffectType_ProduceEffectType_VoteCountAddition                            ProduceEffectType = 114
	ProduceEffectType_ProduceEffectType_EventBusinessVoteCountUp                     ProduceEffectType = 115
	ProduceEffectType_ProduceEffectType_EventBusinessVoteCountDown                   ProduceEffectType = 116
	ProduceEffectType_ProduceEffectType_EventBusinessExcellentPermilUp               ProduceEffectType = 117
	ProduceEffectType_ProduceEffectType_EventBusinessExcellentPermilDown             ProduceEffectType = 118
	ProduceEffectType_ProduceEffectType_AuditionVoteCountUp                          ProduceEffectType = 119
	ProduceEffectType_ProduceEffectType_AuditionVoteCountDown                        ProduceEffectType = 120
	ProduceEffectType_ProduceEffectType_SelfLessonStaminaUp                          ProduceEffectType = 121
	ProduceEffectType_ProduceEffectType_SelfLessonStaminaDown                        ProduceEffectType = 122
	ProduceEffectType_ProduceEffectType_HighScoreGoldAddition                        ProduceEffectType = 123
	ProduceEffectType_ProduceEffectType_IdolCardProduceCardCustomizeEnable           ProduceEffectType = 124
)

// Enum value maps for ProduceEffectType.
var (
	ProduceEffectType_name = map[int32]string{
		0:   "ProduceEffectType_Unknown",
		1:   "ProduceEffectType_VocalAddition",
		2:   "ProduceEffectType_DanceAddition",
		3:   "ProduceEffectType_VisualAddition",
		4:   "ProduceEffectType_VocalDown",
		5:   "ProduceEffectType_DanceDown",
		6:   "ProduceEffectType_VisualDown",
		7:   "ProduceEffectType_VocalGrowthRateAddition",
		8:   "ProduceEffectType_DanceGrowthRateAddition",
		9:   "ProduceEffectType_VisualGrowthRateAddition",
		10:  "ProduceEffectType_VocalGrowthRateDown",
		11:  "ProduceEffectType_DanceGrowthRateDown",
		12:  "ProduceEffectType_VisualGrowthRateDown",
		13:  "ProduceEffectType_StaminaRecoverFix",
		14:  "ProduceEffectType_StaminaRecoverMultiple",
		15:  "ProduceEffectType_StaminaReduceFix",
		16:  "ProduceEffectType_StaminaReduceMultiple",
		17:  "ProduceEffectType_StaminaSpecify",
		18:  "ProduceEffectType_StaminaRecoverValueUp",
		19:  "ProduceEffectType_StaminaRecoverValueDown",
		20:  "ProduceEffectType_StaminaReduceValueUp",
		21:  "ProduceEffectType_StaminaReduceValueDown",
		22:  "ProduceEffectType_StaminaRecoverDisable",
		23:  "ProduceEffectType_MaxStaminaAddition",
		24:  "ProduceEffectType_MaxStaminaReduceFix",
		25:  "ProduceEffectType_MaxStaminaReduceMultiple",
		26:  "ProduceEffectType_ProducePointReduceFix",
		27:  "ProduceEffectType_ProducePointReduceMultiple",
		28:  "ProduceEffectType_ProducePointSpecify",
		29:  "ProduceEffectType_ProducePointAdditionValueUp",
		30:  "ProduceEffectType_ProducePointAdditionValueDown",
		31:  "ProduceEffectType_ProducePointReduceValueUp",
		32:  "ProduceEffectType_ProducePointReduceValueDown",
		33:  "ProduceEffectType_ProduceCardUpgrade",
		34:  "ProduceEffectType_ProduceCardDuplicate",
		35:  "ProduceEffectType_ProduceCardDuplicateUpgrade",
		36:  "ProduceEffectType_ProduceCardChange",
		37:  "ProduceEffectType_ProduceCardChangeUpgrade",
		38:  "ProduceEffectType_ProduceCardDelete",
		39:  "ProduceEffectType_ProducePointAddition",
		40:  "ProduceEffectType_ProducePointGetDisable",
		41:  "ProduceEffectType_ProduceItemGetDisable",
		42:  "ProduceEffectType_ProduceDrinkGetDisable",
		43:  "ProduceEffectType_ProduceReward",
		44:  "ProduceEffectType_ProduceRewardSet",
		53:  "ProduceEffectType_AuditionParameterBonusMultiple",
		54:  "ProduceEffectType_LessonSpChangeRatePermilAddition",
		55:  "ProduceEffectType_LessonVocalSpChangeRatePermilAddition",
		56:  "ProduceEffectType_LessonDanceSpChangeRatePermilAddition",
		57:  "ProduceEffectType_LessonVisualSpChangeRatePermilAddition",
		58:  "ProduceEffectType_LessonSpChangeRatePermilDown",
		60:  "ProduceEffectType_ExamStatusEnchant",
		61:  "ProduceEffectType_LessonPresentProduceCardRewardCountUp",
		62:  "ProduceEffectType_LessonPresentProduceCardRewardCountDown",
		63:  "ProduceEffectType_LessonPresentSearchProduceCardRewardCountUp",
		65:  "ProduceEffectType_ShopPriceDiscountMultiple",
		66:  "ProduceEffectType_ShopProduceCardPriceDiscountMultiple",
		68:  "ProduceEffectType_ShopProduceDrinkPriceDiscountMultiple",
		69:  "ProduceEffectType_ShopProduceCardUpgradePriceDiscountMultiple",
		70:  "ProduceEffectType_ShopProduceCardUpgradePriceSpecify",
		71:  "ProduceEffectType_ShopProduceCardDeletePriceDiscountMultiple",
		72:  "ProduceEffectType_ShopProduceCardDeletePriceSpecify",
		77:  "ProduceEffectType_ProduceResultRewardMoneyUp",
		79:  "ProduceEffectType_ProduceResultRewardSupportCardEnhancePointUp",
		80:  "ProduceEffectType_SupportCardEventStaminaRecoverUp",
		81:  "ProduceEffectType_SupportCardEventProducePointAdditionValueUp",
		82:  "ProduceEffectType_SupportCardEventParameterAdditionValueUp",
		83:  "ProduceEffectType_SupportCardEventProbabilityUp",
		84:  "ProduceEffectType_LessonPresentProducePointUp",
		85:  "ProduceEffectType_LessonPresentProducePointDown",
		86:  "ProduceEffectType_SupportCardProduceCardUpgradeProbabilityUp",
		87:  "ProduceEffectType_ProduceCardSelectRerollCountUp",
		88:  "ProduceEffectType_ProducePointAdditionDisableTrigger",
		89:  "ProduceEffectType_LessonLimitUp",
		90:  "ProduceEffectType_ParameterLimitUp",
		91:  "ProduceEffectType_VocalLimitUp",
		92:  "ProduceEffectType_DanceLimitUp",
		93:  "ProduceEffectType_VisualLimitUp",
		94:  "ProduceEffectType_SupportCardEventProduceCardUpgrade",
		95:  "ProduceEffectType_ExamTurnUp",
		96:  "ProduceEffectType_ExamTurnDown",
		97:  "ProduceEffectType_AuditionNpcEnhance",
		98:  "ProduceEffectType_ShopPriceUpMultiple",
		99:  "ProduceEffectType_ShopProduceCardPriceUpMultiple",
		100: "ProduceEffectType_ShopProduceDrinkPriceUpMultiple",
		101: "ProduceEffectType_ShopProduceCardUpgradePriceUpMultiple",
		102: "ProduceEffectType_ShopProduceCardDeletePriceUpMultiple",
		103: "ProduceEffectType_EventSchoolStaminaUp",
		104: "ProduceEffectType_EventSchoolStaminaDown",
		105: "ProduceEffectType_EventActivityProducePointUp",
		106: "ProduceEffectType_EventActivityProducePointDown",
		107: "ProduceEffectType_BeforeAuditionRefreshStaminaUp",
		108: "ProduceEffectType_BeforeAuditionRefreshStaminaDown",
		109: "ProduceEffectType_ShopRerollCountUp",
		110: "ProduceEffectType_ProduceCardExcludeCountUp",
		111: "ProduceEffectType_CustomizeProduceCardCountUp",
		112: "ProduceEffectType_CustomizeProduceCardProducePointUpMultiple",
		113: "ProduceEffectType_CustomizeProduceCardProducePointDownMultiple",
		114: "ProduceEffectType_VoteCountAddition",
		115: "ProduceEffectType_EventBusinessVoteCountUp",
		116: "ProduceEffectType_EventBusinessVoteCountDown",
		117: "ProduceEffectType_EventBusinessExcellentPermilUp",
		118: "ProduceEffectType_EventBusinessExcellentPermilDown",
		119: "ProduceEffectType_AuditionVoteCountUp",
		120: "ProduceEffectType_AuditionVoteCountDown",
		121: "ProduceEffectType_SelfLessonStaminaUp",
		122: "ProduceEffectType_SelfLessonStaminaDown",
		123: "ProduceEffectType_HighScoreGoldAddition",
		124: "ProduceEffectType_IdolCardProduceCardCustomizeEnable",
	}
	ProduceEffectType_value = map[string]int32{
		"ProduceEffectType_Unknown":                                      0,
		"ProduceEffectType_VocalAddition":                                1,
		"ProduceEffectType_DanceAddition":                                2,
		"ProduceEffectType_VisualAddition":                               3,
		"ProduceEffectType_VocalDown":                                    4,
		"ProduceEffectType_DanceDown":                                    5,
		"ProduceEffectType_VisualDown":                                   6,
		"ProduceEffectType_VocalGrowthRateAddition":                      7,
		"ProduceEffectType_DanceGrowthRateAddition":                      8,
		"ProduceEffectType_VisualGrowthRateAddition":                     9,
		"ProduceEffectType_VocalGrowthRateDown":                          10,
		"ProduceEffectType_DanceGrowthRateDown":                          11,
		"ProduceEffectType_VisualGrowthRateDown":                         12,
		"ProduceEffectType_StaminaRecoverFix":                            13,
		"ProduceEffectType_StaminaRecoverMultiple":                       14,
		"ProduceEffectType_StaminaReduceFix":                             15,
		"ProduceEffectType_StaminaReduceMultiple":                        16,
		"ProduceEffectType_StaminaSpecify":                               17,
		"ProduceEffectType_StaminaRecoverValueUp":                        18,
		"ProduceEffectType_StaminaRecoverValueDown":                      19,
		"ProduceEffectType_StaminaReduceValueUp":                         20,
		"ProduceEffectType_StaminaReduceValueDown":                       21,
		"ProduceEffectType_StaminaRecoverDisable":                        22,
		"ProduceEffectType_MaxStaminaAddition":                           23,
		"ProduceEffectType_MaxStaminaReduceFix":                          24,
		"ProduceEffectType_MaxStaminaReduceMultiple":                     25,
		"ProduceEffectType_ProducePointReduceFix":                        26,
		"ProduceEffectType_ProducePointReduceMultiple":                   27,
		"ProduceEffectType_ProducePointSpecify":                          28,
		"ProduceEffectType_ProducePointAdditionValueUp":                  29,
		"ProduceEffectType_ProducePointAdditionValueDown":                30,
		"ProduceEffectType_ProducePointReduceValueUp":                    31,
		"ProduceEffectType_ProducePointReduceValueDown":                  32,
		"ProduceEffectType_ProduceCardUpgrade":                           33,
		"ProduceEffectType_ProduceCardDuplicate":                         34,
		"ProduceEffectType_ProduceCardDuplicateUpgrade":                  35,
		"ProduceEffectType_ProduceCardChange":                            36,
		"ProduceEffectType_ProduceCardChangeUpgrade":                     37,
		"ProduceEffectType_ProduceCardDelete":                            38,
		"ProduceEffectType_ProducePointAddition":                         39,
		"ProduceEffectType_ProducePointGetDisable":                       40,
		"ProduceEffectType_ProduceItemGetDisable":                        41,
		"ProduceEffectType_ProduceDrinkGetDisable":                       42,
		"ProduceEffectType_ProduceReward":                                43,
		"ProduceEffectType_ProduceRewardSet":                             44,
		"ProduceEffectType_AuditionParameterBonusMultiple":               53,
		"ProduceEffectType_LessonSpChangeRatePermilAddition":             54,
		"ProduceEffectType_LessonVocalSpChangeRatePermilAddition":        55,
		"ProduceEffectType_LessonDanceSpChangeRatePermilAddition":        56,
		"ProduceEffectType_LessonVisualSpChangeRatePermilAddition":       57,
		"ProduceEffectType_LessonSpChangeRatePermilDown":                 58,
		"ProduceEffectType_ExamStatusEnchant":                            60,
		"ProduceEffectType_LessonPresentProduceCardRewardCountUp":        61,
		"ProduceEffectType_LessonPresentProduceCardRewardCountDown":      62,
		"ProduceEffectType_LessonPresentSearchProduceCardRewardCountUp":  63,
		"ProduceEffectType_ShopPriceDiscountMultiple":                    65,
		"ProduceEffectType_ShopProduceCardPriceDiscountMultiple":         66,
		"ProduceEffectType_ShopProduceDrinkPriceDiscountMultiple":        68,
		"ProduceEffectType_ShopProduceCardUpgradePriceDiscountMultiple":  69,
		"ProduceEffectType_ShopProduceCardUpgradePriceSpecify":           70,
		"ProduceEffectType_ShopProduceCardDeletePriceDiscountMultiple":   71,
		"ProduceEffectType_ShopProduceCardDeletePriceSpecify":            72,
		"ProduceEffectType_ProduceResultRewardMoneyUp":                   77,
		"ProduceEffectType_ProduceResultRewardSupportCardEnhancePointUp": 79,
		"ProduceEffectType_SupportCardEventStaminaRecoverUp":             80,
		"ProduceEffectType_SupportCardEventProducePointAdditionValueUp":  81,
		"ProduceEffectType_SupportCardEventParameterAdditionValueUp":     82,
		"ProduceEffectType_SupportCardEventProbabilityUp":                83,
		"ProduceEffectType_LessonPresentProducePointUp":                  84,
		"ProduceEffectType_LessonPresentProducePointDown":                85,
		"ProduceEffectType_SupportCardProduceCardUpgradeProbabilityUp":   86,
		"ProduceEffectType_ProduceCardSelectRerollCountUp":               87,
		"ProduceEffectType_ProducePointAdditionDisableTrigger":           88,
		"ProduceEffectType_LessonLimitUp":                                89,
		"ProduceEffectType_ParameterLimitUp":                             90,
		"ProduceEffectType_VocalLimitUp":                                 91,
		"ProduceEffectType_DanceLimitUp":                                 92,
		"ProduceEffectType_VisualLimitUp":                                93,
		"ProduceEffectType_SupportCardEventProduceCardUpgrade":           94,
		"ProduceEffectType_ExamTurnUp":                                   95,
		"ProduceEffectType_ExamTurnDown":                                 96,
		"ProduceEffectType_AuditionNpcEnhance":                           97,
		"ProduceEffectType_ShopPriceUpMultiple":                          98,
		"ProduceEffectType_ShopProduceCardPriceUpMultiple":               99,
		"ProduceEffectType_ShopProduceDrinkPriceUpMultiple":              100,
		"ProduceEffectType_ShopProduceCardUpgradePriceUpMultiple":        101,
		"ProduceEffectType_ShopProduceCardDeletePriceUpMultiple":         102,
		"ProduceEffectType_EventSchoolStaminaUp":                         103,
		"ProduceEffectType_EventSchoolStaminaDown":                       104,
		"ProduceEffectType_EventActivityProducePointUp":                  105,
		"ProduceEffectType_EventActivityProducePointDown":                106,
		"ProduceEffectType_BeforeAuditionRefreshStaminaUp":               107,
		"ProduceEffectType_BeforeAuditionRefreshStaminaDown":             108,
		"ProduceEffectType_ShopRerollCountUp":                            109,
		"ProduceEffectType_ProduceCardExcludeCountUp":                    110,
		"ProduceEffectType_CustomizeProduceCardCountUp":                  111,
		"ProduceEffectType_CustomizeProduceCardProducePointUpMultiple":   112,
		"ProduceEffectType_CustomizeProduceCardProducePointDownMultiple": 113,
		"ProduceEffectType_VoteCountAddition":                            114,
		"ProduceEffectType_EventBusinessVoteCountUp":                     115,
		"ProduceEffectType_EventBusinessVoteCountDown":                   116,
		"ProduceEffectType_EventBusinessExcellentPermilUp":               117,
		"ProduceEffectType_EventBusinessExcellentPermilDown":             118,
		"ProduceEffectType_AuditionVoteCountUp":                          119,
		"ProduceEffectType_AuditionVoteCountDown":                        120,
		"ProduceEffectType_SelfLessonStaminaUp":                          121,
		"ProduceEffectType_SelfLessonStaminaDown":                        122,
		"ProduceEffectType_HighScoreGoldAddition":                        123,
		"ProduceEffectType_IdolCardProduceCardCustomizeEnable":           124,
	}
)

func (x ProduceEffectType) Enum() *ProduceEffectType {
	p := new(ProduceEffectType)
	*p = x
	return p
}

func (x ProduceEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[111].Descriptor()
}

func (ProduceEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[111]
}

func (x ProduceEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceEffectType.Descriptor instead.
func (ProduceEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{111}
}

type ProduceEventCharacterType int32

const (
	ProduceEventCharacterType_ProduceEventCharacterType_Unknown                      ProduceEventCharacterType = 0
	ProduceEventCharacterType_ProduceEventCharacterType_Opening                      ProduceEventCharacterType = 1
	ProduceEventCharacterType_ProduceEventCharacterType_AfterStep1                   ProduceEventCharacterType = 2
	ProduceEventCharacterType_ProduceEventCharacterType_BeforeAuditionMid1           ProduceEventCharacterType = 3
	ProduceEventCharacterType_ProduceEventCharacterType_AfterAuditionMid1            ProduceEventCharacterType = 4
	ProduceEventCharacterType_ProduceEventCharacterType_AfterStep2                   ProduceEventCharacterType = 5
	ProduceEventCharacterType_ProduceEventCharacterType_BeforeAuditionMid2           ProduceEventCharacterType = 6
	ProduceEventCharacterType_ProduceEventCharacterType_AfterAuditionMid2            ProduceEventCharacterType = 7
	ProduceEventCharacterType_ProduceEventCharacterType_BeforeAuditionFinal          ProduceEventCharacterType = 8
	ProduceEventCharacterType_ProduceEventCharacterType_AfterAuditionFinal           ProduceEventCharacterType = 9
	ProduceEventCharacterType_ProduceEventCharacterType_Failure                      ProduceEventCharacterType = 10
	ProduceEventCharacterType_ProduceEventCharacterType_Ending                       ProduceEventCharacterType = 11
	ProduceEventCharacterType_ProduceEventCharacterType_AfterStepBeforeAuditionMid1  ProduceEventCharacterType = 12
	ProduceEventCharacterType_ProduceEventCharacterType_AfterStepBeforeAuditionMid2  ProduceEventCharacterType = 13
	ProduceEventCharacterType_ProduceEventCharacterType_AfterStepBeforeAuditionFinal ProduceEventCharacterType = 14
)

// Enum value maps for ProduceEventCharacterType.
var (
	ProduceEventCharacterType_name = map[int32]string{
		0:  "ProduceEventCharacterType_Unknown",
		1:  "ProduceEventCharacterType_Opening",
		2:  "ProduceEventCharacterType_AfterStep1",
		3:  "ProduceEventCharacterType_BeforeAuditionMid1",
		4:  "ProduceEventCharacterType_AfterAuditionMid1",
		5:  "ProduceEventCharacterType_AfterStep2",
		6:  "ProduceEventCharacterType_BeforeAuditionMid2",
		7:  "ProduceEventCharacterType_AfterAuditionMid2",
		8:  "ProduceEventCharacterType_BeforeAuditionFinal",
		9:  "ProduceEventCharacterType_AfterAuditionFinal",
		10: "ProduceEventCharacterType_Failure",
		11: "ProduceEventCharacterType_Ending",
		12: "ProduceEventCharacterType_AfterStepBeforeAuditionMid1",
		13: "ProduceEventCharacterType_AfterStepBeforeAuditionMid2",
		14: "ProduceEventCharacterType_AfterStepBeforeAuditionFinal",
	}
	ProduceEventCharacterType_value = map[string]int32{
		"ProduceEventCharacterType_Unknown":                      0,
		"ProduceEventCharacterType_Opening":                      1,
		"ProduceEventCharacterType_AfterStep1":                   2,
		"ProduceEventCharacterType_BeforeAuditionMid1":           3,
		"ProduceEventCharacterType_AfterAuditionMid1":            4,
		"ProduceEventCharacterType_AfterStep2":                   5,
		"ProduceEventCharacterType_BeforeAuditionMid2":           6,
		"ProduceEventCharacterType_AfterAuditionMid2":            7,
		"ProduceEventCharacterType_BeforeAuditionFinal":          8,
		"ProduceEventCharacterType_AfterAuditionFinal":           9,
		"ProduceEventCharacterType_Failure":                      10,
		"ProduceEventCharacterType_Ending":                       11,
		"ProduceEventCharacterType_AfterStepBeforeAuditionMid1":  12,
		"ProduceEventCharacterType_AfterStepBeforeAuditionMid2":  13,
		"ProduceEventCharacterType_AfterStepBeforeAuditionFinal": 14,
	}
)

func (x ProduceEventCharacterType) Enum() *ProduceEventCharacterType {
	p := new(ProduceEventCharacterType)
	*p = x
	return p
}

func (x ProduceEventCharacterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceEventCharacterType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[112].Descriptor()
}

func (ProduceEventCharacterType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[112]
}

func (x ProduceEventCharacterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceEventCharacterType.Descriptor instead.
func (ProduceEventCharacterType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{112}
}

type ProduceEventSuggestionType int32

const (
	ProduceEventSuggestionType_ProduceEventSuggestionType_Unknown   ProduceEventSuggestionType = 0
	ProduceEventSuggestionType_ProduceEventSuggestionType_Primary   ProduceEventSuggestionType = 1
	ProduceEventSuggestionType_ProduceEventSuggestionType_Secondary ProduceEventSuggestionType = 2
)

// Enum value maps for ProduceEventSuggestionType.
var (
	ProduceEventSuggestionType_name = map[int32]string{
		0: "ProduceEventSuggestionType_Unknown",
		1: "ProduceEventSuggestionType_Primary",
		2: "ProduceEventSuggestionType_Secondary",
	}
	ProduceEventSuggestionType_value = map[string]int32{
		"ProduceEventSuggestionType_Unknown":   0,
		"ProduceEventSuggestionType_Primary":   1,
		"ProduceEventSuggestionType_Secondary": 2,
	}
)

func (x ProduceEventSuggestionType) Enum() *ProduceEventSuggestionType {
	p := new(ProduceEventSuggestionType)
	*p = x
	return p
}

func (x ProduceEventSuggestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceEventSuggestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[113].Descriptor()
}

func (ProduceEventSuggestionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[113]
}

func (x ProduceEventSuggestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceEventSuggestionType.Descriptor instead.
func (ProduceEventSuggestionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{113}
}

type ProduceEventType int32

const (
	ProduceEventType_ProduceEventType_Unknown         ProduceEventType = 0
	ProduceEventType_ProduceEventType_Activity        ProduceEventType = 1
	ProduceEventType_ProduceEventType_School          ProduceEventType = 2
	ProduceEventType_ProduceEventType_Character       ProduceEventType = 3
	ProduceEventType_ProduceEventType_CharacterGrowth ProduceEventType = 4
	ProduceEventType_ProduceEventType_IdolCard        ProduceEventType = 5
	ProduceEventType_ProduceEventType_SupportCard     ProduceEventType = 6
	ProduceEventType_ProduceEventType_Business        ProduceEventType = 7
)

// Enum value maps for ProduceEventType.
var (
	ProduceEventType_name = map[int32]string{
		0: "ProduceEventType_Unknown",
		1: "ProduceEventType_Activity",
		2: "ProduceEventType_School",
		3: "ProduceEventType_Character",
		4: "ProduceEventType_CharacterGrowth",
		5: "ProduceEventType_IdolCard",
		6: "ProduceEventType_SupportCard",
		7: "ProduceEventType_Business",
	}
	ProduceEventType_value = map[string]int32{
		"ProduceEventType_Unknown":         0,
		"ProduceEventType_Activity":        1,
		"ProduceEventType_School":          2,
		"ProduceEventType_Character":       3,
		"ProduceEventType_CharacterGrowth": 4,
		"ProduceEventType_IdolCard":        5,
		"ProduceEventType_SupportCard":     6,
		"ProduceEventType_Business":        7,
	}
)

func (x ProduceEventType) Enum() *ProduceEventType {
	p := new(ProduceEventType)
	*p = x
	return p
}

func (x ProduceEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[114].Descriptor()
}

func (ProduceEventType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[114]
}

func (x ProduceEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceEventType.Descriptor instead.
func (ProduceEventType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{114}
}

type ProduceExamAutoCardSelectEvaluationType int32

const (
	ProduceExamAutoCardSelectEvaluationType_ProduceExamAutoCardSelectEvaluationType_Unknown                         ProduceExamAutoCardSelectEvaluationType = 0
	ProduceExamAutoCardSelectEvaluationType_ProduceExamAutoCardSelectEvaluationType_LessonCoefficient               ProduceExamAutoCardSelectEvaluationType = 1
	ProduceExamAutoCardSelectEvaluationType_ProduceExamAutoCardSelectEvaluationType_FullPowerPointCoefficient       ProduceExamAutoCardSelectEvaluationType = 2
	ProduceExamAutoCardSelectEvaluationType_ProduceExamAutoCardSelectEvaluationType_FullPowerPointValue2Coefficient ProduceExamAutoCardSelectEvaluationType = 3
)

// Enum value maps for ProduceExamAutoCardSelectEvaluationType.
var (
	ProduceExamAutoCardSelectEvaluationType_name = map[int32]string{
		0: "ProduceExamAutoCardSelectEvaluationType_Unknown",
		1: "ProduceExamAutoCardSelectEvaluationType_LessonCoefficient",
		2: "ProduceExamAutoCardSelectEvaluationType_FullPowerPointCoefficient",
		3: "ProduceExamAutoCardSelectEvaluationType_FullPowerPointValue2Coefficient",
	}
	ProduceExamAutoCardSelectEvaluationType_value = map[string]int32{
		"ProduceExamAutoCardSelectEvaluationType_Unknown":                         0,
		"ProduceExamAutoCardSelectEvaluationType_LessonCoefficient":               1,
		"ProduceExamAutoCardSelectEvaluationType_FullPowerPointCoefficient":       2,
		"ProduceExamAutoCardSelectEvaluationType_FullPowerPointValue2Coefficient": 3,
	}
)

func (x ProduceExamAutoCardSelectEvaluationType) Enum() *ProduceExamAutoCardSelectEvaluationType {
	p := new(ProduceExamAutoCardSelectEvaluationType)
	*p = x
	return p
}

func (x ProduceExamAutoCardSelectEvaluationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceExamAutoCardSelectEvaluationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[115].Descriptor()
}

func (ProduceExamAutoCardSelectEvaluationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[115]
}

func (x ProduceExamAutoCardSelectEvaluationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceExamAutoCardSelectEvaluationType.Descriptor instead.
func (ProduceExamAutoCardSelectEvaluationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{115}
}

type ProduceExamAutoEvaluationType int32

const (
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_Unknown                                         ProduceExamAutoEvaluationType = 0
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_Parameter                                       ProduceExamAutoEvaluationType = 1
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_Block                                           ProduceExamAutoEvaluationType = 2
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_Stamina                                         ProduceExamAutoEvaluationType = 3
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamLessonBuff                                  ProduceExamAutoEvaluationType = 4
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamReview                                      ProduceExamAutoEvaluationType = 5
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamCardPlayAggressive                          ProduceExamAutoEvaluationType = 6
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamParameterBuff                               ProduceExamAutoEvaluationType = 7
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamStaminaConsumptionDown                      ProduceExamAutoEvaluationType = 8
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamStaminaConsumptionAdd                       ProduceExamAutoEvaluationType = 9
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamBlockAddDown                                ProduceExamAutoEvaluationType = 10
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamGimmickLessonDebuff                         ProduceExamAutoEvaluationType = 11
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamGimmickParameterDebuff                      ProduceExamAutoEvaluationType = 12
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamGimmickSleepy                               ProduceExamAutoEvaluationType = 13
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamGimmickSlump                                ProduceExamAutoEvaluationType = 14
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamStaminaConsumptionDownFix                   ProduceExamAutoEvaluationType = 15
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_PlayableValueAdd                                ProduceExamAutoEvaluationType = 16
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ParameterBuffMultiplePerTurn                    ProduceExamAutoEvaluationType = 17
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ParameterBuffOverTurn                           ProduceExamAutoEvaluationType = 18
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamExtraTurn                                   ProduceExamAutoEvaluationType = 19
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamConcentration                               ProduceExamAutoEvaluationType = 20
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamPreservation                                ProduceExamAutoEvaluationType = 21
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamFullPower                                   ProduceExamAutoEvaluationType = 22
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamFullPowerPointTotal                         ProduceExamAutoEvaluationType = 23
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamConcentrationCount                          ProduceExamAutoEvaluationType = 24
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamPreservationCount                           ProduceExamAutoEvaluationType = 25
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamFullPowerCount                              ProduceExamAutoEvaluationType = 26
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_HoldCount                                       ProduceExamAutoEvaluationType = 27
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_DrawCardCount                                   ProduceExamAutoEvaluationType = 28
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_RemainTurn                                      ProduceExamAutoEvaluationType = 29
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamAntiDebuff                                  ProduceExamAutoEvaluationType = 30
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_StanceLock                                      ProduceExamAutoEvaluationType = 31
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamBlockRestriction                            ProduceExamAutoEvaluationType = 32
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamLessonValueMultiple                         ProduceExamAutoEvaluationType = 33
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamReviewMultiple                              ProduceExamAutoEvaluationType = 34
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamEnthusiasticAdditive                        ProduceExamAutoEvaluationType = 35
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamEnthusiasticMultiple                        ProduceExamAutoEvaluationType = 36
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamFullPowerLessonMultipleAdditive             ProduceExamAutoEvaluationType = 37
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamConcentrationLessonMultipleAdditive         ProduceExamAutoEvaluationType = 38
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamLessonBuffAdditive                          ProduceExamAutoEvaluationType = 39
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamParameterBuffAdditive                       ProduceExamAutoEvaluationType = 40
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamAggressiveAdditive                          ProduceExamAutoEvaluationType = 41
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamReviewAdditive                              ProduceExamAutoEvaluationType = 42
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamFullPowerPointAdditive                      ProduceExamAutoEvaluationType = 43
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamGrowEffectLessonAddAdditive                 ProduceExamAutoEvaluationType = 44
	ProduceExamAutoEvaluationType_ProduceExamAutoEvaluationType_ExamLessonValueMultipleDependReviewOrAggressive ProduceExamAutoEvaluationType = 45
)

// Enum value maps for ProduceExamAutoEvaluationType.
var (
	ProduceExamAutoEvaluationType_name = map[int32]string{
		0:  "ProduceExamAutoEvaluationType_Unknown",
		1:  "ProduceExamAutoEvaluationType_Parameter",
		2:  "ProduceExamAutoEvaluationType_Block",
		3:  "ProduceExamAutoEvaluationType_Stamina",
		4:  "ProduceExamAutoEvaluationType_ExamLessonBuff",
		5:  "ProduceExamAutoEvaluationType_ExamReview",
		6:  "ProduceExamAutoEvaluationType_ExamCardPlayAggressive",
		7:  "ProduceExamAutoEvaluationType_ExamParameterBuff",
		8:  "ProduceExamAutoEvaluationType_ExamStaminaConsumptionDown",
		9:  "ProduceExamAutoEvaluationType_ExamStaminaConsumptionAdd",
		10: "ProduceExamAutoEvaluationType_ExamBlockAddDown",
		11: "ProduceExamAutoEvaluationType_ExamGimmickLessonDebuff",
		12: "ProduceExamAutoEvaluationType_ExamGimmickParameterDebuff",
		13: "ProduceExamAutoEvaluationType_ExamGimmickSleepy",
		14: "ProduceExamAutoEvaluationType_ExamGimmickSlump",
		15: "ProduceExamAutoEvaluationType_ExamStaminaConsumptionDownFix",
		16: "ProduceExamAutoEvaluationType_PlayableValueAdd",
		17: "ProduceExamAutoEvaluationType_ParameterBuffMultiplePerTurn",
		18: "ProduceExamAutoEvaluationType_ParameterBuffOverTurn",
		19: "ProduceExamAutoEvaluationType_ExamExtraTurn",
		20: "ProduceExamAutoEvaluationType_ExamConcentration",
		21: "ProduceExamAutoEvaluationType_ExamPreservation",
		22: "ProduceExamAutoEvaluationType_ExamFullPower",
		23: "ProduceExamAutoEvaluationType_ExamFullPowerPointTotal",
		24: "ProduceExamAutoEvaluationType_ExamConcentrationCount",
		25: "ProduceExamAutoEvaluationType_ExamPreservationCount",
		26: "ProduceExamAutoEvaluationType_ExamFullPowerCount",
		27: "ProduceExamAutoEvaluationType_HoldCount",
		28: "ProduceExamAutoEvaluationType_DrawCardCount",
		29: "ProduceExamAutoEvaluationType_RemainTurn",
		30: "ProduceExamAutoEvaluationType_ExamAntiDebuff",
		31: "ProduceExamAutoEvaluationType_StanceLock",
		32: "ProduceExamAutoEvaluationType_ExamBlockRestriction",
		33: "ProduceExamAutoEvaluationType_ExamLessonValueMultiple",
		34: "ProduceExamAutoEvaluationType_ExamReviewMultiple",
		35: "ProduceExamAutoEvaluationType_ExamEnthusiasticAdditive",
		36: "ProduceExamAutoEvaluationType_ExamEnthusiasticMultiple",
		37: "ProduceExamAutoEvaluationType_ExamFullPowerLessonMultipleAdditive",
		38: "ProduceExamAutoEvaluationType_ExamConcentrationLessonMultipleAdditive",
		39: "ProduceExamAutoEvaluationType_ExamLessonBuffAdditive",
		40: "ProduceExamAutoEvaluationType_ExamParameterBuffAdditive",
		41: "ProduceExamAutoEvaluationType_ExamAggressiveAdditive",
		42: "ProduceExamAutoEvaluationType_ExamReviewAdditive",
		43: "ProduceExamAutoEvaluationType_ExamFullPowerPointAdditive",
		44: "ProduceExamAutoEvaluationType_ExamGrowEffectLessonAddAdditive",
		45: "ProduceExamAutoEvaluationType_ExamLessonValueMultipleDependReviewOrAggressive",
	}
	ProduceExamAutoEvaluationType_value = map[string]int32{
		"ProduceExamAutoEvaluationType_Unknown":                                         0,
		"ProduceExamAutoEvaluationType_Parameter":                                       1,
		"ProduceExamAutoEvaluationType_Block":                                           2,
		"ProduceExamAutoEvaluationType_Stamina":                                         3,
		"ProduceExamAutoEvaluationType_ExamLessonBuff":                                  4,
		"ProduceExamAutoEvaluationType_ExamReview":                                      5,
		"ProduceExamAutoEvaluationType_ExamCardPlayAggressive":                          6,
		"ProduceExamAutoEvaluationType_ExamParameterBuff":                               7,
		"ProduceExamAutoEvaluationType_ExamStaminaConsumptionDown":                      8,
		"ProduceExamAutoEvaluationType_ExamStaminaConsumptionAdd":                       9,
		"ProduceExamAutoEvaluationType_ExamBlockAddDown":                                10,
		"ProduceExamAutoEvaluationType_ExamGimmickLessonDebuff":                         11,
		"ProduceExamAutoEvaluationType_ExamGimmickParameterDebuff":                      12,
		"ProduceExamAutoEvaluationType_ExamGimmickSleepy":                               13,
		"ProduceExamAutoEvaluationType_ExamGimmickSlump":                                14,
		"ProduceExamAutoEvaluationType_ExamStaminaConsumptionDownFix":                   15,
		"ProduceExamAutoEvaluationType_PlayableValueAdd":                                16,
		"ProduceExamAutoEvaluationType_ParameterBuffMultiplePerTurn":                    17,
		"ProduceExamAutoEvaluationType_ParameterBuffOverTurn":                           18,
		"ProduceExamAutoEvaluationType_ExamExtraTurn":                                   19,
		"ProduceExamAutoEvaluationType_ExamConcentration":                               20,
		"ProduceExamAutoEvaluationType_ExamPreservation":                                21,
		"ProduceExamAutoEvaluationType_ExamFullPower":                                   22,
		"ProduceExamAutoEvaluationType_ExamFullPowerPointTotal":                         23,
		"ProduceExamAutoEvaluationType_ExamConcentrationCount":                          24,
		"ProduceExamAutoEvaluationType_ExamPreservationCount":                           25,
		"ProduceExamAutoEvaluationType_ExamFullPowerCount":                              26,
		"ProduceExamAutoEvaluationType_HoldCount":                                       27,
		"ProduceExamAutoEvaluationType_DrawCardCount":                                   28,
		"ProduceExamAutoEvaluationType_RemainTurn":                                      29,
		"ProduceExamAutoEvaluationType_ExamAntiDebuff":                                  30,
		"ProduceExamAutoEvaluationType_StanceLock":                                      31,
		"ProduceExamAutoEvaluationType_ExamBlockRestriction":                            32,
		"ProduceExamAutoEvaluationType_ExamLessonValueMultiple":                         33,
		"ProduceExamAutoEvaluationType_ExamReviewMultiple":                              34,
		"ProduceExamAutoEvaluationType_ExamEnthusiasticAdditive":                        35,
		"ProduceExamAutoEvaluationType_ExamEnthusiasticMultiple":                        36,
		"ProduceExamAutoEvaluationType_ExamFullPowerLessonMultipleAdditive":             37,
		"ProduceExamAutoEvaluationType_ExamConcentrationLessonMultipleAdditive":         38,
		"ProduceExamAutoEvaluationType_ExamLessonBuffAdditive":                          39,
		"ProduceExamAutoEvaluationType_ExamParameterBuffAdditive":                       40,
		"ProduceExamAutoEvaluationType_ExamAggressiveAdditive":                          41,
		"ProduceExamAutoEvaluationType_ExamReviewAdditive":                              42,
		"ProduceExamAutoEvaluationType_ExamFullPowerPointAdditive":                      43,
		"ProduceExamAutoEvaluationType_ExamGrowEffectLessonAddAdditive":                 44,
		"ProduceExamAutoEvaluationType_ExamLessonValueMultipleDependReviewOrAggressive": 45,
	}
)

func (x ProduceExamAutoEvaluationType) Enum() *ProduceExamAutoEvaluationType {
	p := new(ProduceExamAutoEvaluationType)
	*p = x
	return p
}

func (x ProduceExamAutoEvaluationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceExamAutoEvaluationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[116].Descriptor()
}

func (ProduceExamAutoEvaluationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[116]
}

func (x ProduceExamAutoEvaluationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceExamAutoEvaluationType.Descriptor instead.
func (ProduceExamAutoEvaluationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{116}
}

type ProduceExamEffectType int32

const (
	ProduceExamEffectType_ProduceExamEffectType_Unknown                                         ProduceExamEffectType = 0
	ProduceExamEffectType_ProduceExamEffectType_ExamLesson                                      ProduceExamEffectType = 1
	ProduceExamEffectType_ProduceExamEffectType_ExamParameterBuff                               ProduceExamEffectType = 2
	ProduceExamEffectType_ProduceExamEffectType_ExamBlock                                       ProduceExamEffectType = 3
	ProduceExamEffectType_ProduceExamEffectType_ExamCardDraw                                    ProduceExamEffectType = 4
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaConsumptionDown                      ProduceExamEffectType = 5
	ProduceExamEffectType_ProduceExamEffectType_ExamCardCreateId                                ProduceExamEffectType = 6
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaReduceFix                            ProduceExamEffectType = 7
	ProduceExamEffectType_ProduceExamEffectType_ExamCardMove                                    ProduceExamEffectType = 9
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonBuff                                  ProduceExamEffectType = 10
	ProduceExamEffectType_ProduceExamEffectType_ExamCardUpgrade                                 ProduceExamEffectType = 11
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockValueMultiple                          ProduceExamEffectType = 13
	ProduceExamEffectType_ProduceExamEffectType_ExamPlayableValueAdd                            ProduceExamEffectType = 14
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonBuffMultiple                          ProduceExamEffectType = 15
	ProduceExamEffectType_ProduceExamEffectType_ExamCardStaminaConsumptionChange                ProduceExamEffectType = 17
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockRestriction                            ProduceExamEffectType = 18
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependBlock                           ProduceExamEffectType = 19
	ProduceExamEffectType_ProduceExamEffectType_ExamCardCreateSearch                            ProduceExamEffectType = 21
	ProduceExamEffectType_ProduceExamEffectType_ExamStatusEnchant                               ProduceExamEffectType = 22
	ProduceExamEffectType_ProduceExamEffectType_ExamMultipleLessonBuffLesson                    ProduceExamEffectType = 23
	ProduceExamEffectType_ProduceExamEffectType_ExamForcePlayCardSearch                         ProduceExamEffectType = 24
	ProduceExamEffectType_ProduceExamEffectType_ExamCardStaminaConsumptionDownSpecify           ProduceExamEffectType = 26
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaDamage                               ProduceExamEffectType = 27
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaRecoverFix                           ProduceExamEffectType = 28
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonFix                                   ProduceExamEffectType = 29
	ProduceExamEffectType_ProduceExamEffectType_ExamCardDuplicate                               ProduceExamEffectType = 30
	ProduceExamEffectType_ProduceExamEffectType_ExamReview                                      ProduceExamEffectType = 31
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonValueChangePerPlay                    ProduceExamEffectType = 32
	ProduceExamEffectType_ProduceExamEffectType_ExamCardStaminaConsumptionReduce                ProduceExamEffectType = 33
	ProduceExamEffectType_ProduceExamEffectType_ExamReviewValueMultiple                         ProduceExamEffectType = 36
	ProduceExamEffectType_ProduceExamEffectType_ExamCardSearchEffectPlayCountBuff               ProduceExamEffectType = 38
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonValueMultiple                         ProduceExamEffectType = 39
	ProduceExamEffectType_ProduceExamEffectType_ExamCardPlayAggressive                          ProduceExamEffectType = 42
	ProduceExamEffectType_ProduceExamEffectType_ExamConcentration                               ProduceExamEffectType = 45
	ProduceExamEffectType_ProduceExamEffectType_ExamPreservation                                ProduceExamEffectType = 46
	ProduceExamEffectType_ProduceExamEffectType_ExamFullPower                                   ProduceExamEffectType = 47
	ProduceExamEffectType_ProduceExamEffectType_ExamStanceReset                                 ProduceExamEffectType = 48
	ProduceExamEffectType_ProduceExamEffectType_ExamFullPowerPoint                              ProduceExamEffectType = 49
	ProduceExamEffectType_ProduceExamEffectType_ExamForecast                                    ProduceExamEffectType = 50
	ProduceExamEffectType_ProduceExamEffectType_ExamFullPowerPointReduce                        ProduceExamEffectType = 51
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonAddBlock                              ProduceExamEffectType = 52
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonFullPowerPoint                        ProduceExamEffectType = 56
	ProduceExamEffectType_ProduceExamEffectType_ExamSearchPlayCardStaminaConsumptionChange      ProduceExamEffectType = 59
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaReduce                               ProduceExamEffectType = 60
	ProduceExamEffectType_ProduceExamEffectType_ExamUplifting                                   ProduceExamEffectType = 62
	ProduceExamEffectType_ProduceExamEffectType_ExamExtraTurn                                   ProduceExamEffectType = 63
	ProduceExamEffectType_ProduceExamEffectType_ExamAntiDebuff                                  ProduceExamEffectType = 66
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaConsumptionAdd                       ProduceExamEffectType = 69
	ProduceExamEffectType_ProduceExamEffectType_ExamThresholdDown                               ProduceExamEffectType = 70
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockAddDown                                ProduceExamEffectType = 73
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockAddDownRestriction                     ProduceExamEffectType = 74
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaRecoverAdd                           ProduceExamEffectType = 76
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaReduceChange                         ProduceExamEffectType = 77
	ProduceExamEffectType_ProduceExamEffectType_ExamPanic                                       ProduceExamEffectType = 78
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonChangeSpecifyLessThan                 ProduceExamEffectType = 81
	ProduceExamEffectType_ProduceExamEffectType_ExamHandHold                                    ProduceExamEffectType = 82
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaConsumptionAddFix                    ProduceExamEffectType = 84
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaConsumptionAddDown                   ProduceExamEffectType = 85
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaRecoverRestriction                   ProduceExamEffectType = 86
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaConsumptionDownAdd                   ProduceExamEffectType = 89
	ProduceExamEffectType_ProduceExamEffectType_ExamGetCardUpgrade                              ProduceExamEffectType = 90
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaConsumptionDownFix                   ProduceExamEffectType = 93
	ProduceExamEffectType_ProduceExamEffectType_ExamHandGraveCountCardDraw                      ProduceExamEffectType = 98
	ProduceExamEffectType_ProduceExamEffectType_ExamHandGraveCountCardAdd                       ProduceExamEffectType = 99
	ProduceExamEffectType_ProduceExamEffectType_ExamEffectTimer                                 ProduceExamEffectType = 103
	ProduceExamEffectType_ProduceExamEffectType_ExamGimmickLessonDebuff                         ProduceExamEffectType = 105
	ProduceExamEffectType_ProduceExamEffectType_ExamGimmickParameterDebuff                      ProduceExamEffectType = 106
	ProduceExamEffectType_ProduceExamEffectType_ExamGimmickSleepy                               ProduceExamEffectType = 107
	ProduceExamEffectType_ProduceExamEffectType_ExamGimmickEnthusiastic                         ProduceExamEffectType = 109
	ProduceExamEffectType_ProduceExamEffectType_ExamGimmickPlayCardLimit                        ProduceExamEffectType = 113
	ProduceExamEffectType_ProduceExamEffectType_ExamGimmickSlump                                ProduceExamEffectType = 114
	ProduceExamEffectType_ProduceExamEffectType_ExamGimmickStartTurnCardDrawDown                ProduceExamEffectType = 115
	ProduceExamEffectType_ProduceExamEffectType_ExamStaminaRecoverMultiple                      ProduceExamEffectType = 117
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonPerSearchCount                        ProduceExamEffectType = 118
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockFix                                    ProduceExamEffectType = 119
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonAddMultipleLessonBuff                 ProduceExamEffectType = 120
	ProduceExamEffectType_ProduceExamEffectType_ExamCardStatusEnchant                           ProduceExamEffectType = 121
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockDown                                   ProduceExamEffectType = 122
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonChangeSpecifyMoreThan                 ProduceExamEffectType = 123
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependExamReview                      ProduceExamEffectType = 124
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependExamCardPlayAggressive          ProduceExamEffectType = 125
	ProduceExamEffectType_ProduceExamEffectType_ExamReviewDependExamBlock                       ProduceExamEffectType = 126
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockDependExamReview                       ProduceExamEffectType = 127
	ProduceExamEffectType_ProduceExamEffectType_ExamReviewDependExamCardPlayAggressive          ProduceExamEffectType = 128
	ProduceExamEffectType_ProduceExamEffectType_ExamParameterBuffMultiplePerTurn                ProduceExamEffectType = 129
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonBuffDependParameterBuff               ProduceExamEffectType = 130
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependParameterBuff                   ProduceExamEffectType = 131
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonAddMultipleParameterBuff              ProduceExamEffectType = 132
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockPerUseCardCount                        ProduceExamEffectType = 133
	ProduceExamEffectType_ProduceExamEffectType_ExamChainEffect                                 ProduceExamEffectType = 140
	ProduceExamEffectType_ProduceExamEffectType_StanceLock                                      ProduceExamEffectType = 141
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependStamina                         ProduceExamEffectType = 142
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockAddMultipleAggressive                  ProduceExamEffectType = 143
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependStaminaConsumptionSum           ProduceExamEffectType = 144
	ProduceExamEffectType_ProduceExamEffectType_ExamChainEffectPerPassedTurn                    ProduceExamEffectType = 145
	ProduceExamEffectType_ProduceExamEffectType_ExamChainEffectPerRemainTurn                    ProduceExamEffectType = 146
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependPlayCardCountSum                ProduceExamEffectType = 147
	ProduceExamEffectType_ProduceExamEffectType_ExamDebuffRecover                               ProduceExamEffectType = 148
	ProduceExamEffectType_ProduceExamEffectType_ExamAggressiveValueMultiple                     ProduceExamEffectType = 149
	ProduceExamEffectType_ProduceExamEffectType_ExamItemFireLimitAdd                            ProduceExamEffectType = 150
	ProduceExamEffectType_ProduceExamEffectType_ExamReviewReduce                                ProduceExamEffectType = 151
	ProduceExamEffectType_ProduceExamEffectType_ExamAggressiveReduce                            ProduceExamEffectType = 152
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonBuffReduce                            ProduceExamEffectType = 153
	ProduceExamEffectType_ProduceExamEffectType_ExamParameterBuffReduce                         ProduceExamEffectType = 154
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonValueMultipleDown                     ProduceExamEffectType = 155
	ProduceExamEffectType_ProduceExamEffectType_ExamAddGrowEffect                               ProduceExamEffectType = 156
	ProduceExamEffectType_ProduceExamEffectType_ExamParameterBuffPerSearchCount                 ProduceExamEffectType = 157
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonBuffPerSearchCount                    ProduceExamEffectType = 158
	ProduceExamEffectType_ProduceExamEffectType_ExamReviewPerSearchCount                        ProduceExamEffectType = 159
	ProduceExamEffectType_ProduceExamEffectType_ExamAggressivePerSearchCount                    ProduceExamEffectType = 160
	ProduceExamEffectType_ProduceExamEffectType_ExamBlockPerSearchCount                         ProduceExamEffectType = 161
	ProduceExamEffectType_ProduceExamEffectType_ExamFullPowerPointPerSearchCount                ProduceExamEffectType = 162
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependBlockAndSearchCount             ProduceExamEffectType = 163
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependAggressiveAndSearchCount        ProduceExamEffectType = 164
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonDependReviewAndSearchCount            ProduceExamEffectType = 165
	ProduceExamEffectType_ProduceExamEffectType_ExamEffectPerSearchCount                        ProduceExamEffectType = 166
	ProduceExamEffectType_ProduceExamEffectType_ExamOverPreservation                            ProduceExamEffectType = 167
	ProduceExamEffectType_ProduceExamEffectType_ExamParameterBuffDependLessonBuff               ProduceExamEffectType = 168
	ProduceExamEffectType_ProduceExamEffectType_ExamAggressiveDependReview                      ProduceExamEffectType = 169
	ProduceExamEffectType_ProduceExamEffectType_ExamEnthusiasticAdditive                        ProduceExamEffectType = 170
	ProduceExamEffectType_ProduceExamEffectType_ExamEnthusiasticMultiple                        ProduceExamEffectType = 171
	ProduceExamEffectType_ProduceExamEffectType_ExamFullPowerLessonMultipleAdditive             ProduceExamEffectType = 172
	ProduceExamEffectType_ProduceExamEffectType_ExamConcentrationLessonMultipleAdditive         ProduceExamEffectType = 173
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonBuffAdditive                          ProduceExamEffectType = 174
	ProduceExamEffectType_ProduceExamEffectType_ExamParameterBuffAdditive                       ProduceExamEffectType = 175
	ProduceExamEffectType_ProduceExamEffectType_ExamAggressiveAdditive                          ProduceExamEffectType = 176
	ProduceExamEffectType_ProduceExamEffectType_ExamReviewAdditive                              ProduceExamEffectType = 177
	ProduceExamEffectType_ProduceExamEffectType_ExamFullPowerPointAdditive                      ProduceExamEffectType = 178
	ProduceExamEffectType_ProduceExamEffectType_ExamGrowEffectLessonAddAdditive                 ProduceExamEffectType = 179
	ProduceExamEffectType_ProduceExamEffectType_ExamParameterBuffMultiplePerTurnReduce          ProduceExamEffectType = 180
	ProduceExamEffectType_ProduceExamEffectType_ExamLessonValueMultipleDependReviewOrAggressive ProduceExamEffectType = 181
	ProduceExamEffectType_ProduceExamEffectType_ExamReviewMultiple                              ProduceExamEffectType = 182
	ProduceExamEffectType_ProduceExamEffectType_ExamMultipleEnthusiasticLesson                  ProduceExamEffectType = 183
	ProduceExamEffectType_ProduceExamEffectType_ExamMultipleConcentrationLesson                 ProduceExamEffectType = 184
	ProduceExamEffectType_ProduceExamEffectType_ExamMultipleFullPowerLesson                     ProduceExamEffectType = 185
)

// Enum value maps for ProduceExamEffectType.
var (
	ProduceExamEffectType_name = map[int32]string{
		0:   "ProduceExamEffectType_Unknown",
		1:   "ProduceExamEffectType_ExamLesson",
		2:   "ProduceExamEffectType_ExamParameterBuff",
		3:   "ProduceExamEffectType_ExamBlock",
		4:   "ProduceExamEffectType_ExamCardDraw",
		5:   "ProduceExamEffectType_ExamStaminaConsumptionDown",
		6:   "ProduceExamEffectType_ExamCardCreateId",
		7:   "ProduceExamEffectType_ExamStaminaReduceFix",
		9:   "ProduceExamEffectType_ExamCardMove",
		10:  "ProduceExamEffectType_ExamLessonBuff",
		11:  "ProduceExamEffectType_ExamCardUpgrade",
		13:  "ProduceExamEffectType_ExamBlockValueMultiple",
		14:  "ProduceExamEffectType_ExamPlayableValueAdd",
		15:  "ProduceExamEffectType_ExamLessonBuffMultiple",
		17:  "ProduceExamEffectType_ExamCardStaminaConsumptionChange",
		18:  "ProduceExamEffectType_ExamBlockRestriction",
		19:  "ProduceExamEffectType_ExamLessonDependBlock",
		21:  "ProduceExamEffectType_ExamCardCreateSearch",
		22:  "ProduceExamEffectType_ExamStatusEnchant",
		23:  "ProduceExamEffectType_ExamMultipleLessonBuffLesson",
		24:  "ProduceExamEffectType_ExamForcePlayCardSearch",
		26:  "ProduceExamEffectType_ExamCardStaminaConsumptionDownSpecify",
		27:  "ProduceExamEffectType_ExamStaminaDamage",
		28:  "ProduceExamEffectType_ExamStaminaRecoverFix",
		29:  "ProduceExamEffectType_ExamLessonFix",
		30:  "ProduceExamEffectType_ExamCardDuplicate",
		31:  "ProduceExamEffectType_ExamReview",
		32:  "ProduceExamEffectType_ExamLessonValueChangePerPlay",
		33:  "ProduceExamEffectType_ExamCardStaminaConsumptionReduce",
		36:  "ProduceExamEffectType_ExamReviewValueMultiple",
		38:  "ProduceExamEffectType_ExamCardSearchEffectPlayCountBuff",
		39:  "ProduceExamEffectType_ExamLessonValueMultiple",
		42:  "ProduceExamEffectType_ExamCardPlayAggressive",
		45:  "ProduceExamEffectType_ExamConcentration",
		46:  "ProduceExamEffectType_ExamPreservation",
		47:  "ProduceExamEffectType_ExamFullPower",
		48:  "ProduceExamEffectType_ExamStanceReset",
		49:  "ProduceExamEffectType_ExamFullPowerPoint",
		50:  "ProduceExamEffectType_ExamForecast",
		51:  "ProduceExamEffectType_ExamFullPowerPointReduce",
		52:  "ProduceExamEffectType_ExamLessonAddBlock",
		56:  "ProduceExamEffectType_ExamLessonFullPowerPoint",
		59:  "ProduceExamEffectType_ExamSearchPlayCardStaminaConsumptionChange",
		60:  "ProduceExamEffectType_ExamStaminaReduce",
		62:  "ProduceExamEffectType_ExamUplifting",
		63:  "ProduceExamEffectType_ExamExtraTurn",
		66:  "ProduceExamEffectType_ExamAntiDebuff",
		69:  "ProduceExamEffectType_ExamStaminaConsumptionAdd",
		70:  "ProduceExamEffectType_ExamThresholdDown",
		73:  "ProduceExamEffectType_ExamBlockAddDown",
		74:  "ProduceExamEffectType_ExamBlockAddDownRestriction",
		76:  "ProduceExamEffectType_ExamStaminaRecoverAdd",
		77:  "ProduceExamEffectType_ExamStaminaReduceChange",
		78:  "ProduceExamEffectType_ExamPanic",
		81:  "ProduceExamEffectType_ExamLessonChangeSpecifyLessThan",
		82:  "ProduceExamEffectType_ExamHandHold",
		84:  "ProduceExamEffectType_ExamStaminaConsumptionAddFix",
		85:  "ProduceExamEffectType_ExamStaminaConsumptionAddDown",
		86:  "ProduceExamEffectType_ExamStaminaRecoverRestriction",
		89:  "ProduceExamEffectType_ExamStaminaConsumptionDownAdd",
		90:  "ProduceExamEffectType_ExamGetCardUpgrade",
		93:  "ProduceExamEffectType_ExamStaminaConsumptionDownFix",
		98:  "ProduceExamEffectType_ExamHandGraveCountCardDraw",
		99:  "ProduceExamEffectType_ExamHandGraveCountCardAdd",
		103: "ProduceExamEffectType_ExamEffectTimer",
		105: "ProduceExamEffectType_ExamGimmickLessonDebuff",
		106: "ProduceExamEffectType_ExamGimmickParameterDebuff",
		107: "ProduceExamEffectType_ExamGimmickSleepy",
		109: "ProduceExamEffectType_ExamGimmickEnthusiastic",
		113: "ProduceExamEffectType_ExamGimmickPlayCardLimit",
		114: "ProduceExamEffectType_ExamGimmickSlump",
		115: "ProduceExamEffectType_ExamGimmickStartTurnCardDrawDown",
		117: "ProduceExamEffectType_ExamStaminaRecoverMultiple",
		118: "ProduceExamEffectType_ExamLessonPerSearchCount",
		119: "ProduceExamEffectType_ExamBlockFix",
		120: "ProduceExamEffectType_ExamLessonAddMultipleLessonBuff",
		121: "ProduceExamEffectType_ExamCardStatusEnchant",
		122: "ProduceExamEffectType_ExamBlockDown",
		123: "ProduceExamEffectType_ExamLessonChangeSpecifyMoreThan",
		124: "ProduceExamEffectType_ExamLessonDependExamReview",
		125: "ProduceExamEffectType_ExamLessonDependExamCardPlayAggressive",
		126: "ProduceExamEffectType_ExamReviewDependExamBlock",
		127: "ProduceExamEffectType_ExamBlockDependExamReview",
		128: "ProduceExamEffectType_ExamReviewDependExamCardPlayAggressive",
		129: "ProduceExamEffectType_ExamParameterBuffMultiplePerTurn",
		130: "ProduceExamEffectType_ExamLessonBuffDependParameterBuff",
		131: "ProduceExamEffectType_ExamLessonDependParameterBuff",
		132: "ProduceExamEffectType_ExamLessonAddMultipleParameterBuff",
		133: "ProduceExamEffectType_ExamBlockPerUseCardCount",
		140: "ProduceExamEffectType_ExamChainEffect",
		141: "ProduceExamEffectType_StanceLock",
		142: "ProduceExamEffectType_ExamLessonDependStamina",
		143: "ProduceExamEffectType_ExamBlockAddMultipleAggressive",
		144: "ProduceExamEffectType_ExamLessonDependStaminaConsumptionSum",
		145: "ProduceExamEffectType_ExamChainEffectPerPassedTurn",
		146: "ProduceExamEffectType_ExamChainEffectPerRemainTurn",
		147: "ProduceExamEffectType_ExamLessonDependPlayCardCountSum",
		148: "ProduceExamEffectType_ExamDebuffRecover",
		149: "ProduceExamEffectType_ExamAggressiveValueMultiple",
		150: "ProduceExamEffectType_ExamItemFireLimitAdd",
		151: "ProduceExamEffectType_ExamReviewReduce",
		152: "ProduceExamEffectType_ExamAggressiveReduce",
		153: "ProduceExamEffectType_ExamLessonBuffReduce",
		154: "ProduceExamEffectType_ExamParameterBuffReduce",
		155: "ProduceExamEffectType_ExamLessonValueMultipleDown",
		156: "ProduceExamEffectType_ExamAddGrowEffect",
		157: "ProduceExamEffectType_ExamParameterBuffPerSearchCount",
		158: "ProduceExamEffectType_ExamLessonBuffPerSearchCount",
		159: "ProduceExamEffectType_ExamReviewPerSearchCount",
		160: "ProduceExamEffectType_ExamAggressivePerSearchCount",
		161: "ProduceExamEffectType_ExamBlockPerSearchCount",
		162: "ProduceExamEffectType_ExamFullPowerPointPerSearchCount",
		163: "ProduceExamEffectType_ExamLessonDependBlockAndSearchCount",
		164: "ProduceExamEffectType_ExamLessonDependAggressiveAndSearchCount",
		165: "ProduceExamEffectType_ExamLessonDependReviewAndSearchCount",
		166: "ProduceExamEffectType_ExamEffectPerSearchCount",
		167: "ProduceExamEffectType_ExamOverPreservation",
		168: "ProduceExamEffectType_ExamParameterBuffDependLessonBuff",
		169: "ProduceExamEffectType_ExamAggressiveDependReview",
		170: "ProduceExamEffectType_ExamEnthusiasticAdditive",
		171: "ProduceExamEffectType_ExamEnthusiasticMultiple",
		172: "ProduceExamEffectType_ExamFullPowerLessonMultipleAdditive",
		173: "ProduceExamEffectType_ExamConcentrationLessonMultipleAdditive",
		174: "ProduceExamEffectType_ExamLessonBuffAdditive",
		175: "ProduceExamEffectType_ExamParameterBuffAdditive",
		176: "ProduceExamEffectType_ExamAggressiveAdditive",
		177: "ProduceExamEffectType_ExamReviewAdditive",
		178: "ProduceExamEffectType_ExamFullPowerPointAdditive",
		179: "ProduceExamEffectType_ExamGrowEffectLessonAddAdditive",
		180: "ProduceExamEffectType_ExamParameterBuffMultiplePerTurnReduce",
		181: "ProduceExamEffectType_ExamLessonValueMultipleDependReviewOrAggressive",
		182: "ProduceExamEffectType_ExamReviewMultiple",
		183: "ProduceExamEffectType_ExamMultipleEnthusiasticLesson",
		184: "ProduceExamEffectType_ExamMultipleConcentrationLesson",
		185: "ProduceExamEffectType_ExamMultipleFullPowerLesson",
	}
	ProduceExamEffectType_value = map[string]int32{
		"ProduceExamEffectType_Unknown":                                         0,
		"ProduceExamEffectType_ExamLesson":                                      1,
		"ProduceExamEffectType_ExamParameterBuff":                               2,
		"ProduceExamEffectType_ExamBlock":                                       3,
		"ProduceExamEffectType_ExamCardDraw":                                    4,
		"ProduceExamEffectType_ExamStaminaConsumptionDown":                      5,
		"ProduceExamEffectType_ExamCardCreateId":                                6,
		"ProduceExamEffectType_ExamStaminaReduceFix":                            7,
		"ProduceExamEffectType_ExamCardMove":                                    9,
		"ProduceExamEffectType_ExamLessonBuff":                                  10,
		"ProduceExamEffectType_ExamCardUpgrade":                                 11,
		"ProduceExamEffectType_ExamBlockValueMultiple":                          13,
		"ProduceExamEffectType_ExamPlayableValueAdd":                            14,
		"ProduceExamEffectType_ExamLessonBuffMultiple":                          15,
		"ProduceExamEffectType_ExamCardStaminaConsumptionChange":                17,
		"ProduceExamEffectType_ExamBlockRestriction":                            18,
		"ProduceExamEffectType_ExamLessonDependBlock":                           19,
		"ProduceExamEffectType_ExamCardCreateSearch":                            21,
		"ProduceExamEffectType_ExamStatusEnchant":                               22,
		"ProduceExamEffectType_ExamMultipleLessonBuffLesson":                    23,
		"ProduceExamEffectType_ExamForcePlayCardSearch":                         24,
		"ProduceExamEffectType_ExamCardStaminaConsumptionDownSpecify":           26,
		"ProduceExamEffectType_ExamStaminaDamage":                               27,
		"ProduceExamEffectType_ExamStaminaRecoverFix":                           28,
		"ProduceExamEffectType_ExamLessonFix":                                   29,
		"ProduceExamEffectType_ExamCardDuplicate":                               30,
		"ProduceExamEffectType_ExamReview":                                      31,
		"ProduceExamEffectType_ExamLessonValueChangePerPlay":                    32,
		"ProduceExamEffectType_ExamCardStaminaConsumptionReduce":                33,
		"ProduceExamEffectType_ExamReviewValueMultiple":                         36,
		"ProduceExamEffectType_ExamCardSearchEffectPlayCountBuff":               38,
		"ProduceExamEffectType_ExamLessonValueMultiple":                         39,
		"ProduceExamEffectType_ExamCardPlayAggressive":                          42,
		"ProduceExamEffectType_ExamConcentration":                               45,
		"ProduceExamEffectType_ExamPreservation":                                46,
		"ProduceExamEffectType_ExamFullPower":                                   47,
		"ProduceExamEffectType_ExamStanceReset":                                 48,
		"ProduceExamEffectType_ExamFullPowerPoint":                              49,
		"ProduceExamEffectType_ExamForecast":                                    50,
		"ProduceExamEffectType_ExamFullPowerPointReduce":                        51,
		"ProduceExamEffectType_ExamLessonAddBlock":                              52,
		"ProduceExamEffectType_ExamLessonFullPowerPoint":                        56,
		"ProduceExamEffectType_ExamSearchPlayCardStaminaConsumptionChange":      59,
		"ProduceExamEffectType_ExamStaminaReduce":                               60,
		"ProduceExamEffectType_ExamUplifting":                                   62,
		"ProduceExamEffectType_ExamExtraTurn":                                   63,
		"ProduceExamEffectType_ExamAntiDebuff":                                  66,
		"ProduceExamEffectType_ExamStaminaConsumptionAdd":                       69,
		"ProduceExamEffectType_ExamThresholdDown":                               70,
		"ProduceExamEffectType_ExamBlockAddDown":                                73,
		"ProduceExamEffectType_ExamBlockAddDownRestriction":                     74,
		"ProduceExamEffectType_ExamStaminaRecoverAdd":                           76,
		"ProduceExamEffectType_ExamStaminaReduceChange":                         77,
		"ProduceExamEffectType_ExamPanic":                                       78,
		"ProduceExamEffectType_ExamLessonChangeSpecifyLessThan":                 81,
		"ProduceExamEffectType_ExamHandHold":                                    82,
		"ProduceExamEffectType_ExamStaminaConsumptionAddFix":                    84,
		"ProduceExamEffectType_ExamStaminaConsumptionAddDown":                   85,
		"ProduceExamEffectType_ExamStaminaRecoverRestriction":                   86,
		"ProduceExamEffectType_ExamStaminaConsumptionDownAdd":                   89,
		"ProduceExamEffectType_ExamGetCardUpgrade":                              90,
		"ProduceExamEffectType_ExamStaminaConsumptionDownFix":                   93,
		"ProduceExamEffectType_ExamHandGraveCountCardDraw":                      98,
		"ProduceExamEffectType_ExamHandGraveCountCardAdd":                       99,
		"ProduceExamEffectType_ExamEffectTimer":                                 103,
		"ProduceExamEffectType_ExamGimmickLessonDebuff":                         105,
		"ProduceExamEffectType_ExamGimmickParameterDebuff":                      106,
		"ProduceExamEffectType_ExamGimmickSleepy":                               107,
		"ProduceExamEffectType_ExamGimmickEnthusiastic":                         109,
		"ProduceExamEffectType_ExamGimmickPlayCardLimit":                        113,
		"ProduceExamEffectType_ExamGimmickSlump":                                114,
		"ProduceExamEffectType_ExamGimmickStartTurnCardDrawDown":                115,
		"ProduceExamEffectType_ExamStaminaRecoverMultiple":                      117,
		"ProduceExamEffectType_ExamLessonPerSearchCount":                        118,
		"ProduceExamEffectType_ExamBlockFix":                                    119,
		"ProduceExamEffectType_ExamLessonAddMultipleLessonBuff":                 120,
		"ProduceExamEffectType_ExamCardStatusEnchant":                           121,
		"ProduceExamEffectType_ExamBlockDown":                                   122,
		"ProduceExamEffectType_ExamLessonChangeSpecifyMoreThan":                 123,
		"ProduceExamEffectType_ExamLessonDependExamReview":                      124,
		"ProduceExamEffectType_ExamLessonDependExamCardPlayAggressive":          125,
		"ProduceExamEffectType_ExamReviewDependExamBlock":                       126,
		"ProduceExamEffectType_ExamBlockDependExamReview":                       127,
		"ProduceExamEffectType_ExamReviewDependExamCardPlayAggressive":          128,
		"ProduceExamEffectType_ExamParameterBuffMultiplePerTurn":                129,
		"ProduceExamEffectType_ExamLessonBuffDependParameterBuff":               130,
		"ProduceExamEffectType_ExamLessonDependParameterBuff":                   131,
		"ProduceExamEffectType_ExamLessonAddMultipleParameterBuff":              132,
		"ProduceExamEffectType_ExamBlockPerUseCardCount":                        133,
		"ProduceExamEffectType_ExamChainEffect":                                 140,
		"ProduceExamEffectType_StanceLock":                                      141,
		"ProduceExamEffectType_ExamLessonDependStamina":                         142,
		"ProduceExamEffectType_ExamBlockAddMultipleAggressive":                  143,
		"ProduceExamEffectType_ExamLessonDependStaminaConsumptionSum":           144,
		"ProduceExamEffectType_ExamChainEffectPerPassedTurn":                    145,
		"ProduceExamEffectType_ExamChainEffectPerRemainTurn":                    146,
		"ProduceExamEffectType_ExamLessonDependPlayCardCountSum":                147,
		"ProduceExamEffectType_ExamDebuffRecover":                               148,
		"ProduceExamEffectType_ExamAggressiveValueMultiple":                     149,
		"ProduceExamEffectType_ExamItemFireLimitAdd":                            150,
		"ProduceExamEffectType_ExamReviewReduce":                                151,
		"ProduceExamEffectType_ExamAggressiveReduce":                            152,
		"ProduceExamEffectType_ExamLessonBuffReduce":                            153,
		"ProduceExamEffectType_ExamParameterBuffReduce":                         154,
		"ProduceExamEffectType_ExamLessonValueMultipleDown":                     155,
		"ProduceExamEffectType_ExamAddGrowEffect":                               156,
		"ProduceExamEffectType_ExamParameterBuffPerSearchCount":                 157,
		"ProduceExamEffectType_ExamLessonBuffPerSearchCount":                    158,
		"ProduceExamEffectType_ExamReviewPerSearchCount":                        159,
		"ProduceExamEffectType_ExamAggressivePerSearchCount":                    160,
		"ProduceExamEffectType_ExamBlockPerSearchCount":                         161,
		"ProduceExamEffectType_ExamFullPowerPointPerSearchCount":                162,
		"ProduceExamEffectType_ExamLessonDependBlockAndSearchCount":             163,
		"ProduceExamEffectType_ExamLessonDependAggressiveAndSearchCount":        164,
		"ProduceExamEffectType_ExamLessonDependReviewAndSearchCount":            165,
		"ProduceExamEffectType_ExamEffectPerSearchCount":                        166,
		"ProduceExamEffectType_ExamOverPreservation":                            167,
		"ProduceExamEffectType_ExamParameterBuffDependLessonBuff":               168,
		"ProduceExamEffectType_ExamAggressiveDependReview":                      169,
		"ProduceExamEffectType_ExamEnthusiasticAdditive":                        170,
		"ProduceExamEffectType_ExamEnthusiasticMultiple":                        171,
		"ProduceExamEffectType_ExamFullPowerLessonMultipleAdditive":             172,
		"ProduceExamEffectType_ExamConcentrationLessonMultipleAdditive":         173,
		"ProduceExamEffectType_ExamLessonBuffAdditive":                          174,
		"ProduceExamEffectType_ExamParameterBuffAdditive":                       175,
		"ProduceExamEffectType_ExamAggressiveAdditive":                          176,
		"ProduceExamEffectType_ExamReviewAdditive":                              177,
		"ProduceExamEffectType_ExamFullPowerPointAdditive":                      178,
		"ProduceExamEffectType_ExamGrowEffectLessonAddAdditive":                 179,
		"ProduceExamEffectType_ExamParameterBuffMultiplePerTurnReduce":          180,
		"ProduceExamEffectType_ExamLessonValueMultipleDependReviewOrAggressive": 181,
		"ProduceExamEffectType_ExamReviewMultiple":                              182,
		"ProduceExamEffectType_ExamMultipleEnthusiasticLesson":                  183,
		"ProduceExamEffectType_ExamMultipleConcentrationLesson":                 184,
		"ProduceExamEffectType_ExamMultipleFullPowerLesson":                     185,
	}
)

func (x ProduceExamEffectType) Enum() *ProduceExamEffectType {
	p := new(ProduceExamEffectType)
	*p = x
	return p
}

func (x ProduceExamEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceExamEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[117].Descriptor()
}

func (ProduceExamEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[117]
}

func (x ProduceExamEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceExamEffectType.Descriptor instead.
func (ProduceExamEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{117}
}

type ProduceExamFieldStatusType int32

const (
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_Unknown                        ProduceExamFieldStatusType = 0
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ParameterBuff                  ProduceExamFieldStatusType = 1
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_StaminaUpMultiple              ProduceExamFieldStatusType = 4
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_StaminaLessMultiple            ProduceExamFieldStatusType = 5
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_StaminaConsumptionDown         ProduceExamFieldStatusType = 9
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ConcentrationUp                ProduceExamFieldStatusType = 11
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_PreservationUp                 ProduceExamFieldStatusType = 12
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_FullPowerUp                    ProduceExamFieldStatusType = 13
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_PlayCardRestriction            ProduceExamFieldStatusType = 16
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_NoBlock                        ProduceExamFieldStatusType = 18
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_PlayCardSkill                  ProduceExamFieldStatusType = 19
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_PlayCardLesson                 ProduceExamFieldStatusType = 20
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_PlayCardSupport                ProduceExamFieldStatusType = 21
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_TurnProgressUp                 ProduceExamFieldStatusType = 22
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ConditionThresholdMultiple     ProduceExamFieldStatusType = 27
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ConditionThresholdMultipleDown ProduceExamFieldStatusType = 28
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_LessonBuffUp                   ProduceExamFieldStatusType = 33
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_BlockUp                        ProduceExamFieldStatusType = 34
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ReviewUp                       ProduceExamFieldStatusType = 35
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_GimmickLessonDebuffUp          ProduceExamFieldStatusType = 36
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_GimmickSleepyUp                ProduceExamFieldStatusType = 37
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ParameterBuffUp                ProduceExamFieldStatusType = 38
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_BlockAddDown                   ProduceExamFieldStatusType = 39
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_GimmickParameterDebuff         ProduceExamFieldStatusType = 40
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_RemainingTurn                  ProduceExamFieldStatusType = 41
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_CardPlayAggressiveUp           ProduceExamFieldStatusType = 42
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ParameterLessThan              ProduceExamFieldStatusType = 43
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_FullPowerPointUp               ProduceExamFieldStatusType = 44
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_FullPowerPointGetSumUp         ProduceExamFieldStatusType = 45
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_NoStance                       ProduceExamFieldStatusType = 46
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_StanceChangeCountUp            ProduceExamFieldStatusType = 47
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ConcentrationChangeCountUp     ProduceExamFieldStatusType = 48
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_PreservationChangeCountUp      ProduceExamFieldStatusType = 49
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_FullPowerChangeCountUp         ProduceExamFieldStatusType = 50
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_CardSearchCountUp              ProduceExamFieldStatusType = 51
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_PlayCardSearch                 ProduceExamFieldStatusType = 52
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_ParameterBuffMultiplePerTurnUp ProduceExamFieldStatusType = 53
	ProduceExamFieldStatusType_ProduceExamFieldStatusType_EnthusiasticUp                 ProduceExamFieldStatusType = 54
)

// Enum value maps for ProduceExamFieldStatusType.
var (
	ProduceExamFieldStatusType_name = map[int32]string{
		0:  "ProduceExamFieldStatusType_Unknown",
		1:  "ProduceExamFieldStatusType_ParameterBuff",
		4:  "ProduceExamFieldStatusType_StaminaUpMultiple",
		5:  "ProduceExamFieldStatusType_StaminaLessMultiple",
		9:  "ProduceExamFieldStatusType_StaminaConsumptionDown",
		11: "ProduceExamFieldStatusType_ConcentrationUp",
		12: "ProduceExamFieldStatusType_PreservationUp",
		13: "ProduceExamFieldStatusType_FullPowerUp",
		16: "ProduceExamFieldStatusType_PlayCardRestriction",
		18: "ProduceExamFieldStatusType_NoBlock",
		19: "ProduceExamFieldStatusType_PlayCardSkill",
		20: "ProduceExamFieldStatusType_PlayCardLesson",
		21: "ProduceExamFieldStatusType_PlayCardSupport",
		22: "ProduceExamFieldStatusType_TurnProgressUp",
		27: "ProduceExamFieldStatusType_ConditionThresholdMultiple",
		28: "ProduceExamFieldStatusType_ConditionThresholdMultipleDown",
		33: "ProduceExamFieldStatusType_LessonBuffUp",
		34: "ProduceExamFieldStatusType_BlockUp",
		35: "ProduceExamFieldStatusType_ReviewUp",
		36: "ProduceExamFieldStatusType_GimmickLessonDebuffUp",
		37: "ProduceExamFieldStatusType_GimmickSleepyUp",
		38: "ProduceExamFieldStatusType_ParameterBuffUp",
		39: "ProduceExamFieldStatusType_BlockAddDown",
		40: "ProduceExamFieldStatusType_GimmickParameterDebuff",
		41: "ProduceExamFieldStatusType_RemainingTurn",
		42: "ProduceExamFieldStatusType_CardPlayAggressiveUp",
		43: "ProduceExamFieldStatusType_ParameterLessThan",
		44: "ProduceExamFieldStatusType_FullPowerPointUp",
		45: "ProduceExamFieldStatusType_FullPowerPointGetSumUp",
		46: "ProduceExamFieldStatusType_NoStance",
		47: "ProduceExamFieldStatusType_StanceChangeCountUp",
		48: "ProduceExamFieldStatusType_ConcentrationChangeCountUp",
		49: "ProduceExamFieldStatusType_PreservationChangeCountUp",
		50: "ProduceExamFieldStatusType_FullPowerChangeCountUp",
		51: "ProduceExamFieldStatusType_CardSearchCountUp",
		52: "ProduceExamFieldStatusType_PlayCardSearch",
		53: "ProduceExamFieldStatusType_ParameterBuffMultiplePerTurnUp",
		54: "ProduceExamFieldStatusType_EnthusiasticUp",
	}
	ProduceExamFieldStatusType_value = map[string]int32{
		"ProduceExamFieldStatusType_Unknown":                        0,
		"ProduceExamFieldStatusType_ParameterBuff":                  1,
		"ProduceExamFieldStatusType_StaminaUpMultiple":              4,
		"ProduceExamFieldStatusType_StaminaLessMultiple":            5,
		"ProduceExamFieldStatusType_StaminaConsumptionDown":         9,
		"ProduceExamFieldStatusType_ConcentrationUp":                11,
		"ProduceExamFieldStatusType_PreservationUp":                 12,
		"ProduceExamFieldStatusType_FullPowerUp":                    13,
		"ProduceExamFieldStatusType_PlayCardRestriction":            16,
		"ProduceExamFieldStatusType_NoBlock":                        18,
		"ProduceExamFieldStatusType_PlayCardSkill":                  19,
		"ProduceExamFieldStatusType_PlayCardLesson":                 20,
		"ProduceExamFieldStatusType_PlayCardSupport":                21,
		"ProduceExamFieldStatusType_TurnProgressUp":                 22,
		"ProduceExamFieldStatusType_ConditionThresholdMultiple":     27,
		"ProduceExamFieldStatusType_ConditionThresholdMultipleDown": 28,
		"ProduceExamFieldStatusType_LessonBuffUp":                   33,
		"ProduceExamFieldStatusType_BlockUp":                        34,
		"ProduceExamFieldStatusType_ReviewUp":                       35,
		"ProduceExamFieldStatusType_GimmickLessonDebuffUp":          36,
		"ProduceExamFieldStatusType_GimmickSleepyUp":                37,
		"ProduceExamFieldStatusType_ParameterBuffUp":                38,
		"ProduceExamFieldStatusType_BlockAddDown":                   39,
		"ProduceExamFieldStatusType_GimmickParameterDebuff":         40,
		"ProduceExamFieldStatusType_RemainingTurn":                  41,
		"ProduceExamFieldStatusType_CardPlayAggressiveUp":           42,
		"ProduceExamFieldStatusType_ParameterLessThan":              43,
		"ProduceExamFieldStatusType_FullPowerPointUp":               44,
		"ProduceExamFieldStatusType_FullPowerPointGetSumUp":         45,
		"ProduceExamFieldStatusType_NoStance":                       46,
		"ProduceExamFieldStatusType_StanceChangeCountUp":            47,
		"ProduceExamFieldStatusType_ConcentrationChangeCountUp":     48,
		"ProduceExamFieldStatusType_PreservationChangeCountUp":      49,
		"ProduceExamFieldStatusType_FullPowerChangeCountUp":         50,
		"ProduceExamFieldStatusType_CardSearchCountUp":              51,
		"ProduceExamFieldStatusType_PlayCardSearch":                 52,
		"ProduceExamFieldStatusType_ParameterBuffMultiplePerTurnUp": 53,
		"ProduceExamFieldStatusType_EnthusiasticUp":                 54,
	}
)

func (x ProduceExamFieldStatusType) Enum() *ProduceExamFieldStatusType {
	p := new(ProduceExamFieldStatusType)
	*p = x
	return p
}

func (x ProduceExamFieldStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceExamFieldStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[118].Descriptor()
}

func (ProduceExamFieldStatusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[118]
}

func (x ProduceExamFieldStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceExamFieldStatusType.Descriptor instead.
func (ProduceExamFieldStatusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{118}
}

type ProduceExamPhaseType int32

const (
	ProduceExamPhaseType_ProduceExamPhaseType_Unknown                           ProduceExamPhaseType = 0
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardDraw                      ProduceExamPhaseType = 1
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardPlay                      ProduceExamPhaseType = 2
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardPlayAfter                 ProduceExamPhaseType = 3
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStartTurn                     ProduceExamPhaseType = 4
	ProduceExamPhaseType_ProduceExamPhaseType_ExamEndTurn                       ProduceExamPhaseType = 5
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStartExam                     ProduceExamPhaseType = 6
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardMove                      ProduceExamPhaseType = 7
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardAdd                       ProduceExamPhaseType = 8
	ProduceExamPhaseType_ProduceExamPhaseType_ExamLesson                        ProduceExamPhaseType = 9
	ProduceExamPhaseType_ProduceExamPhaseType_ExamForecast                      ProduceExamPhaseType = 10
	ProduceExamPhaseType_ProduceExamPhaseType_ExamSearchCardPlay                ProduceExamPhaseType = 11
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChange                  ProduceExamPhaseType = 12
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStatusChange                  ProduceExamPhaseType = 13
	ProduceExamPhaseType_ProduceExamPhaseType_ExamTurnCheck                     ProduceExamPhaseType = 16
	ProduceExamPhaseType_ProduceExamPhaseType_ExamUseDrink                      ProduceExamPhaseType = 17
	ProduceExamPhaseType_ProduceExamPhaseType_ExamGetPoint                      ProduceExamPhaseType = 18
	ProduceExamPhaseType_ProduceExamPhaseType_ExamShuffle                       ProduceExamPhaseType = 19
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStaminaReduce                 ProduceExamPhaseType = 20
	ProduceExamPhaseType_ProduceExamPhaseType_ExamTurnTimer                     ProduceExamPhaseType = 21
	ProduceExamPhaseType_ProduceExamPhaseType_ExamTurnInterval                  ProduceExamPhaseType = 22
	ProduceExamPhaseType_ProduceExamPhaseType_ExamPlayCountInterval             ProduceExamPhaseType = 23
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStaminaReduceCard             ProduceExamPhaseType = 24
	ProduceExamPhaseType_ProduceExamPhaseType_ExamPlayTurnCountInterval         ProduceExamPhaseType = 25
	ProduceExamPhaseType_ProduceExamPhaseType_StartPlay                         ProduceExamPhaseType = 27
	ProduceExamPhaseType_ProduceExamPhaseType_StartExamPlay                     ProduceExamPhaseType = 28
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardMoveHand                  ProduceExamPhaseType = 29
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardMoveGrave                 ProduceExamPhaseType = 30
	ProduceExamPhaseType_ProduceExamPhaseType_ExamCardMoveLost                  ProduceExamPhaseType = 31
	ProduceExamPhaseType_ProduceExamPhaseType_ExamLessonParameterUp             ProduceExamPhaseType = 33
	ProduceExamPhaseType_ProduceExamPhaseType_ExamBuffConsume                   ProduceExamPhaseType = 34
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangeCountInterval     ProduceExamPhaseType = 35
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangeCount             ProduceExamPhaseType = 36
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangeConcentration     ProduceExamPhaseType = 37
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangePreservation      ProduceExamPhaseType = 38
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangeFullPower         ProduceExamPhaseType = 39
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceReset                   ProduceExamPhaseType = 40
	ProduceExamPhaseType_ProduceExamPhaseType_ExamTurnSkip                      ProduceExamPhaseType = 41
	ProduceExamPhaseType_ProduceExamPhaseType_ExamEndTurnTimer                  ProduceExamPhaseType = 42
	ProduceExamPhaseType_ProduceExamPhaseType_ExamEndTurnInterval               ProduceExamPhaseType = 43
	ProduceExamPhaseType_ProduceExamPhaseType_ExamPlayCountIntervalAfter        ProduceExamPhaseType = 44
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangeFromConcentration ProduceExamPhaseType = 45
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangeFromPreservation  ProduceExamPhaseType = 46
	ProduceExamPhaseType_ProduceExamPhaseType_ExamStanceChangeFromFullPower     ProduceExamPhaseType = 47
	ProduceExamPhaseType_ProduceExamPhaseType_None                              ProduceExamPhaseType = 999
)

// Enum value maps for ProduceExamPhaseType.
var (
	ProduceExamPhaseType_name = map[int32]string{
		0:   "ProduceExamPhaseType_Unknown",
		1:   "ProduceExamPhaseType_ExamCardDraw",
		2:   "ProduceExamPhaseType_ExamCardPlay",
		3:   "ProduceExamPhaseType_ExamCardPlayAfter",
		4:   "ProduceExamPhaseType_ExamStartTurn",
		5:   "ProduceExamPhaseType_ExamEndTurn",
		6:   "ProduceExamPhaseType_ExamStartExam",
		7:   "ProduceExamPhaseType_ExamCardMove",
		8:   "ProduceExamPhaseType_ExamCardAdd",
		9:   "ProduceExamPhaseType_ExamLesson",
		10:  "ProduceExamPhaseType_ExamForecast",
		11:  "ProduceExamPhaseType_ExamSearchCardPlay",
		12:  "ProduceExamPhaseType_ExamStanceChange",
		13:  "ProduceExamPhaseType_ExamStatusChange",
		16:  "ProduceExamPhaseType_ExamTurnCheck",
		17:  "ProduceExamPhaseType_ExamUseDrink",
		18:  "ProduceExamPhaseType_ExamGetPoint",
		19:  "ProduceExamPhaseType_ExamShuffle",
		20:  "ProduceExamPhaseType_ExamStaminaReduce",
		21:  "ProduceExamPhaseType_ExamTurnTimer",
		22:  "ProduceExamPhaseType_ExamTurnInterval",
		23:  "ProduceExamPhaseType_ExamPlayCountInterval",
		24:  "ProduceExamPhaseType_ExamStaminaReduceCard",
		25:  "ProduceExamPhaseType_ExamPlayTurnCountInterval",
		27:  "ProduceExamPhaseType_StartPlay",
		28:  "ProduceExamPhaseType_StartExamPlay",
		29:  "ProduceExamPhaseType_ExamCardMoveHand",
		30:  "ProduceExamPhaseType_ExamCardMoveGrave",
		31:  "ProduceExamPhaseType_ExamCardMoveLost",
		33:  "ProduceExamPhaseType_ExamLessonParameterUp",
		34:  "ProduceExamPhaseType_ExamBuffConsume",
		35:  "ProduceExamPhaseType_ExamStanceChangeCountInterval",
		36:  "ProduceExamPhaseType_ExamStanceChangeCount",
		37:  "ProduceExamPhaseType_ExamStanceChangeConcentration",
		38:  "ProduceExamPhaseType_ExamStanceChangePreservation",
		39:  "ProduceExamPhaseType_ExamStanceChangeFullPower",
		40:  "ProduceExamPhaseType_ExamStanceReset",
		41:  "ProduceExamPhaseType_ExamTurnSkip",
		42:  "ProduceExamPhaseType_ExamEndTurnTimer",
		43:  "ProduceExamPhaseType_ExamEndTurnInterval",
		44:  "ProduceExamPhaseType_ExamPlayCountIntervalAfter",
		45:  "ProduceExamPhaseType_ExamStanceChangeFromConcentration",
		46:  "ProduceExamPhaseType_ExamStanceChangeFromPreservation",
		47:  "ProduceExamPhaseType_ExamStanceChangeFromFullPower",
		999: "ProduceExamPhaseType_None",
	}
	ProduceExamPhaseType_value = map[string]int32{
		"ProduceExamPhaseType_Unknown":                           0,
		"ProduceExamPhaseType_ExamCardDraw":                      1,
		"ProduceExamPhaseType_ExamCardPlay":                      2,
		"ProduceExamPhaseType_ExamCardPlayAfter":                 3,
		"ProduceExamPhaseType_ExamStartTurn":                     4,
		"ProduceExamPhaseType_ExamEndTurn":                       5,
		"ProduceExamPhaseType_ExamStartExam":                     6,
		"ProduceExamPhaseType_ExamCardMove":                      7,
		"ProduceExamPhaseType_ExamCardAdd":                       8,
		"ProduceExamPhaseType_ExamLesson":                        9,
		"ProduceExamPhaseType_ExamForecast":                      10,
		"ProduceExamPhaseType_ExamSearchCardPlay":                11,
		"ProduceExamPhaseType_ExamStanceChange":                  12,
		"ProduceExamPhaseType_ExamStatusChange":                  13,
		"ProduceExamPhaseType_ExamTurnCheck":                     16,
		"ProduceExamPhaseType_ExamUseDrink":                      17,
		"ProduceExamPhaseType_ExamGetPoint":                      18,
		"ProduceExamPhaseType_ExamShuffle":                       19,
		"ProduceExamPhaseType_ExamStaminaReduce":                 20,
		"ProduceExamPhaseType_ExamTurnTimer":                     21,
		"ProduceExamPhaseType_ExamTurnInterval":                  22,
		"ProduceExamPhaseType_ExamPlayCountInterval":             23,
		"ProduceExamPhaseType_ExamStaminaReduceCard":             24,
		"ProduceExamPhaseType_ExamPlayTurnCountInterval":         25,
		"ProduceExamPhaseType_StartPlay":                         27,
		"ProduceExamPhaseType_StartExamPlay":                     28,
		"ProduceExamPhaseType_ExamCardMoveHand":                  29,
		"ProduceExamPhaseType_ExamCardMoveGrave":                 30,
		"ProduceExamPhaseType_ExamCardMoveLost":                  31,
		"ProduceExamPhaseType_ExamLessonParameterUp":             33,
		"ProduceExamPhaseType_ExamBuffConsume":                   34,
		"ProduceExamPhaseType_ExamStanceChangeCountInterval":     35,
		"ProduceExamPhaseType_ExamStanceChangeCount":             36,
		"ProduceExamPhaseType_ExamStanceChangeConcentration":     37,
		"ProduceExamPhaseType_ExamStanceChangePreservation":      38,
		"ProduceExamPhaseType_ExamStanceChangeFullPower":         39,
		"ProduceExamPhaseType_ExamStanceReset":                   40,
		"ProduceExamPhaseType_ExamTurnSkip":                      41,
		"ProduceExamPhaseType_ExamEndTurnTimer":                  42,
		"ProduceExamPhaseType_ExamEndTurnInterval":               43,
		"ProduceExamPhaseType_ExamPlayCountIntervalAfter":        44,
		"ProduceExamPhaseType_ExamStanceChangeFromConcentration": 45,
		"ProduceExamPhaseType_ExamStanceChangeFromPreservation":  46,
		"ProduceExamPhaseType_ExamStanceChangeFromFullPower":     47,
		"ProduceExamPhaseType_None":                              999,
	}
)

func (x ProduceExamPhaseType) Enum() *ProduceExamPhaseType {
	p := new(ProduceExamPhaseType)
	*p = x
	return p
}

func (x ProduceExamPhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceExamPhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[119].Descriptor()
}

func (ProduceExamPhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[119]
}

func (x ProduceExamPhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceExamPhaseType.Descriptor instead.
func (ProduceExamPhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{119}
}

type ProduceExamResultType int32

const (
	ProduceExamResultType_ProduceExamResultType_Unknown ProduceExamResultType = 0
	ProduceExamResultType_ProduceExamResultType_Success ProduceExamResultType = 1
	ProduceExamResultType_ProduceExamResultType_Normal  ProduceExamResultType = 2
	ProduceExamResultType_ProduceExamResultType_Failed  ProduceExamResultType = 3
)

// Enum value maps for ProduceExamResultType.
var (
	ProduceExamResultType_name = map[int32]string{
		0: "ProduceExamResultType_Unknown",
		1: "ProduceExamResultType_Success",
		2: "ProduceExamResultType_Normal",
		3: "ProduceExamResultType_Failed",
	}
	ProduceExamResultType_value = map[string]int32{
		"ProduceExamResultType_Unknown": 0,
		"ProduceExamResultType_Success": 1,
		"ProduceExamResultType_Normal":  2,
		"ProduceExamResultType_Failed":  3,
	}
)

func (x ProduceExamResultType) Enum() *ProduceExamResultType {
	p := new(ProduceExamResultType)
	*p = x
	return p
}

func (x ProduceExamResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceExamResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[120].Descriptor()
}

func (ProduceExamResultType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[120]
}

func (x ProduceExamResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceExamResultType.Descriptor instead.
func (ProduceExamResultType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{120}
}

type ProduceExamTriggerCheckType int32

const (
	ProduceExamTriggerCheckType_ProduceExamTriggerCheckType_Unknown ProduceExamTriggerCheckType = 0
	ProduceExamTriggerCheckType_ProduceExamTriggerCheckType_Not     ProduceExamTriggerCheckType = 1
)

// Enum value maps for ProduceExamTriggerCheckType.
var (
	ProduceExamTriggerCheckType_name = map[int32]string{
		0: "ProduceExamTriggerCheckType_Unknown",
		1: "ProduceExamTriggerCheckType_Not",
	}
	ProduceExamTriggerCheckType_value = map[string]int32{
		"ProduceExamTriggerCheckType_Unknown": 0,
		"ProduceExamTriggerCheckType_Not":     1,
	}
)

func (x ProduceExamTriggerCheckType) Enum() *ProduceExamTriggerCheckType {
	p := new(ProduceExamTriggerCheckType)
	*p = x
	return p
}

func (x ProduceExamTriggerCheckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceExamTriggerCheckType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[121].Descriptor()
}

func (ProduceExamTriggerCheckType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[121]
}

func (x ProduceExamTriggerCheckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceExamTriggerCheckType.Descriptor instead.
func (ProduceExamTriggerCheckType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{121}
}

type ProduceHighScoreEventType int32

const (
	ProduceHighScoreEventType_ProduceHighScoreEventType_Unknown ProduceHighScoreEventType = 0
	ProduceHighScoreEventType_ProduceHighScoreEventType_Normal  ProduceHighScoreEventType = 1
	ProduceHighScoreEventType_ProduceHighScoreEventType_Rush    ProduceHighScoreEventType = 2
)

// Enum value maps for ProduceHighScoreEventType.
var (
	ProduceHighScoreEventType_name = map[int32]string{
		0: "ProduceHighScoreEventType_Unknown",
		1: "ProduceHighScoreEventType_Normal",
		2: "ProduceHighScoreEventType_Rush",
	}
	ProduceHighScoreEventType_value = map[string]int32{
		"ProduceHighScoreEventType_Unknown": 0,
		"ProduceHighScoreEventType_Normal":  1,
		"ProduceHighScoreEventType_Rush":    2,
	}
)

func (x ProduceHighScoreEventType) Enum() *ProduceHighScoreEventType {
	p := new(ProduceHighScoreEventType)
	*p = x
	return p
}

func (x ProduceHighScoreEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceHighScoreEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[122].Descriptor()
}

func (ProduceHighScoreEventType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[122]
}

func (x ProduceHighScoreEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceHighScoreEventType.Descriptor instead.
func (ProduceHighScoreEventType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{122}
}

type ProduceItemEffectType int32

const (
	ProduceItemEffectType_ProduceItemEffectType_Unknown           ProduceItemEffectType = 0
	ProduceItemEffectType_ProduceItemEffectType_ProduceEffect     ProduceItemEffectType = 1
	ProduceItemEffectType_ProduceItemEffectType_ExamStatusEnchant ProduceItemEffectType = 2
)

// Enum value maps for ProduceItemEffectType.
var (
	ProduceItemEffectType_name = map[int32]string{
		0: "ProduceItemEffectType_Unknown",
		1: "ProduceItemEffectType_ProduceEffect",
		2: "ProduceItemEffectType_ExamStatusEnchant",
	}
	ProduceItemEffectType_value = map[string]int32{
		"ProduceItemEffectType_Unknown":           0,
		"ProduceItemEffectType_ProduceEffect":     1,
		"ProduceItemEffectType_ExamStatusEnchant": 2,
	}
)

func (x ProduceItemEffectType) Enum() *ProduceItemEffectType {
	p := new(ProduceItemEffectType)
	*p = x
	return p
}

func (x ProduceItemEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceItemEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[123].Descriptor()
}

func (ProduceItemEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[123]
}

func (x ProduceItemEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceItemEffectType.Descriptor instead.
func (ProduceItemEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{123}
}

type ProduceItemRarity int32

const (
	ProduceItemRarity_ProduceItemRarity_Unknown ProduceItemRarity = 0
	ProduceItemRarity_ProduceItemRarity_N       ProduceItemRarity = 1
	ProduceItemRarity_ProduceItemRarity_R       ProduceItemRarity = 2
	ProduceItemRarity_ProduceItemRarity_Sr      ProduceItemRarity = 3
	ProduceItemRarity_ProduceItemRarity_Ssr     ProduceItemRarity = 4
)

// Enum value maps for ProduceItemRarity.
var (
	ProduceItemRarity_name = map[int32]string{
		0: "ProduceItemRarity_Unknown",
		1: "ProduceItemRarity_N",
		2: "ProduceItemRarity_R",
		3: "ProduceItemRarity_Sr",
		4: "ProduceItemRarity_Ssr",
	}
	ProduceItemRarity_value = map[string]int32{
		"ProduceItemRarity_Unknown": 0,
		"ProduceItemRarity_N":       1,
		"ProduceItemRarity_R":       2,
		"ProduceItemRarity_Sr":      3,
		"ProduceItemRarity_Ssr":     4,
	}
)

func (x ProduceItemRarity) Enum() *ProduceItemRarity {
	p := new(ProduceItemRarity)
	*p = x
	return p
}

func (x ProduceItemRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceItemRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[124].Descriptor()
}

func (ProduceItemRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[124]
}

func (x ProduceItemRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceItemRarity.Descriptor instead.
func (ProduceItemRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{124}
}

type ProduceLiveType int32

const (
	ProduceLiveType_ProduceLiveType_Unknown ProduceLiveType = 0
	ProduceLiveType_ProduceLiveType_TrueEnd ProduceLiveType = 1
	ProduceLiveType_ProduceLiveType_A       ProduceLiveType = 2
	ProduceLiveType_ProduceLiveType_B       ProduceLiveType = 3
	ProduceLiveType_ProduceLiveType_C       ProduceLiveType = 4
	ProduceLiveType_ProduceLiveType_D       ProduceLiveType = 5
	ProduceLiveType_ProduceLiveType_E       ProduceLiveType = 6
)

// Enum value maps for ProduceLiveType.
var (
	ProduceLiveType_name = map[int32]string{
		0: "ProduceLiveType_Unknown",
		1: "ProduceLiveType_TrueEnd",
		2: "ProduceLiveType_A",
		3: "ProduceLiveType_B",
		4: "ProduceLiveType_C",
		5: "ProduceLiveType_D",
		6: "ProduceLiveType_E",
	}
	ProduceLiveType_value = map[string]int32{
		"ProduceLiveType_Unknown": 0,
		"ProduceLiveType_TrueEnd": 1,
		"ProduceLiveType_A":       2,
		"ProduceLiveType_B":       3,
		"ProduceLiveType_C":       4,
		"ProduceLiveType_D":       5,
		"ProduceLiveType_E":       6,
	}
)

func (x ProduceLiveType) Enum() *ProduceLiveType {
	p := new(ProduceLiveType)
	*p = x
	return p
}

func (x ProduceLiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceLiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[125].Descriptor()
}

func (ProduceLiveType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[125]
}

func (x ProduceLiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceLiveType.Descriptor instead.
func (ProduceLiveType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{125}
}

type ProduceMemoryProduceCardPhaseType int32

const (
	ProduceMemoryProduceCardPhaseType_ProduceMemoryProduceCardPhaseType_Unknown        ProduceMemoryProduceCardPhaseType = 0
	ProduceMemoryProduceCardPhaseType_ProduceMemoryProduceCardPhaseType_ProduceStart   ProduceMemoryProduceCardPhaseType = 1
	ProduceMemoryProduceCardPhaseType_ProduceMemoryProduceCardPhaseType_EndAuditionMid ProduceMemoryProduceCardPhaseType = 2
)

// Enum value maps for ProduceMemoryProduceCardPhaseType.
var (
	ProduceMemoryProduceCardPhaseType_name = map[int32]string{
		0: "ProduceMemoryProduceCardPhaseType_Unknown",
		1: "ProduceMemoryProduceCardPhaseType_ProduceStart",
		2: "ProduceMemoryProduceCardPhaseType_EndAuditionMid",
	}
	ProduceMemoryProduceCardPhaseType_value = map[string]int32{
		"ProduceMemoryProduceCardPhaseType_Unknown":        0,
		"ProduceMemoryProduceCardPhaseType_ProduceStart":   1,
		"ProduceMemoryProduceCardPhaseType_EndAuditionMid": 2,
	}
)

func (x ProduceMemoryProduceCardPhaseType) Enum() *ProduceMemoryProduceCardPhaseType {
	p := new(ProduceMemoryProduceCardPhaseType)
	*p = x
	return p
}

func (x ProduceMemoryProduceCardPhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceMemoryProduceCardPhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[126].Descriptor()
}

func (ProduceMemoryProduceCardPhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[126]
}

func (x ProduceMemoryProduceCardPhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceMemoryProduceCardPhaseType.Descriptor instead.
func (ProduceMemoryProduceCardPhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{126}
}

type ProduceParameterType int32

const (
	ProduceParameterType_ProduceParameterType_Unknown ProduceParameterType = 0
	ProduceParameterType_ProduceParameterType_Vocal   ProduceParameterType = 1
	ProduceParameterType_ProduceParameterType_Dance   ProduceParameterType = 2
	ProduceParameterType_ProduceParameterType_Visual  ProduceParameterType = 3
)

// Enum value maps for ProduceParameterType.
var (
	ProduceParameterType_name = map[int32]string{
		0: "ProduceParameterType_Unknown",
		1: "ProduceParameterType_Vocal",
		2: "ProduceParameterType_Dance",
		3: "ProduceParameterType_Visual",
	}
	ProduceParameterType_value = map[string]int32{
		"ProduceParameterType_Unknown": 0,
		"ProduceParameterType_Vocal":   1,
		"ProduceParameterType_Dance":   2,
		"ProduceParameterType_Visual":  3,
	}
)

func (x ProduceParameterType) Enum() *ProduceParameterType {
	p := new(ProduceParameterType)
	*p = x
	return p
}

func (x ProduceParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[127].Descriptor()
}

func (ProduceParameterType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[127]
}

func (x ProduceParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceParameterType.Descriptor instead.
func (ProduceParameterType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{127}
}

type ProducePhaseType int32

const (
	ProducePhaseType_ProducePhaseType_Unknown                       ProducePhaseType = 0
	ProducePhaseType_ProducePhaseType_RecoveryStamina               ProducePhaseType = 1
	ProducePhaseType_ProducePhaseType_CustomizeProduceCard          ProducePhaseType = 3
	ProducePhaseType_ProducePhaseType_GetProducePoint               ProducePhaseType = 4
	ProducePhaseType_ProducePhaseType_GetProduceItem                ProducePhaseType = 6
	ProducePhaseType_ProducePhaseType_GetProduceDrink               ProducePhaseType = 7
	ProducePhaseType_ProducePhaseType_UseProduceDrink               ProducePhaseType = 8
	ProducePhaseType_ProducePhaseType_GetProduceCard                ProducePhaseType = 9
	ProducePhaseType_ProducePhaseType_UpgradeProduceCard            ProducePhaseType = 10
	ProducePhaseType_ProducePhaseType_DeleteProduceCard             ProducePhaseType = 11
	ProducePhaseType_ProducePhaseType_ProduceStart                  ProducePhaseType = 12
	ProducePhaseType_ProducePhaseType_StartStep                     ProducePhaseType = 13
	ProducePhaseType_ProducePhaseType_StartCustomize                ProducePhaseType = 14
	ProducePhaseType_ProducePhaseType_StartShop                     ProducePhaseType = 15
	ProducePhaseType_ProducePhaseType_StartRefresh                  ProducePhaseType = 16
	ProducePhaseType_ProducePhaseType_StartPresent                  ProducePhaseType = 17
	ProducePhaseType_ProducePhaseType_StartLesson                   ProducePhaseType = 18
	ProducePhaseType_ProducePhaseType_EndLessonBeforePresent        ProducePhaseType = 19
	ProducePhaseType_ProducePhaseType_EndLesson                     ProducePhaseType = 20
	ProducePhaseType_ProducePhaseType_FailedLesson                  ProducePhaseType = 21
	ProducePhaseType_ProducePhaseType_EndStepEventActivity          ProducePhaseType = 22
	ProducePhaseType_ProducePhaseType_EndStepEventSchool            ProducePhaseType = 23
	ProducePhaseType_ProducePhaseType_EndStepEventCharacterOpening  ProducePhaseType = 24
	ProducePhaseType_ProducePhaseType_ChangeProduceCard             ProducePhaseType = 25
	ProducePhaseType_ProducePhaseType_EndStepEventBusiness          ProducePhaseType = 26
	ProducePhaseType_ProducePhaseType_EndBeforeAuditionRefresh      ProducePhaseType = 27
	ProducePhaseType_ProducePhaseType_StartAuditionMid              ProducePhaseType = 42
	ProducePhaseType_ProducePhaseType_StartAuditionMid1             ProducePhaseType = 43
	ProducePhaseType_ProducePhaseType_StartAuditionMid2             ProducePhaseType = 44
	ProducePhaseType_ProducePhaseType_StartAuditionFinal            ProducePhaseType = 45
	ProducePhaseType_ProducePhaseType_StartAudition                 ProducePhaseType = 46
	ProducePhaseType_ProducePhaseType_EndAuditionMid                ProducePhaseType = 47
	ProducePhaseType_ProducePhaseType_EndAuditionMid1               ProducePhaseType = 48
	ProducePhaseType_ProducePhaseType_EndAuditionMid2               ProducePhaseType = 49
	ProducePhaseType_ProducePhaseType_EndAuditionFinal              ProducePhaseType = 50
	ProducePhaseType_ProducePhaseType_EndAudition                   ProducePhaseType = 51
	ProducePhaseType_ProducePhaseType_BuyShopItem                   ProducePhaseType = 52
	ProducePhaseType_ProducePhaseType_BuyShopItemProduceCard        ProducePhaseType = 53
	ProducePhaseType_ProducePhaseType_BuyShopItemProduceDrink       ProducePhaseType = 54
	ProducePhaseType_ProducePhaseType_BuyShopItemProduceItem        ProducePhaseType = 55
	ProducePhaseType_ProducePhaseType_BuyShopItemUpgradeProduceCard ProducePhaseType = 56
	ProducePhaseType_ProducePhaseType_BuyShopItemDeleteProduceCard  ProducePhaseType = 57
	ProducePhaseType_ProducePhaseType_EndPresent                    ProducePhaseType = 58
	ProducePhaseType_ProducePhaseType_EndShop                       ProducePhaseType = 59
)

// Enum value maps for ProducePhaseType.
var (
	ProducePhaseType_name = map[int32]string{
		0:  "ProducePhaseType_Unknown",
		1:  "ProducePhaseType_RecoveryStamina",
		3:  "ProducePhaseType_CustomizeProduceCard",
		4:  "ProducePhaseType_GetProducePoint",
		6:  "ProducePhaseType_GetProduceItem",
		7:  "ProducePhaseType_GetProduceDrink",
		8:  "ProducePhaseType_UseProduceDrink",
		9:  "ProducePhaseType_GetProduceCard",
		10: "ProducePhaseType_UpgradeProduceCard",
		11: "ProducePhaseType_DeleteProduceCard",
		12: "ProducePhaseType_ProduceStart",
		13: "ProducePhaseType_StartStep",
		14: "ProducePhaseType_StartCustomize",
		15: "ProducePhaseType_StartShop",
		16: "ProducePhaseType_StartRefresh",
		17: "ProducePhaseType_StartPresent",
		18: "ProducePhaseType_StartLesson",
		19: "ProducePhaseType_EndLessonBeforePresent",
		20: "ProducePhaseType_EndLesson",
		21: "ProducePhaseType_FailedLesson",
		22: "ProducePhaseType_EndStepEventActivity",
		23: "ProducePhaseType_EndStepEventSchool",
		24: "ProducePhaseType_EndStepEventCharacterOpening",
		25: "ProducePhaseType_ChangeProduceCard",
		26: "ProducePhaseType_EndStepEventBusiness",
		27: "ProducePhaseType_EndBeforeAuditionRefresh",
		42: "ProducePhaseType_StartAuditionMid",
		43: "ProducePhaseType_StartAuditionMid1",
		44: "ProducePhaseType_StartAuditionMid2",
		45: "ProducePhaseType_StartAuditionFinal",
		46: "ProducePhaseType_StartAudition",
		47: "ProducePhaseType_EndAuditionMid",
		48: "ProducePhaseType_EndAuditionMid1",
		49: "ProducePhaseType_EndAuditionMid2",
		50: "ProducePhaseType_EndAuditionFinal",
		51: "ProducePhaseType_EndAudition",
		52: "ProducePhaseType_BuyShopItem",
		53: "ProducePhaseType_BuyShopItemProduceCard",
		54: "ProducePhaseType_BuyShopItemProduceDrink",
		55: "ProducePhaseType_BuyShopItemProduceItem",
		56: "ProducePhaseType_BuyShopItemUpgradeProduceCard",
		57: "ProducePhaseType_BuyShopItemDeleteProduceCard",
		58: "ProducePhaseType_EndPresent",
		59: "ProducePhaseType_EndShop",
	}
	ProducePhaseType_value = map[string]int32{
		"ProducePhaseType_Unknown":                       0,
		"ProducePhaseType_RecoveryStamina":               1,
		"ProducePhaseType_CustomizeProduceCard":          3,
		"ProducePhaseType_GetProducePoint":               4,
		"ProducePhaseType_GetProduceItem":                6,
		"ProducePhaseType_GetProduceDrink":               7,
		"ProducePhaseType_UseProduceDrink":               8,
		"ProducePhaseType_GetProduceCard":                9,
		"ProducePhaseType_UpgradeProduceCard":            10,
		"ProducePhaseType_DeleteProduceCard":             11,
		"ProducePhaseType_ProduceStart":                  12,
		"ProducePhaseType_StartStep":                     13,
		"ProducePhaseType_StartCustomize":                14,
		"ProducePhaseType_StartShop":                     15,
		"ProducePhaseType_StartRefresh":                  16,
		"ProducePhaseType_StartPresent":                  17,
		"ProducePhaseType_StartLesson":                   18,
		"ProducePhaseType_EndLessonBeforePresent":        19,
		"ProducePhaseType_EndLesson":                     20,
		"ProducePhaseType_FailedLesson":                  21,
		"ProducePhaseType_EndStepEventActivity":          22,
		"ProducePhaseType_EndStepEventSchool":            23,
		"ProducePhaseType_EndStepEventCharacterOpening":  24,
		"ProducePhaseType_ChangeProduceCard":             25,
		"ProducePhaseType_EndStepEventBusiness":          26,
		"ProducePhaseType_EndBeforeAuditionRefresh":      27,
		"ProducePhaseType_StartAuditionMid":              42,
		"ProducePhaseType_StartAuditionMid1":             43,
		"ProducePhaseType_StartAuditionMid2":             44,
		"ProducePhaseType_StartAuditionFinal":            45,
		"ProducePhaseType_StartAudition":                 46,
		"ProducePhaseType_EndAuditionMid":                47,
		"ProducePhaseType_EndAuditionMid1":               48,
		"ProducePhaseType_EndAuditionMid2":               49,
		"ProducePhaseType_EndAuditionFinal":              50,
		"ProducePhaseType_EndAudition":                   51,
		"ProducePhaseType_BuyShopItem":                   52,
		"ProducePhaseType_BuyShopItemProduceCard":        53,
		"ProducePhaseType_BuyShopItemProduceDrink":       54,
		"ProducePhaseType_BuyShopItemProduceItem":        55,
		"ProducePhaseType_BuyShopItemUpgradeProduceCard": 56,
		"ProducePhaseType_BuyShopItemDeleteProduceCard":  57,
		"ProducePhaseType_EndPresent":                    58,
		"ProducePhaseType_EndShop":                       59,
	}
)

func (x ProducePhaseType) Enum() *ProducePhaseType {
	p := new(ProducePhaseType)
	*p = x
	return p
}

func (x ProducePhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProducePhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[128].Descriptor()
}

func (ProducePhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[128]
}

func (x ProducePhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProducePhaseType.Descriptor instead.
func (ProducePhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{128}
}

type ProducePickRangeType int32

const (
	ProducePickRangeType_ProducePickRangeType_Unknown ProducePickRangeType = 0
	ProducePickRangeType_ProducePickRangeType_Select  ProducePickRangeType = 1
	ProducePickRangeType_ProducePickRangeType_Random  ProducePickRangeType = 2
	ProducePickRangeType_ProducePickRangeType_All     ProducePickRangeType = 3
)

// Enum value maps for ProducePickRangeType.
var (
	ProducePickRangeType_name = map[int32]string{
		0: "ProducePickRangeType_Unknown",
		1: "ProducePickRangeType_Select",
		2: "ProducePickRangeType_Random",
		3: "ProducePickRangeType_All",
	}
	ProducePickRangeType_value = map[string]int32{
		"ProducePickRangeType_Unknown": 0,
		"ProducePickRangeType_Select":  1,
		"ProducePickRangeType_Random":  2,
		"ProducePickRangeType_All":     3,
	}
)

func (x ProducePickRangeType) Enum() *ProducePickRangeType {
	p := new(ProducePickRangeType)
	*p = x
	return p
}

func (x ProducePickRangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProducePickRangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[129].Descriptor()
}

func (ProducePickRangeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[129]
}

func (x ProducePickRangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProducePickRangeType.Descriptor instead.
func (ProducePickRangeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{129}
}

type ProducePlanType int32

const (
	ProducePlanType_ProducePlanType_Unknown ProducePlanType = 0
	ProducePlanType_ProducePlanType_Common  ProducePlanType = 1
	ProducePlanType_ProducePlanType_Plan1   ProducePlanType = 2
	ProducePlanType_ProducePlanType_Plan2   ProducePlanType = 3
	ProducePlanType_ProducePlanType_Plan3   ProducePlanType = 4
)

// Enum value maps for ProducePlanType.
var (
	ProducePlanType_name = map[int32]string{
		0: "ProducePlanType_Unknown",
		1: "ProducePlanType_Common",
		2: "ProducePlanType_Plan1",
		3: "ProducePlanType_Plan2",
		4: "ProducePlanType_Plan3",
	}
	ProducePlanType_value = map[string]int32{
		"ProducePlanType_Unknown": 0,
		"ProducePlanType_Common":  1,
		"ProducePlanType_Plan1":   2,
		"ProducePlanType_Plan2":   3,
		"ProducePlanType_Plan3":   4,
	}
)

func (x ProducePlanType) Enum() *ProducePlanType {
	p := new(ProducePlanType)
	*p = x
	return p
}

func (x ProducePlanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProducePlanType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[130].Descriptor()
}

func (ProducePlanType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[130]
}

func (x ProducePlanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProducePlanType.Descriptor instead.
func (ProducePlanType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{130}
}

type ProduceProgressAuditionStatusType int32

const (
	ProduceProgressAuditionStatusType_ProduceProgressAuditionStatusType_Unknown              ProduceProgressAuditionStatusType = 0
	ProduceProgressAuditionStatusType_ProduceProgressAuditionStatusType_ReadyForExamBattle   ProduceProgressAuditionStatusType = 1
	ProduceProgressAuditionStatusType_ProduceProgressAuditionStatusType_InProgressExamBattle ProduceProgressAuditionStatusType = 2
	ProduceProgressAuditionStatusType_ProduceProgressAuditionStatusType_ExamBattleSuccess    ProduceProgressAuditionStatusType = 3
	ProduceProgressAuditionStatusType_ProduceProgressAuditionStatusType_ExamBattleFailure    ProduceProgressAuditionStatusType = 4
)

// Enum value maps for ProduceProgressAuditionStatusType.
var (
	ProduceProgressAuditionStatusType_name = map[int32]string{
		0: "ProduceProgressAuditionStatusType_Unknown",
		1: "ProduceProgressAuditionStatusType_ReadyForExamBattle",
		2: "ProduceProgressAuditionStatusType_InProgressExamBattle",
		3: "ProduceProgressAuditionStatusType_ExamBattleSuccess",
		4: "ProduceProgressAuditionStatusType_ExamBattleFailure",
	}
	ProduceProgressAuditionStatusType_value = map[string]int32{
		"ProduceProgressAuditionStatusType_Unknown":              0,
		"ProduceProgressAuditionStatusType_ReadyForExamBattle":   1,
		"ProduceProgressAuditionStatusType_InProgressExamBattle": 2,
		"ProduceProgressAuditionStatusType_ExamBattleSuccess":    3,
		"ProduceProgressAuditionStatusType_ExamBattleFailure":    4,
	}
)

func (x ProduceProgressAuditionStatusType) Enum() *ProduceProgressAuditionStatusType {
	p := new(ProduceProgressAuditionStatusType)
	*p = x
	return p
}

func (x ProduceProgressAuditionStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceProgressAuditionStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[131].Descriptor()
}

func (ProduceProgressAuditionStatusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[131]
}

func (x ProduceProgressAuditionStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceProgressAuditionStatusType.Descriptor instead.
func (ProduceProgressAuditionStatusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{131}
}

type ProduceProgressConditionType int32

const (
	ProduceProgressConditionType_ProduceProgressConditionType_Unknown           ProduceProgressConditionType = 0
	ProduceProgressConditionType_ProduceProgressConditionType_StaminaRatio      ProduceProgressConditionType = 1
	ProduceProgressConditionType_ProduceProgressConditionType_StaminaFix        ProduceProgressConditionType = 2
	ProduceProgressConditionType_ProduceProgressConditionType_ProducePoint      ProduceProgressConditionType = 3
	ProduceProgressConditionType_ProduceProgressConditionType_ProduceItemCount  ProduceProgressConditionType = 4
	ProduceProgressConditionType_ProduceProgressConditionType_ProduceDrinkCount ProduceProgressConditionType = 5
	ProduceProgressConditionType_ProduceProgressConditionType_ProduceCardCount  ProduceProgressConditionType = 6
	ProduceProgressConditionType_ProduceProgressConditionType_Vocal             ProduceProgressConditionType = 7
	ProduceProgressConditionType_ProduceProgressConditionType_Dance             ProduceProgressConditionType = 8
	ProduceProgressConditionType_ProduceProgressConditionType_Visual            ProduceProgressConditionType = 9
	ProduceProgressConditionType_ProduceProgressConditionType_StepNumber        ProduceProgressConditionType = 10
)

// Enum value maps for ProduceProgressConditionType.
var (
	ProduceProgressConditionType_name = map[int32]string{
		0:  "ProduceProgressConditionType_Unknown",
		1:  "ProduceProgressConditionType_StaminaRatio",
		2:  "ProduceProgressConditionType_StaminaFix",
		3:  "ProduceProgressConditionType_ProducePoint",
		4:  "ProduceProgressConditionType_ProduceItemCount",
		5:  "ProduceProgressConditionType_ProduceDrinkCount",
		6:  "ProduceProgressConditionType_ProduceCardCount",
		7:  "ProduceProgressConditionType_Vocal",
		8:  "ProduceProgressConditionType_Dance",
		9:  "ProduceProgressConditionType_Visual",
		10: "ProduceProgressConditionType_StepNumber",
	}
	ProduceProgressConditionType_value = map[string]int32{
		"ProduceProgressConditionType_Unknown":           0,
		"ProduceProgressConditionType_StaminaRatio":      1,
		"ProduceProgressConditionType_StaminaFix":        2,
		"ProduceProgressConditionType_ProducePoint":      3,
		"ProduceProgressConditionType_ProduceItemCount":  4,
		"ProduceProgressConditionType_ProduceDrinkCount": 5,
		"ProduceProgressConditionType_ProduceCardCount":  6,
		"ProduceProgressConditionType_Vocal":             7,
		"ProduceProgressConditionType_Dance":             8,
		"ProduceProgressConditionType_Visual":            9,
		"ProduceProgressConditionType_StepNumber":        10,
	}
)

func (x ProduceProgressConditionType) Enum() *ProduceProgressConditionType {
	p := new(ProduceProgressConditionType)
	*p = x
	return p
}

func (x ProduceProgressConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceProgressConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[132].Descriptor()
}

func (ProduceProgressConditionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[132]
}

func (x ProduceProgressConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceProgressConditionType.Descriptor instead.
func (ProduceProgressConditionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{132}
}

type ProduceProgressStatus int32

const (
	ProduceProgressStatus_ProduceProgressStatus_Unknown                         ProduceProgressStatus = 0
	ProduceProgressStatus_ProduceProgressStatus_OpeningAdv                      ProduceProgressStatus = 1
	ProduceProgressStatus_ProduceProgressStatus_OpeningCharacterDearnessStory   ProduceProgressStatus = 2
	ProduceProgressStatus_ProduceProgressStatus_CharacterEventOpening           ProduceProgressStatus = 3
	ProduceProgressStatus_ProduceProgressStatus_SelectNextStep                  ProduceProgressStatus = 4
	ProduceProgressStatus_ProduceProgressStatus_BeforeAuditionRefresh           ProduceProgressStatus = 5
	ProduceProgressStatus_ProduceProgressStatus_BeforeStepCharacterEvent        ProduceProgressStatus = 6
	ProduceProgressStatus_ProduceProgressStatus_BeforeStepSupportCardEvent      ProduceProgressStatus = 7
	ProduceProgressStatus_ProduceProgressStatus_StepAction                      ProduceProgressStatus = 8
	ProduceProgressStatus_ProduceProgressStatus_AfterStepAuditionCharacterEvent ProduceProgressStatus = 9
	ProduceProgressStatus_ProduceProgressStatus_AfterStepCharacterGrowthEvent   ProduceProgressStatus = 10
	ProduceProgressStatus_ProduceProgressStatus_AfterStepCharacterDearnessStory ProduceProgressStatus = 11
	ProduceProgressStatus_ProduceProgressStatus_AfterStepIdolCardEvent          ProduceProgressStatus = 12
	ProduceProgressStatus_ProduceProgressStatus_AfterStepSupportCardEvent       ProduceProgressStatus = 13
	ProduceProgressStatus_ProduceProgressStatus_AfterStepCharacterEvent         ProduceProgressStatus = 14
	ProduceProgressStatus_ProduceProgressStatus_StartBeforeLiveEvaluation       ProduceProgressStatus = 15
	ProduceProgressStatus_ProduceProgressStatus_EndBeforeLiveEvaluation         ProduceProgressStatus = 16
	ProduceProgressStatus_ProduceProgressStatus_IdolCardEvent                   ProduceProgressStatus = 17
	ProduceProgressStatus_ProduceProgressStatus_CharacterEventFailure           ProduceProgressStatus = 18
	ProduceProgressStatus_ProduceProgressStatus_CharacterEventEnding            ProduceProgressStatus = 19
	ProduceProgressStatus_ProduceProgressStatus_BeforeStepCampaignEvent         ProduceProgressStatus = 20
	ProduceProgressStatus_ProduceProgressStatus_AfterStepCampaignEvent          ProduceProgressStatus = 21
	ProduceProgressStatus_ProduceProgressStatus_End                             ProduceProgressStatus = 30
	ProduceProgressStatus_ProduceProgressStatus_Result                          ProduceProgressStatus = 31
	ProduceProgressStatus_ProduceProgressStatus_GuildMission                    ProduceProgressStatus = 32
	ProduceProgressStatus_ProduceProgressStatus_EndingCharacterDearnessStory    ProduceProgressStatus = 33
	ProduceProgressStatus_ProduceProgressStatus_DearnessBoost                   ProduceProgressStatus = 34
	ProduceProgressStatus_ProduceProgressStatus_Finished                        ProduceProgressStatus = 99
)

// Enum value maps for ProduceProgressStatus.
var (
	ProduceProgressStatus_name = map[int32]string{
		0:  "ProduceProgressStatus_Unknown",
		1:  "ProduceProgressStatus_OpeningAdv",
		2:  "ProduceProgressStatus_OpeningCharacterDearnessStory",
		3:  "ProduceProgressStatus_CharacterEventOpening",
		4:  "ProduceProgressStatus_SelectNextStep",
		5:  "ProduceProgressStatus_BeforeAuditionRefresh",
		6:  "ProduceProgressStatus_BeforeStepCharacterEvent",
		7:  "ProduceProgressStatus_BeforeStepSupportCardEvent",
		8:  "ProduceProgressStatus_StepAction",
		9:  "ProduceProgressStatus_AfterStepAuditionCharacterEvent",
		10: "ProduceProgressStatus_AfterStepCharacterGrowthEvent",
		11: "ProduceProgressStatus_AfterStepCharacterDearnessStory",
		12: "ProduceProgressStatus_AfterStepIdolCardEvent",
		13: "ProduceProgressStatus_AfterStepSupportCardEvent",
		14: "ProduceProgressStatus_AfterStepCharacterEvent",
		15: "ProduceProgressStatus_StartBeforeLiveEvaluation",
		16: "ProduceProgressStatus_EndBeforeLiveEvaluation",
		17: "ProduceProgressStatus_IdolCardEvent",
		18: "ProduceProgressStatus_CharacterEventFailure",
		19: "ProduceProgressStatus_CharacterEventEnding",
		20: "ProduceProgressStatus_BeforeStepCampaignEvent",
		21: "ProduceProgressStatus_AfterStepCampaignEvent",
		30: "ProduceProgressStatus_End",
		31: "ProduceProgressStatus_Result",
		32: "ProduceProgressStatus_GuildMission",
		33: "ProduceProgressStatus_EndingCharacterDearnessStory",
		34: "ProduceProgressStatus_DearnessBoost",
		99: "ProduceProgressStatus_Finished",
	}
	ProduceProgressStatus_value = map[string]int32{
		"ProduceProgressStatus_Unknown":                         0,
		"ProduceProgressStatus_OpeningAdv":                      1,
		"ProduceProgressStatus_OpeningCharacterDearnessStory":   2,
		"ProduceProgressStatus_CharacterEventOpening":           3,
		"ProduceProgressStatus_SelectNextStep":                  4,
		"ProduceProgressStatus_BeforeAuditionRefresh":           5,
		"ProduceProgressStatus_BeforeStepCharacterEvent":        6,
		"ProduceProgressStatus_BeforeStepSupportCardEvent":      7,
		"ProduceProgressStatus_StepAction":                      8,
		"ProduceProgressStatus_AfterStepAuditionCharacterEvent": 9,
		"ProduceProgressStatus_AfterStepCharacterGrowthEvent":   10,
		"ProduceProgressStatus_AfterStepCharacterDearnessStory": 11,
		"ProduceProgressStatus_AfterStepIdolCardEvent":          12,
		"ProduceProgressStatus_AfterStepSupportCardEvent":       13,
		"ProduceProgressStatus_AfterStepCharacterEvent":         14,
		"ProduceProgressStatus_StartBeforeLiveEvaluation":       15,
		"ProduceProgressStatus_EndBeforeLiveEvaluation":         16,
		"ProduceProgressStatus_IdolCardEvent":                   17,
		"ProduceProgressStatus_CharacterEventFailure":           18,
		"ProduceProgressStatus_CharacterEventEnding":            19,
		"ProduceProgressStatus_BeforeStepCampaignEvent":         20,
		"ProduceProgressStatus_AfterStepCampaignEvent":          21,
		"ProduceProgressStatus_End":                             30,
		"ProduceProgressStatus_Result":                          31,
		"ProduceProgressStatus_GuildMission":                    32,
		"ProduceProgressStatus_EndingCharacterDearnessStory":    33,
		"ProduceProgressStatus_DearnessBoost":                   34,
		"ProduceProgressStatus_Finished":                        99,
	}
)

func (x ProduceProgressStatus) Enum() *ProduceProgressStatus {
	p := new(ProduceProgressStatus)
	*p = x
	return p
}

func (x ProduceProgressStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceProgressStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[133].Descriptor()
}

func (ProduceProgressStatus) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[133]
}

func (x ProduceProgressStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceProgressStatus.Descriptor instead.
func (ProduceProgressStatus) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{133}
}

type ProduceResourceOriginType int32

const (
	ProduceResourceOriginType_ProduceResourceOriginType_Unknown       ProduceResourceOriginType = 0
	ProduceResourceOriginType_ProduceResourceOriginType_Produce       ProduceResourceOriginType = 1
	ProduceResourceOriginType_ProduceResourceOriginType_IdolCard      ProduceResourceOriginType = 2
	ProduceResourceOriginType_ProduceResourceOriginType_SupportCard   ProduceResourceOriginType = 3
	ProduceResourceOriginType_ProduceResourceOriginType_MemoryAbility ProduceResourceOriginType = 4
	ProduceResourceOriginType_ProduceResourceOriginType_ProduceCard   ProduceResourceOriginType = 5
	ProduceResourceOriginType_ProduceResourceOriginType_ProduceItem   ProduceResourceOriginType = 6
	ProduceResourceOriginType_ProduceResourceOriginType_StepAudition  ProduceResourceOriginType = 10
	ProduceResourceOriginType_ProduceResourceOriginType_StepEvent     ProduceResourceOriginType = 11
	ProduceResourceOriginType_ProduceResourceOriginType_StepPresent   ProduceResourceOriginType = 12
	ProduceResourceOriginType_ProduceResourceOriginType_StepShop      ProduceResourceOriginType = 13
	ProduceResourceOriginType_ProduceResourceOriginType_ExamGimmick   ProduceResourceOriginType = 14
)

// Enum value maps for ProduceResourceOriginType.
var (
	ProduceResourceOriginType_name = map[int32]string{
		0:  "ProduceResourceOriginType_Unknown",
		1:  "ProduceResourceOriginType_Produce",
		2:  "ProduceResourceOriginType_IdolCard",
		3:  "ProduceResourceOriginType_SupportCard",
		4:  "ProduceResourceOriginType_MemoryAbility",
		5:  "ProduceResourceOriginType_ProduceCard",
		6:  "ProduceResourceOriginType_ProduceItem",
		10: "ProduceResourceOriginType_StepAudition",
		11: "ProduceResourceOriginType_StepEvent",
		12: "ProduceResourceOriginType_StepPresent",
		13: "ProduceResourceOriginType_StepShop",
		14: "ProduceResourceOriginType_ExamGimmick",
	}
	ProduceResourceOriginType_value = map[string]int32{
		"ProduceResourceOriginType_Unknown":       0,
		"ProduceResourceOriginType_Produce":       1,
		"ProduceResourceOriginType_IdolCard":      2,
		"ProduceResourceOriginType_SupportCard":   3,
		"ProduceResourceOriginType_MemoryAbility": 4,
		"ProduceResourceOriginType_ProduceCard":   5,
		"ProduceResourceOriginType_ProduceItem":   6,
		"ProduceResourceOriginType_StepAudition":  10,
		"ProduceResourceOriginType_StepEvent":     11,
		"ProduceResourceOriginType_StepPresent":   12,
		"ProduceResourceOriginType_StepShop":      13,
		"ProduceResourceOriginType_ExamGimmick":   14,
	}
)

func (x ProduceResourceOriginType) Enum() *ProduceResourceOriginType {
	p := new(ProduceResourceOriginType)
	*p = x
	return p
}

func (x ProduceResourceOriginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceResourceOriginType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[134].Descriptor()
}

func (ProduceResourceOriginType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[134]
}

func (x ProduceResourceOriginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceResourceOriginType.Descriptor instead.
func (ProduceResourceOriginType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{134}
}

type ProduceResourceType int32

const (
	ProduceResourceType_ProduceResourceType_Unknown         ProduceResourceType = 0
	ProduceResourceType_ProduceResourceType_ProduceCard     ProduceResourceType = 1
	ProduceResourceType_ProduceResourceType_ProduceItem     ProduceResourceType = 2
	ProduceResourceType_ProduceResourceType_ProduceDrink    ProduceResourceType = 3
	ProduceResourceType_ProduceResourceType_ProducePoint    ProduceResourceType = 4
	ProduceResourceType_ProduceResourceType_Stamina         ProduceResourceType = 5
	ProduceResourceType_ProduceResourceType_ParameterVocal  ProduceResourceType = 6
	ProduceResourceType_ProduceResourceType_ParameterDance  ProduceResourceType = 7
	ProduceResourceType_ProduceResourceType_ParameterVisual ProduceResourceType = 8
	ProduceResourceType_ProduceResourceType_Vote            ProduceResourceType = 9
	ProduceResourceType_ProduceResourceType_HighScoreGold   ProduceResourceType = 100
	ProduceResourceType_ProduceResourceType_CardUpgrade     ProduceResourceType = 997
	ProduceResourceType_ProduceResourceType_CardDelete      ProduceResourceType = 998
	ProduceResourceType_ProduceResourceType_Set             ProduceResourceType = 999
)

// Enum value maps for ProduceResourceType.
var (
	ProduceResourceType_name = map[int32]string{
		0:   "ProduceResourceType_Unknown",
		1:   "ProduceResourceType_ProduceCard",
		2:   "ProduceResourceType_ProduceItem",
		3:   "ProduceResourceType_ProduceDrink",
		4:   "ProduceResourceType_ProducePoint",
		5:   "ProduceResourceType_Stamina",
		6:   "ProduceResourceType_ParameterVocal",
		7:   "ProduceResourceType_ParameterDance",
		8:   "ProduceResourceType_ParameterVisual",
		9:   "ProduceResourceType_Vote",
		100: "ProduceResourceType_HighScoreGold",
		997: "ProduceResourceType_CardUpgrade",
		998: "ProduceResourceType_CardDelete",
		999: "ProduceResourceType_Set",
	}
	ProduceResourceType_value = map[string]int32{
		"ProduceResourceType_Unknown":         0,
		"ProduceResourceType_ProduceCard":     1,
		"ProduceResourceType_ProduceItem":     2,
		"ProduceResourceType_ProduceDrink":    3,
		"ProduceResourceType_ProducePoint":    4,
		"ProduceResourceType_Stamina":         5,
		"ProduceResourceType_ParameterVocal":  6,
		"ProduceResourceType_ParameterDance":  7,
		"ProduceResourceType_ParameterVisual": 8,
		"ProduceResourceType_Vote":            9,
		"ProduceResourceType_HighScoreGold":   100,
		"ProduceResourceType_CardUpgrade":     997,
		"ProduceResourceType_CardDelete":      998,
		"ProduceResourceType_Set":             999,
	}
)

func (x ProduceResourceType) Enum() *ProduceResourceType {
	p := new(ProduceResourceType)
	*p = x
	return p
}

func (x ProduceResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[135].Descriptor()
}

func (ProduceResourceType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[135]
}

func (x ProduceResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceResourceType.Descriptor instead.
func (ProduceResourceType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{135}
}

type ProduceRewardType int32

const (
	ProduceRewardType_ProduceRewardType_Unknown     ProduceRewardType = 0
	ProduceRewardType_ProduceRewardType_Probability ProduceRewardType = 1
	ProduceRewardType_ProduceRewardType_Ratio       ProduceRewardType = 2
)

// Enum value maps for ProduceRewardType.
var (
	ProduceRewardType_name = map[int32]string{
		0: "ProduceRewardType_Unknown",
		1: "ProduceRewardType_Probability",
		2: "ProduceRewardType_Ratio",
	}
	ProduceRewardType_value = map[string]int32{
		"ProduceRewardType_Unknown":     0,
		"ProduceRewardType_Probability": 1,
		"ProduceRewardType_Ratio":       2,
	}
)

func (x ProduceRewardType) Enum() *ProduceRewardType {
	p := new(ProduceRewardType)
	*p = x
	return p
}

func (x ProduceRewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceRewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[136].Descriptor()
}

func (ProduceRewardType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[136]
}

func (x ProduceRewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceRewardType.Descriptor instead.
func (ProduceRewardType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{136}
}

type ProduceScheduleLocationType int32

const (
	ProduceScheduleLocationType_ProduceScheduleLocationType_Unknown       ProduceScheduleLocationType = 0
	ProduceScheduleLocationType_ProduceScheduleLocationType_ProducerRoom1 ProduceScheduleLocationType = 1
	ProduceScheduleLocationType_ProduceScheduleLocationType_ProducerRoom2 ProduceScheduleLocationType = 2
	ProduceScheduleLocationType_ProduceScheduleLocationType_Classroom     ProduceScheduleLocationType = 3
	ProduceScheduleLocationType_ProduceScheduleLocationType_Rooftop       ProduceScheduleLocationType = 4
	ProduceScheduleLocationType_ProduceScheduleLocationType_Courtyard     ProduceScheduleLocationType = 5
	ProduceScheduleLocationType_ProduceScheduleLocationType_ProducerRoom3 ProduceScheduleLocationType = 6
	ProduceScheduleLocationType_ProduceScheduleLocationType_ProducerRoom4 ProduceScheduleLocationType = 7
	ProduceScheduleLocationType_ProduceScheduleLocationType_Classroom2    ProduceScheduleLocationType = 8
	ProduceScheduleLocationType_ProduceScheduleLocationType_Rooftop2      ProduceScheduleLocationType = 9
	ProduceScheduleLocationType_ProduceScheduleLocationType_Courtyard2    ProduceScheduleLocationType = 10
)

// Enum value maps for ProduceScheduleLocationType.
var (
	ProduceScheduleLocationType_name = map[int32]string{
		0:  "ProduceScheduleLocationType_Unknown",
		1:  "ProduceScheduleLocationType_ProducerRoom1",
		2:  "ProduceScheduleLocationType_ProducerRoom2",
		3:  "ProduceScheduleLocationType_Classroom",
		4:  "ProduceScheduleLocationType_Rooftop",
		5:  "ProduceScheduleLocationType_Courtyard",
		6:  "ProduceScheduleLocationType_ProducerRoom3",
		7:  "ProduceScheduleLocationType_ProducerRoom4",
		8:  "ProduceScheduleLocationType_Classroom2",
		9:  "ProduceScheduleLocationType_Rooftop2",
		10: "ProduceScheduleLocationType_Courtyard2",
	}
	ProduceScheduleLocationType_value = map[string]int32{
		"ProduceScheduleLocationType_Unknown":       0,
		"ProduceScheduleLocationType_ProducerRoom1": 1,
		"ProduceScheduleLocationType_ProducerRoom2": 2,
		"ProduceScheduleLocationType_Classroom":     3,
		"ProduceScheduleLocationType_Rooftop":       4,
		"ProduceScheduleLocationType_Courtyard":     5,
		"ProduceScheduleLocationType_ProducerRoom3": 6,
		"ProduceScheduleLocationType_ProducerRoom4": 7,
		"ProduceScheduleLocationType_Classroom2":    8,
		"ProduceScheduleLocationType_Rooftop2":      9,
		"ProduceScheduleLocationType_Courtyard2":    10,
	}
)

func (x ProduceScheduleLocationType) Enum() *ProduceScheduleLocationType {
	p := new(ProduceScheduleLocationType)
	*p = x
	return p
}

func (x ProduceScheduleLocationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceScheduleLocationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[137].Descriptor()
}

func (ProduceScheduleLocationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[137]
}

func (x ProduceScheduleLocationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceScheduleLocationType.Descriptor instead.
func (ProduceScheduleLocationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{137}
}

type ProduceScheduleMotionType int32

const (
	ProduceScheduleMotionType_ProduceScheduleMotionType_Unknown      ProduceScheduleMotionType = 0
	ProduceScheduleMotionType_ProduceScheduleMotionType_Wait1        ProduceScheduleMotionType = 1
	ProduceScheduleMotionType_ProduceScheduleMotionType_Wait2        ProduceScheduleMotionType = 2
	ProduceScheduleMotionType_ProduceScheduleMotionType_Reaction     ProduceScheduleMotionType = 3
	ProduceScheduleMotionType_ProduceScheduleMotionType_ReactionOnce ProduceScheduleMotionType = 4
)

// Enum value maps for ProduceScheduleMotionType.
var (
	ProduceScheduleMotionType_name = map[int32]string{
		0: "ProduceScheduleMotionType_Unknown",
		1: "ProduceScheduleMotionType_Wait1",
		2: "ProduceScheduleMotionType_Wait2",
		3: "ProduceScheduleMotionType_Reaction",
		4: "ProduceScheduleMotionType_ReactionOnce",
	}
	ProduceScheduleMotionType_value = map[string]int32{
		"ProduceScheduleMotionType_Unknown":      0,
		"ProduceScheduleMotionType_Wait1":        1,
		"ProduceScheduleMotionType_Wait2":        2,
		"ProduceScheduleMotionType_Reaction":     3,
		"ProduceScheduleMotionType_ReactionOnce": 4,
	}
)

func (x ProduceScheduleMotionType) Enum() *ProduceScheduleMotionType {
	p := new(ProduceScheduleMotionType)
	*p = x
	return p
}

func (x ProduceScheduleMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceScheduleMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[138].Descriptor()
}

func (ProduceScheduleMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[138]
}

func (x ProduceScheduleMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceScheduleMotionType.Descriptor instead.
func (ProduceScheduleMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{138}
}

type ProduceScheduleStaminaMotionType int32

const (
	ProduceScheduleStaminaMotionType_ProduceScheduleStaminaMotionType_Unknown   ProduceScheduleStaminaMotionType = 0
	ProduceScheduleStaminaMotionType_ProduceScheduleStaminaMotionType_Enough    ProduceScheduleStaminaMotionType = 1
	ProduceScheduleStaminaMotionType_ProduceScheduleStaminaMotionType_NotEnough ProduceScheduleStaminaMotionType = 2
)

// Enum value maps for ProduceScheduleStaminaMotionType.
var (
	ProduceScheduleStaminaMotionType_name = map[int32]string{
		0: "ProduceScheduleStaminaMotionType_Unknown",
		1: "ProduceScheduleStaminaMotionType_Enough",
		2: "ProduceScheduleStaminaMotionType_NotEnough",
	}
	ProduceScheduleStaminaMotionType_value = map[string]int32{
		"ProduceScheduleStaminaMotionType_Unknown":   0,
		"ProduceScheduleStaminaMotionType_Enough":    1,
		"ProduceScheduleStaminaMotionType_NotEnough": 2,
	}
)

func (x ProduceScheduleStaminaMotionType) Enum() *ProduceScheduleStaminaMotionType {
	p := new(ProduceScheduleStaminaMotionType)
	*p = x
	return p
}

func (x ProduceScheduleStaminaMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceScheduleStaminaMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[139].Descriptor()
}

func (ProduceScheduleStaminaMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[139]
}

func (x ProduceScheduleStaminaMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceScheduleStaminaMotionType.Descriptor instead.
func (ProduceScheduleStaminaMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{139}
}

type ProduceSkillEffectType int32

const (
	ProduceSkillEffectType_ProduceSkillEffectType_Unknown                  ProduceSkillEffectType = 0
	ProduceSkillEffectType_ProduceSkillEffectType_VocalAddition            ProduceSkillEffectType = 100
	ProduceSkillEffectType_ProduceSkillEffectType_VocalGrowthRateAddition  ProduceSkillEffectType = 101
	ProduceSkillEffectType_ProduceSkillEffectType_DanceAddition            ProduceSkillEffectType = 200
	ProduceSkillEffectType_ProduceSkillEffectType_DanceGrowthRateAddition  ProduceSkillEffectType = 201
	ProduceSkillEffectType_ProduceSkillEffectType_VisualAddition           ProduceSkillEffectType = 300
	ProduceSkillEffectType_ProduceSkillEffectType_VisualGrowthRateAddition ProduceSkillEffectType = 301
	ProduceSkillEffectType_ProduceSkillEffectType_StaminaAddition          ProduceSkillEffectType = 500
	ProduceSkillEffectType_ProduceSkillEffectType_ProduceRewardSet         ProduceSkillEffectType = 1000
	ProduceSkillEffectType_ProduceSkillEffectType_ProduceEffect            ProduceSkillEffectType = 1001
)

// Enum value maps for ProduceSkillEffectType.
var (
	ProduceSkillEffectType_name = map[int32]string{
		0:    "ProduceSkillEffectType_Unknown",
		100:  "ProduceSkillEffectType_VocalAddition",
		101:  "ProduceSkillEffectType_VocalGrowthRateAddition",
		200:  "ProduceSkillEffectType_DanceAddition",
		201:  "ProduceSkillEffectType_DanceGrowthRateAddition",
		300:  "ProduceSkillEffectType_VisualAddition",
		301:  "ProduceSkillEffectType_VisualGrowthRateAddition",
		500:  "ProduceSkillEffectType_StaminaAddition",
		1000: "ProduceSkillEffectType_ProduceRewardSet",
		1001: "ProduceSkillEffectType_ProduceEffect",
	}
	ProduceSkillEffectType_value = map[string]int32{
		"ProduceSkillEffectType_Unknown":                  0,
		"ProduceSkillEffectType_VocalAddition":            100,
		"ProduceSkillEffectType_VocalGrowthRateAddition":  101,
		"ProduceSkillEffectType_DanceAddition":            200,
		"ProduceSkillEffectType_DanceGrowthRateAddition":  201,
		"ProduceSkillEffectType_VisualAddition":           300,
		"ProduceSkillEffectType_VisualGrowthRateAddition": 301,
		"ProduceSkillEffectType_StaminaAddition":          500,
		"ProduceSkillEffectType_ProduceRewardSet":         1000,
		"ProduceSkillEffectType_ProduceEffect":            1001,
	}
)

func (x ProduceSkillEffectType) Enum() *ProduceSkillEffectType {
	p := new(ProduceSkillEffectType)
	*p = x
	return p
}

func (x ProduceSkillEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceSkillEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[140].Descriptor()
}

func (ProduceSkillEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[140]
}

func (x ProduceSkillEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceSkillEffectType.Descriptor instead.
func (ProduceSkillEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{140}
}

type ProduceStartMotionType int32

const (
	ProduceStartMotionType_ProduceStartMotionType_Unknown  ProduceStartMotionType = 0
	ProduceStartMotionType_ProduceStartMotionType_Reaction ProduceStartMotionType = 1
	ProduceStartMotionType_ProduceStartMotionType_Wait     ProduceStartMotionType = 2
)

// Enum value maps for ProduceStartMotionType.
var (
	ProduceStartMotionType_name = map[int32]string{
		0: "ProduceStartMotionType_Unknown",
		1: "ProduceStartMotionType_Reaction",
		2: "ProduceStartMotionType_Wait",
	}
	ProduceStartMotionType_value = map[string]int32{
		"ProduceStartMotionType_Unknown":  0,
		"ProduceStartMotionType_Reaction": 1,
		"ProduceStartMotionType_Wait":     2,
	}
)

func (x ProduceStartMotionType) Enum() *ProduceStartMotionType {
	p := new(ProduceStartMotionType)
	*p = x
	return p
}

func (x ProduceStartMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStartMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[141].Descriptor()
}

func (ProduceStartMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[141]
}

func (x ProduceStartMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStartMotionType.Descriptor instead.
func (ProduceStartMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{141}
}

type ProduceStepAuditionMotionType int32

const (
	ProduceStepAuditionMotionType_ProduceStepAuditionMotionType_Unknown ProduceStepAuditionMotionType = 0
	ProduceStepAuditionMotionType_ProduceStepAuditionMotionType_Start   ProduceStepAuditionMotionType = 1
	ProduceStepAuditionMotionType_ProduceStepAuditionMotionType_Result1 ProduceStepAuditionMotionType = 2
	ProduceStepAuditionMotionType_ProduceStepAuditionMotionType_Result2 ProduceStepAuditionMotionType = 3
	ProduceStepAuditionMotionType_ProduceStepAuditionMotionType_Result3 ProduceStepAuditionMotionType = 4
	ProduceStepAuditionMotionType_ProduceStepAuditionMotionType_Failure ProduceStepAuditionMotionType = 5
)

// Enum value maps for ProduceStepAuditionMotionType.
var (
	ProduceStepAuditionMotionType_name = map[int32]string{
		0: "ProduceStepAuditionMotionType_Unknown",
		1: "ProduceStepAuditionMotionType_Start",
		2: "ProduceStepAuditionMotionType_Result1",
		3: "ProduceStepAuditionMotionType_Result2",
		4: "ProduceStepAuditionMotionType_Result3",
		5: "ProduceStepAuditionMotionType_Failure",
	}
	ProduceStepAuditionMotionType_value = map[string]int32{
		"ProduceStepAuditionMotionType_Unknown": 0,
		"ProduceStepAuditionMotionType_Start":   1,
		"ProduceStepAuditionMotionType_Result1": 2,
		"ProduceStepAuditionMotionType_Result2": 3,
		"ProduceStepAuditionMotionType_Result3": 4,
		"ProduceStepAuditionMotionType_Failure": 5,
	}
)

func (x ProduceStepAuditionMotionType) Enum() *ProduceStepAuditionMotionType {
	p := new(ProduceStepAuditionMotionType)
	*p = x
	return p
}

func (x ProduceStepAuditionMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStepAuditionMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[142].Descriptor()
}

func (ProduceStepAuditionMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[142]
}

func (x ProduceStepAuditionMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStepAuditionMotionType.Descriptor instead.
func (ProduceStepAuditionMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{142}
}

type ProduceStepAuditionType int32

const (
	ProduceStepAuditionType_ProduceStepAuditionType_Unknown       ProduceStepAuditionType = 0
	ProduceStepAuditionType_ProduceStepAuditionType_Mid1Easy      ProduceStepAuditionType = 1
	ProduceStepAuditionType_ProduceStepAuditionType_Mid1Normal    ProduceStepAuditionType = 2
	ProduceStepAuditionType_ProduceStepAuditionType_Mid1Hard      ProduceStepAuditionType = 3
	ProduceStepAuditionType_ProduceStepAuditionType_Mid2Easy      ProduceStepAuditionType = 4
	ProduceStepAuditionType_ProduceStepAuditionType_Mid2Normal    ProduceStepAuditionType = 5
	ProduceStepAuditionType_ProduceStepAuditionType_Mid2Hard      ProduceStepAuditionType = 6
	ProduceStepAuditionType_ProduceStepAuditionType_FinalEasy     ProduceStepAuditionType = 7
	ProduceStepAuditionType_ProduceStepAuditionType_FinalNormal   ProduceStepAuditionType = 8
	ProduceStepAuditionType_ProduceStepAuditionType_FinalHard     ProduceStepAuditionType = 9
	ProduceStepAuditionType_ProduceStepAuditionType_FinalVeryHard ProduceStepAuditionType = 10
)

// Enum value maps for ProduceStepAuditionType.
var (
	ProduceStepAuditionType_name = map[int32]string{
		0:  "ProduceStepAuditionType_Unknown",
		1:  "ProduceStepAuditionType_Mid1Easy",
		2:  "ProduceStepAuditionType_Mid1Normal",
		3:  "ProduceStepAuditionType_Mid1Hard",
		4:  "ProduceStepAuditionType_Mid2Easy",
		5:  "ProduceStepAuditionType_Mid2Normal",
		6:  "ProduceStepAuditionType_Mid2Hard",
		7:  "ProduceStepAuditionType_FinalEasy",
		8:  "ProduceStepAuditionType_FinalNormal",
		9:  "ProduceStepAuditionType_FinalHard",
		10: "ProduceStepAuditionType_FinalVeryHard",
	}
	ProduceStepAuditionType_value = map[string]int32{
		"ProduceStepAuditionType_Unknown":       0,
		"ProduceStepAuditionType_Mid1Easy":      1,
		"ProduceStepAuditionType_Mid1Normal":    2,
		"ProduceStepAuditionType_Mid1Hard":      3,
		"ProduceStepAuditionType_Mid2Easy":      4,
		"ProduceStepAuditionType_Mid2Normal":    5,
		"ProduceStepAuditionType_Mid2Hard":      6,
		"ProduceStepAuditionType_FinalEasy":     7,
		"ProduceStepAuditionType_FinalNormal":   8,
		"ProduceStepAuditionType_FinalHard":     9,
		"ProduceStepAuditionType_FinalVeryHard": 10,
	}
)

func (x ProduceStepAuditionType) Enum() *ProduceStepAuditionType {
	p := new(ProduceStepAuditionType)
	*p = x
	return p
}

func (x ProduceStepAuditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStepAuditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[143].Descriptor()
}

func (ProduceStepAuditionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[143]
}

func (x ProduceStepAuditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStepAuditionType.Descriptor instead.
func (ProduceStepAuditionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{143}
}

type ProduceStepBusinessType int32

const (
	ProduceStepBusinessType_ProduceStepBusinessType_Unknown      ProduceStepBusinessType = 0
	ProduceStepBusinessType_ProduceStepBusinessType_ProduceCard  ProduceStepBusinessType = 1
	ProduceStepBusinessType_ProduceStepBusinessType_ProduceDrink ProduceStepBusinessType = 2
	ProduceStepBusinessType_ProduceStepBusinessType_ProducePoint ProduceStepBusinessType = 3
	ProduceStepBusinessType_ProduceStepBusinessType_Stamina      ProduceStepBusinessType = 4
)

// Enum value maps for ProduceStepBusinessType.
var (
	ProduceStepBusinessType_name = map[int32]string{
		0: "ProduceStepBusinessType_Unknown",
		1: "ProduceStepBusinessType_ProduceCard",
		2: "ProduceStepBusinessType_ProduceDrink",
		3: "ProduceStepBusinessType_ProducePoint",
		4: "ProduceStepBusinessType_Stamina",
	}
	ProduceStepBusinessType_value = map[string]int32{
		"ProduceStepBusinessType_Unknown":      0,
		"ProduceStepBusinessType_ProduceCard":  1,
		"ProduceStepBusinessType_ProduceDrink": 2,
		"ProduceStepBusinessType_ProducePoint": 3,
		"ProduceStepBusinessType_Stamina":      4,
	}
)

func (x ProduceStepBusinessType) Enum() *ProduceStepBusinessType {
	p := new(ProduceStepBusinessType)
	*p = x
	return p
}

func (x ProduceStepBusinessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStepBusinessType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[144].Descriptor()
}

func (ProduceStepBusinessType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[144]
}

func (x ProduceStepBusinessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStepBusinessType.Descriptor instead.
func (ProduceStepBusinessType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{144}
}

type ProduceStepFanPresentMotionType int32

const (
	ProduceStepFanPresentMotionType_ProduceStepFanPresentMotionType_Unknown  ProduceStepFanPresentMotionType = 0
	ProduceStepFanPresentMotionType_ProduceStepFanPresentMotionType_Reaction ProduceStepFanPresentMotionType = 1
	ProduceStepFanPresentMotionType_ProduceStepFanPresentMotionType_Wait     ProduceStepFanPresentMotionType = 2
)

// Enum value maps for ProduceStepFanPresentMotionType.
var (
	ProduceStepFanPresentMotionType_name = map[int32]string{
		0: "ProduceStepFanPresentMotionType_Unknown",
		1: "ProduceStepFanPresentMotionType_Reaction",
		2: "ProduceStepFanPresentMotionType_Wait",
	}
	ProduceStepFanPresentMotionType_value = map[string]int32{
		"ProduceStepFanPresentMotionType_Unknown":  0,
		"ProduceStepFanPresentMotionType_Reaction": 1,
		"ProduceStepFanPresentMotionType_Wait":     2,
	}
)

func (x ProduceStepFanPresentMotionType) Enum() *ProduceStepFanPresentMotionType {
	p := new(ProduceStepFanPresentMotionType)
	*p = x
	return p
}

func (x ProduceStepFanPresentMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStepFanPresentMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[145].Descriptor()
}

func (ProduceStepFanPresentMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[145]
}

func (x ProduceStepFanPresentMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStepFanPresentMotionType.Descriptor instead.
func (ProduceStepFanPresentMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{145}
}

type ProduceStepLessonType int32

const (
	ProduceStepLessonType_ProduceStepLessonType_Unknown            ProduceStepLessonType = 0
	ProduceStepLessonType_ProduceStepLessonType_Lesson             ProduceStepLessonType = 1
	ProduceStepLessonType_ProduceStepLessonType_LessonNormal       ProduceStepLessonType = 2
	ProduceStepLessonType_ProduceStepLessonType_LessonSp           ProduceStepLessonType = 3
	ProduceStepLessonType_ProduceStepLessonType_LessonHard         ProduceStepLessonType = 4
	ProduceStepLessonType_ProduceStepLessonType_LessonVocal        ProduceStepLessonType = 5
	ProduceStepLessonType_ProduceStepLessonType_LessonDance        ProduceStepLessonType = 6
	ProduceStepLessonType_ProduceStepLessonType_LessonVisual       ProduceStepLessonType = 7
	ProduceStepLessonType_ProduceStepLessonType_LessonVocalNormal  ProduceStepLessonType = 8
	ProduceStepLessonType_ProduceStepLessonType_LessonVocalSp      ProduceStepLessonType = 9
	ProduceStepLessonType_ProduceStepLessonType_LessonVocalHard    ProduceStepLessonType = 10
	ProduceStepLessonType_ProduceStepLessonType_LessonDanceNormal  ProduceStepLessonType = 11
	ProduceStepLessonType_ProduceStepLessonType_LessonDanceSp      ProduceStepLessonType = 12
	ProduceStepLessonType_ProduceStepLessonType_LessonDanceHard    ProduceStepLessonType = 13
	ProduceStepLessonType_ProduceStepLessonType_LessonVisualNormal ProduceStepLessonType = 14
	ProduceStepLessonType_ProduceStepLessonType_LessonVisualSp     ProduceStepLessonType = 15
	ProduceStepLessonType_ProduceStepLessonType_LessonVisualHard   ProduceStepLessonType = 16
)

// Enum value maps for ProduceStepLessonType.
var (
	ProduceStepLessonType_name = map[int32]string{
		0:  "ProduceStepLessonType_Unknown",
		1:  "ProduceStepLessonType_Lesson",
		2:  "ProduceStepLessonType_LessonNormal",
		3:  "ProduceStepLessonType_LessonSp",
		4:  "ProduceStepLessonType_LessonHard",
		5:  "ProduceStepLessonType_LessonVocal",
		6:  "ProduceStepLessonType_LessonDance",
		7:  "ProduceStepLessonType_LessonVisual",
		8:  "ProduceStepLessonType_LessonVocalNormal",
		9:  "ProduceStepLessonType_LessonVocalSp",
		10: "ProduceStepLessonType_LessonVocalHard",
		11: "ProduceStepLessonType_LessonDanceNormal",
		12: "ProduceStepLessonType_LessonDanceSp",
		13: "ProduceStepLessonType_LessonDanceHard",
		14: "ProduceStepLessonType_LessonVisualNormal",
		15: "ProduceStepLessonType_LessonVisualSp",
		16: "ProduceStepLessonType_LessonVisualHard",
	}
	ProduceStepLessonType_value = map[string]int32{
		"ProduceStepLessonType_Unknown":            0,
		"ProduceStepLessonType_Lesson":             1,
		"ProduceStepLessonType_LessonNormal":       2,
		"ProduceStepLessonType_LessonSp":           3,
		"ProduceStepLessonType_LessonHard":         4,
		"ProduceStepLessonType_LessonVocal":        5,
		"ProduceStepLessonType_LessonDance":        6,
		"ProduceStepLessonType_LessonVisual":       7,
		"ProduceStepLessonType_LessonVocalNormal":  8,
		"ProduceStepLessonType_LessonVocalSp":      9,
		"ProduceStepLessonType_LessonVocalHard":    10,
		"ProduceStepLessonType_LessonDanceNormal":  11,
		"ProduceStepLessonType_LessonDanceSp":      12,
		"ProduceStepLessonType_LessonDanceHard":    13,
		"ProduceStepLessonType_LessonVisualNormal": 14,
		"ProduceStepLessonType_LessonVisualSp":     15,
		"ProduceStepLessonType_LessonVisualHard":   16,
	}
)

func (x ProduceStepLessonType) Enum() *ProduceStepLessonType {
	p := new(ProduceStepLessonType)
	*p = x
	return p
}

func (x ProduceStepLessonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStepLessonType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[146].Descriptor()
}

func (ProduceStepLessonType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[146]
}

func (x ProduceStepLessonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStepLessonType.Descriptor instead.
func (ProduceStepLessonType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{146}
}

type ProduceStepPhaseType int32

const (
	ProduceStepPhaseType_ProduceStepPhaseType_Unknown ProduceStepPhaseType = 0
	ProduceStepPhaseType_ProduceStepPhaseType_Before  ProduceStepPhaseType = 1
	ProduceStepPhaseType_ProduceStepPhaseType_After   ProduceStepPhaseType = 2
)

// Enum value maps for ProduceStepPhaseType.
var (
	ProduceStepPhaseType_name = map[int32]string{
		0: "ProduceStepPhaseType_Unknown",
		1: "ProduceStepPhaseType_Before",
		2: "ProduceStepPhaseType_After",
	}
	ProduceStepPhaseType_value = map[string]int32{
		"ProduceStepPhaseType_Unknown": 0,
		"ProduceStepPhaseType_Before":  1,
		"ProduceStepPhaseType_After":   2,
	}
)

func (x ProduceStepPhaseType) Enum() *ProduceStepPhaseType {
	p := new(ProduceStepPhaseType)
	*p = x
	return p
}

func (x ProduceStepPhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStepPhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[147].Descriptor()
}

func (ProduceStepPhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[147]
}

func (x ProduceStepPhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStepPhaseType.Descriptor instead.
func (ProduceStepPhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{147}
}

type ProduceStepType int32

const (
	ProduceStepType_ProduceStepType_Unknown                ProduceStepType = 0
	ProduceStepType_ProduceStepType_LessonVocalNormal      ProduceStepType = 1
	ProduceStepType_ProduceStepType_LessonVocalSp          ProduceStepType = 2
	ProduceStepType_ProduceStepType_LessonVocalHard        ProduceStepType = 3
	ProduceStepType_ProduceStepType_LessonDanceNormal      ProduceStepType = 4
	ProduceStepType_ProduceStepType_LessonDanceSp          ProduceStepType = 5
	ProduceStepType_ProduceStepType_LessonDanceHard        ProduceStepType = 6
	ProduceStepType_ProduceStepType_LessonVisualNormal     ProduceStepType = 7
	ProduceStepType_ProduceStepType_LessonVisualSp         ProduceStepType = 8
	ProduceStepType_ProduceStepType_LessonVisualHard       ProduceStepType = 9
	ProduceStepType_ProduceStepType_Event                  ProduceStepType = 10
	ProduceStepType_ProduceStepType_EventActivity          ProduceStepType = 11
	ProduceStepType_ProduceStepType_EventSchool            ProduceStepType = 12
	ProduceStepType_ProduceStepType_Shop                   ProduceStepType = 13
	ProduceStepType_ProduceStepType_Refresh                ProduceStepType = 14
	ProduceStepType_ProduceStepType_Present                ProduceStepType = 15
	ProduceStepType_ProduceStepType_AuditionMid1           ProduceStepType = 16
	ProduceStepType_ProduceStepType_AuditionMid2           ProduceStepType = 17
	ProduceStepType_ProduceStepType_AuditionFinal          ProduceStepType = 18
	ProduceStepType_ProduceStepType_SelfLessonVocalNormal  ProduceStepType = 19
	ProduceStepType_ProduceStepType_SelfLessonVocalSp      ProduceStepType = 20
	ProduceStepType_ProduceStepType_SelfLessonDanceNormal  ProduceStepType = 21
	ProduceStepType_ProduceStepType_SelfLessonDanceSp      ProduceStepType = 22
	ProduceStepType_ProduceStepType_SelfLessonVisualNormal ProduceStepType = 23
	ProduceStepType_ProduceStepType_SelfLessonVisualSp     ProduceStepType = 24
	ProduceStepType_ProduceStepType_Business               ProduceStepType = 25
	ProduceStepType_ProduceStepType_EventBusiness          ProduceStepType = 26
	ProduceStepType_ProduceStepType_FanPresent             ProduceStepType = 27
	ProduceStepType_ProduceStepType_Customize              ProduceStepType = 28
)

// Enum value maps for ProduceStepType.
var (
	ProduceStepType_name = map[int32]string{
		0:  "ProduceStepType_Unknown",
		1:  "ProduceStepType_LessonVocalNormal",
		2:  "ProduceStepType_LessonVocalSp",
		3:  "ProduceStepType_LessonVocalHard",
		4:  "ProduceStepType_LessonDanceNormal",
		5:  "ProduceStepType_LessonDanceSp",
		6:  "ProduceStepType_LessonDanceHard",
		7:  "ProduceStepType_LessonVisualNormal",
		8:  "ProduceStepType_LessonVisualSp",
		9:  "ProduceStepType_LessonVisualHard",
		10: "ProduceStepType_Event",
		11: "ProduceStepType_EventActivity",
		12: "ProduceStepType_EventSchool",
		13: "ProduceStepType_Shop",
		14: "ProduceStepType_Refresh",
		15: "ProduceStepType_Present",
		16: "ProduceStepType_AuditionMid1",
		17: "ProduceStepType_AuditionMid2",
		18: "ProduceStepType_AuditionFinal",
		19: "ProduceStepType_SelfLessonVocalNormal",
		20: "ProduceStepType_SelfLessonVocalSp",
		21: "ProduceStepType_SelfLessonDanceNormal",
		22: "ProduceStepType_SelfLessonDanceSp",
		23: "ProduceStepType_SelfLessonVisualNormal",
		24: "ProduceStepType_SelfLessonVisualSp",
		25: "ProduceStepType_Business",
		26: "ProduceStepType_EventBusiness",
		27: "ProduceStepType_FanPresent",
		28: "ProduceStepType_Customize",
	}
	ProduceStepType_value = map[string]int32{
		"ProduceStepType_Unknown":                0,
		"ProduceStepType_LessonVocalNormal":      1,
		"ProduceStepType_LessonVocalSp":          2,
		"ProduceStepType_LessonVocalHard":        3,
		"ProduceStepType_LessonDanceNormal":      4,
		"ProduceStepType_LessonDanceSp":          5,
		"ProduceStepType_LessonDanceHard":        6,
		"ProduceStepType_LessonVisualNormal":     7,
		"ProduceStepType_LessonVisualSp":         8,
		"ProduceStepType_LessonVisualHard":       9,
		"ProduceStepType_Event":                  10,
		"ProduceStepType_EventActivity":          11,
		"ProduceStepType_EventSchool":            12,
		"ProduceStepType_Shop":                   13,
		"ProduceStepType_Refresh":                14,
		"ProduceStepType_Present":                15,
		"ProduceStepType_AuditionMid1":           16,
		"ProduceStepType_AuditionMid2":           17,
		"ProduceStepType_AuditionFinal":          18,
		"ProduceStepType_SelfLessonVocalNormal":  19,
		"ProduceStepType_SelfLessonVocalSp":      20,
		"ProduceStepType_SelfLessonDanceNormal":  21,
		"ProduceStepType_SelfLessonDanceSp":      22,
		"ProduceStepType_SelfLessonVisualNormal": 23,
		"ProduceStepType_SelfLessonVisualSp":     24,
		"ProduceStepType_Business":               25,
		"ProduceStepType_EventBusiness":          26,
		"ProduceStepType_FanPresent":             27,
		"ProduceStepType_Customize":              28,
	}
)

func (x ProduceStepType) Enum() *ProduceStepType {
	p := new(ProduceStepType)
	*p = x
	return p
}

func (x ProduceStepType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStepType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[148].Descriptor()
}

func (ProduceStepType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[148]
}

func (x ProduceStepType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStepType.Descriptor instead.
func (ProduceStepType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{148}
}

type ProduceStoryType int32

const (
	ProduceStoryType_ProduceStoryType_Unknown           ProduceStoryType = 0
	ProduceStoryType_ProduceStoryType_Dearness          ProduceStoryType = 1
	ProduceStoryType_ProduceStoryType_Character         ProduceStoryType = 2
	ProduceStoryType_ProduceStoryType_CharacterGrowth   ProduceStoryType = 3
	ProduceStoryType_ProduceStoryType_IdolCard          ProduceStoryType = 4
	ProduceStoryType_ProduceStoryType_SupportCard       ProduceStoryType = 5
	ProduceStoryType_ProduceStoryType_StepActivityEvent ProduceStoryType = 6
	ProduceStoryType_ProduceStoryType_StepSchoolEvent   ProduceStoryType = 7
	ProduceStoryType_ProduceStoryType_Campaign          ProduceStoryType = 8
	ProduceStoryType_ProduceStoryType_StepBusinessEvent ProduceStoryType = 9
)

// Enum value maps for ProduceStoryType.
var (
	ProduceStoryType_name = map[int32]string{
		0: "ProduceStoryType_Unknown",
		1: "ProduceStoryType_Dearness",
		2: "ProduceStoryType_Character",
		3: "ProduceStoryType_CharacterGrowth",
		4: "ProduceStoryType_IdolCard",
		5: "ProduceStoryType_SupportCard",
		6: "ProduceStoryType_StepActivityEvent",
		7: "ProduceStoryType_StepSchoolEvent",
		8: "ProduceStoryType_Campaign",
		9: "ProduceStoryType_StepBusinessEvent",
	}
	ProduceStoryType_value = map[string]int32{
		"ProduceStoryType_Unknown":           0,
		"ProduceStoryType_Dearness":          1,
		"ProduceStoryType_Character":         2,
		"ProduceStoryType_CharacterGrowth":   3,
		"ProduceStoryType_IdolCard":          4,
		"ProduceStoryType_SupportCard":       5,
		"ProduceStoryType_StepActivityEvent": 6,
		"ProduceStoryType_StepSchoolEvent":   7,
		"ProduceStoryType_Campaign":          8,
		"ProduceStoryType_StepBusinessEvent": 9,
	}
)

func (x ProduceStoryType) Enum() *ProduceStoryType {
	p := new(ProduceStoryType)
	*p = x
	return p
}

func (x ProduceStoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceStoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[149].Descriptor()
}

func (ProduceStoryType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[149]
}

func (x ProduceStoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceStoryType.Descriptor instead.
func (ProduceStoryType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{149}
}

type ProduceTriggerOriginType int32

const (
	ProduceTriggerOriginType_ProduceTriggerOriginType_Unknown       ProduceTriggerOriginType = 0
	ProduceTriggerOriginType_ProduceTriggerOriginType_Character     ProduceTriggerOriginType = 1
	ProduceTriggerOriginType_ProduceTriggerOriginType_IdolCard      ProduceTriggerOriginType = 2
	ProduceTriggerOriginType_ProduceTriggerOriginType_SupportCard   ProduceTriggerOriginType = 3
	ProduceTriggerOriginType_ProduceTriggerOriginType_Memory        ProduceTriggerOriginType = 4
	ProduceTriggerOriginType_ProduceTriggerOriginType_Event         ProduceTriggerOriginType = 5
	ProduceTriggerOriginType_ProduceTriggerOriginType_Item          ProduceTriggerOriginType = 6
	ProduceTriggerOriginType_ProduceTriggerOriginType_Drink         ProduceTriggerOriginType = 7
	ProduceTriggerOriginType_ProduceTriggerOriginType_Produce       ProduceTriggerOriginType = 8
	ProduceTriggerOriginType_ProduceTriggerOriginType_DearnessStory ProduceTriggerOriginType = 9
)

// Enum value maps for ProduceTriggerOriginType.
var (
	ProduceTriggerOriginType_name = map[int32]string{
		0: "ProduceTriggerOriginType_Unknown",
		1: "ProduceTriggerOriginType_Character",
		2: "ProduceTriggerOriginType_IdolCard",
		3: "ProduceTriggerOriginType_SupportCard",
		4: "ProduceTriggerOriginType_Memory",
		5: "ProduceTriggerOriginType_Event",
		6: "ProduceTriggerOriginType_Item",
		7: "ProduceTriggerOriginType_Drink",
		8: "ProduceTriggerOriginType_Produce",
		9: "ProduceTriggerOriginType_DearnessStory",
	}
	ProduceTriggerOriginType_value = map[string]int32{
		"ProduceTriggerOriginType_Unknown":       0,
		"ProduceTriggerOriginType_Character":     1,
		"ProduceTriggerOriginType_IdolCard":      2,
		"ProduceTriggerOriginType_SupportCard":   3,
		"ProduceTriggerOriginType_Memory":        4,
		"ProduceTriggerOriginType_Event":         5,
		"ProduceTriggerOriginType_Item":          6,
		"ProduceTriggerOriginType_Drink":         7,
		"ProduceTriggerOriginType_Produce":       8,
		"ProduceTriggerOriginType_DearnessStory": 9,
	}
)

func (x ProduceTriggerOriginType) Enum() *ProduceTriggerOriginType {
	p := new(ProduceTriggerOriginType)
	*p = x
	return p
}

func (x ProduceTriggerOriginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceTriggerOriginType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[150].Descriptor()
}

func (ProduceTriggerOriginType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[150]
}

func (x ProduceTriggerOriginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceTriggerOriginType.Descriptor instead.
func (ProduceTriggerOriginType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{150}
}

type ProduceType int32

const (
	ProduceType_ProduceType_Unknown          ProduceType = 0
	ProduceType_ProduceType_FirstStar        ProduceType = 1
	ProduceType_ProduceType_NextIdolAudition ProduceType = 2
)

// Enum value maps for ProduceType.
var (
	ProduceType_name = map[int32]string{
		0: "ProduceType_Unknown",
		1: "ProduceType_FirstStar",
		2: "ProduceType_NextIdolAudition",
	}
	ProduceType_value = map[string]int32{
		"ProduceType_Unknown":          0,
		"ProduceType_FirstStar":        1,
		"ProduceType_NextIdolAudition": 2,
	}
)

func (x ProduceType) Enum() *ProduceType {
	p := new(ProduceType)
	*p = x
	return p
}

func (x ProduceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProduceType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[151].Descriptor()
}

func (ProduceType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[151]
}

func (x ProduceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProduceType.Descriptor instead.
func (ProduceType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{151}
}

type ProducerLevelUnlockType int32

const (
	ProducerLevelUnlockType_ProducerLevelUnlockType_Unknown                      ProducerLevelUnlockType = 0
	ProducerLevelUnlockType_ProducerLevelUnlockType_ProduceCard                  ProducerLevelUnlockType = 1
	ProducerLevelUnlockType_ProducerLevelUnlockType_ProduceDrink                 ProducerLevelUnlockType = 2
	ProducerLevelUnlockType_ProducerLevelUnlockType_ShopProduceCardUpgrade       ProducerLevelUnlockType = 10
	ProducerLevelUnlockType_ProducerLevelUnlockType_ShopProduceCardDelete        ProducerLevelUnlockType = 11
	ProducerLevelUnlockType_ProducerLevelUnlockType_ProduceCardSelectRerollCount ProducerLevelUnlockType = 12
	ProducerLevelUnlockType_ProducerLevelUnlockType_ProduceCardExcludeCount      ProducerLevelUnlockType = 13
)

// Enum value maps for ProducerLevelUnlockType.
var (
	ProducerLevelUnlockType_name = map[int32]string{
		0:  "ProducerLevelUnlockType_Unknown",
		1:  "ProducerLevelUnlockType_ProduceCard",
		2:  "ProducerLevelUnlockType_ProduceDrink",
		10: "ProducerLevelUnlockType_ShopProduceCardUpgrade",
		11: "ProducerLevelUnlockType_ShopProduceCardDelete",
		12: "ProducerLevelUnlockType_ProduceCardSelectRerollCount",
		13: "ProducerLevelUnlockType_ProduceCardExcludeCount",
	}
	ProducerLevelUnlockType_value = map[string]int32{
		"ProducerLevelUnlockType_Unknown":                      0,
		"ProducerLevelUnlockType_ProduceCard":                  1,
		"ProducerLevelUnlockType_ProduceDrink":                 2,
		"ProducerLevelUnlockType_ShopProduceCardUpgrade":       10,
		"ProducerLevelUnlockType_ShopProduceCardDelete":        11,
		"ProducerLevelUnlockType_ProduceCardSelectRerollCount": 12,
		"ProducerLevelUnlockType_ProduceCardExcludeCount":      13,
	}
)

func (x ProducerLevelUnlockType) Enum() *ProducerLevelUnlockType {
	p := new(ProducerLevelUnlockType)
	*p = x
	return p
}

func (x ProducerLevelUnlockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProducerLevelUnlockType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[152].Descriptor()
}

func (ProducerLevelUnlockType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[152]
}

func (x ProducerLevelUnlockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProducerLevelUnlockType.Descriptor instead.
func (ProducerLevelUnlockType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{152}
}

type PurchaseTransactionStatusType int32

const (
	PurchaseTransactionStatusType_PurchaseTransactionStatusType_Unknown            PurchaseTransactionStatusType = 0
	PurchaseTransactionStatusType_PurchaseTransactionStatusType_None               PurchaseTransactionStatusType = 1
	PurchaseTransactionStatusType_PurchaseTransactionStatusType_Initialized        PurchaseTransactionStatusType = 2
	PurchaseTransactionStatusType_PurchaseTransactionStatusType_InvalidMasterData  PurchaseTransactionStatusType = 3
	PurchaseTransactionStatusType_PurchaseTransactionStatusType_ChargeFailed       PurchaseTransactionStatusType = 4
	PurchaseTransactionStatusType_PurchaseTransactionStatusType_ProvideBonusFailed PurchaseTransactionStatusType = 5
	PurchaseTransactionStatusType_PurchaseTransactionStatusType_Completed          PurchaseTransactionStatusType = 999
)

// Enum value maps for PurchaseTransactionStatusType.
var (
	PurchaseTransactionStatusType_name = map[int32]string{
		0:   "PurchaseTransactionStatusType_Unknown",
		1:   "PurchaseTransactionStatusType_None",
		2:   "PurchaseTransactionStatusType_Initialized",
		3:   "PurchaseTransactionStatusType_InvalidMasterData",
		4:   "PurchaseTransactionStatusType_ChargeFailed",
		5:   "PurchaseTransactionStatusType_ProvideBonusFailed",
		999: "PurchaseTransactionStatusType_Completed",
	}
	PurchaseTransactionStatusType_value = map[string]int32{
		"PurchaseTransactionStatusType_Unknown":            0,
		"PurchaseTransactionStatusType_None":               1,
		"PurchaseTransactionStatusType_Initialized":        2,
		"PurchaseTransactionStatusType_InvalidMasterData":  3,
		"PurchaseTransactionStatusType_ChargeFailed":       4,
		"PurchaseTransactionStatusType_ProvideBonusFailed": 5,
		"PurchaseTransactionStatusType_Completed":          999,
	}
)

func (x PurchaseTransactionStatusType) Enum() *PurchaseTransactionStatusType {
	p := new(PurchaseTransactionStatusType)
	*p = x
	return p
}

func (x PurchaseTransactionStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PurchaseTransactionStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[153].Descriptor()
}

func (PurchaseTransactionStatusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[153]
}

func (x PurchaseTransactionStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PurchaseTransactionStatusType.Descriptor instead.
func (PurchaseTransactionStatusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{153}
}

type PushType int32

const (
	PushType_PushType_Unknown                   PushType = 0
	PushType_PushType_ApFull                    PushType = 1
	PushType_PushType_MoneyFull                 PushType = 2
	PushType_PushType_DailyMission              PushType = 3
	PushType_PushType_Login                     PushType = 4
	PushType_PushType_PvpRateRemainingPlayCount PushType = 5
	PushType_PushType_WorkMiniLiveFinish        PushType = 101
	PushType_PushType_WorkLiveStreamingFinish   PushType = 102
)

// Enum value maps for PushType.
var (
	PushType_name = map[int32]string{
		0:   "PushType_Unknown",
		1:   "PushType_ApFull",
		2:   "PushType_MoneyFull",
		3:   "PushType_DailyMission",
		4:   "PushType_Login",
		5:   "PushType_PvpRateRemainingPlayCount",
		101: "PushType_WorkMiniLiveFinish",
		102: "PushType_WorkLiveStreamingFinish",
	}
	PushType_value = map[string]int32{
		"PushType_Unknown":                   0,
		"PushType_ApFull":                    1,
		"PushType_MoneyFull":                 2,
		"PushType_DailyMission":              3,
		"PushType_Login":                     4,
		"PushType_PvpRateRemainingPlayCount": 5,
		"PushType_WorkMiniLiveFinish":        101,
		"PushType_WorkLiveStreamingFinish":   102,
	}
)

func (x PushType) Enum() *PushType {
	p := new(PushType)
	*p = x
	return p
}

func (x PushType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[154].Descriptor()
}

func (PushType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[154]
}

func (x PushType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushType.Descriptor instead.
func (PushType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{154}
}

type PvpRateGrade int32

const (
	PvpRateGrade_PvpRateGrade_Unknown PvpRateGrade = 0
	PvpRateGrade_PvpRateGrade__1      PvpRateGrade = 1
	PvpRateGrade_PvpRateGrade__2      PvpRateGrade = 2
	PvpRateGrade_PvpRateGrade__3      PvpRateGrade = 3
	PvpRateGrade_PvpRateGrade__4      PvpRateGrade = 4
	PvpRateGrade_PvpRateGrade__5      PvpRateGrade = 5
	PvpRateGrade_PvpRateGrade__6      PvpRateGrade = 6
	PvpRateGrade_PvpRateGrade__7      PvpRateGrade = 7
	PvpRateGrade_PvpRateGrade__8      PvpRateGrade = 8
)

// Enum value maps for PvpRateGrade.
var (
	PvpRateGrade_name = map[int32]string{
		0: "PvpRateGrade_Unknown",
		1: "PvpRateGrade__1",
		2: "PvpRateGrade__2",
		3: "PvpRateGrade__3",
		4: "PvpRateGrade__4",
		5: "PvpRateGrade__5",
		6: "PvpRateGrade__6",
		7: "PvpRateGrade__7",
		8: "PvpRateGrade__8",
	}
	PvpRateGrade_value = map[string]int32{
		"PvpRateGrade_Unknown": 0,
		"PvpRateGrade__1":      1,
		"PvpRateGrade__2":      2,
		"PvpRateGrade__3":      3,
		"PvpRateGrade__4":      4,
		"PvpRateGrade__5":      5,
		"PvpRateGrade__6":      6,
		"PvpRateGrade__7":      7,
		"PvpRateGrade__8":      8,
	}
)

func (x PvpRateGrade) Enum() *PvpRateGrade {
	p := new(PvpRateGrade)
	*p = x
	return p
}

func (x PvpRateGrade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PvpRateGrade) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[155].Descriptor()
}

func (PvpRateGrade) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[155]
}

func (x PvpRateGrade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PvpRateGrade.Descriptor instead.
func (PvpRateGrade) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{155}
}

type PvpRateMotionType int32

const (
	PvpRateMotionType_PvpRateMotionType_Unknown PvpRateMotionType = 0
	PvpRateMotionType_PvpRateMotionType_Win     PvpRateMotionType = 1
	PvpRateMotionType_PvpRateMotionType_Lose    PvpRateMotionType = 2
)

// Enum value maps for PvpRateMotionType.
var (
	PvpRateMotionType_name = map[int32]string{
		0: "PvpRateMotionType_Unknown",
		1: "PvpRateMotionType_Win",
		2: "PvpRateMotionType_Lose",
	}
	PvpRateMotionType_value = map[string]int32{
		"PvpRateMotionType_Unknown": 0,
		"PvpRateMotionType_Win":     1,
		"PvpRateMotionType_Lose":    2,
	}
)

func (x PvpRateMotionType) Enum() *PvpRateMotionType {
	p := new(PvpRateMotionType)
	*p = x
	return p
}

func (x PvpRateMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PvpRateMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[156].Descriptor()
}

func (PvpRateMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[156]
}

func (x PvpRateMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PvpRateMotionType.Descriptor instead.
func (PvpRateMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{156}
}

type PvpRatePhaseType int32

const (
	PvpRatePhaseType_PvpRatePhaseType_Unknown           PvpRatePhaseType = 0
	PvpRatePhaseType_PvpRatePhaseType_MatchedRivals     PvpRatePhaseType = 1
	PvpRatePhaseType_PvpRatePhaseType_BeforeFirstStage  PvpRatePhaseType = 2
	PvpRatePhaseType_PvpRatePhaseType_BeforeSecondStage PvpRatePhaseType = 3
	PvpRatePhaseType_PvpRatePhaseType_BeforeThirdStage  PvpRatePhaseType = 4
	PvpRatePhaseType_PvpRatePhaseType_Result            PvpRatePhaseType = 5
)

// Enum value maps for PvpRatePhaseType.
var (
	PvpRatePhaseType_name = map[int32]string{
		0: "PvpRatePhaseType_Unknown",
		1: "PvpRatePhaseType_MatchedRivals",
		2: "PvpRatePhaseType_BeforeFirstStage",
		3: "PvpRatePhaseType_BeforeSecondStage",
		4: "PvpRatePhaseType_BeforeThirdStage",
		5: "PvpRatePhaseType_Result",
	}
	PvpRatePhaseType_value = map[string]int32{
		"PvpRatePhaseType_Unknown":           0,
		"PvpRatePhaseType_MatchedRivals":     1,
		"PvpRatePhaseType_BeforeFirstStage":  2,
		"PvpRatePhaseType_BeforeSecondStage": 3,
		"PvpRatePhaseType_BeforeThirdStage":  4,
		"PvpRatePhaseType_Result":            5,
	}
)

func (x PvpRatePhaseType) Enum() *PvpRatePhaseType {
	p := new(PvpRatePhaseType)
	*p = x
	return p
}

func (x PvpRatePhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PvpRatePhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[157].Descriptor()
}

func (PvpRatePhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[157]
}

func (x PvpRatePhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PvpRatePhaseType.Descriptor instead.
func (PvpRatePhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{157}
}

type PvpRateRivalType int32

const (
	PvpRateRivalType_PvpRateRivalType_Unknown PvpRateRivalType = 0
	PvpRateRivalType_PvpRateRivalType_High    PvpRateRivalType = 1
	PvpRateRivalType_PvpRateRivalType_Middle  PvpRateRivalType = 2
	PvpRateRivalType_PvpRateRivalType_Low     PvpRateRivalType = 3
)

// Enum value maps for PvpRateRivalType.
var (
	PvpRateRivalType_name = map[int32]string{
		0: "PvpRateRivalType_Unknown",
		1: "PvpRateRivalType_High",
		2: "PvpRateRivalType_Middle",
		3: "PvpRateRivalType_Low",
	}
	PvpRateRivalType_value = map[string]int32{
		"PvpRateRivalType_Unknown": 0,
		"PvpRateRivalType_High":    1,
		"PvpRateRivalType_Middle":  2,
		"PvpRateRivalType_Low":     3,
	}
)

func (x PvpRateRivalType) Enum() *PvpRateRivalType {
	p := new(PvpRateRivalType)
	*p = x
	return p
}

func (x PvpRateRivalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PvpRateRivalType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[158].Descriptor()
}

func (PvpRateRivalType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[158]
}

func (x PvpRateRivalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PvpRateRivalType.Descriptor instead.
func (PvpRateRivalType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{158}
}

type PvpRateSeasonStatusType int32

const (
	PvpRateSeasonStatusType_PvpRateSeasonStatusType_Unknown          PvpRateSeasonStatusType = 0
	PvpRateSeasonStatusType_PvpRateSeasonStatusType_OutOfTerm        PvpRateSeasonStatusType = 1
	PvpRateSeasonStatusType_PvpRateSeasonStatusType_PrepareStartTerm PvpRateSeasonStatusType = 2
	PvpRateSeasonStatusType_PvpRateSeasonStatusType_NotAttended      PvpRateSeasonStatusType = 3
	PvpRateSeasonStatusType_PvpRateSeasonStatusType_InTerm           PvpRateSeasonStatusType = 4
)

// Enum value maps for PvpRateSeasonStatusType.
var (
	PvpRateSeasonStatusType_name = map[int32]string{
		0: "PvpRateSeasonStatusType_Unknown",
		1: "PvpRateSeasonStatusType_OutOfTerm",
		2: "PvpRateSeasonStatusType_PrepareStartTerm",
		3: "PvpRateSeasonStatusType_NotAttended",
		4: "PvpRateSeasonStatusType_InTerm",
	}
	PvpRateSeasonStatusType_value = map[string]int32{
		"PvpRateSeasonStatusType_Unknown":          0,
		"PvpRateSeasonStatusType_OutOfTerm":        1,
		"PvpRateSeasonStatusType_PrepareStartTerm": 2,
		"PvpRateSeasonStatusType_NotAttended":      3,
		"PvpRateSeasonStatusType_InTerm":           4,
	}
)

func (x PvpRateSeasonStatusType) Enum() *PvpRateSeasonStatusType {
	p := new(PvpRateSeasonStatusType)
	*p = x
	return p
}

func (x PvpRateSeasonStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PvpRateSeasonStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[159].Descriptor()
}

func (PvpRateSeasonStatusType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[159]
}

func (x PvpRateSeasonStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PvpRateSeasonStatusType.Descriptor instead.
func (PvpRateSeasonStatusType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{159}
}

type PvpRateStageType int32

const (
	PvpRateStageType_PvpRateStageType_Unknown PvpRateStageType = 0
	PvpRateStageType_PvpRateStageType__1      PvpRateStageType = 1
	PvpRateStageType_PvpRateStageType__2      PvpRateStageType = 2
	PvpRateStageType_PvpRateStageType__3      PvpRateStageType = 3
)

// Enum value maps for PvpRateStageType.
var (
	PvpRateStageType_name = map[int32]string{
		0: "PvpRateStageType_Unknown",
		1: "PvpRateStageType__1",
		2: "PvpRateStageType__2",
		3: "PvpRateStageType__3",
	}
	PvpRateStageType_value = map[string]int32{
		"PvpRateStageType_Unknown": 0,
		"PvpRateStageType__1":      1,
		"PvpRateStageType__2":      2,
		"PvpRateStageType__3":      3,
	}
)

func (x PvpRateStageType) Enum() *PvpRateStageType {
	p := new(PvpRateStageType)
	*p = x
	return p
}

func (x PvpRateStageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PvpRateStageType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[160].Descriptor()
}

func (PvpRateStageType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[160]
}

func (x PvpRateStageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PvpRateStageType.Descriptor instead.
func (PvpRateStageType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{160}
}

type ResetTimingType int32

const (
	ResetTimingType_ResetTimingType_Unknown ResetTimingType = 0
	ResetTimingType_ResetTimingType_Daily   ResetTimingType = 1
	ResetTimingType_ResetTimingType_Weekly  ResetTimingType = 2
	ResetTimingType_ResetTimingType_Monthly ResetTimingType = 3
	ResetTimingType_ResetTimingType_Never   ResetTimingType = 999
)

// Enum value maps for ResetTimingType.
var (
	ResetTimingType_name = map[int32]string{
		0:   "ResetTimingType_Unknown",
		1:   "ResetTimingType_Daily",
		2:   "ResetTimingType_Weekly",
		3:   "ResetTimingType_Monthly",
		999: "ResetTimingType_Never",
	}
	ResetTimingType_value = map[string]int32{
		"ResetTimingType_Unknown": 0,
		"ResetTimingType_Daily":   1,
		"ResetTimingType_Weekly":  2,
		"ResetTimingType_Monthly": 3,
		"ResetTimingType_Never":   999,
	}
)

func (x ResetTimingType) Enum() *ResetTimingType {
	p := new(ResetTimingType)
	*p = x
	return p
}

func (x ResetTimingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResetTimingType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[161].Descriptor()
}

func (ResetTimingType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[161]
}

func (x ResetTimingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResetTimingType.Descriptor instead.
func (ResetTimingType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{161}
}

type ResourceOriginType int32

const (
	ResourceOriginType_ResourceOriginType_Unknown      ResourceOriginType = 0
	ResourceOriginType_ResourceOriginType_IdolCard     ResourceOriginType = 1
	ResourceOriginType_ResourceOriginType_IdolCardSkin ResourceOriginType = 2
	ResourceOriginType_ResourceOriginType_Shop         ResourceOriginType = 3
)

// Enum value maps for ResourceOriginType.
var (
	ResourceOriginType_name = map[int32]string{
		0: "ResourceOriginType_Unknown",
		1: "ResourceOriginType_IdolCard",
		2: "ResourceOriginType_IdolCardSkin",
		3: "ResourceOriginType_Shop",
	}
	ResourceOriginType_value = map[string]int32{
		"ResourceOriginType_Unknown":      0,
		"ResourceOriginType_IdolCard":     1,
		"ResourceOriginType_IdolCardSkin": 2,
		"ResourceOriginType_Shop":         3,
	}
)

func (x ResourceOriginType) Enum() *ResourceOriginType {
	p := new(ResourceOriginType)
	*p = x
	return p
}

func (x ResourceOriginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceOriginType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[162].Descriptor()
}

func (ResourceOriginType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[162]
}

func (x ResourceOriginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceOriginType.Descriptor instead.
func (ResourceOriginType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{162}
}

type ResourceType int32

const (
	ResourceType_ResourceType_Unknown                 ResourceType = 0
	ResourceType_ResourceType_ProduceCard             ResourceType = 1
	ResourceType_ResourceType_Item                    ResourceType = 2
	ResourceType_ResourceType_Memory                  ResourceType = 3
	ResourceType_ResourceType_SupportCard             ResourceType = 4
	ResourceType_ResourceType_IdolCardSkin            ResourceType = 5
	ResourceType_ResourceType_MissionPassPoint        ResourceType = 6
	ResourceType_ResourceType_MissionPassPremiumPass  ResourceType = 7
	ResourceType_ResourceType_ActionPoint             ResourceType = 8
	ResourceType_ResourceType_UserExp                 ResourceType = 9
	ResourceType_ResourceType_FanCount                ResourceType = 10
	ResourceType_ResourceType_FriendFollowLimitCount  ResourceType = 11
	ResourceType_ResourceType_Music                   ResourceType = 12
	ResourceType_ResourceType_CostumeHead             ResourceType = 13
	ResourceType_ResourceType_Costume                 ResourceType = 14
	ResourceType_ResourceType_MeishiBaseAsset         ResourceType = 15
	ResourceType_ResourceType_MeishiIllustrationAsset ResourceType = 16
	ResourceType_ResourceType_InvitationPoint         ResourceType = 17
	ResourceType_ResourceType_Story                   ResourceType = 18
	ResourceType_ResourceType_StoryEventPoint         ResourceType = 19
	ResourceType_ResourceType_PvpRatePlayCount        ResourceType = 20
	ResourceType_ResourceType_PhotoBackground         ResourceType = 21
	ResourceType_ResourceType_PhotoPose               ResourceType = 22
	ResourceType_ResourceType_DearnessPoint           ResourceType = 23
	ResourceType_ResourceType_JewelTotal              ResourceType = 1100
	ResourceType_ResourceType_JewelPaidOnly           ResourceType = 1101
	ResourceType_ResourceType_Set                     ResourceType = 9999
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0:    "ResourceType_Unknown",
		1:    "ResourceType_ProduceCard",
		2:    "ResourceType_Item",
		3:    "ResourceType_Memory",
		4:    "ResourceType_SupportCard",
		5:    "ResourceType_IdolCardSkin",
		6:    "ResourceType_MissionPassPoint",
		7:    "ResourceType_MissionPassPremiumPass",
		8:    "ResourceType_ActionPoint",
		9:    "ResourceType_UserExp",
		10:   "ResourceType_FanCount",
		11:   "ResourceType_FriendFollowLimitCount",
		12:   "ResourceType_Music",
		13:   "ResourceType_CostumeHead",
		14:   "ResourceType_Costume",
		15:   "ResourceType_MeishiBaseAsset",
		16:   "ResourceType_MeishiIllustrationAsset",
		17:   "ResourceType_InvitationPoint",
		18:   "ResourceType_Story",
		19:   "ResourceType_StoryEventPoint",
		20:   "ResourceType_PvpRatePlayCount",
		21:   "ResourceType_PhotoBackground",
		22:   "ResourceType_PhotoPose",
		23:   "ResourceType_DearnessPoint",
		1100: "ResourceType_JewelTotal",
		1101: "ResourceType_JewelPaidOnly",
		9999: "ResourceType_Set",
	}
	ResourceType_value = map[string]int32{
		"ResourceType_Unknown":                 0,
		"ResourceType_ProduceCard":             1,
		"ResourceType_Item":                    2,
		"ResourceType_Memory":                  3,
		"ResourceType_SupportCard":             4,
		"ResourceType_IdolCardSkin":            5,
		"ResourceType_MissionPassPoint":        6,
		"ResourceType_MissionPassPremiumPass":  7,
		"ResourceType_ActionPoint":             8,
		"ResourceType_UserExp":                 9,
		"ResourceType_FanCount":                10,
		"ResourceType_FriendFollowLimitCount":  11,
		"ResourceType_Music":                   12,
		"ResourceType_CostumeHead":             13,
		"ResourceType_Costume":                 14,
		"ResourceType_MeishiBaseAsset":         15,
		"ResourceType_MeishiIllustrationAsset": 16,
		"ResourceType_InvitationPoint":         17,
		"ResourceType_Story":                   18,
		"ResourceType_StoryEventPoint":         19,
		"ResourceType_PvpRatePlayCount":        20,
		"ResourceType_PhotoBackground":         21,
		"ResourceType_PhotoPose":               22,
		"ResourceType_DearnessPoint":           23,
		"ResourceType_JewelTotal":              1100,
		"ResourceType_JewelPaidOnly":           1101,
		"ResourceType_Set":                     9999,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[163].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[163]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{163}
}

type ResultGrade int32

const (
	ResultGrade_ResultGrade_Unknown ResultGrade = 0
	ResultGrade_ResultGrade_F       ResultGrade = 1
	ResultGrade_ResultGrade_E       ResultGrade = 2
	ResultGrade_ResultGrade_D       ResultGrade = 3
	ResultGrade_ResultGrade_C       ResultGrade = 4
	ResultGrade_ResultGrade_CPlus   ResultGrade = 5
	ResultGrade_ResultGrade_B       ResultGrade = 6
	ResultGrade_ResultGrade_BPlus   ResultGrade = 7
	ResultGrade_ResultGrade_A       ResultGrade = 8
	ResultGrade_ResultGrade_APlus   ResultGrade = 9
	ResultGrade_ResultGrade_S       ResultGrade = 10
	ResultGrade_ResultGrade_SPlus   ResultGrade = 11
	ResultGrade_ResultGrade_Ss      ResultGrade = 12
	ResultGrade_ResultGrade_SsPlus  ResultGrade = 13
	ResultGrade_ResultGrade_Sss     ResultGrade = 14
	ResultGrade_ResultGrade_SssPlus ResultGrade = 15
)

// Enum value maps for ResultGrade.
var (
	ResultGrade_name = map[int32]string{
		0:  "ResultGrade_Unknown",
		1:  "ResultGrade_F",
		2:  "ResultGrade_E",
		3:  "ResultGrade_D",
		4:  "ResultGrade_C",
		5:  "ResultGrade_CPlus",
		6:  "ResultGrade_B",
		7:  "ResultGrade_BPlus",
		8:  "ResultGrade_A",
		9:  "ResultGrade_APlus",
		10: "ResultGrade_S",
		11: "ResultGrade_SPlus",
		12: "ResultGrade_Ss",
		13: "ResultGrade_SsPlus",
		14: "ResultGrade_Sss",
		15: "ResultGrade_SssPlus",
	}
	ResultGrade_value = map[string]int32{
		"ResultGrade_Unknown": 0,
		"ResultGrade_F":       1,
		"ResultGrade_E":       2,
		"ResultGrade_D":       3,
		"ResultGrade_C":       4,
		"ResultGrade_CPlus":   5,
		"ResultGrade_B":       6,
		"ResultGrade_BPlus":   7,
		"ResultGrade_A":       8,
		"ResultGrade_APlus":   9,
		"ResultGrade_S":       10,
		"ResultGrade_SPlus":   11,
		"ResultGrade_Ss":      12,
		"ResultGrade_SsPlus":  13,
		"ResultGrade_Sss":     14,
		"ResultGrade_SssPlus": 15,
	}
)

func (x ResultGrade) Enum() *ResultGrade {
	p := new(ResultGrade)
	*p = x
	return p
}

func (x ResultGrade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultGrade) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[164].Descriptor()
}

func (ResultGrade) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[164]
}

func (x ResultGrade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultGrade.Descriptor instead.
func (ResultGrade) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{164}
}

type ResultGradeType int32

const (
	ResultGradeType_ResultGradeType_Unknown                  ResultGradeType = 0
	ResultGradeType_ResultGradeType_ProduceScore             ResultGradeType = 1
	ResultGradeType_ResultGradeType_MemoryParameter          ResultGradeType = 3
	ResultGradeType_ResultGradeType_ProduceIdolCardParameter ResultGradeType = 5
	ResultGradeType_ResultGradeType_ProduceVoteCount         ResultGradeType = 6
)

// Enum value maps for ResultGradeType.
var (
	ResultGradeType_name = map[int32]string{
		0: "ResultGradeType_Unknown",
		1: "ResultGradeType_ProduceScore",
		3: "ResultGradeType_MemoryParameter",
		5: "ResultGradeType_ProduceIdolCardParameter",
		6: "ResultGradeType_ProduceVoteCount",
	}
	ResultGradeType_value = map[string]int32{
		"ResultGradeType_Unknown":                  0,
		"ResultGradeType_ProduceScore":             1,
		"ResultGradeType_MemoryParameter":          3,
		"ResultGradeType_ProduceIdolCardParameter": 5,
		"ResultGradeType_ProduceVoteCount":         6,
	}
)

func (x ResultGradeType) Enum() *ResultGradeType {
	p := new(ResultGradeType)
	*p = x
	return p
}

func (x ResultGradeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultGradeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[165].Descriptor()
}

func (ResultGradeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[165]
}

func (x ResultGradeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultGradeType.Descriptor instead.
func (ResultGradeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{165}
}

type RewardProvideType int32

const (
	RewardProvideType_RewardProvideType_Unknown  RewardProvideType = 0
	RewardProvideType_RewardProvideType_PatternA RewardProvideType = 1
	RewardProvideType_RewardProvideType_PatternB RewardProvideType = 2
	RewardProvideType_RewardProvideType_PatternC RewardProvideType = 3
	RewardProvideType_RewardProvideType_PatternD RewardProvideType = 4
	RewardProvideType_RewardProvideType_PatternE RewardProvideType = 5
)

// Enum value maps for RewardProvideType.
var (
	RewardProvideType_name = map[int32]string{
		0: "RewardProvideType_Unknown",
		1: "RewardProvideType_PatternA",
		2: "RewardProvideType_PatternB",
		3: "RewardProvideType_PatternC",
		4: "RewardProvideType_PatternD",
		5: "RewardProvideType_PatternE",
	}
	RewardProvideType_value = map[string]int32{
		"RewardProvideType_Unknown":  0,
		"RewardProvideType_PatternA": 1,
		"RewardProvideType_PatternB": 2,
		"RewardProvideType_PatternC": 3,
		"RewardProvideType_PatternD": 4,
		"RewardProvideType_PatternE": 5,
	}
)

func (x RewardProvideType) Enum() *RewardProvideType {
	p := new(RewardProvideType)
	*p = x
	return p
}

func (x RewardProvideType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardProvideType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[166].Descriptor()
}

func (RewardProvideType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[166]
}

func (x RewardProvideType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardProvideType.Descriptor instead.
func (RewardProvideType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{166}
}

type RewardSetType int32

const (
	RewardSetType_RewardSetType_Unknown     RewardSetType = 0
	RewardSetType_RewardSetType_Probability RewardSetType = 1
	RewardSetType_RewardSetType_Ratio       RewardSetType = 2
)

// Enum value maps for RewardSetType.
var (
	RewardSetType_name = map[int32]string{
		0: "RewardSetType_Unknown",
		1: "RewardSetType_Probability",
		2: "RewardSetType_Ratio",
	}
	RewardSetType_value = map[string]int32{
		"RewardSetType_Unknown":     0,
		"RewardSetType_Probability": 1,
		"RewardSetType_Ratio":       2,
	}
)

func (x RewardSetType) Enum() *RewardSetType {
	p := new(RewardSetType)
	*p = x
	return p
}

func (x RewardSetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardSetType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[167].Descriptor()
}

func (RewardSetType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[167]
}

func (x RewardSetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardSetType.Descriptor instead.
func (RewardSetType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{167}
}

type RuleType int32

const (
	RuleType_RuleType_Unknown               RuleType = 0
	RuleType_RuleType_FundSettlement        RuleType = 1
	RuleType_RuleType_CommercialTransaction RuleType = 2
	RuleType_RuleType_Copyright             RuleType = 3
	RuleType_RuleType_PrereleaseMaintenance RuleType = 4
)

// Enum value maps for RuleType.
var (
	RuleType_name = map[int32]string{
		0: "RuleType_Unknown",
		1: "RuleType_FundSettlement",
		2: "RuleType_CommercialTransaction",
		3: "RuleType_Copyright",
		4: "RuleType_PrereleaseMaintenance",
	}
	RuleType_value = map[string]int32{
		"RuleType_Unknown":               0,
		"RuleType_FundSettlement":        1,
		"RuleType_CommercialTransaction": 2,
		"RuleType_Copyright":             3,
		"RuleType_PrereleaseMaintenance": 4,
	}
)

func (x RuleType) Enum() *RuleType {
	p := new(RuleType)
	*p = x
	return p
}

func (x RuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[168].Descriptor()
}

func (RuleType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[168]
}

func (x RuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuleType.Descriptor instead.
func (RuleType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{168}
}

type ServingStatus int32

const (
	ServingStatus_ServingStatus_Unknown        ServingStatus = 0
	ServingStatus_ServingStatus_UnknownServing ServingStatus = 1
	ServingStatus_ServingStatus_Serving        ServingStatus = 2
	ServingStatus_ServingStatus_NotServing     ServingStatus = 3
	ServingStatus_ServingStatus_ServiceUnknown ServingStatus = 4
)

// Enum value maps for ServingStatus.
var (
	ServingStatus_name = map[int32]string{
		0: "ServingStatus_Unknown",
		1: "ServingStatus_UnknownServing",
		2: "ServingStatus_Serving",
		3: "ServingStatus_NotServing",
		4: "ServingStatus_ServiceUnknown",
	}
	ServingStatus_value = map[string]int32{
		"ServingStatus_Unknown":        0,
		"ServingStatus_UnknownServing": 1,
		"ServingStatus_Serving":        2,
		"ServingStatus_NotServing":     3,
		"ServingStatus_ServiceUnknown": 4,
	}
)

func (x ServingStatus) Enum() *ServingStatus {
	p := new(ServingStatus)
	*p = x
	return p
}

func (x ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[169].Descriptor()
}

func (ServingStatus) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[169]
}

func (x ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServingStatus.Descriptor instead.
func (ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{169}
}

type ShopItemLabelType int32

const (
	ShopItemLabelType_ShopItemLabelType_Unknown   ShopItemLabelType = 0
	ShopItemLabelType_ShopItemLabelType_Sale      ShopItemLabelType = 1
	ShopItemLabelType_ShopItemLabelType_Recommend ShopItemLabelType = 2
)

// Enum value maps for ShopItemLabelType.
var (
	ShopItemLabelType_name = map[int32]string{
		0: "ShopItemLabelType_Unknown",
		1: "ShopItemLabelType_Sale",
		2: "ShopItemLabelType_Recommend",
	}
	ShopItemLabelType_value = map[string]int32{
		"ShopItemLabelType_Unknown":   0,
		"ShopItemLabelType_Sale":      1,
		"ShopItemLabelType_Recommend": 2,
	}
)

func (x ShopItemLabelType) Enum() *ShopItemLabelType {
	p := new(ShopItemLabelType)
	*p = x
	return p
}

func (x ShopItemLabelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShopItemLabelType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[170].Descriptor()
}

func (ShopItemLabelType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[170]
}

func (x ShopItemLabelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShopItemLabelType.Descriptor instead.
func (ShopItemLabelType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{170}
}

type ShopType int32

const (
	ShopType_ShopType_Unknown ShopType = 0
	ShopType_ShopType_Jewel   ShopType = 1
	ShopType_ShopType_Pass    ShopType = 2
	ShopType_ShopType_Pack    ShopType = 3
	ShopType_ShopType_Costume ShopType = 4
)

// Enum value maps for ShopType.
var (
	ShopType_name = map[int32]string{
		0: "ShopType_Unknown",
		1: "ShopType_Jewel",
		2: "ShopType_Pass",
		3: "ShopType_Pack",
		4: "ShopType_Costume",
	}
	ShopType_value = map[string]int32{
		"ShopType_Unknown": 0,
		"ShopType_Jewel":   1,
		"ShopType_Pass":    2,
		"ShopType_Pack":    3,
		"ShopType_Costume": 4,
	}
)

func (x ShopType) Enum() *ShopType {
	p := new(ShopType)
	*p = x
	return p
}

func (x ShopType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShopType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[171].Descriptor()
}

func (ShopType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[171]
}

func (x ShopType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShopType.Descriptor instead.
func (ShopType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{171}
}

type SkillRarity int32

const (
	SkillRarity_SkillRarity_Unknown SkillRarity = 0
	SkillRarity_SkillRarity_R       SkillRarity = 1
	SkillRarity_SkillRarity_Sr      SkillRarity = 2
	SkillRarity_SkillRarity_Ssr     SkillRarity = 3
	SkillRarity_SkillRarity_Ur      SkillRarity = 4
)

// Enum value maps for SkillRarity.
var (
	SkillRarity_name = map[int32]string{
		0: "SkillRarity_Unknown",
		1: "SkillRarity_R",
		2: "SkillRarity_Sr",
		3: "SkillRarity_Ssr",
		4: "SkillRarity_Ur",
	}
	SkillRarity_value = map[string]int32{
		"SkillRarity_Unknown": 0,
		"SkillRarity_R":       1,
		"SkillRarity_Sr":      2,
		"SkillRarity_Ssr":     3,
		"SkillRarity_Ur":      4,
	}
)

func (x SkillRarity) Enum() *SkillRarity {
	p := new(SkillRarity)
	*p = x
	return p
}

func (x SkillRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkillRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[172].Descriptor()
}

func (SkillRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[172]
}

func (x SkillRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkillRarity.Descriptor instead.
func (SkillRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{172}
}

type StartupNotificationDisplayType int32

const (
	StartupNotificationDisplayType_StartupNotificationDisplayType_Unknown             StartupNotificationDisplayType = 0
	StartupNotificationDisplayType_StartupNotificationDisplayType_Home                StartupNotificationDisplayType = 1
	StartupNotificationDisplayType_StartupNotificationDisplayType_Shop                StartupNotificationDisplayType = 2
	StartupNotificationDisplayType_StartupNotificationDisplayType_StoryEvent          StartupNotificationDisplayType = 3
	StartupNotificationDisplayType_StartupNotificationDisplayType_ProduceHighScore    StartupNotificationDisplayType = 4
	StartupNotificationDisplayType_StartupNotificationDisplayType_Tower               StartupNotificationDisplayType = 5
	StartupNotificationDisplayType_StartupNotificationDisplayType_MissionPanel        StartupNotificationDisplayType = 6
	StartupNotificationDisplayType_StartupNotificationDisplayType_MissionDailyRelease StartupNotificationDisplayType = 7
	StartupNotificationDisplayType_StartupNotificationDisplayType_StoryCampaign       StartupNotificationDisplayType = 8
	StartupNotificationDisplayType_StartupNotificationDisplayType_ProduceResult       StartupNotificationDisplayType = 9
	StartupNotificationDisplayType_StartupNotificationDisplayType_GvgRaid             StartupNotificationDisplayType = 10
)

// Enum value maps for StartupNotificationDisplayType.
var (
	StartupNotificationDisplayType_name = map[int32]string{
		0:  "StartupNotificationDisplayType_Unknown",
		1:  "StartupNotificationDisplayType_Home",
		2:  "StartupNotificationDisplayType_Shop",
		3:  "StartupNotificationDisplayType_StoryEvent",
		4:  "StartupNotificationDisplayType_ProduceHighScore",
		5:  "StartupNotificationDisplayType_Tower",
		6:  "StartupNotificationDisplayType_MissionPanel",
		7:  "StartupNotificationDisplayType_MissionDailyRelease",
		8:  "StartupNotificationDisplayType_StoryCampaign",
		9:  "StartupNotificationDisplayType_ProduceResult",
		10: "StartupNotificationDisplayType_GvgRaid",
	}
	StartupNotificationDisplayType_value = map[string]int32{
		"StartupNotificationDisplayType_Unknown":             0,
		"StartupNotificationDisplayType_Home":                1,
		"StartupNotificationDisplayType_Shop":                2,
		"StartupNotificationDisplayType_StoryEvent":          3,
		"StartupNotificationDisplayType_ProduceHighScore":    4,
		"StartupNotificationDisplayType_Tower":               5,
		"StartupNotificationDisplayType_MissionPanel":        6,
		"StartupNotificationDisplayType_MissionDailyRelease": 7,
		"StartupNotificationDisplayType_StoryCampaign":       8,
		"StartupNotificationDisplayType_ProduceResult":       9,
		"StartupNotificationDisplayType_GvgRaid":             10,
	}
)

func (x StartupNotificationDisplayType) Enum() *StartupNotificationDisplayType {
	p := new(StartupNotificationDisplayType)
	*p = x
	return p
}

func (x StartupNotificationDisplayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartupNotificationDisplayType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[173].Descriptor()
}

func (StartupNotificationDisplayType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[173]
}

func (x StartupNotificationDisplayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartupNotificationDisplayType.Descriptor instead.
func (StartupNotificationDisplayType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{173}
}

type StartupNotificationEffectType int32

const (
	StartupNotificationEffectType_StartupNotificationEffectType_Unknown    StartupNotificationEffectType = 0
	StartupNotificationEffectType_StartupNotificationEffectType_Confetti1  StartupNotificationEffectType = 1
	StartupNotificationEffectType_StartupNotificationEffectType_Confetti2  StartupNotificationEffectType = 2
	StartupNotificationEffectType_StartupNotificationEffectType_Twinkling1 StartupNotificationEffectType = 3
)

// Enum value maps for StartupNotificationEffectType.
var (
	StartupNotificationEffectType_name = map[int32]string{
		0: "StartupNotificationEffectType_Unknown",
		1: "StartupNotificationEffectType_Confetti1",
		2: "StartupNotificationEffectType_Confetti2",
		3: "StartupNotificationEffectType_Twinkling1",
	}
	StartupNotificationEffectType_value = map[string]int32{
		"StartupNotificationEffectType_Unknown":    0,
		"StartupNotificationEffectType_Confetti1":  1,
		"StartupNotificationEffectType_Confetti2":  2,
		"StartupNotificationEffectType_Twinkling1": 3,
	}
)

func (x StartupNotificationEffectType) Enum() *StartupNotificationEffectType {
	p := new(StartupNotificationEffectType)
	*p = x
	return p
}

func (x StartupNotificationEffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartupNotificationEffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[174].Descriptor()
}

func (StartupNotificationEffectType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[174]
}

func (x StartupNotificationEffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartupNotificationEffectType.Descriptor instead.
func (StartupNotificationEffectType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{174}
}

type StartupNotificationType int32

const (
	StartupNotificationType_StartupNotificationType_Unknown       StartupNotificationType = 0
	StartupNotificationType_StartupNotificationType_Movie         StartupNotificationType = 1
	StartupNotificationType_StartupNotificationType_Adv           StartupNotificationType = 2
	StartupNotificationType_StartupNotificationType_Image         StartupNotificationType = 3
	StartupNotificationType_StartupNotificationType_Notice        StartupNotificationType = 4
	StartupNotificationType_StartupNotificationType_Shop          StartupNotificationType = 5
	StartupNotificationType_StartupNotificationType_ProfileReport StartupNotificationType = 6
)

// Enum value maps for StartupNotificationType.
var (
	StartupNotificationType_name = map[int32]string{
		0: "StartupNotificationType_Unknown",
		1: "StartupNotificationType_Movie",
		2: "StartupNotificationType_Adv",
		3: "StartupNotificationType_Image",
		4: "StartupNotificationType_Notice",
		5: "StartupNotificationType_Shop",
		6: "StartupNotificationType_ProfileReport",
	}
	StartupNotificationType_value = map[string]int32{
		"StartupNotificationType_Unknown":       0,
		"StartupNotificationType_Movie":         1,
		"StartupNotificationType_Adv":           2,
		"StartupNotificationType_Image":         3,
		"StartupNotificationType_Notice":        4,
		"StartupNotificationType_Shop":          5,
		"StartupNotificationType_ProfileReport": 6,
	}
)

func (x StartupNotificationType) Enum() *StartupNotificationType {
	p := new(StartupNotificationType)
	*p = x
	return p
}

func (x StartupNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartupNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[175].Descriptor()
}

func (StartupNotificationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[175]
}

func (x StartupNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartupNotificationType.Descriptor instead.
func (StartupNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{175}
}

type StoryCampaignType int32

const (
	StoryCampaignType_StoryCampaignType_Unknown       StoryCampaignType = 0
	StoryCampaignType_StoryCampaignType_Event         StoryCampaignType = 1
	StoryCampaignType_StoryCampaignType_DearnessStory StoryCampaignType = 2
)

// Enum value maps for StoryCampaignType.
var (
	StoryCampaignType_name = map[int32]string{
		0: "StoryCampaignType_Unknown",
		1: "StoryCampaignType_Event",
		2: "StoryCampaignType_DearnessStory",
	}
	StoryCampaignType_value = map[string]int32{
		"StoryCampaignType_Unknown":       0,
		"StoryCampaignType_Event":         1,
		"StoryCampaignType_DearnessStory": 2,
	}
)

func (x StoryCampaignType) Enum() *StoryCampaignType {
	p := new(StoryCampaignType)
	*p = x
	return p
}

func (x StoryCampaignType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoryCampaignType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[176].Descriptor()
}

func (StoryCampaignType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[176]
}

func (x StoryCampaignType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoryCampaignType.Descriptor instead.
func (StoryCampaignType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{176}
}

type StoryEventMotionType int32

const (
	StoryEventMotionType_StoryEventMotionType_Unknown      StoryEventMotionType = 0
	StoryEventMotionType_StoryEventMotionType_Wait         StoryEventMotionType = 1
	StoryEventMotionType_StoryEventMotionType_Reaction     StoryEventMotionType = 2
	StoryEventMotionType_StoryEventMotionType_ReactionOnce StoryEventMotionType = 3
)

// Enum value maps for StoryEventMotionType.
var (
	StoryEventMotionType_name = map[int32]string{
		0: "StoryEventMotionType_Unknown",
		1: "StoryEventMotionType_Wait",
		2: "StoryEventMotionType_Reaction",
		3: "StoryEventMotionType_ReactionOnce",
	}
	StoryEventMotionType_value = map[string]int32{
		"StoryEventMotionType_Unknown":      0,
		"StoryEventMotionType_Wait":         1,
		"StoryEventMotionType_Reaction":     2,
		"StoryEventMotionType_ReactionOnce": 3,
	}
)

func (x StoryEventMotionType) Enum() *StoryEventMotionType {
	p := new(StoryEventMotionType)
	*p = x
	return p
}

func (x StoryEventMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoryEventMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[177].Descriptor()
}

func (StoryEventMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[177]
}

func (x StoryEventMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoryEventMotionType.Descriptor instead.
func (StoryEventMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{177}
}

type StoryEventType int32

const (
	StoryEventType_StoryEventType_Unknown      StoryEventType = 0
	StoryEventType_StoryEventType_Normal       StoryEventType = 1
	StoryEventType_StoryEventType_BoxGasha     StoryEventType = 2
	StoryEventType_StoryEventType_MainStory    StoryEventType = 3
	StoryEventType_StoryEventType_GuildMission StoryEventType = 4
)

// Enum value maps for StoryEventType.
var (
	StoryEventType_name = map[int32]string{
		0: "StoryEventType_Unknown",
		1: "StoryEventType_Normal",
		2: "StoryEventType_BoxGasha",
		3: "StoryEventType_MainStory",
		4: "StoryEventType_GuildMission",
	}
	StoryEventType_value = map[string]int32{
		"StoryEventType_Unknown":      0,
		"StoryEventType_Normal":       1,
		"StoryEventType_BoxGasha":     2,
		"StoryEventType_MainStory":    3,
		"StoryEventType_GuildMission": 4,
	}
)

func (x StoryEventType) Enum() *StoryEventType {
	p := new(StoryEventType)
	*p = x
	return p
}

func (x StoryEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoryEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[178].Descriptor()
}

func (StoryEventType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[178]
}

func (x StoryEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoryEventType.Descriptor instead.
func (StoryEventType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{178}
}

type StoryType int32

const (
	StoryType_StoryType_Unknown               StoryType = 0
	StoryType_StoryType_Main                  StoryType = 1
	StoryType_StoryType_CampaignDearnessStory StoryType = 2
	StoryType_StoryType_Birthday              StoryType = 3
	StoryType_StoryType_ExtraDearnessStory    StoryType = 4
	StoryType_StoryType_DearnessStory         StoryType = 5
	StoryType_StoryType_AprilFool             StoryType = 6
	StoryType_StoryType_Tour                  StoryType = 7
	StoryType_StoryType_StoryEvent            StoryType = 9
	StoryType_StoryType_GvgRaid               StoryType = 10
	StoryType_StoryType_ProduceHighScore      StoryType = 11
	StoryType_StoryType_Other                 StoryType = 99
)

// Enum value maps for StoryType.
var (
	StoryType_name = map[int32]string{
		0:  "StoryType_Unknown",
		1:  "StoryType_Main",
		2:  "StoryType_CampaignDearnessStory",
		3:  "StoryType_Birthday",
		4:  "StoryType_ExtraDearnessStory",
		5:  "StoryType_DearnessStory",
		6:  "StoryType_AprilFool",
		7:  "StoryType_Tour",
		9:  "StoryType_StoryEvent",
		10: "StoryType_GvgRaid",
		11: "StoryType_ProduceHighScore",
		99: "StoryType_Other",
	}
	StoryType_value = map[string]int32{
		"StoryType_Unknown":               0,
		"StoryType_Main":                  1,
		"StoryType_CampaignDearnessStory": 2,
		"StoryType_Birthday":              3,
		"StoryType_ExtraDearnessStory":    4,
		"StoryType_DearnessStory":         5,
		"StoryType_AprilFool":             6,
		"StoryType_Tour":                  7,
		"StoryType_StoryEvent":            9,
		"StoryType_GvgRaid":               10,
		"StoryType_ProduceHighScore":      11,
		"StoryType_Other":                 99,
	}
)

func (x StoryType) Enum() *StoryType {
	p := new(StoryType)
	*p = x
	return p
}

func (x StoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[179].Descriptor()
}

func (StoryType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[179]
}

func (x StoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoryType.Descriptor instead.
func (StoryType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{179}
}

type SupportCardLevelLimitRank int32

const (
	SupportCardLevelLimitRank_SupportCardLevelLimitRank_Unknown SupportCardLevelLimitRank = 0
	SupportCardLevelLimitRank_SupportCardLevelLimitRank__1      SupportCardLevelLimitRank = 1
	SupportCardLevelLimitRank_SupportCardLevelLimitRank__2      SupportCardLevelLimitRank = 2
	SupportCardLevelLimitRank_SupportCardLevelLimitRank__3      SupportCardLevelLimitRank = 3
	SupportCardLevelLimitRank_SupportCardLevelLimitRank__4      SupportCardLevelLimitRank = 4
)

// Enum value maps for SupportCardLevelLimitRank.
var (
	SupportCardLevelLimitRank_name = map[int32]string{
		0: "SupportCardLevelLimitRank_Unknown",
		1: "SupportCardLevelLimitRank__1",
		2: "SupportCardLevelLimitRank__2",
		3: "SupportCardLevelLimitRank__3",
		4: "SupportCardLevelLimitRank__4",
	}
	SupportCardLevelLimitRank_value = map[string]int32{
		"SupportCardLevelLimitRank_Unknown": 0,
		"SupportCardLevelLimitRank__1":      1,
		"SupportCardLevelLimitRank__2":      2,
		"SupportCardLevelLimitRank__3":      3,
		"SupportCardLevelLimitRank__4":      4,
	}
)

func (x SupportCardLevelLimitRank) Enum() *SupportCardLevelLimitRank {
	p := new(SupportCardLevelLimitRank)
	*p = x
	return p
}

func (x SupportCardLevelLimitRank) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupportCardLevelLimitRank) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[180].Descriptor()
}

func (SupportCardLevelLimitRank) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[180]
}

func (x SupportCardLevelLimitRank) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupportCardLevelLimitRank.Descriptor instead.
func (SupportCardLevelLimitRank) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{180}
}

type SupportCardRarity int32

const (
	SupportCardRarity_SupportCardRarity_Unknown SupportCardRarity = 0
	SupportCardRarity_SupportCardRarity_R       SupportCardRarity = 1
	SupportCardRarity_SupportCardRarity_Sr      SupportCardRarity = 2
	SupportCardRarity_SupportCardRarity_Ssr     SupportCardRarity = 3
)

// Enum value maps for SupportCardRarity.
var (
	SupportCardRarity_name = map[int32]string{
		0: "SupportCardRarity_Unknown",
		1: "SupportCardRarity_R",
		2: "SupportCardRarity_Sr",
		3: "SupportCardRarity_Ssr",
	}
	SupportCardRarity_value = map[string]int32{
		"SupportCardRarity_Unknown": 0,
		"SupportCardRarity_R":       1,
		"SupportCardRarity_Sr":      2,
		"SupportCardRarity_Ssr":     3,
	}
)

func (x SupportCardRarity) Enum() *SupportCardRarity {
	p := new(SupportCardRarity)
	*p = x
	return p
}

func (x SupportCardRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupportCardRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[181].Descriptor()
}

func (SupportCardRarity) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[181]
}

func (x SupportCardRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupportCardRarity.Descriptor instead.
func (SupportCardRarity) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{181}
}

type SupportCardType int32

const (
	SupportCardType_SupportCardType_Unknown SupportCardType = 0
	SupportCardType_SupportCardType_Vocal   SupportCardType = 1
	SupportCardType_SupportCardType_Dance   SupportCardType = 2
	SupportCardType_SupportCardType_Visual  SupportCardType = 3
	SupportCardType_SupportCardType_Assist  SupportCardType = 4
)

// Enum value maps for SupportCardType.
var (
	SupportCardType_name = map[int32]string{
		0: "SupportCardType_Unknown",
		1: "SupportCardType_Vocal",
		2: "SupportCardType_Dance",
		3: "SupportCardType_Visual",
		4: "SupportCardType_Assist",
	}
	SupportCardType_value = map[string]int32{
		"SupportCardType_Unknown": 0,
		"SupportCardType_Vocal":   1,
		"SupportCardType_Dance":   2,
		"SupportCardType_Visual":  3,
		"SupportCardType_Assist":  4,
	}
)

func (x SupportCardType) Enum() *SupportCardType {
	p := new(SupportCardType)
	*p = x
	return p
}

func (x SupportCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SupportCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[182].Descriptor()
}

func (SupportCardType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[182]
}

func (x SupportCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SupportCardType.Descriptor instead.
func (SupportCardType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{182}
}

type TermsType int32

const (
	TermsType_TermsType_Unknown        TermsType = 0
	TermsType_TermsType_TermsOfService TermsType = 1
	TermsType_TermsType_PrivacyPolicy  TermsType = 2
	TermsType_TermsType_GlobalConsent  TermsType = 3
)

// Enum value maps for TermsType.
var (
	TermsType_name = map[int32]string{
		0: "TermsType_Unknown",
		1: "TermsType_TermsOfService",
		2: "TermsType_PrivacyPolicy",
		3: "TermsType_GlobalConsent",
	}
	TermsType_value = map[string]int32{
		"TermsType_Unknown":        0,
		"TermsType_TermsOfService": 1,
		"TermsType_PrivacyPolicy":  2,
		"TermsType_GlobalConsent":  3,
	}
)

func (x TermsType) Enum() *TermsType {
	p := new(TermsType)
	*p = x
	return p
}

func (x TermsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TermsType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[183].Descriptor()
}

func (TermsType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[183]
}

func (x TermsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TermsType.Descriptor instead.
func (TermsType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{183}
}

type TimeType int32

const (
	TimeType_TimeType_Unknown                      TimeType = 0
	TimeType_TimeType_LastLoginTime                TimeType = 1
	TimeType_TimeType_WorkLastInitializedTime      TimeType = 2
	TimeType_TimeType_NoticeInfoViewedTime         TimeType = 3
	TimeType_TimeType_NoticeBugViewedTime          TimeType = 4
	TimeType_TimeType_NoticePrviewedTime           TimeType = 5
	TimeType_TimeType_LastFriendCoinReceiveTime    TimeType = 6
	TimeType_TimeType_GuildJoinableTime            TimeType = 10
	TimeType_TimeType_GuildEstablishableTime       TimeType = 11
	TimeType_TimeType_GuildDonationRequestableTime TimeType = 12
)

// Enum value maps for TimeType.
var (
	TimeType_name = map[int32]string{
		0:  "TimeType_Unknown",
		1:  "TimeType_LastLoginTime",
		2:  "TimeType_WorkLastInitializedTime",
		3:  "TimeType_NoticeInfoViewedTime",
		4:  "TimeType_NoticeBugViewedTime",
		5:  "TimeType_NoticePrviewedTime",
		6:  "TimeType_LastFriendCoinReceiveTime",
		10: "TimeType_GuildJoinableTime",
		11: "TimeType_GuildEstablishableTime",
		12: "TimeType_GuildDonationRequestableTime",
	}
	TimeType_value = map[string]int32{
		"TimeType_Unknown":                      0,
		"TimeType_LastLoginTime":                1,
		"TimeType_WorkLastInitializedTime":      2,
		"TimeType_NoticeInfoViewedTime":         3,
		"TimeType_NoticeBugViewedTime":          4,
		"TimeType_NoticePrviewedTime":           5,
		"TimeType_LastFriendCoinReceiveTime":    6,
		"TimeType_GuildJoinableTime":            10,
		"TimeType_GuildEstablishableTime":       11,
		"TimeType_GuildDonationRequestableTime": 12,
	}
)

func (x TimeType) Enum() *TimeType {
	p := new(TimeType)
	*p = x
	return p
}

func (x TimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[184].Descriptor()
}

func (TimeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[184]
}

func (x TimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeType.Descriptor instead.
func (TimeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{184}
}

type TipsType int32

const (
	TipsType_TipsType_Unknown         TipsType = 0
	TipsType_TipsType_CharacterDetail TipsType = 1
	TipsType_TipsType_CharacterGossip TipsType = 2
	TipsType_TipsType_World           TipsType = 3
	TipsType_TipsType_Help            TipsType = 4
	TipsType_TipsType_Comic           TipsType = 5
)

// Enum value maps for TipsType.
var (
	TipsType_name = map[int32]string{
		0: "TipsType_Unknown",
		1: "TipsType_CharacterDetail",
		2: "TipsType_CharacterGossip",
		3: "TipsType_World",
		4: "TipsType_Help",
		5: "TipsType_Comic",
	}
	TipsType_value = map[string]int32{
		"TipsType_Unknown":         0,
		"TipsType_CharacterDetail": 1,
		"TipsType_CharacterGossip": 2,
		"TipsType_World":           3,
		"TipsType_Help":            4,
		"TipsType_Comic":           5,
	}
)

func (x TipsType) Enum() *TipsType {
	p := new(TipsType)
	*p = x
	return p
}

func (x TipsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TipsType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[185].Descriptor()
}

func (TipsType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[185]
}

func (x TipsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TipsType.Descriptor instead.
func (TipsType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{185}
}

type TourProgressPhaseType int32

const (
	TourProgressPhaseType_TourProgressPhaseType_Unknown  TourProgressPhaseType = 0
	TourProgressPhaseType_TourProgressPhaseType_Progress TourProgressPhaseType = 1
	TourProgressPhaseType_TourProgressPhaseType_ExamEnd  TourProgressPhaseType = 2
)

// Enum value maps for TourProgressPhaseType.
var (
	TourProgressPhaseType_name = map[int32]string{
		0: "TourProgressPhaseType_Unknown",
		1: "TourProgressPhaseType_Progress",
		2: "TourProgressPhaseType_ExamEnd",
	}
	TourProgressPhaseType_value = map[string]int32{
		"TourProgressPhaseType_Unknown":  0,
		"TourProgressPhaseType_Progress": 1,
		"TourProgressPhaseType_ExamEnd":  2,
	}
)

func (x TourProgressPhaseType) Enum() *TourProgressPhaseType {
	p := new(TourProgressPhaseType)
	*p = x
	return p
}

func (x TourProgressPhaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourProgressPhaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[186].Descriptor()
}

func (TourProgressPhaseType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[186]
}

func (x TourProgressPhaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourProgressPhaseType.Descriptor instead.
func (TourProgressPhaseType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{186}
}

type TourScoreGrade int32

const (
	TourScoreGrade_TourScoreGrade_Unknown TourScoreGrade = 0
	TourScoreGrade_TourScoreGrade_F       TourScoreGrade = 1
	TourScoreGrade_TourScoreGrade_E       TourScoreGrade = 2
	TourScoreGrade_TourScoreGrade_D       TourScoreGrade = 3
	TourScoreGrade_TourScoreGrade_C       TourScoreGrade = 4
	TourScoreGrade_TourScoreGrade_CPlus   TourScoreGrade = 5
	TourScoreGrade_TourScoreGrade_B       TourScoreGrade = 6
	TourScoreGrade_TourScoreGrade_BPlus   TourScoreGrade = 7
	TourScoreGrade_TourScoreGrade_A       TourScoreGrade = 8
	TourScoreGrade_TourScoreGrade_APlus   TourScoreGrade = 9
	TourScoreGrade_TourScoreGrade_S       TourScoreGrade = 10
	TourScoreGrade_TourScoreGrade_SPlus   TourScoreGrade = 11
	TourScoreGrade_TourScoreGrade_Ss      TourScoreGrade = 12
	TourScoreGrade_TourScoreGrade_SsPlus  TourScoreGrade = 13
)

// Enum value maps for TourScoreGrade.
var (
	TourScoreGrade_name = map[int32]string{
		0:  "TourScoreGrade_Unknown",
		1:  "TourScoreGrade_F",
		2:  "TourScoreGrade_E",
		3:  "TourScoreGrade_D",
		4:  "TourScoreGrade_C",
		5:  "TourScoreGrade_CPlus",
		6:  "TourScoreGrade_B",
		7:  "TourScoreGrade_BPlus",
		8:  "TourScoreGrade_A",
		9:  "TourScoreGrade_APlus",
		10: "TourScoreGrade_S",
		11: "TourScoreGrade_SPlus",
		12: "TourScoreGrade_Ss",
		13: "TourScoreGrade_SsPlus",
	}
	TourScoreGrade_value = map[string]int32{
		"TourScoreGrade_Unknown": 0,
		"TourScoreGrade_F":       1,
		"TourScoreGrade_E":       2,
		"TourScoreGrade_D":       3,
		"TourScoreGrade_C":       4,
		"TourScoreGrade_CPlus":   5,
		"TourScoreGrade_B":       6,
		"TourScoreGrade_BPlus":   7,
		"TourScoreGrade_A":       8,
		"TourScoreGrade_APlus":   9,
		"TourScoreGrade_S":       10,
		"TourScoreGrade_SPlus":   11,
		"TourScoreGrade_Ss":      12,
		"TourScoreGrade_SsPlus":  13,
	}
)

func (x TourScoreGrade) Enum() *TourScoreGrade {
	p := new(TourScoreGrade)
	*p = x
	return p
}

func (x TourScoreGrade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourScoreGrade) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[187].Descriptor()
}

func (TourScoreGrade) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[187]
}

func (x TourScoreGrade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourScoreGrade.Descriptor instead.
func (TourScoreGrade) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{187}
}

type TourStageIconSizeType int32

const (
	TourStageIconSizeType_TourStageIconSizeType_Unknown TourStageIconSizeType = 0
	TourStageIconSizeType_TourStageIconSizeType_Small   TourStageIconSizeType = 1
	TourStageIconSizeType_TourStageIconSizeType_Medium  TourStageIconSizeType = 2
	TourStageIconSizeType_TourStageIconSizeType_Large   TourStageIconSizeType = 3
)

// Enum value maps for TourStageIconSizeType.
var (
	TourStageIconSizeType_name = map[int32]string{
		0: "TourStageIconSizeType_Unknown",
		1: "TourStageIconSizeType_Small",
		2: "TourStageIconSizeType_Medium",
		3: "TourStageIconSizeType_Large",
	}
	TourStageIconSizeType_value = map[string]int32{
		"TourStageIconSizeType_Unknown": 0,
		"TourStageIconSizeType_Small":   1,
		"TourStageIconSizeType_Medium":  2,
		"TourStageIconSizeType_Large":   3,
	}
)

func (x TourStageIconSizeType) Enum() *TourStageIconSizeType {
	p := new(TourStageIconSizeType)
	*p = x
	return p
}

func (x TourStageIconSizeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourStageIconSizeType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[188].Descriptor()
}

func (TourStageIconSizeType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[188]
}

func (x TourStageIconSizeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourStageIconSizeType.Descriptor instead.
func (TourStageIconSizeType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{188}
}

type TutorialCharacterVoiceType int32

const (
	TutorialCharacterVoiceType_TutorialCharacterVoiceType_Unknown TutorialCharacterVoiceType = 0
	TutorialCharacterVoiceType_TutorialCharacterVoiceType_Select  TutorialCharacterVoiceType = 1
	TutorialCharacterVoiceType_TutorialCharacterVoiceType_Random  TutorialCharacterVoiceType = 2
)

// Enum value maps for TutorialCharacterVoiceType.
var (
	TutorialCharacterVoiceType_name = map[int32]string{
		0: "TutorialCharacterVoiceType_Unknown",
		1: "TutorialCharacterVoiceType_Select",
		2: "TutorialCharacterVoiceType_Random",
	}
	TutorialCharacterVoiceType_value = map[string]int32{
		"TutorialCharacterVoiceType_Unknown": 0,
		"TutorialCharacterVoiceType_Select":  1,
		"TutorialCharacterVoiceType_Random":  2,
	}
)

func (x TutorialCharacterVoiceType) Enum() *TutorialCharacterVoiceType {
	p := new(TutorialCharacterVoiceType)
	*p = x
	return p
}

func (x TutorialCharacterVoiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TutorialCharacterVoiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[189].Descriptor()
}

func (TutorialCharacterVoiceType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[189]
}

func (x TutorialCharacterVoiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TutorialCharacterVoiceType.Descriptor instead.
func (TutorialCharacterVoiceType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{189}
}

type TutorialNavigationPositionType int32

const (
	TutorialNavigationPositionType_TutorialNavigationPositionType_Unknown TutorialNavigationPositionType = 0
	TutorialNavigationPositionType_TutorialNavigationPositionType_Top     TutorialNavigationPositionType = 1
	TutorialNavigationPositionType_TutorialNavigationPositionType_Upper   TutorialNavigationPositionType = 2
	TutorialNavigationPositionType_TutorialNavigationPositionType_Middle  TutorialNavigationPositionType = 3
	TutorialNavigationPositionType_TutorialNavigationPositionType_Lower   TutorialNavigationPositionType = 4
	TutorialNavigationPositionType_TutorialNavigationPositionType_Bottom  TutorialNavigationPositionType = 5
)

// Enum value maps for TutorialNavigationPositionType.
var (
	TutorialNavigationPositionType_name = map[int32]string{
		0: "TutorialNavigationPositionType_Unknown",
		1: "TutorialNavigationPositionType_Top",
		2: "TutorialNavigationPositionType_Upper",
		3: "TutorialNavigationPositionType_Middle",
		4: "TutorialNavigationPositionType_Lower",
		5: "TutorialNavigationPositionType_Bottom",
	}
	TutorialNavigationPositionType_value = map[string]int32{
		"TutorialNavigationPositionType_Unknown": 0,
		"TutorialNavigationPositionType_Top":     1,
		"TutorialNavigationPositionType_Upper":   2,
		"TutorialNavigationPositionType_Middle":  3,
		"TutorialNavigationPositionType_Lower":   4,
		"TutorialNavigationPositionType_Bottom":  5,
	}
)

func (x TutorialNavigationPositionType) Enum() *TutorialNavigationPositionType {
	p := new(TutorialNavigationPositionType)
	*p = x
	return p
}

func (x TutorialNavigationPositionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TutorialNavigationPositionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[190].Descriptor()
}

func (TutorialNavigationPositionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[190]
}

func (x TutorialNavigationPositionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TutorialNavigationPositionType.Descriptor instead.
func (TutorialNavigationPositionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{190}
}

type TutorialNavigationType int32

const (
	TutorialNavigationType_TutorialNavigationType_Unknown   TutorialNavigationType = 0
	TutorialNavigationType_TutorialNavigationType_Tips      TutorialNavigationType = 1
	TutorialNavigationType_TutorialNavigationType_Arrow     TutorialNavigationType = 2
	TutorialNavigationType_TutorialNavigationType_Focus     TutorialNavigationType = 3
	TutorialNavigationType_TutorialNavigationType_Character TutorialNavigationType = 4
	TutorialNavigationType_TutorialNavigationType_Adv       TutorialNavigationType = 5
)

// Enum value maps for TutorialNavigationType.
var (
	TutorialNavigationType_name = map[int32]string{
		0: "TutorialNavigationType_Unknown",
		1: "TutorialNavigationType_Tips",
		2: "TutorialNavigationType_Arrow",
		3: "TutorialNavigationType_Focus",
		4: "TutorialNavigationType_Character",
		5: "TutorialNavigationType_Adv",
	}
	TutorialNavigationType_value = map[string]int32{
		"TutorialNavigationType_Unknown":   0,
		"TutorialNavigationType_Tips":      1,
		"TutorialNavigationType_Arrow":     2,
		"TutorialNavigationType_Focus":     3,
		"TutorialNavigationType_Character": 4,
		"TutorialNavigationType_Adv":       5,
	}
)

func (x TutorialNavigationType) Enum() *TutorialNavigationType {
	p := new(TutorialNavigationType)
	*p = x
	return p
}

func (x TutorialNavigationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TutorialNavigationType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[191].Descriptor()
}

func (TutorialNavigationType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[191]
}

func (x TutorialNavigationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TutorialNavigationType.Descriptor instead.
func (TutorialNavigationType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{191}
}

type TutorialProduceCommandType int32

const (
	TutorialProduceCommandType_TutorialProduceCommandType_Unknown                          TutorialProduceCommandType = 0
	TutorialProduceCommandType_TutorialProduceCommandType_Start                            TutorialProduceCommandType = 1
	TutorialProduceCommandType_TutorialProduceCommandType_Next                             TutorialProduceCommandType = 2
	TutorialProduceCommandType_TutorialProduceCommandType_StepLessonEnd                    TutorialProduceCommandType = 3
	TutorialProduceCommandType_TutorialProduceCommandType_StepPresentReceive               TutorialProduceCommandType = 4
	TutorialProduceCommandType_TutorialProduceCommandType_StepAuditionExamEnd              TutorialProduceCommandType = 5
	TutorialProduceCommandType_TutorialProduceCommandType_StepAuditionEnd                  TutorialProduceCommandType = 6
	TutorialProduceCommandType_TutorialProduceCommandType_CheckBeforeLiveProduceEvaluation TutorialProduceCommandType = 7
	TutorialProduceCommandType_TutorialProduceCommandType_Result                           TutorialProduceCommandType = 8
)

// Enum value maps for TutorialProduceCommandType.
var (
	TutorialProduceCommandType_name = map[int32]string{
		0: "TutorialProduceCommandType_Unknown",
		1: "TutorialProduceCommandType_Start",
		2: "TutorialProduceCommandType_Next",
		3: "TutorialProduceCommandType_StepLessonEnd",
		4: "TutorialProduceCommandType_StepPresentReceive",
		5: "TutorialProduceCommandType_StepAuditionExamEnd",
		6: "TutorialProduceCommandType_StepAuditionEnd",
		7: "TutorialProduceCommandType_CheckBeforeLiveProduceEvaluation",
		8: "TutorialProduceCommandType_Result",
	}
	TutorialProduceCommandType_value = map[string]int32{
		"TutorialProduceCommandType_Unknown":                          0,
		"TutorialProduceCommandType_Start":                            1,
		"TutorialProduceCommandType_Next":                             2,
		"TutorialProduceCommandType_StepLessonEnd":                    3,
		"TutorialProduceCommandType_StepPresentReceive":               4,
		"TutorialProduceCommandType_StepAuditionExamEnd":              5,
		"TutorialProduceCommandType_StepAuditionEnd":                  6,
		"TutorialProduceCommandType_CheckBeforeLiveProduceEvaluation": 7,
		"TutorialProduceCommandType_Result":                           8,
	}
)

func (x TutorialProduceCommandType) Enum() *TutorialProduceCommandType {
	p := new(TutorialProduceCommandType)
	*p = x
	return p
}

func (x TutorialProduceCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TutorialProduceCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[192].Descriptor()
}

func (TutorialProduceCommandType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[192]
}

func (x TutorialProduceCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TutorialProduceCommandType.Descriptor instead.
func (TutorialProduceCommandType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{192}
}

type TutorialType int32

const (
	TutorialType_TutorialType_Unknown                                   TutorialType = 0
	TutorialType_TutorialType_GameStart                                 TutorialType = 1
	TutorialType_TutorialType_MainTask                                  TutorialType = 2
	TutorialType_TutorialType_Work                                      TutorialType = 3
	TutorialType_TutorialType_IdolCard                                  TutorialType = 4
	TutorialType_TutorialType_IdolCardSkin                              TutorialType = 5
	TutorialType_TutorialType_PvpRate                                   TutorialType = 6
	TutorialType_TutorialType_CoinGasha                                 TutorialType = 7
	TutorialType_TutorialType_MoneyReceive                              TutorialType = 8
	TutorialType_TutorialType_MissionPass                               TutorialType = 9
	TutorialType_TutorialType_Profile                                   TutorialType = 10
	TutorialType_TutorialType_Meishi                                    TutorialType = 11
	TutorialType_TutorialType_Friend                                    TutorialType = 12
	TutorialType_TutorialType_Achievement                               TutorialType = 14
	TutorialType_TutorialType_IdolCardLevelLimitRankUpdate              TutorialType = 15
	TutorialType_TutorialType_SupportCardLevelUpdate                    TutorialType = 16
	TutorialType_TutorialType_ItemExchange                              TutorialType = 17
	TutorialType_TutorialType_DailyExchange                             TutorialType = 18
	TutorialType_TutorialType_Tower                                     TutorialType = 19
	TutorialType_TutorialType_Guild                                     TutorialType = 20
	TutorialType_TutorialType_TutorialReceiveIdolCard                   TutorialType = 21
	TutorialType_TutorialType_PhotoTop                                  TutorialType = 22
	TutorialType_TutorialType_PhotoIdol                                 TutorialType = 23
	TutorialType_TutorialType_PhotoPrepare                              TutorialType = 24
	TutorialType_TutorialType_Photo                                     TutorialType = 25
	TutorialType_TutorialType_MeishiEditCustom                          TutorialType = 26
	TutorialType_TutorialType_MeishiEditCustomManual                    TutorialType = 27
	TutorialType_TutorialType_IdolCardSkinUnit                          TutorialType = 28
	TutorialType_TutorialType_DearnessTop                               TutorialType = 29
	TutorialType_TutorialType_DearnessPoint                             TutorialType = 30
	TutorialType_TutorialType_ProduceIdolCardSelect                     TutorialType = 100
	TutorialType_TutorialType_ProduceSupportCardSelect                  TutorialType = 101
	TutorialType_TutorialType_ProduceMemorySelect                       TutorialType = 102
	TutorialType_TutorialType_ProduceSchedule                           TutorialType = 103
	TutorialType_TutorialType_ProduceEvent                              TutorialType = 104
	TutorialType_TutorialType_ProducePresentStep                        TutorialType = 105
	TutorialType_TutorialType_ProduceShopStep                           TutorialType = 106
	TutorialType_TutorialType_ProduceExamGimmick                        TutorialType = 107
	TutorialType_TutorialType_ProduceExamPerfect                        TutorialType = 108
	TutorialType_TutorialType_ProduceBeforeLiveEvaluation               TutorialType = 109
	TutorialType_TutorialType_ProduceDifficultySelect                   TutorialType = 110
	TutorialType_TutorialType_ProduceCardUpgrade                        TutorialType = 111
	TutorialType_TutorialType_ProduceCardDelete                         TutorialType = 112
	TutorialType_TutorialType_ProduceDrink                              TutorialType = 113
	TutorialType_TutorialType_ProduceCardUpgradeBySupportCard           TutorialType = 114
	TutorialType_TutorialType_ProduceExamBattle                         TutorialType = 115
	TutorialType_TutorialType_ProduceSupportCardEvent                   TutorialType = 116
	TutorialType_TutorialType_ProduceStepLessonHardBonus                TutorialType = 117
	TutorialType_TutorialType_ProduceStepLessonPresent                  TutorialType = 118
	TutorialType_TutorialType_ProduceBeforeAuditionRefresh              TutorialType = 119
	TutorialType_TutorialType_ProduceBeforeLessonHard                   TutorialType = 120
	TutorialType_TutorialType_ProduceChallenge                          TutorialType = 121
	TutorialType_TutorialType_ProduceNextIdolAuditionTop                TutorialType = 122
	TutorialType_TutorialType_ProduceNextIdolAuditionSchedule           TutorialType = 123
	TutorialType_TutorialType_ProduceNextIdolAuditionStepAuditionSelect TutorialType = 124
	TutorialType_TutorialType_ProduceNextIdolAuditionStepAuditionStart  TutorialType = 125
	TutorialType_TutorialType_ProduceNextIdolAuditionResult             TutorialType = 126
	TutorialType_TutorialType_ProduceStepBusiness                       TutorialType = 127
	TutorialType_TutorialType_ProduceStepCustomize                      TutorialType = 128
	TutorialType_TutorialType_ProduceStepFanPresent                     TutorialType = 129
	TutorialType_TutorialType_MissionPanel                              TutorialType = 200
	TutorialType_TutorialType_ProduceHighScore                          TutorialType = 201
	TutorialType_TutorialType_StoryEvent                                TutorialType = 202
	TutorialType_TutorialType_StoryEventMainStroy                       TutorialType = 203
	TutorialType_TutorialType_StoryEventBoxGasha                        TutorialType = 204
	TutorialType_TutorialType_StoryEventGuildMission                    TutorialType = 205
	TutorialType_TutorialType_GvgRaid                                   TutorialType = 206
	TutorialType_TutorialType_ProduceNextIdolAuditionMaster             TutorialType = 207
	TutorialType_TutorialType_ProduceNextIdolAuditionMasterRanking      TutorialType = 208
	TutorialType_TutorialType_Tour                                      TutorialType = 209
)

// Enum value maps for TutorialType.
var (
	TutorialType_name = map[int32]string{
		0:   "TutorialType_Unknown",
		1:   "TutorialType_GameStart",
		2:   "TutorialType_MainTask",
		3:   "TutorialType_Work",
		4:   "TutorialType_IdolCard",
		5:   "TutorialType_IdolCardSkin",
		6:   "TutorialType_PvpRate",
		7:   "TutorialType_CoinGasha",
		8:   "TutorialType_MoneyReceive",
		9:   "TutorialType_MissionPass",
		10:  "TutorialType_Profile",
		11:  "TutorialType_Meishi",
		12:  "TutorialType_Friend",
		14:  "TutorialType_Achievement",
		15:  "TutorialType_IdolCardLevelLimitRankUpdate",
		16:  "TutorialType_SupportCardLevelUpdate",
		17:  "TutorialType_ItemExchange",
		18:  "TutorialType_DailyExchange",
		19:  "TutorialType_Tower",
		20:  "TutorialType_Guild",
		21:  "TutorialType_TutorialReceiveIdolCard",
		22:  "TutorialType_PhotoTop",
		23:  "TutorialType_PhotoIdol",
		24:  "TutorialType_PhotoPrepare",
		25:  "TutorialType_Photo",
		26:  "TutorialType_MeishiEditCustom",
		27:  "TutorialType_MeishiEditCustomManual",
		28:  "TutorialType_IdolCardSkinUnit",
		29:  "TutorialType_DearnessTop",
		30:  "TutorialType_DearnessPoint",
		100: "TutorialType_ProduceIdolCardSelect",
		101: "TutorialType_ProduceSupportCardSelect",
		102: "TutorialType_ProduceMemorySelect",
		103: "TutorialType_ProduceSchedule",
		104: "TutorialType_ProduceEvent",
		105: "TutorialType_ProducePresentStep",
		106: "TutorialType_ProduceShopStep",
		107: "TutorialType_ProduceExamGimmick",
		108: "TutorialType_ProduceExamPerfect",
		109: "TutorialType_ProduceBeforeLiveEvaluation",
		110: "TutorialType_ProduceDifficultySelect",
		111: "TutorialType_ProduceCardUpgrade",
		112: "TutorialType_ProduceCardDelete",
		113: "TutorialType_ProduceDrink",
		114: "TutorialType_ProduceCardUpgradeBySupportCard",
		115: "TutorialType_ProduceExamBattle",
		116: "TutorialType_ProduceSupportCardEvent",
		117: "TutorialType_ProduceStepLessonHardBonus",
		118: "TutorialType_ProduceStepLessonPresent",
		119: "TutorialType_ProduceBeforeAuditionRefresh",
		120: "TutorialType_ProduceBeforeLessonHard",
		121: "TutorialType_ProduceChallenge",
		122: "TutorialType_ProduceNextIdolAuditionTop",
		123: "TutorialType_ProduceNextIdolAuditionSchedule",
		124: "TutorialType_ProduceNextIdolAuditionStepAuditionSelect",
		125: "TutorialType_ProduceNextIdolAuditionStepAuditionStart",
		126: "TutorialType_ProduceNextIdolAuditionResult",
		127: "TutorialType_ProduceStepBusiness",
		128: "TutorialType_ProduceStepCustomize",
		129: "TutorialType_ProduceStepFanPresent",
		200: "TutorialType_MissionPanel",
		201: "TutorialType_ProduceHighScore",
		202: "TutorialType_StoryEvent",
		203: "TutorialType_StoryEventMainStroy",
		204: "TutorialType_StoryEventBoxGasha",
		205: "TutorialType_StoryEventGuildMission",
		206: "TutorialType_GvgRaid",
		207: "TutorialType_ProduceNextIdolAuditionMaster",
		208: "TutorialType_ProduceNextIdolAuditionMasterRanking",
		209: "TutorialType_Tour",
	}
	TutorialType_value = map[string]int32{
		"TutorialType_Unknown":                                   0,
		"TutorialType_GameStart":                                 1,
		"TutorialType_MainTask":                                  2,
		"TutorialType_Work":                                      3,
		"TutorialType_IdolCard":                                  4,
		"TutorialType_IdolCardSkin":                              5,
		"TutorialType_PvpRate":                                   6,
		"TutorialType_CoinGasha":                                 7,
		"TutorialType_MoneyReceive":                              8,
		"TutorialType_MissionPass":                               9,
		"TutorialType_Profile":                                   10,
		"TutorialType_Meishi":                                    11,
		"TutorialType_Friend":                                    12,
		"TutorialType_Achievement":                               14,
		"TutorialType_IdolCardLevelLimitRankUpdate":              15,
		"TutorialType_SupportCardLevelUpdate":                    16,
		"TutorialType_ItemExchange":                              17,
		"TutorialType_DailyExchange":                             18,
		"TutorialType_Tower":                                     19,
		"TutorialType_Guild":                                     20,
		"TutorialType_TutorialReceiveIdolCard":                   21,
		"TutorialType_PhotoTop":                                  22,
		"TutorialType_PhotoIdol":                                 23,
		"TutorialType_PhotoPrepare":                              24,
		"TutorialType_Photo":                                     25,
		"TutorialType_MeishiEditCustom":                          26,
		"TutorialType_MeishiEditCustomManual":                    27,
		"TutorialType_IdolCardSkinUnit":                          28,
		"TutorialType_DearnessTop":                               29,
		"TutorialType_DearnessPoint":                             30,
		"TutorialType_ProduceIdolCardSelect":                     100,
		"TutorialType_ProduceSupportCardSelect":                  101,
		"TutorialType_ProduceMemorySelect":                       102,
		"TutorialType_ProduceSchedule":                           103,
		"TutorialType_ProduceEvent":                              104,
		"TutorialType_ProducePresentStep":                        105,
		"TutorialType_ProduceShopStep":                           106,
		"TutorialType_ProduceExamGimmick":                        107,
		"TutorialType_ProduceExamPerfect":                        108,
		"TutorialType_ProduceBeforeLiveEvaluation":               109,
		"TutorialType_ProduceDifficultySelect":                   110,
		"TutorialType_ProduceCardUpgrade":                        111,
		"TutorialType_ProduceCardDelete":                         112,
		"TutorialType_ProduceDrink":                              113,
		"TutorialType_ProduceCardUpgradeBySupportCard":           114,
		"TutorialType_ProduceExamBattle":                         115,
		"TutorialType_ProduceSupportCardEvent":                   116,
		"TutorialType_ProduceStepLessonHardBonus":                117,
		"TutorialType_ProduceStepLessonPresent":                  118,
		"TutorialType_ProduceBeforeAuditionRefresh":              119,
		"TutorialType_ProduceBeforeLessonHard":                   120,
		"TutorialType_ProduceChallenge":                          121,
		"TutorialType_ProduceNextIdolAuditionTop":                122,
		"TutorialType_ProduceNextIdolAuditionSchedule":           123,
		"TutorialType_ProduceNextIdolAuditionStepAuditionSelect": 124,
		"TutorialType_ProduceNextIdolAuditionStepAuditionStart":  125,
		"TutorialType_ProduceNextIdolAuditionResult":             126,
		"TutorialType_ProduceStepBusiness":                       127,
		"TutorialType_ProduceStepCustomize":                      128,
		"TutorialType_ProduceStepFanPresent":                     129,
		"TutorialType_MissionPanel":                              200,
		"TutorialType_ProduceHighScore":                          201,
		"TutorialType_StoryEvent":                                202,
		"TutorialType_StoryEventMainStroy":                       203,
		"TutorialType_StoryEventBoxGasha":                        204,
		"TutorialType_StoryEventGuildMission":                    205,
		"TutorialType_GvgRaid":                                   206,
		"TutorialType_ProduceNextIdolAuditionMaster":             207,
		"TutorialType_ProduceNextIdolAuditionMasterRanking":      208,
		"TutorialType_Tour":                                      209,
	}
)

func (x TutorialType) Enum() *TutorialType {
	p := new(TutorialType)
	*p = x
	return p
}

func (x TutorialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TutorialType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[193].Descriptor()
}

func (TutorialType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[193]
}

func (x TutorialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TutorialType.Descriptor instead.
func (TutorialType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{193}
}

type ViewAreaType int32

const (
	ViewAreaType_ViewAreaType_Unknown ViewAreaType = 0
	ViewAreaType_ViewAreaType_Produce ViewAreaType = 1
	ViewAreaType_ViewAreaType_OutGame ViewAreaType = 2
)

// Enum value maps for ViewAreaType.
var (
	ViewAreaType_name = map[int32]string{
		0: "ViewAreaType_Unknown",
		1: "ViewAreaType_Produce",
		2: "ViewAreaType_OutGame",
	}
	ViewAreaType_value = map[string]int32{
		"ViewAreaType_Unknown": 0,
		"ViewAreaType_Produce": 1,
		"ViewAreaType_OutGame": 2,
	}
)

func (x ViewAreaType) Enum() *ViewAreaType {
	p := new(ViewAreaType)
	*p = x
	return p
}

func (x ViewAreaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViewAreaType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[194].Descriptor()
}

func (ViewAreaType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[194]
}

func (x ViewAreaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViewAreaType.Descriptor instead.
func (ViewAreaType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{194}
}

type VoicePlayScreenType int32

const (
	VoicePlayScreenType_VoicePlayScreenType_Unknown  VoicePlayScreenType = 0
	VoicePlayScreenType_VoicePlayScreenType_Home     VoicePlayScreenType = 1
	VoicePlayScreenType_VoicePlayScreenType_Produce  VoicePlayScreenType = 2
	VoicePlayScreenType_VoicePlayScreenType_Other    VoicePlayScreenType = 3
	VoicePlayScreenType_VoicePlayScreenType_IdolCard VoicePlayScreenType = 4
)

// Enum value maps for VoicePlayScreenType.
var (
	VoicePlayScreenType_name = map[int32]string{
		0: "VoicePlayScreenType_Unknown",
		1: "VoicePlayScreenType_Home",
		2: "VoicePlayScreenType_Produce",
		3: "VoicePlayScreenType_Other",
		4: "VoicePlayScreenType_IdolCard",
	}
	VoicePlayScreenType_value = map[string]int32{
		"VoicePlayScreenType_Unknown":  0,
		"VoicePlayScreenType_Home":     1,
		"VoicePlayScreenType_Produce":  2,
		"VoicePlayScreenType_Other":    3,
		"VoicePlayScreenType_IdolCard": 4,
	}
)

func (x VoicePlayScreenType) Enum() *VoicePlayScreenType {
	p := new(VoicePlayScreenType)
	*p = x
	return p
}

func (x VoicePlayScreenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoicePlayScreenType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[195].Descriptor()
}

func (VoicePlayScreenType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[195]
}

func (x VoicePlayScreenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoicePlayScreenType.Descriptor instead.
func (VoicePlayScreenType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{195}
}

type Weekday int32

const (
	Weekday_Weekday_Unknown   Weekday = 0
	Weekday_Weekday_Sunday    Weekday = 1
	Weekday_Weekday_Monday    Weekday = 2
	Weekday_Weekday_Tuesday   Weekday = 3
	Weekday_Weekday_Wednesday Weekday = 4
	Weekday_Weekday_Thursday  Weekday = 5
	Weekday_Weekday_Friday    Weekday = 6
	Weekday_Weekday_Saturday  Weekday = 7
)

// Enum value maps for Weekday.
var (
	Weekday_name = map[int32]string{
		0: "Weekday_Unknown",
		1: "Weekday_Sunday",
		2: "Weekday_Monday",
		3: "Weekday_Tuesday",
		4: "Weekday_Wednesday",
		5: "Weekday_Thursday",
		6: "Weekday_Friday",
		7: "Weekday_Saturday",
	}
	Weekday_value = map[string]int32{
		"Weekday_Unknown":   0,
		"Weekday_Sunday":    1,
		"Weekday_Monday":    2,
		"Weekday_Tuesday":   3,
		"Weekday_Wednesday": 4,
		"Weekday_Thursday":  5,
		"Weekday_Friday":    6,
		"Weekday_Saturday":  7,
	}
)

func (x Weekday) Enum() *Weekday {
	p := new(Weekday)
	*p = x
	return p
}

func (x Weekday) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Weekday) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[196].Descriptor()
}

func (Weekday) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[196]
}

func (x Weekday) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Weekday.Descriptor instead.
func (Weekday) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{196}
}

type WorkMotionType int32

const (
	WorkMotionType_WorkMotionType_Unknown                 WorkMotionType = 0
	WorkMotionType_WorkMotionType_CharacterSelectWait     WorkMotionType = 1
	WorkMotionType_WorkMotionType_CharacterSelectReaction WorkMotionType = 2
	WorkMotionType_WorkMotionType_StartNormal             WorkMotionType = 3
	WorkMotionType_WorkMotionType_StartFine               WorkMotionType = 4
	WorkMotionType_WorkMotionType_FinishNormal            WorkMotionType = 5
	WorkMotionType_WorkMotionType_FinishExcellent         WorkMotionType = 6
)

// Enum value maps for WorkMotionType.
var (
	WorkMotionType_name = map[int32]string{
		0: "WorkMotionType_Unknown",
		1: "WorkMotionType_CharacterSelectWait",
		2: "WorkMotionType_CharacterSelectReaction",
		3: "WorkMotionType_StartNormal",
		4: "WorkMotionType_StartFine",
		5: "WorkMotionType_FinishNormal",
		6: "WorkMotionType_FinishExcellent",
	}
	WorkMotionType_value = map[string]int32{
		"WorkMotionType_Unknown":                 0,
		"WorkMotionType_CharacterSelectWait":     1,
		"WorkMotionType_CharacterSelectReaction": 2,
		"WorkMotionType_StartNormal":             3,
		"WorkMotionType_StartFine":               4,
		"WorkMotionType_FinishNormal":            5,
		"WorkMotionType_FinishExcellent":         6,
	}
)

func (x WorkMotionType) Enum() *WorkMotionType {
	p := new(WorkMotionType)
	*p = x
	return p
}

func (x WorkMotionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkMotionType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[197].Descriptor()
}

func (WorkMotionType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[197]
}

func (x WorkMotionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkMotionType.Descriptor instead.
func (WorkMotionType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{197}
}

type WorkType int32

const (
	WorkType_WorkType_Unknown       WorkType = 0
	WorkType_WorkType_MiniLive      WorkType = 1
	WorkType_WorkType_LiveStreaming WorkType = 2
)

// Enum value maps for WorkType.
var (
	WorkType_name = map[int32]string{
		0: "WorkType_Unknown",
		1: "WorkType_MiniLive",
		2: "WorkType_LiveStreaming",
	}
	WorkType_value = map[string]int32{
		"WorkType_Unknown":       0,
		"WorkType_MiniLive":      1,
		"WorkType_LiveStreaming": 2,
	}
)

func (x WorkType) Enum() *WorkType {
	p := new(WorkType)
	*p = x
	return p
}

func (x WorkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkType) Descriptor() protoreflect.EnumDescriptor {
	return file_penum_proto_enumTypes[198].Descriptor()
}

func (WorkType) Type() protoreflect.EnumType {
	return &file_penum_proto_enumTypes[198]
}

func (x WorkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkType.Descriptor instead.
func (WorkType) EnumDescriptor() ([]byte, []int) {
	return file_penum_proto_rawDescGZIP(), []int{198}
}

var File_penum_proto protoreflect.FileDescriptor

const file_penum_proto_rawDesc = "" +
	"\n" +
	"\vpenum.proto\x12\x05penum*\x94\x01\n" +
	"\x13AchievementCategory\x12\x1f\n" +
	"\x1bAchievementCategory_Unknown\x10\x00\x12\x1c\n" +
	"\x18AchievementCategory_Idol\x10\x01\x12\x1f\n" +
	"\x1bAchievementCategory_Produce\x10\x02\x12\x1d\n" +
	"\x19AchievementCategory_Other\x10c*\xb1\x02\n" +
	"\x14AntiCheatFeatureType\x12 \n" +
	"\x1cAntiCheatFeatureType_Unknown\x10\x00\x12*\n" +
	"&AntiCheatFeatureType_ExamProduceLesson\x10\x01\x12,\n" +
	"(AntiCheatFeatureType_ExamProduceAudition\x10\x02\x12$\n" +
	" AntiCheatFeatureType_ExamPvpRate\x10\x03\x12\"\n" +
	"\x1eAntiCheatFeatureType_ExamTower\x10\x04\x12$\n" +
	" AntiCheatFeatureType_ExamGvgRaid\x10\x05\x12-\n" +
	")AntiCheatFeatureType_AndroidPlayIntegrity\x10e*\x9e\x01\n" +
	"\rAppReviewType\x12\x19\n" +
	"\x15AppReviewType_Unknown\x10\x00\x12\x17\n" +
	"\x13AppReviewType_Gasha\x10\x01\x12\x1a\n" +
	"\x16AppReviewType_MainTask\x10\x02\x12\x1d\n" +
	"\x19AppReviewType_Achievement\x10\x03\x12\x1e\n" +
	"\x1aAppReviewType_ProduceClear\x10\x04*\xaf\x01\n" +
	"\x12AssetCopyRuleGroup\x12\x1e\n" +
	"\x1aAssetCopyRuleGroup_Unknown\x10\x00\x12\x1d\n" +
	"\x19AssetCopyRuleGroup_Common\x10\x01\x12\x1d\n" +
	"\x19AssetCopyRuleGroup_Motion\x10\x02\x12\x1c\n" +
	"\x18AssetCopyRuleGroup_Voice\x10\x03\x12\x1d\n" +
	"\x19AssetCopyRuleGroup_Camera\x10\x04*\xb9\x01\n" +
	"\x11AssetCopyRuleType\x12\x1d\n" +
	"\x19AssetCopyRuleType_Unknown\x10\x00\x12\x1d\n" +
	"\x19AssetCopyRuleType_Require\x10\x01\x12\x1c\n" +
	"\x18AssetCopyRuleType_Ignore\x10\x02\x12#\n" +
	"\x1fAssetCopyRuleType_RequireServer\x10\x03\x12#\n" +
	"\x1fAssetCopyRuleType_RequireClient\x10\x04*m\n" +
	"\x11AssetDownloadType\x12\x1d\n" +
	"\x19AssetDownloadType_Unknown\x10\x00\x12\x1b\n" +
	"\x17AssetDownloadType_First\x10\x01\x12\x1c\n" +
	"\x18AssetDownloadType_Second\x10\x02*U\n" +
	"\tAssetKind\x12\x15\n" +
	"\x11AssetKind_Unknown\x10\x00\x12\x19\n" +
	"\x15AssetKind_AssetBundle\x10\x01\x12\x16\n" +
	"\x12AssetKind_Resource\x10\x02*u\n" +
	"\x10AuthProviderType\x12\x1c\n" +
	"\x18AuthProviderType_Unknown\x10\x00\x12\"\n" +
	"\x1eAuthProviderType_BandaiNamcoId\x10\x01\x12\x1f\n" +
	"\x1bAuthProviderType_DmmgamesId\x10\x02*\x8f\x04\n" +
	"\x13CharacterDetailType\x12\x1f\n" +
	"\x1bCharacterDetailType_Unknown\x10\x00\x12\x1d\n" +
	"\x19CharacterDetailType_Grade\x10\x01\x12\x1e\n" +
	"\x1aCharacterDetailType_Height\x10\x02\x12\x1e\n" +
	"\x1aCharacterDetailType_Weight\x10\x03\x12!\n" +
	"\x1dCharacterDetailType_BloodType\x10\x04\x12!\n" +
	"\x1dCharacterDetailType_ThreeSize\x10\x05\x12\"\n" +
	"\x1eCharacterDetailType_ZodiacSign\x10\x06\x12\x1a\n" +
	"\x16CharacterDetailType_Cv\x10\a\x12\x1b\n" +
	"\x17CharacterDetailType_Age\x10\b\x12 \n" +
	"\x1cCharacterDetailType_Birthday\x10\t\x12$\n" +
	" CharacterDetailType_DominantHand\x10\n" +
	"\x12\"\n" +
	"\x1eCharacterDetailType_Birthplace\x10\v\x12$\n" +
	" CharacterDetailType_SpecialSkill\x10\f\x12\x1d\n" +
	"\x19CharacterDetailType_Hobby\x10\r\x12$\n" +
	" CharacterDetailType_Introduction\x10\x0e*\xc0\x01\n" +
	"\x18CharacterPersonalityType\x12$\n" +
	" CharacterPersonalityType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aCharacterPersonalityType_A\x10\x01\x12\x1e\n" +
	"\x1aCharacterPersonalityType_B\x10\x02\x12\x1e\n" +
	"\x1aCharacterPersonalityType_C\x10\x03\x12\x1e\n" +
	"\x1aCharacterPersonalityType_D\x10\x04*\xbe\x01\n" +
	"\x19CoinGashaBoxResetTypeType\x12%\n" +
	"!CoinGashaBoxResetTypeType_Unknown\x10\x00\x12&\n" +
	"\"CoinGashaBoxResetTypeType_EmptyAll\x10\x01\x12*\n" +
	"&CoinGashaBoxResetTypeType_EmptyFeature\x10\x02\x12&\n" +
	"\"CoinGashaBoxResetTypeType_Optional\x10\x03*w\n" +
	"\rCoinGashaType\x12\x19\n" +
	"\x15CoinGashaType_Unknown\x10\x00\x12\x19\n" +
	"\x15CoinGashaType_Default\x10\x01\x12\x19\n" +
	"\x15CoinGashaType_Feature\x10\x02\x12\x15\n" +
	"\x11CoinGashaType_Box\x10\x03*\x90\x01\n" +
	"\x13ConditionMinMaxType\x12\x1f\n" +
	"\x1bConditionMinMaxType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aConditionMinMaxType_MinMax\x10\x01\x12\x1b\n" +
	"\x17ConditionMinMaxType_Min\x10\x02\x12\x1b\n" +
	"\x17ConditionMinMaxType_Max\x10\x03*w\n" +
	"\x15ConditionOperatorType\x12!\n" +
	"\x1dConditionOperatorType_Unknown\x10\x00\x12\x1d\n" +
	"\x19ConditionOperatorType_And\x10\x01\x12\x1c\n" +
	"\x18ConditionOperatorType_Or\x10\x02*\xf9\x13\n" +
	"\rConditionType\x12\x19\n" +
	"\x15ConditionType_Unknown\x10\x00\x12\x1a\n" +
	"\x16ConditionType_TimeTerm\x10\x01\x12\x1e\n" +
	"\x1aConditionType_TimeDuration\x10\x02\x12\x1d\n" +
	"\x19ConditionType_TimeWeekday\x10\x03\x12\x1a\n" +
	"\x16ConditionType_HomeTime\x10\x04\x12\x1a\n" +
	"\x16ConditionType_Birthday\x10\x05\x12\x17\n" +
	"\x13ConditionType_Login\x10\x06\x12\x1f\n" +
	"\x1bConditionType_TutorialClear\x10\a\x12,\n" +
	"(ConditionType_GameStartTutorialClearHour\x10\b\x12\x1f\n" +
	"\x1bConditionType_HomeCharacter\x10\t\x12\x1f\n" +
	"\x1bConditionType_ProducerLevel\x10\n" +
	"\x12\x1b\n" +
	"\x17ConditionType_Character\x10\v\x12\x1a\n" +
	"\x16ConditionType_FanCount\x10\f\x12\x1f\n" +
	"\x1bConditionType_DearnessLevel\x10\r\x12\x19\n" +
	"\x15ConditionType_Costume\x10\x0e\x12\x1a\n" +
	"\x16ConditionType_IdolCard\x10\x0f\x12,\n" +
	"(ConditionType_DearnessStoryFirstReadTime\x10\x10\x12'\n" +
	"#ConditionType_IdolCardPotentialRank\x10\x11\x12(\n" +
	"$ConditionType_IdolCardLevelLimitRank\x10\x12\x12\x1d\n" +
	"\x19ConditionType_SupportCard\x10\x13\x12\"\n" +
	"\x1eConditionType_SupportCardLevel\x10\x14\x12+\n" +
	"'ConditionType_SupportCardLevelLimitRank\x10\x15\x12\x1d\n" +
	"\x19ConditionType_MemoryCount\x10\x16\x12\x1d\n" +
	"\x19ConditionType_ProduceCard\x10\x17\x12\x17\n" +
	"\x13ConditionType_Music\x10\x18\x12+\n" +
	"'ConditionType_CharacterProducePlayCount\x10\x1a\x12,\n" +
	"(ConditionType_CharacterProduceClearCount\x10\x1b\x12#\n" +
	"\x1fConditionType_ProduceClearCount\x10\x1c\x12'\n" +
	"#ConditionType_ProducePlanClearCount\x10\x1d\x12\x1d\n" +
	"\x19ConditionType_PvpRateOpen\x10\x1e\x12(\n" +
	"$ConditionType_PvpRateSeasonPlayCount\x10\x1f\x12'\n" +
	"#ConditionType_PvpRateSeasonWinCount\x10 \x12#\n" +
	"\x1fConditionType_PvpRateSeasonRate\x10!\x12)\n" +
	"%ConditionType_PvpRateUnitOverallPower\x10\"\x12\x1b\n" +
	"\x17ConditionType_WorkCount\x10#\x12$\n" +
	" ConditionType_WorkCharacterCount\x10$\x12\x1b\n" +
	"\x17ConditionType_StoryRead\x10%\x12\x1d\n" +
	"\x19ConditionType_FollowCount\x10&\x12\x1d\n" +
	"\x19ConditionType_CostumeHead\x10'\x12\x1b\n" +
	"\x17ConditionType_GuildJoin\x10(\x12#\n" +
	"\x1fConditionType_MeishiUpdateCount\x10)\x12\x1b\n" +
	"\x17ConditionType_GashaOpen\x10*\x12\x1b\n" +
	"\x17ConditionType_GashaDraw\x10+\x12#\n" +
	"\x1fConditionType_ExchangeItemCount\x10,\x12\"\n" +
	"\x1eConditionType_ShopItemPurchase\x10-\x12%\n" +
	"!ConditionType_MissionPassProgress\x10.\x12#\n" +
	"\x1fConditionType_MainTaskCompleted\x10/\x12\"\n" +
	"\x1eConditionType_MissionCompleted\x100\x12&\n" +
	"\"ConditionType_AchievementCompleted\x101\x12\x1e\n" +
	"\x1aConditionType_ItemObtained\x102\x12\x1b\n" +
	"\x17ConditionType_ItemCount\x103\x12\"\n" +
	"\x1eConditionType_SeminarExamClear\x105\x12$\n" +
	" ConditionType_PvpRateSeasonGrade\x106\x12\"\n" +
	"\x1eConditionType_PvpRateBestGrade\x107\x12\"\n" +
	"\x1eConditionType_ProduceStoryRead\x108\x12!\n" +
	"\x1dConditionType_TowerLayerClear\x109\x12#\n" +
	"\x1fConditionType_StoryUnlockKeyUse\x10:\x120\n" +
	",ConditionType_MissionDailyReleaseNotComplete\x10;\x12)\n" +
	"%ConditionType_MissionPanelNotComplete\x10<\x124\n" +
	"0ConditionType_AchievementFirstThresholdClearHour\x10=\x121\n" +
	"-ConditionType_MainTaskFirstThresholdClearHour\x10>\x120\n" +
	",ConditionType_MissionFirstThresholdClearHour\x10?\x12!\n" +
	"\x1dConditionType_PhotoBackground\x10@\x12\x1b\n" +
	"\x17ConditionType_PhotoPose\x10A\x12\x1a\n" +
	"\x16ConditionType_Comeback\x10B\x12&\n" +
	"\"ConditionType_MissionGroupComplete\x10C\x12)\n" +
	"%ConditionType_MissionGroupNotComplete\x10D\x12.\n" +
	"*ConditionType_AppVersionGreaterThanOrEqual\x10E\x12+\n" +
	"'ConditionType_AppVersionLessThanOrEqual\x10F\x12\x16\n" +
	"\x11ConditionType_Set\x10\xe6\a\x12\x1e\n" +
	"\x19ConditionType_NegativeSet\x10\xe7\a*\xa8\x01\n" +
	"\x14ConsentAgreementType\x12 \n" +
	"\x1cConsentAgreementType_Unknown\x10\x00\x12#\n" +
	"\x1fConsentAgreementType_Unanswered\x10\x01\x12%\n" +
	"!ConsentAgreementType_Disagreement\x10\x02\x12\"\n" +
	"\x1eConsentAgreementType_Agreement\x10\x03*\xb7\x01\n" +
	"\vConsentType\x12\x17\n" +
	"\x13ConsentType_Unknown\x10\x00\x12\x18\n" +
	"\x14ConsentType_Overview\x10\x01\x12\x18\n" +
	"\x14ConsentType_Analysis\x10\x02\x12\x1d\n" +
	"\x19ConsentType_Advertisement\x10\x03\x12'\n" +
	"#ConsentType_CustomizedAdvertisement\x10\x04\x12\x13\n" +
	"\x0fConsentType_Sns\x10\x05*\xb2\x01\n" +
	"\x12CostumeFeatureType\x12\x1e\n" +
	"\x1aCostumeFeatureType_Unknown\x10\x00\x12\x1b\n" +
	"\x17CostumeFeatureType_Home\x10\x01\x12\x1e\n" +
	"\x1aCostumeFeatureType_Produce\x10\x02\x12\x1b\n" +
	"\x17CostumeFeatureType_Live\x10\x03\x12\"\n" +
	"\x1eCostumeFeatureType_Photography\x10\x04*\xac\x01\n" +
	"\x11CostumeMotionType\x12\x1d\n" +
	"\x19CostumeMotionType_Unknown\x10\x00\x12\x1a\n" +
	"\x16CostumeMotionType_Wait\x10\x01\x12\x1b\n" +
	"\x17CostumeMotionType_Start\x10\x02\x12\x1c\n" +
	"\x18CostumeMotionType_Finish\x10\x03\x12!\n" +
	"\x1dCostumeMotionType_TapReaction\x10\x04*\xad\x01\n" +
	"\x0eCostumeSetType\x12\x1a\n" +
	"\x16CostumeSetType_Unknown\x10\x00\x12\x17\n" +
	"\x13CostumeSetType_Home\x10\x01\x12\"\n" +
	"\x1eCostumeSetType_ProduceSchedule\x10\x02\x12\x1e\n" +
	"\x1aCostumeSetType_ProduceLive\x10\x03\x12\"\n" +
	"\x1eCostumeSetType_ProduceTraining\x10\x04*\xff\x04\n" +
	"\tCountType\x12\x15\n" +
	"\x11CountType_Unknown\x10\x00\x12\x13\n" +
	"\x0fCountType_Login\x10\x01\x12!\n" +
	"\x1dCountType_ProduceRentalMemory\x10\x02\x12\x1d\n" +
	"\x19CountType_ProduceContinue\x10\x03\x12\x19\n" +
	"\x15CountType_Achievement\x10\x04\x12%\n" +
	"!CountType_ReceivedTotalLoginBonus\x10\x05\x12&\n" +
	"\"CountType_ConfirmedTotalLoginBonus\x10\x06\x12\x1a\n" +
	"\x16CountType_MeishiUpdate\x10\a\x12\x1a\n" +
	"\x16CountType_MeishiFollow\x10\b\x12\x1b\n" +
	"\x17CountType_GuildDonation\x10\t\x12\x16\n" +
	"\x12CountType_MainTask\x10\n" +
	"\x12\x1d\n" +
	"\x19CountType_AchievementIdol\x10\v\x12 \n" +
	"\x1cCountType_AchievementProduce\x10\f\x12\x1e\n" +
	"\x1aCountType_AchievementOther\x10\r\x12\x1f\n" +
	"\x1bCountType_MainTaskMainStory\x10\x0e\x12\x1e\n" +
	"\x1aCountType_MainTaskProducer\x10\x0f\x12(\n" +
	"$CountType_ProduceClearTimeBanWarning\x10\x10\x12\x1f\n" +
	"\x1bCountType_MainTaskProducer2\x10d\x12\x1f\n" +
	"\x1bCountType_MainTaskProducer3\x10e\x12\x1f\n" +
	"\x1bCountType_MainTaskProducer4\x10f*\xe7\x02\n" +
	"\x12DearnessMotionType\x12\x1e\n" +
	"\x1aDearnessMotionType_Unknown\x10\x00\x12\x1c\n" +
	"\x18DearnessMotionType_Wait1\x10\x01\x12\x1c\n" +
	"\x18DearnessMotionType_Wait2\x10\x02\x12\x1f\n" +
	"\x1bDearnessMotionType_Reaction\x10\x03\x12#\n" +
	"\x1fDearnessMotionType_ReactionOnce\x10\x04\x12%\n" +
	"!DearnessMotionType_WaitLookAround\x10\x05\x12#\n" +
	"\x1fDearnessMotionType_MultipleTaps\x10\x06\x12!\n" +
	"\x1dDearnessMotionType_Transition\x10\a\x12\x1f\n" +
	"\x1bDearnessMotionType_WaitOnce\x10\b\x12\x1f\n" +
	"\x1bDearnessMotionType_WaitLoop\x10\t*\xb8\x01\n" +
	"\x11DeckRecommendType\x12\x1d\n" +
	"\x19DeckRecommendType_Unknown\x10\x00\x12\x1c\n" +
	"\x18DeckRecommendType_Manual\x10\x01\x12\x1f\n" +
	"\x1bDeckRecommendType_Recommend\x10\x02\x12(\n" +
	"$DeckRecommendType_RecommendAndManual\x10\x03\x12\x1b\n" +
	"\x17DeckRecommendType_Reset\x10\x04*\x9c\x10\n" +
	"\tErrorCode\x12\x15\n" +
	"\x11ErrorCode_Unknown\x10\x00\x12\x1e\n" +
	"\x19ErrorCode_InvalidArgument\x10\xe9\a\x12\x17\n" +
	"\x12ErrorCode_Internal\x10\xea\a\x12\x1e\n" +
	"\x19ErrorCode_Unauthenticated\x10\xeb\a\x12\x1f\n" +
	"\x1aErrorCode_PermissionDenied\x10\xec\a\x12\x17\n" +
	"\x12ErrorCode_NotFound\x10\xed\a\x12!\n" +
	"\x1cErrorCode_OutdatedMasterData\x10\xd1\x0f\x12\x19\n" +
	"\x14ErrorCode_LockFailed\x10\xd2\x0f\x12$\n" +
	"\x1fErrorCode_PurchaseRecoverFailed\x10\xd3\x0f\x12\x1a\n" +
	"\x15ErrorCode_OutdatedApp\x10\xd4\x0f\x12\"\n" +
	"\x1dErrorCode_ExchangeNeedRefresh\x10\xd5\x0f\x12\x1a\n" +
	"\x15ErrorCode_DateChanged\x10\xd6\x0f\x12-\n" +
	"(ErrorCode_FriendFollowCountLimitExceeded\x10\xd7\x0f\x120\n" +
	"+ErrorCode_FriendFollowersCountLimitExceeded\x10\xd8\x0f\x12-\n" +
	"(ErrorCode_MeishiFollowCountLimitExceeded\x10\xd9\x0f\x12%\n" +
	" ErrorCode_MeishiDuplicatedFollow\x10\xda\x0f\x12\x1b\n" +
	"\x16ErrorCode_UserNotFound\x10\xdb\x0f\x12\x1c\n" +
	"\x17ErrorCode_GuildNotFound\x10\xdc\x0f\x12!\n" +
	"\x1cErrorCode_GuildAlreadyJoined\x10\xdd\x0f\x12\x1b\n" +
	"\x16ErrorCode_GuildDismiss\x10\xde\x0f\x12\x1d\n" +
	"\x18ErrorCode_MeishiNotFound\x10\xdf\x0f\x12#\n" +
	"\x1eErrorCode_InvalidPlayIntegrity\x10\xe0\x0f\x12\x1c\n" +
	"\x17ErrorCode_InMaintenance\x10\xe1\x0f\x12\x19\n" +
	"\x14ErrorCode_AccountBan\x10\xe2\x0f\x12\"\n" +
	"\x1dErrorCode_TemporaryAccountBan\x10\xe3\x0f\x12\x1a\n" +
	"\x15ErrorCode_PurchaseBan\x10\xe4\x0f\x12#\n" +
	"\x1eErrorCode_TemporaryPurchaseBan\x10\xe5\x0f\x122\n" +
	"-ErrorCode_RecoveryPurchaseTransactionNotFound\x10\xe6\x0f\x12\x1a\n" +
	"\x15ErrorCode_DataUpdated\x10\xe7\x0f\x12#\n" +
	"\x1eErrorCode_InFeatureMaintenance\x10\xe8\x0f\x12\x1d\n" +
	"\x18ErrorCode_NgWordContains\x10\xe9\x0f\x12\x1b\n" +
	"\x16ErrorCode_MigrationBan\x10\xea\x0f\x12$\n" +
	"\x1fErrorCode_TemporaryMigrationBan\x10\xeb\x0f\x12$\n" +
	"\x1fErrorCode_InvitationInvalidCode\x10\xec\x0f\x12&\n" +
	"!ErrorCode_AuthLinkAccountNotFound\x10\xed\x0f\x12\"\n" +
	"\x1dErrorCode_ShopInvalidBirthday\x10\xee\x0f\x12\x1e\n" +
	"\x19ErrorCode_RequestConflict\x10\xef\x0f\x12#\n" +
	"\x1eErrorCode_GameAuthTokenInvalid\x10\xf0\x0f\x12\x18\n" +
	"\x13ErrorCode_OutOfTerm\x10\xf1\x0f\x12\x1f\n" +
	"\x1aErrorCode_ConditionInvalid\x10\xf2\x0f\x123\n" +
	".ErrorCode_ShopExceedPurchaseThresholdOnRecover\x10\xf3\x0f\x122\n" +
	"-ErrorCode_ShopExceedMaxJewelQuantityOnRecover\x10\xf4\x0f\x12&\n" +
	"!ErrorCode_ShopExceedPurchaseLimit\x10\xf5\x0f\x12\x1e\n" +
	"\x19ErrorCode_UserDataUpdated\x10\xf6\x0f\x12#\n" +
	"\x1eErrorCode_DmmGamesIdDuplicated\x10\xf7\x0f\x121\n" +
	",ErrorCode_DmmGamesIdLinkAccountAlreadyExists\x10\xf8\x0f\x12/\n" +
	"*ErrorCode_DmmGamesIdLocalUserDataNotLinked\x10\xf9\x0f\x12/\n" +
	"*ErrorCode_ProduceOutdatedRentalSupportCard\x10\xfd\x11\x12*\n" +
	"%ErrorCode_ProduceOutdatedRentalMemory\x10\xfe\x11\x12%\n" +
	" ErrorCode_ProduceHistoryNotFound\x10\xff\x11\x12!\n" +
	"\x1cErrorCode_ProduceUuidInvalid\x10\x80\x12\x12\x1f\n" +
	"\x1aErrorCode_ProduceNeedReset\x10\x81\x12\x12)\n" +
	"$ErrorCode_ProduceClearTimeBanWarning\x10\x82\x12\x12)\n" +
	"$ErrorCode_GvgRaidStageAlreadyCleared\x10\xb8\x17\x12!\n" +
	"\x1cErrorCode_TowerProgressReset\x10\xe4\x19\x12#\n" +
	"\x1eErrorCode_BnidlinkUserNotFound\x10\x88'\x12(\n" +
	"#ErrorCode_BnidlinkMasterDataInvalid\x10\x89'*\xc4\x01\n" +
	"\x14EventStoryFilterType\x12 \n" +
	"\x1cEventStoryFilterType_Unknown\x10\x00\x12#\n" +
	"\x1fEventStoryFilterType_StoryEvent\x10\x01\x12$\n" +
	" EventStoryFilterType_SeasonEvent\x10\x02\x12 \n" +
	"\x1cEventStoryFilterType_GvgRaid\x10\x03\x12\x1d\n" +
	"\x19EventStoryFilterType_Tour\x10\x04*\xeb\x02\n" +
	"\tEventType\x12\x15\n" +
	"\x11EventType_Unknown\x10\x00\x12!\n" +
	"\x1dEventType_MissionDailyRelease\x10\x01\x12\x1a\n" +
	"\x16EventType_MissionPanel\x10\x02\x12\x1e\n" +
	"\x1aEventType_ProduceHighScore\x10\x03\x12\x1b\n" +
	"\x17EventType_StoryCampaign\x10\x04\x12\x18\n" +
	"\x14EventType_StoryEvent\x10\x05\x12!\n" +
	"\x1dEventType_StoryEventMainStory\x10\x06\x12 \n" +
	"\x1cEventType_StoryEventBoxGasha\x10\a\x12$\n" +
	" EventType_StoryEventGuildMission\x10\b\x12\x15\n" +
	"\x11EventType_GvgRaid\x10\t\x12\x1b\n" +
	"\x17EventType_DearnessBoost\x10\n" +
	"\x12\x12\n" +
	"\x0eEventType_Tour\x10\v*\xa6\x01\n" +
	"\x0eExamActionType\x12\x1a\n" +
	"\x16ExamActionType_Unknown\x10\x00\x12\x1a\n" +
	"\x16ExamActionType_UseHand\x10\x01\x12\x1b\n" +
	"\x17ExamActionType_UseDrink\x10\x02\x12\x1a\n" +
	"\x16ExamActionType_TurnEnd\x10\x03\x12#\n" +
	"\x1fExamActionType_EffectCardSelect\x10\x04*L\n" +
	"\x0fExamAiModelType\x12\x1b\n" +
	"\x17ExamAiModelType_Unknown\x10\x00\x12\x1c\n" +
	"\x18ExamAiModelType_Audition\x10\x01*\xcb\x04\n" +
	"\x0fExamCommandType\x12\x1b\n" +
	"\x17ExamCommandType_Unknown\x10\x00\x12\x1c\n" +
	"\x18ExamCommandType_TurnDraw\x10\x01\x12\x1b\n" +
	"\x17ExamCommandType_UseHand\x10\x02\x12\x1c\n" +
	"\x18ExamCommandType_UseDrink\x10\x03\x12\x1b\n" +
	"\x17ExamCommandType_UsePool\x10\x04\x12\x1e\n" +
	"\x1aExamCommandType_PlayEffect\x10\x05\x12 \n" +
	"\x1cExamCommandType_MovePlayCard\x10\x06\x12\x1d\n" +
	"\x19ExamCommandType_TurnCheck\x10\a\x12\x1f\n" +
	"\x1bExamCommandType_PhaseChange\x10\b\x12$\n" +
	" ExamCommandType_SeparateActivity\x10\t\x12#\n" +
	"\x1fExamCommandType_SeparateTrigger\x10\n" +
	"\x12(\n" +
	"$ExamCommandType_NoUsableCardActivity\x10\v\x12\x1b\n" +
	"\x17ExamCommandType_TurnEnd\x10\f\x12&\n" +
	"\"ExamCommandType_UserCardAfterCheck\x10\r\x12&\n" +
	"\"ExamCommandType_CardEnchantTrigger\x10\x0e\x12&\n" +
	"\"ExamCommandType_SupportCardUpgrade\x10\x0f\x12\x19\n" +
	"\x15ExamCommandType_Panic\x10\x10*\x8b\x02\n" +
	"\fExamCostType\x12\x18\n" +
	"\x14ExamCostType_Unknown\x10\x00\x12\x1f\n" +
	"\x1bExamCostType_ExamLessonBuff\x10\x01\x12\x1b\n" +
	"\x17ExamCostType_ExamReview\x10\x02\x12'\n" +
	"#ExamCostType_ExamCardPlayAggressive\x10\x03\x12\"\n" +
	"\x1eExamCostType_ExamParameterBuff\x10\x04\x12#\n" +
	"\x1fExamCostType_ExamFullPowerPoint\x10\x05\x121\n" +
	"-ExamCostType_ExamParameterBuffMultiplePerTurn\x10\x06*\x99\a\n" +
	"\x13ExamDescriptionType\x12\x1f\n" +
	"\x1bExamDescriptionType_Unknown\x10\x00\x12-\n" +
	")ExamDescriptionType_CustomizeEffectValue1\x10\x01\x12-\n" +
	")ExamDescriptionType_CustomizeEffectValue2\x10\x02\x12,\n" +
	"(ExamDescriptionType_CustomizeEffectCount\x10\x03\x12%\n" +
	"!ExamDescriptionType_CustomizeTurn\x10\x04\x12+\n" +
	"'ExamDescriptionType_CustomizeInitialAdd\x10\x05\x125\n" +
	"1ExamDescriptionType_CustomizePlayMovePositionLost\x10\x06\x12*\n" +
	"&ExamDescriptionType_CustomizeEffectAdd\x10\a\x12/\n" +
	"+ExamDescriptionType_CustomizeLessonCountAdd\x10\b\x12*\n" +
	"&ExamDescriptionType_CustomizeCostValue\x10\t\x12!\n" +
	"\x1dExamDescriptionType_ExamValue\x10\n" +
	"\x12\"\n" +
	"\x1eExamDescriptionType_ExamValue2\x10\v\x12 \n" +
	"\x1cExamDescriptionType_ExamTurn\x10\f\x12%\n" +
	"!ExamDescriptionType_ExamTurnTimer\x10\r\x12!\n" +
	"\x1dExamDescriptionType_ExamCount\x10\x0e\x12D\n" +
	"@ExamDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName\x10\x0f\x12-\n" +
	")ExamDescriptionType_ExamProduceExamEffect\x10\x10\x12-\n" +
	")ExamDescriptionType_ExamProduceCardSearch\x10\x11\x124\n" +
	"0ExamDescriptionType_CustomizeEffectValuePercent1\x10\x14\x124\n" +
	"0ExamDescriptionType_CustomizeEffectValuePercent2\x10\x15*\xb6\x01\n" +
	"\fExamGameType\x12\x18\n" +
	"\x14ExamGameType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aExamGameType_ProduceLesson\x10\x01\x12 \n" +
	"\x1cExamGameType_ProduceAudition\x10\x02\x12\x18\n" +
	"\x14ExamGameType_PvpRate\x10\x03\x12\x16\n" +
	"\x12ExamGameType_Tower\x10\x04\x12\x18\n" +
	"\x14ExamGameType_GvgRaid\x10\x05*\xca\x01\n" +
	"\x12ExamIdolStatusType\x12\x1e\n" +
	"\x1aExamIdolStatusType_Unknown\x10\x00\x12$\n" +
	" ExamIdolStatusType_Concentration\x10\x01\x12#\n" +
	"\x1fExamIdolStatusType_Preservation\x10\x02\x12 \n" +
	"\x1cExamIdolStatusType_FullPower\x10\x03\x12'\n" +
	"#ExamIdolStatusType_OverPreservation\x10\x04*\xef\x02\n" +
	"\x14ExamMotionTargetType\x12 \n" +
	"\x1cExamMotionTargetType_Unknown\x10\x00\x12$\n" +
	" ExamMotionTargetType_VocalLesson\x10\x02\x12$\n" +
	" ExamMotionTargetType_DanceLesson\x10\x03\x12%\n" +
	"!ExamMotionTargetType_VisualLesson\x10\x04\x12(\n" +
	"$ExamMotionTargetType_VocalLessonHard\x10\x05\x12(\n" +
	"$ExamMotionTargetType_DanceLessonHard\x10\x06\x12)\n" +
	"%ExamMotionTargetType_VisualLessonHard\x10\a\x12!\n" +
	"\x1dExamMotionTargetType_Audition\x10\b\x12 \n" +
	"\x1cExamMotionTargetType_Contest\x10\t*\x9d\x02\n" +
	"\x0eExamMotionType\x12\x1a\n" +
	"\x16ExamMotionType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aExamMotionType_ParameterUp\x10\x01\x12#\n" +
	"\x1fExamMotionType_ParameterUpLarge\x10\x02\x12\x1b\n" +
	"\x17ExamMotionType_BlockAdd\x10\x03\x12\x17\n" +
	"\x13ExamMotionType_Buff\x10\x04\x12\x19\n" +
	"\x15ExamMotionType_Debuff\x10\x05\x12\x17\n" +
	"\x13ExamMotionType_Wait\x10\x06\x12#\n" +
	"\x1fExamMotionType_NoMotionUseDrink\x10\a\x12\x1b\n" +
	"\x17ExamMotionType_WaitOnce\x10\b*\x9a\x02\n" +
	"\x15ExamOutGameMotionType\x12!\n" +
	"\x1dExamOutGameMotionType_Unknown\x10\x00\x12 \n" +
	"\x1cExamOutGameMotionType_Start1\x10\x01\x12 \n" +
	"\x1cExamOutGameMotionType_Start2\x10\x02\x12'\n" +
	"#ExamOutGameMotionType_ResultPerfect\x10\x03\x12'\n" +
	"#ExamOutGameMotionType_ResultSuccess\x10\x04\x12'\n" +
	"#ExamOutGameMotionType_ResultFailure\x10\x05\x12\x1f\n" +
	"\x1bExamOutGameMotionType_Clear\x10\x06*\xf7\x01\n" +
	"\rExamPhaseType\x12\x19\n" +
	"\x15ExamPhaseType_Unknown\x10\x00\x12\x1d\n" +
	"\x19ExamPhaseType_ExamStandBy\x10\x01\x12\x1b\n" +
	"\x17ExamPhaseType_TurnStart\x10\x02\x12 \n" +
	"\x1cExamPhaseType_TurnStartAfter\x10\x03\x12\x1f\n" +
	"\x1bExamPhaseType_TurnStartDraw\x10\x04\x12\x16\n" +
	"\x12ExamPhaseType_Main\x10\x05\x12\x19\n" +
	"\x15ExamPhaseType_TurnEnd\x10\x06\x12\x19\n" +
	"\x15ExamPhaseType_ExamEnd\x10\a*\xb2\x01\n" +
	"\fExamPlayType\x12\x18\n" +
	"\x14ExamPlayType_Unknown\x10\x00\x12\x19\n" +
	"\x15ExamPlayType_AutoPlay\x10\x01\x12!\n" +
	"\x1dExamPlayType_ManualPlayLesson\x10\x02\x12%\n" +
	"!ExamPlayType_ManualPlayLessonHard\x10\x03\x12#\n" +
	"\x1fExamPlayType_ManualPlayAudition\x10\x04*\xc6\x14\n" +
	"\x14ExamStatusEffectType\x12 \n" +
	"\x1cExamStatusEffectType_Unknown\x10\x00\x12&\n" +
	"\"ExamStatusEffectType_ParameterBuff\x10\x01\x12(\n" +
	"$ExamStatusEffectType_ParameterDebuff\x10\x02\x12%\n" +
	"!ExamStatusEffectType_Enthusiastic\x10\x03\x12#\n" +
	"\x1fExamStatusEffectType_LessonBuff\x10\x04\x12%\n" +
	"!ExamStatusEffectType_LessonDebuff\x10\x05\x120\n" +
	",ExamStatusEffectType_LessonParameterMultiple\x10\x06\x124\n" +
	"0ExamStatusEffectType_LessonParameterBuffMultiple\x10\a\x12.\n" +
	"*ExamStatusEffectType_StaminaConsumptionAdd\x10\b\x121\n" +
	"-ExamStatusEffectType_StaminaConsumptionAddFix\x10\t\x12/\n" +
	"+ExamStatusEffectType_StaminaConsumptionDown\x10\n" +
	"\x122\n" +
	".ExamStatusEffectType_StaminaConsumptionDownFix\x10\v\x12%\n" +
	"!ExamStatusEffectType_BlockAddDown\x10\f\x12(\n" +
	"$ExamStatusEffectType_BlockAddDownFix\x10\r\x122\n" +
	".ExamStatusEffectType_StaminaConsumptionAddDown\x10\x0e\x122\n" +
	".ExamStatusEffectType_StaminaConsumptionDownAdd\x10\x0f\x12*\n" +
	"&ExamStatusEffectType_StaminaRecoverAdd\x10\x10\x12,\n" +
	"(ExamStatusEffectType_StaminaReduceChange\x10\x11\x12)\n" +
	"%ExamStatusEffectType_BlockRestriction\x10\x12\x120\n" +
	",ExamStatusEffectType_BlockAddDownRestriction\x10\x13\x122\n" +
	".ExamStatusEffectType_StaminaRecoverRestriction\x10\x14\x12&\n" +
	"\"ExamStatusEffectType_PlayCountBuff\x10\x15\x121\n" +
	"-ExamStatusEffectType_SearchPlayCardCostChange\x10\x16\x122\n" +
	".ExamStatusEffectType_SearchPlayCardLimitLesson\x10\x18\x121\n" +
	"-ExamStatusEffectType_SearchPlayCardLimitPower\x10\x19\x121\n" +
	"-ExamStatusEffectType_SearchPlayCardLimitSkill\x10\x1a\x12!\n" +
	"\x1dExamStatusEffectType_HandHold\x10\x1b\x12$\n" +
	" ExamStatusEffectType_EffectTimer\x10\x1e\x12&\n" +
	"\"ExamStatusEffectType_TriggerEffect\x10\x1f\x12-\n" +
	")ExamStatusEffectType_ExamPlayableValueAdd\x10\"\x12\x1f\n" +
	"\x1bExamStatusEffectType_Review\x10#\x12,\n" +
	"(ExamStatusEffectType_ReviewValueMultiple\x10$\x12\"\n" +
	"\x1eExamStatusEffectType_Uplifting\x10%\x12#\n" +
	"\x1fExamStatusEffectType_Aggressive\x10&\x12.\n" +
	"*ExamStatusEffectType_StartTurnCardDrawDown\x10(\x12\x1e\n" +
	"\x1aExamStatusEffectType_Slump\x10)\x12'\n" +
	"#ExamStatusEffectType_FullPowerPoint\x10*\x12#\n" +
	"\x1fExamStatusEffectType_AntiDebuff\x10+\x12'\n" +
	"#ExamStatusEffectType_GetCardUpgrade\x10-\x124\n" +
	"0ExamStatusEffectType_LessonChangeSpecifyLessThan\x10/\x124\n" +
	"0ExamStatusEffectType_LessonChangeSpecifyMoreThan\x100\x12\x1e\n" +
	"\x1aExamStatusEffectType_Panic\x101\x125\n" +
	"1ExamStatusEffectType_ParameterBuffMultiplePerTurn\x102\x12#\n" +
	"\x1fExamStatusEffectType_StanceLock\x103\x124\n" +
	"0ExamStatusEffectType_LessonParameterMultipleDown\x104\x12-\n" +
	")ExamStatusEffectType_EnthusiasticAdditive\x105\x12-\n" +
	")ExamStatusEffectType_EnthusiasticMultiple\x106\x128\n" +
	"4ExamStatusEffectType_FullPowerLessonMultipleAdditive\x107\x12<\n" +
	"8ExamStatusEffectType_ConcentrationLessonMultipleAdditive\x108\x12+\n" +
	"'ExamStatusEffectType_LessonBuffAdditive\x109\x12.\n" +
	"*ExamStatusEffectType_ParameterBuffAdditive\x10:\x12+\n" +
	"'ExamStatusEffectType_AggressiveAdditive\x10;\x12'\n" +
	"#ExamStatusEffectType_ReviewAdditive\x10<\x12/\n" +
	"+ExamStatusEffectType_FullPowerPointAdditive\x10=\x124\n" +
	"0ExamStatusEffectType_GrowEffectLessonAddAdditive\x10>\x12'\n" +
	"#ExamStatusEffectType_ReviewMultiple\x10?\x12H\n" +
	"DExamStatusEffectType_LessonParameterMultipleDependReviewOrAggressive\x10@*\xd9\x01\n" +
	"\x18ExchangeItemCategoryType\x12$\n" +
	" ExchangeItemCategoryType_Unknown\x10\x00\x12 \n" +
	"\x1cExchangeItemCategoryType_All\x10\x01\x12)\n" +
	"%ExchangeItemCategoryType_ResourceType\x10\x02\x12%\n" +
	"!ExchangeItemCategoryType_ItemType\x10\x03\x12#\n" +
	"\x1eExchangeItemCategoryType_Other\x10\xe7\a*\x98\x01\n" +
	"\x1cExchangeItemResetCheckStatus\x12(\n" +
	"$ExchangeItemResetCheckStatus_Unknown\x10\x00\x12%\n" +
	"!ExchangeItemResetCheckStatus_Open\x10\x01\x12'\n" +
	"#ExchangeItemResetCheckStatus_Locked\x10\x02*o\n" +
	"\fExchangeType\x12\x18\n" +
	"\x14ExchangeType_Unknown\x10\x00\x12\x16\n" +
	"\x12ExchangeType_Daily\x10\x01\x12\x15\n" +
	"\x11ExchangeType_Item\x10\x02\x12\x16\n" +
	"\x12ExchangeType_Event\x10\x03*\xd3\x06\n" +
	"\x16FeatureMaintenanceType\x12\"\n" +
	"\x1eFeatureMaintenanceType_Unknown\x10\x00\x12#\n" +
	"\x1fFeatureMaintenanceType_Exchange\x10\x01\x12\x1f\n" +
	"\x1bFeatureMaintenanceType_Shop\x10\x02\x12\x1f\n" +
	"\x1bFeatureMaintenanceType_Work\x10\x03\x12\"\n" +
	"\x1eFeatureMaintenanceType_Mission\x10\x04\x12$\n" +
	" FeatureMaintenanceType_CoinGasha\x10\x05\x12&\n" +
	"\"FeatureMaintenanceType_MissionPass\x10\x06\x12 \n" +
	"\x1cFeatureMaintenanceType_Gasha\x10\a\x12 \n" +
	"\x1cFeatureMaintenanceType_Guild\x10\b\x12\"\n" +
	"\x1eFeatureMaintenanceType_Produce\x10\t\x12\"\n" +
	"\x1eFeatureMaintenanceType_PvpRate\x10\n" +
	"\x12 \n" +
	"\x1cFeatureMaintenanceType_Tower\x10\v\x12)\n" +
	"%FeatureMaintenanceType_TicketExchange\x10\f\x12\"\n" +
	"\x1eFeatureMaintenanceType_ShopTop\x10\r\x12%\n" +
	"!FeatureMaintenanceType_StoryEvent\x10\x0e\x12+\n" +
	"'FeatureMaintenanceType_ProduceHighScore\x10\x0f\x12'\n" +
	"#FeatureMaintenanceType_MissionPanel\x10\x10\x12.\n" +
	"*FeatureMaintenanceType_MissionDailyRelease\x10\x11\x12(\n" +
	"$FeatureMaintenanceType_StoryCampaign\x10\x12\x12\"\n" +
	"\x1eFeatureMaintenanceType_GvgRaid\x10\x13\x12#\n" +
	"\x1fFeatureMaintenanceType_Dearness\x10\x14\x12\x1f\n" +
	"\x1bFeatureMaintenanceType_Tour\x10\x15*w\n" +
	"\x14FourPanelComicSeries\x12 \n" +
	"\x1cFourPanelComicSeries_Unknown\x10\x00\x12\x1e\n" +
	"\x1aFourPanelComicSeries_Radio\x10\x01\x12\x1d\n" +
	"\x19FourPanelComicSeries_Live\x10\x02*\xaa\x01\n" +
	"\x10FriendStatusType\x12\x1c\n" +
	"\x18FriendStatusType_Unknown\x10\x00\x12\x19\n" +
	"\x15FriendStatusType_None\x10\x01\x12!\n" +
	"\x1dFriendStatusType_MutualFollow\x10\x02\x12\x1b\n" +
	"\x17FriendStatusType_Follow\x10\x03\x12\x1d\n" +
	"\x19FriendStatusType_Follower\x10\x04*\xbb\x01\n" +
	"\x14GashaAnimationRarity\x12 \n" +
	"\x1cGashaAnimationRarity_Unknown\x10\x00\x12\x1a\n" +
	"\x16GashaAnimationRarity_R\x10\x01\x12\x1b\n" +
	"\x17GashaAnimationRarity_Sr\x10\x02\x12\x1c\n" +
	"\x18GashaAnimationRarity_Ssr\x10\x03\x12*\n" +
	"&GashaAnimationRarity_PickupSsridolCard\x10\x04*\xbb\x03\n" +
	"\x16GashaAnimationStepType\x12\"\n" +
	"\x1eGashaAnimationStepType_Unknown\x10\x00\x12 \n" +
	"\x1cGashaAnimationStepType_Start\x10\x01\x12\x1e\n" +
	"\x1aGashaAnimationStepType_Tap\x10\x02\x12\"\n" +
	"\x1eGashaAnimationStepType_Monitor\x10\x03\x12 \n" +
	"\x1cGashaAnimationStepType_Step1\x10\x04\x12 \n" +
	"\x1cGashaAnimationStepType_Step2\x10\x05\x12 \n" +
	"\x1cGashaAnimationStepType_Step3\x10\x06\x12 \n" +
	"\x1cGashaAnimationStepType_Step4\x10\a\x12!\n" +
	"\x1dGashaAnimationStepType_Freeze\x10\b\x12&\n" +
	"\"GashaAnimationStepType_FreezeAfter\x10\t\x12$\n" +
	" GashaAnimationStepType_LightList\x10\n" +
	"\x12\x1e\n" +
	"\x1aGashaAnimationStepType_End\x10\v*\x83\x02\n" +
	"\x15GashaButtonAppealType\x12!\n" +
	"\x1dGashaButtonAppealType_Unknown\x10\x00\x12$\n" +
	" GashaButtonAppealType_AppealText\x10\x01\x12'\n" +
	"#GashaButtonAppealType_DrawableCount\x10\x02\x12%\n" +
	"!GashaButtonAppealType_CurrentStep\x10\x03\x12 \n" +
	"\x1cGashaButtonAppealType_FixSsr\x10\x04\x12/\n" +
	"+GashaButtonAppealType_DiscountDrawableCount\x10\x05*g\n" +
	"\x0fGashaButtonType\x12\x1b\n" +
	"\x17GashaButtonType_Unknown\x10\x00\x12\x1a\n" +
	"\x16GashaButtonType_Static\x10\x01\x12\x1b\n" +
	"\x17GashaButtonType_Dynamic\x10\x02*\xe0\x01\n" +
	"\x12GashaCardBonusType\x12\x1e\n" +
	"\x1aGashaCardBonusType_Unknown\x10\x00\x12\x1a\n" +
	"\x16GashaCardBonusType_All\x10\x01\x12\"\n" +
	"\x1eGashaCardBonusType_IdolCardAll\x10\x02\x12%\n" +
	"!GashaCardBonusType_SupportCardAll\x10\x03\x12\x1f\n" +
	"\x1bGashaCardBonusType_IdolCard\x10\x04\x12\"\n" +
	"\x1eGashaCardBonusType_SupportCard\x10\x05*\xca\x01\n" +
	"\x0eGashaLimitType\x12\x1a\n" +
	"\x16GashaLimitType_Unknown\x10\x00\x12\x17\n" +
	"\x13GashaLimitType_None\x10\x01\x12\x18\n" +
	"\x14GashaLimitType_Total\x10\x02\x12\x18\n" +
	"\x14GashaLimitType_Daily\x10\x03\x12$\n" +
	" GashaLimitType_DailyAccumulation\x10\x04\x12)\n" +
	"%GashaLimitType_DailyLoginAccumulation\x10\x05*k\n" +
	"\tGashaType\x12\x15\n" +
	"\x11GashaType_Unknown\x10\x00\x12\x15\n" +
	"\x11GashaType_Default\x10\x01\x12\x14\n" +
	"\x10GashaType_StepUp\x10\x02\x12\x1a\n" +
	"\x16GashaType_SelectPickup\x10\x03*\xed\x01\n" +
	"\x0eGiftFilterType\x12\x1a\n" +
	"\x16GiftFilterType_Unknown\x10\x00\x12\x18\n" +
	"\x14GiftFilterType_Jewel\x10\x01\x12\x1b\n" +
	"\x17GiftFilterType_IdolCard\x10\x02\x12\x1e\n" +
	"\x1aGiftFilterType_SupportCard\x10\x03\x12\x19\n" +
	"\x15GiftFilterType_Memory\x10\x04\x12\x17\n" +
	"\x13GiftFilterType_Item\x10\x05\x12\x1a\n" +
	"\x16GiftFilterType_Costume\x10\x06\x12\x18\n" +
	"\x14GiftFilterType_Other\x10c*\xfe\x01\n" +
	"\x17GuildActivityPolicyType\x12#\n" +
	"\x1fGuildActivityPolicyType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aGuildActivityPolicyType__1\x10\x01\x12\x1e\n" +
	"\x1aGuildActivityPolicyType__2\x10\x02\x12\x1e\n" +
	"\x1aGuildActivityPolicyType__3\x10\x03\x12\x1e\n" +
	"\x1aGuildActivityPolicyType__4\x10\x04\x12\x1e\n" +
	"\x1aGuildActivityPolicyType__5\x10\x05\x12\x1e\n" +
	"\x1aGuildActivityPolicyType__6\x10\x06*\xb4\x01\n" +
	"\x19GuildJoinRequestRouteType\x12%\n" +
	"!GuildJoinRequestRouteType_Unknown\x10\x00\x12$\n" +
	" GuildJoinRequestRouteType_Search\x10\x01\x12 \n" +
	"\x1cGuildJoinRequestRouteType_Id\x10\x02\x12(\n" +
	"$GuildJoinRequestRouteType_Suggestion\x10\x03*a\n" +
	"\rGuildJoinType\x12\x19\n" +
	"\x15GuildJoinType_Unknown\x10\x00\x12\x1b\n" +
	"\x17GuildJoinType_NotJoined\x10\x01\x12\x18\n" +
	"\x14GuildJoinType_Joined\x10\x02*\x85\x02\n" +
	"\x15GuildMissionPhaseType\x12!\n" +
	"\x1dGuildMissionPhaseType_Unknown\x10\x00\x126\n" +
	"2GuildMissionPhaseType_ProduceConditionSet1Unlocked\x10\x01\x126\n" +
	"2GuildMissionPhaseType_ProduceConditionSet2Unlocked\x10\x02\x126\n" +
	"2GuildMissionPhaseType_ProduceConditionSet3Unlocked\x10\x03\x12!\n" +
	"\x1dGuildMissionPhaseType_Cleared\x10c*}\n" +
	"\x15GuildNotificationType\x12!\n" +
	"\x1dGuildNotificationType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aGuildNotificationType_Join\x10\x01\x12!\n" +
	"\x1dGuildNotificationType_Dismiss\x10\x02*\x80\x01\n" +
	"\rGuildRoleType\x12\x19\n" +
	"\x15GuildRoleType_Unknown\x10\x00\x12\x18\n" +
	"\x14GuildRoleType_Member\x10\x01\x12\x18\n" +
	"\x14GuildRoleType_Leader\x10\x02\x12 \n" +
	"\x1bGuildRoleType_JoinRequester\x10\xe7\a*\xc6\x01\n" +
	"\x1fGuildSearchMemberCountRangeType\x12+\n" +
	"'GuildSearchMemberCountRangeType_Unknown\x10\x00\x12&\n" +
	"\"GuildSearchMemberCountRangeType__1\x10\x01\x12&\n" +
	"\"GuildSearchMemberCountRangeType__2\x10\x02\x12&\n" +
	"\"GuildSearchMemberCountRangeType__3\x10\x03*\xad\x01\n" +
	"\x18GvgRaidStageIconSizeType\x12$\n" +
	" GvgRaidStageIconSizeType_Unknown\x10\x00\x12\"\n" +
	"\x1eGvgRaidStageIconSizeType_Small\x10\x01\x12#\n" +
	"\x1fGvgRaidStageIconSizeType_Medium\x10\x02\x12\"\n" +
	"\x1eGvgRaidStageIconSizeType_Large\x10\x03*\xbe\x01\n" +
	"\x10HomeLocationType\x12\x1c\n" +
	"\x18HomeLocationType_Unknown\x10\x00\x12\x19\n" +
	"\x15HomeLocationType_Home\x10\x01\x12\x19\n" +
	"\x15HomeLocationType_Idol\x10\x02\x12\x1c\n" +
	"\x18HomeLocationType_Contest\x10\x03\x12\x1b\n" +
	"\x17HomeLocationType_Story1\x10\x04\x12\x1b\n" +
	"\x17HomeLocationType_Story2\x10\x05*\x9e\x02\n" +
	"\x0eHomeMotionType\x12\x1a\n" +
	"\x16HomeMotionType_Unknown\x10\x00\x12\x18\n" +
	"\x14HomeMotionType_Wait1\x10\x01\x12\x18\n" +
	"\x14HomeMotionType_Wait2\x10\x02\x12\x1b\n" +
	"\x17HomeMotionType_Reaction\x10\x03\x12\x1f\n" +
	"\x1bHomeMotionType_ReactionOnce\x10\x04\x12!\n" +
	"\x1dHomeMotionType_WaitLookAround\x10\x05\x12\x1f\n" +
	"\x1bHomeMotionType_MultipleTaps\x10\x06\x12\x1d\n" +
	"\x19HomeMotionType_Transition\x10\a\x12\x1b\n" +
	"\x17HomeMotionType_WaitOnce\x10\b*\x8e\x01\n" +
	"\fHomeTimeType\x12\x18\n" +
	"\x14HomeTimeType_Unknown\x10\x00\x12\x18\n" +
	"\x14HomeTimeType_Morning\x10\x01\x12\x18\n" +
	"\x14HomeTimeType_Daytime\x10\x02\x12\x18\n" +
	"\x14HomeTimeType_Evening\x10\x03\x12\x16\n" +
	"\x12HomeTimeType_Night\x10\x04*p\n" +
	"\bHomeType\x12\x14\n" +
	"\x10HomeType_Unknown\x10\x00\x12\x11\n" +
	"\rHomeType_Home\x10\x01\x12\x11\n" +
	"\rHomeType_Idol\x10\x02\x12\x14\n" +
	"\x10HomeType_Contest\x10\x03\x12\x12\n" +
	"\x0eHomeType_Story\x10\x04*\xa0\x01\n" +
	"\x16IdolCardDifficultyType\x12\"\n" +
	"\x1eIdolCardDifficultyType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aIdolCardDifficultyType_Low\x10\x01\x12!\n" +
	"\x1dIdolCardDifficultyType_Middle\x10\x02\x12\x1f\n" +
	"\x1bIdolCardDifficultyType_High\x10\x03*\x8d\x02\n" +
	"\x1cIdolCardLevelLimitEffectType\x12(\n" +
	"$IdolCardLevelLimitEffectType_Unknown\x10\x00\x123\n" +
	"/IdolCardLevelLimitEffectType_ProduceCardUpgrade\x10\x01\x12.\n" +
	"*IdolCardLevelLimitEffectType_ProduceVoDaVi\x10\x02\x12/\n" +
	"+IdolCardLevelLimitEffectType_ProduceStamina\x10\x03\x12-\n" +
	")IdolCardLevelLimitEffectType_ProduceSkill\x10\x04*\xd3\x02\n" +
	"\x16IdolCardLevelLimitRank\x12\"\n" +
	"\x1eIdolCardLevelLimitRank_Unknown\x10\x00\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__1\x10\x01\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__2\x10\x02\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__3\x10\x03\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__4\x10\x04\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__5\x10\x05\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__6\x10\x06\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__7\x10\a\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__8\x10\b\x12\x1d\n" +
	"\x19IdolCardLevelLimitRank__9\x10\t*\x9d\x02\n" +
	"\x1bIdolCardPotentialEffectType\x12'\n" +
	"#IdolCardPotentialEffectType_Unknown\x10\x00\x12=\n" +
	"9IdolCardPotentialEffectType_ProduceVoDaViGrowthRatePermil\x10\x01\x12.\n" +
	"*IdolCardPotentialEffectType_ProduceStamina\x10\x02\x128\n" +
	"4IdolCardPotentialEffectType_InitialProduceItemChange\x10\x03\x12,\n" +
	"(IdolCardPotentialEffectType_ProduceSkill\x10\x04*\xb2\x01\n" +
	"\x15IdolCardPotentialRank\x12!\n" +
	"\x1dIdolCardPotentialRank_Unknown\x10\x00\x12\x1c\n" +
	"\x18IdolCardPotentialRank__1\x10\x01\x12\x1c\n" +
	"\x18IdolCardPotentialRank__2\x10\x02\x12\x1c\n" +
	"\x18IdolCardPotentialRank__3\x10\x03\x12\x1c\n" +
	"\x18IdolCardPotentialRank__4\x10\x04*q\n" +
	"\x0eIdolCardRarity\x12\x1a\n" +
	"\x16IdolCardRarity_Unknown\x10\x00\x12\x14\n" +
	"\x10IdolCardRarity_R\x10\x01\x12\x15\n" +
	"\x11IdolCardRarity_Sr\x10\x02\x12\x16\n" +
	"\x12IdolCardRarity_Ssr\x10\x03*\xb6\x01\n" +
	"\x17IdolSkillPossessionType\x12#\n" +
	"\x1fIdolSkillPossessionType_Unknown\x10\x00\x12&\n" +
	"\"IdolSkillPossessionType_IdolSkill1\x10\x01\x12&\n" +
	"\"IdolSkillPossessionType_IdolSkill2\x10\x02\x12&\n" +
	"\"IdolSkillPossessionType_IdolSkill3\x10\x03*o\n" +
	"\n" +
	"ItemRarity\x12\x16\n" +
	"\x12ItemRarity_Unknown\x10\x00\x12\x10\n" +
	"\fItemRarity_N\x10\x01\x12\x10\n" +
	"\fItemRarity_R\x10\x02\x12\x11\n" +
	"\rItemRarity_Sr\x10\x03\x12\x12\n" +
	"\x0eItemRarity_Ssr\x10\x04*\xfd\x05\n" +
	"\bItemType\x12\x14\n" +
	"\x10ItemType_Unknown\x10\x00\x12\x12\n" +
	"\x0eItemType_Money\x10\x01\x12\x1c\n" +
	"\x18ItemType_ProduceContinue\x10\x02\x12$\n" +
	" ItemType_SupportCardEnhancePoint\x10\x03\x12 \n" +
	"\x1cItemType_ActionPointRecovery\x10\x04\x12'\n" +
	"#ItemType_IdolCardLevelLimitMaterial\x10\x05\x12 \n" +
	"\x1cItemType_ProduceRerollMemory\x10\x06\x12\x18\n" +
	"\x14ItemType_GashaTicket\x10\a\x12\x11\n" +
	"\rItemType_Coin\x10\b\x12\x1d\n" +
	"\x19ItemType_ExchangeMaterial\x10\t\x12\x12\n" +
	"\x0eItemType_Medal\x10\n" +
	"\x12\x1a\n" +
	"\x16ItemType_IdolCardPiece\x10\v\x12\x17\n" +
	"\x13ItemType_FriendCoin\x10\f\x12\x18\n" +
	"\x14ItemType_PvpRateCoin\x10\r\x12\x1b\n" +
	"\x17ItemType_StoryUnlockKey\x10\x0e\x12\x1b\n" +
	"\x17ItemType_ExchangeTicket\x10\x0f\x12\"\n" +
	"\x1eItemType_ProduceLiveUnlockItem\x10\x10\x12)\n" +
	"%ItemType_IdolCardPotentialRankUpgrade\x10\x11\x12-\n" +
	")ItemType_SupportCardLevelLimitRankUpgrade\x10\x12\x12\x1a\n" +
	"\x16ItemType_MemoryInherit\x10\x13\x12 \n" +
	"\x1cItemType_DearnessStoryUnlock\x10\x14\x126\n" +
	"2ItemType_ProduceBoostRewardSupportCardEnhancePoint\x10f\x129\n" +
	"5ItemType_ProduceBoostRewardIdolCardLevelLimitMaterial\x10g*U\n" +
	"\bLangType\x12\x14\n" +
	"\x10LangType_Unknown\x10\x00\x12\x0f\n" +
	"\vLangType_Ja\x10\x01\x12\x0f\n" +
	"\vLangType_Ko\x10\x02\x12\x11\n" +
	"\rLangType_ZhTw\x10\x03*\x8f\a\n" +
	"\bLinkType\x12\x14\n" +
	"\x10LinkType_Unknown\x10\x00\x12\x12\n" +
	"\x0eLinkType_Story\x10\x01\x12\x13\n" +
	"\x0fLinkType_Notice\x10\x02\x12\x14\n" +
	"\x10LinkType_Seminar\x10\x03\x12\x14\n" +
	"\x10LinkType_Produce\x10\x04\x12\x13\n" +
	"\x0fLinkType_Memory\x10\x05\x12\x16\n" +
	"\x12LinkType_CoinGasha\x10\a\x12\x1b\n" +
	"\x17LinkType_TicketExchange\x10\t\x12\x18\n" +
	"\x14LinkType_MissionPass\x10\n" +
	"\x12\x19\n" +
	"\x15LinkType_MissionGroup\x10\v\x12 \n" +
	"\x1cLinkType_MissionDailyRelease\x10\f\x12\x19\n" +
	"\x15LinkType_MissionPanel\x10\r\x12\x12\n" +
	"\x0eLinkType_Music\x10\x0e\x12\x12\n" +
	"\x0eLinkType_Guild\x10\x0f\x12\x13\n" +
	"\x0fLinkType_Friend\x10\x10\x12\x17\n" +
	"\x13LinkType_MediaMovie\x10\x11\x12\x17\n" +
	"\x13LinkType_MediaComic\x10\x12\x12\x17\n" +
	"\x13LinkType_Invitation\x10\x13\x12\x14\n" +
	"\x10LinkType_PvpRate\x10\x14\x12\x13\n" +
	"\x0fLinkType_Meishi\x10\x15\x12\x17\n" +
	"\x13LinkType_StoryEvent\x10\x16\x12\x1d\n" +
	"\x19LinkType_ProduceHighScore\x10\x17\x12\x12\n" +
	"\x0eLinkType_Tower\x10\x18\x12\x12\n" +
	"\x0eLinkType_Gasha\x10\x19\x12\x16\n" +
	"\x12LinkType_ShopJewel\x10\x1a\x12\x15\n" +
	"\x11LinkType_ShopPass\x10\x1b\x12\x15\n" +
	"\x11LinkType_ShopPack\x10\x1c\x12\x1a\n" +
	"\x16LinkType_ExchangeDaily\x10\x1d\x12\x19\n" +
	"\x15LinkType_ExchangeItem\x10\x1e\x12\x1a\n" +
	"\x16LinkType_ExchangeEvent\x10\x1f\x12 \n" +
	"\x1cLinkType_MediaFourPanelComic\x10 \x12\x15\n" +
	"\x11LinkType_PhotoTop\x10!\x12\x16\n" +
	"\x12LinkType_PhotoIdol\x10\"\x12\x14\n" +
	"\x10LinkType_GvgRaid\x10#\x12\x18\n" +
	"\x14LinkType_ShopCostume\x10$\x12\x1c\n" +
	"\x18LinkType_PhotoLiveSelect\x10%\x12\x11\n" +
	"\rLinkType_Tour\x10&*\x7f\n" +
	"\x0eLoginBonusType\x12\x1a\n" +
	"\x16LoginBonusType_Unknown\x10\x00\x12\x19\n" +
	"\x15LoginBonusType_Normal\x10\x01\x12\x1a\n" +
	"\x16LoginBonusType_Event3D\x10\x02\x12\x1a\n" +
	"\x16LoginBonusType_Event2D\x10\x03*\xb3\x01\n" +
	"\fMainTaskType\x12\x18\n" +
	"\x14MainTaskType_Unknown\x10\x00\x12\x1a\n" +
	"\x16MainTaskType_MainStory\x10\x01\x12\x19\n" +
	"\x15MainTaskType_Producer\x10\x02\x12\x1a\n" +
	"\x16MainTaskType_Producer2\x10\x03\x12\x1a\n" +
	"\x16MainTaskType_Producer3\x10\x04\x12\x1a\n" +
	"\x16MainTaskType_Producer4\x10\x05*\xa2\x01\n" +
	"\tMediaType\x12\x15\n" +
	"\x11MediaType_Unknown\x10\x00\x12\x13\n" +
	"\x0fMediaType_Movie\x10\x01\x12\x13\n" +
	"\x0fMediaType_Comic\x10\x02\x12\x13\n" +
	"\x0fMediaType_Other\x10\x03\x12\x1c\n" +
	"\x18MediaType_FourPanelComic\x10\x04\x12!\n" +
	"\x1dMediaType_FourPanelComicOther\x10\x05*\xc7\x01\n" +
	"\x13MeishiBaseAssetType\x12\x1f\n" +
	"\x1bMeishiBaseAssetType_Unknown\x10\x00\x12'\n" +
	"#MeishiBaseAssetType_StoryBackground\x10\x01\x12(\n" +
	"$MeishiBaseAssetType_CommonBackground\x10\x02\x12\x1d\n" +
	"\x19MeishiBaseAssetType_Frame\x10\x03\x12\x1d\n" +
	"\x19MeishiBaseAssetType_Other\x10c*\x93\x02\n" +
	"\x16MeishiIllustrationType\x12\"\n" +
	"\x1eMeishiIllustrationType_Unknown\x10\x00\x12\x1f\n" +
	"\x1bMeishiIllustrationType_Idol\x10\x01\x12&\n" +
	"\"MeishiIllustrationType_Sdcharacter\x10\x02\x12#\n" +
	"\x1fMeishiIllustrationType_IdolSign\x10\x03\x12\x1f\n" +
	"\x1bMeishiIllustrationType_Logo\x10\x04\x12$\n" +
	" MeishiIllustrationType_PictoIcon\x10\x05\x12 \n" +
	"\x1cMeishiIllustrationType_Other\x10c*\xfe\x04\n" +
	"\x10MeishiObjectType\x12\x1c\n" +
	"\x18MeishiObjectType_Unknown\x10\x00\x12\x1d\n" +
	"\x19MeishiObjectType_UserName\x10\x01\x12 \n" +
	"\x1cMeishiObjectType_Achievement\x10\x02\x12!\n" +
	"\x1dMeishiObjectType_Illustration\x10\x03\x12!\n" +
	"\x1dMeishiObjectType_PublicUserId\x10\x04\x12\"\n" +
	"\x1eMeishiObjectType_ProducerLevel\x10\x05\x12\x1c\n" +
	"\x18MeishiObjectType_Comment\x10\x06\x12\"\n" +
	"\x1eMeishiObjectType_TotalFanCount\x10\a\x12!\n" +
	"\x1dMeishiObjectType_PvpRateGrade\x10\b\x12!\n" +
	"\x1dMeishiObjectType_IdolCardSkin\x10\t\x12 \n" +
	"\x1cMeishiObjectType_SupportCard\x10\n" +
	"\x12 \n" +
	"\x1cMeishiObjectType_ProduceCard\x10\v\x12 \n" +
	"\x1cMeishiObjectType_ProduceItem\x10\f\x12!\n" +
	"\x1dMeishiObjectType_ProduceDrink\x10\r\x12\x1a\n" +
	"\x16MeishiObjectType_Photo\x10\x0e\x12\x1b\n" +
	"\x17MeishiObjectType_Memory\x10\x0f\x12\x1a\n" +
	"\x16MeishiObjectType_Movie\x10\x10\x12\x1e\n" +
	"\x1aMeishiObjectType_BaseAsset\x10\x11\x12\x1b\n" +
	"\x16MeishiObjectType_Other\x10\xe7\a*\xf8\x01\n" +
	"\x0fMissionCategory\x12\x1b\n" +
	"\x17MissionCategory_Unknown\x10\x00\x12\x1c\n" +
	"\x18MissionCategory_MainTask\x10\x01\x12\x19\n" +
	"\x15MissionCategory_Daily\x10\x02\x12\x1a\n" +
	"\x16MissionCategory_Weekly\x10\x03\x12\x1a\n" +
	"\x16MissionCategory_Normal\x10\x04\x12\x1b\n" +
	"\x17MissionCategory_Special\x10\x05\x12\x19\n" +
	"\x15MissionCategory_Event\x10\x06\x12\x1f\n" +
	"\x1bMissionCategory_Achievement\x10\a*\xf0*\n" +
	"\vMissionType\x12\x17\n" +
	"\x13MissionType_Unknown\x10\x00\x12%\n" +
	"!MissionType_IncrementMissionClear\x10e\x12#\n" +
	"\x1fMissionType_IncrementLoginCount\x10f\x12,\n" +
	"(MissionType_IncrementDailyHomeEnterCount\x10g\x12'\n" +
	"#MissionType_IncrementGashaDrawCount\x10h\x12\"\n" +
	"\x1eMissionType_IncrementWorkCount\x10i\x12+\n" +
	"'MissionType_IncrementWorkExcellentCount\x10j\x12)\n" +
	"%MissionType_IncrementWorkDurationHour\x10k\x12+\n" +
	"'MissionType_IncrementConsumeActionPoint\x10l\x12/\n" +
	"+MissionType_IncrementShopCoinGashaDrawCount\x10m\x120\n" +
	",MissionType_IncrementEventCoinGashaDrawCount\x10n\x12+\n" +
	"'MissionType_IncrementDailyExchangeCount\x10o\x12*\n" +
	"&MissionType_IncrementItemExchangeCount\x10p\x12+\n" +
	"'MissionType_IncrementEventExchangeCount\x10q\x12)\n" +
	"%MissionType_IncrementProvideItemCount\x10r\x12%\n" +
	"!MissionType_IncrementReceiveMoney\x10s\x12:\n" +
	"6MissionType_IncrementIdolCardLevelLimitRankUpdateCount\x10y\x129\n" +
	"5MissionType_IncrementIdolCardPotentialRankUpdateCount\x10z\x12)\n" +
	"%MissionType_IncrementSupportCardCount\x10{\x124\n" +
	"0MissionType_IncrementSupportCardLevelUpdateCount\x10|\x12=\n" +
	"9MissionType_IncrementSupportCardLevelLimitRankUpdateCount\x10}\x12\"\n" +
	"\x1dMissionType_IncrementFanCount\x10\x86\x01\x12*\n" +
	"%MissionType_IncrementMemoryGradeCount\x10\x89\x01\x12-\n" +
	"(MissionType_IncrementMemoryExchangeCount\x10\x8a\x01\x12+\n" +
	"&MissionType_IncrementMeishiUpdateCount\x10\x8e\x01\x12-\n" +
	"(MissionType_IncrementMeishiExchangeCount\x10\x90\x01\x12*\n" +
	"%MissionType_IncrementMeishiXpostCount\x10\x91\x01\x123\n" +
	".MissionType_IncrementGuildDonationRequestCount\x10\x92\x01\x12,\n" +
	"'MissionType_IncrementGuildDonationCount\x10\x93\x01\x12*\n" +
	"%MissionType_IncrementPvpRatePlayCount\x10\xa0\x01\x123\n" +
	".MissionType_IncrementPvpRateCharacterPlayCount\x10\xa1\x01\x12)\n" +
	"$MissionType_IncrementPvpRateWinCount\x10\xa2\x01\x122\n" +
	"-MissionType_IncrementPvpRateCharacterWinCount\x10\xa3\x01\x125\n" +
	"0MissionType_IncrementPvpRateExamBattleScoreCount\x10\xa4\x01\x12'\n" +
	"\"MissionType_IncrementUrlTransition\x10\xa5\x01\x12,\n" +
	"'MissionType_IncrementProfileUpdateCount\x10\xa6\x01\x12>\n" +
	"9MissionType_IncrementPvpRateCharacterExamBattleScoreCount\x10\xa7\x01\x12(\n" +
	"#MissionType_IncrementPhotoIdolCount\x10\xa8\x01\x12/\n" +
	"*MissionType_IncrementGvgRaidChallengeCount\x10\xa9\x01\x123\n" +
	".MissionType_IncrementGvgRaidLoopChallengeCount\x10\xaa\x01\x12,\n" +
	"'MissionType_IncrementTourLevelPlayCount\x10\xab\x01\x12;\n" +
	"6MissionType_IncrementProduceSupportCardDeckUpdateCount\x10\xc9\x01\x126\n" +
	"1MissionType_IncrementProduceMemoryDeckUpdateCount\x10\xca\x01\x12+\n" +
	"&MissionType_IncrementProduceTotalScore\x10\xcb\x01\x12*\n" +
	"%MissionType_IncrementProduceVoteCount\x10\xcd\x01\x122\n" +
	"-MissionType_IncrementProduceTotalProducePoint\x10\xce\x01\x124\n" +
	"/MissionType_IncrementProduceGetProduceCardCount\x10\xcf\x01\x125\n" +
	"0MissionType_IncrementProduceGetProduceDrinkCount\x10\xd0\x01\x124\n" +
	"/MissionType_IncrementProduceGetProduceItemCount\x10\xd1\x01\x127\n" +
	"2MissionType_IncrementProduceTotalAdditionExamBlock\x10\xd5\x01\x120\n" +
	"+MissionType_IncrementProduceConsumedStamina\x10\xd6\x01\x128\n" +
	"3MissionType_IncrementProduceExamUseProduceCardCount\x10\xd7\x01\x12:\n" +
	"5MissionType_IncrementProduceCustomizeProduceCardCount\x10\xd8\x01\x128\n" +
	"3MissionType_IncrementProduceUpgradeProduceCardCount\x10\xd9\x01\x125\n" +
	"0MissionType_IncrementProduceUseProduceDrinkCount\x10\xda\x01\x122\n" +
	"-MissionType_IncrementProduceAdditionParameter\x10\xdb\x01\x12*\n" +
	"%MissionType_IncrementProducePlayCount\x10\xdc\x01\x12.\n" +
	")MissionType_IncrementProducePlanPlayCount\x10\xdd\x01\x123\n" +
	".MissionType_IncrementProduceCharacterPlayCount\x10\xde\x01\x122\n" +
	"-MissionType_IncrementProduceIdolCardPlayCount\x10\xdf\x01\x12+\n" +
	"&MissionType_IncrementProduceClearCount\x10\xe0\x01\x12/\n" +
	"*MissionType_IncrementProducePlanClearCount\x10\xe1\x01\x124\n" +
	"/MissionType_IncrementProduceCharacterClearCount\x10\xe2\x01\x123\n" +
	".MissionType_IncrementProduceIdolCardClearCount\x10\xe3\x01\x120\n" +
	"+MissionType_IncrementProduceSelectStepCount\x10\xe4\x01\x12-\n" +
	"(MissionType_IncrementProduceShopBuyCount\x10\xe5\x01\x121\n" +
	",MissionType_IncrementProduceLessonClearCount\x10\xe6\x01\x125\n" +
	"0MissionType_IncrementProduceGroupSelectStepCount\x10\xe7\x01\x12(\n" +
	"#MissionType_AbsoluteLinkBandaiNamco\x10\xad\x02\x12#\n" +
	"\x1eMissionType_AbsoluteLoginCount\x10\xae\x02\x12)\n" +
	"$MissionType_AbsoluteAchievementCount\x10\xaf\x02\x126\n" +
	"1MissionType_AbsoluteCharacterIdolAchievementCount\x10\xb0\x02\x12&\n" +
	"!MissionType_AbsoluteMainTaskCount\x10\xb1\x02\x12&\n" +
	"!MissionType_AbsoluteProducerLevel\x10\xb6\x02\x12&\n" +
	"!MissionType_AbsoluteIdolCardCount\x10\xb7\x02\x12/\n" +
	"*MissionType_AbsoluteIdolCardLevelLimitRank\x10\xb8\x02\x124\n" +
	"/MissionType_AbsoluteIdolCardLevelLimitRankCount\x10\xb9\x02\x123\n" +
	".MissionType_AbsoluteIdolCardPotentialRankCount\x10\xba\x02\x12)\n" +
	"$MissionType_AbsoluteSupportCardCount\x10\xbb\x02\x12.\n" +
	")MissionType_AbsoluteSupportCardLevelCount\x10\xbc\x02\x127\n" +
	"2MissionType_AbsoluteSupportCardLevelLimitRankCount\x10\xbd\x02\x12)\n" +
	"$MissionType_AbsoluteSupportCardLevel\x10\xbf\x02\x12!\n" +
	"\x1cMissionType_AbsoluteFanCount\x10\xcf\x02\x12&\n" +
	"!MissionType_AbsoluteDearnessLevel\x10\xd1\x02\x12*\n" +
	"%MissionType_AbsoluteMeishiUpdateCount\x10\xd7\x02\x12,\n" +
	"'MissionType_AbsoluteMeishiExchangeCount\x10\xda\x02\x12$\n" +
	"\x1fMissionType_AbsoluteFollowCount\x10\xdc\x02\x12&\n" +
	"!MissionType_AbsoluteFollowerCount\x10\xdd\x02\x12\"\n" +
	"\x1dMissionType_AbsoluteStoryRead\x10\xec\x02\x12\"\n" +
	"\x1dMissionType_AbsoluteGuildJoin\x10\xed\x02\x12%\n" +
	" MissionType_AbsolutePvpRateGrade\x10\xee\x02\x120\n" +
	"+MissionType_AbsolutePvpRateUnitOverallPower\x10\xef\x02\x122\n" +
	"-MissionType_AbsolutePvpRateExamBattleMaxScore\x10\xf0\x02\x12;\n" +
	"6MissionType_AbsolutePvpRateCharacterExamBattleMaxScore\x10\xf1\x02\x12$\n" +
	"\x1fMissionType_AbsolutePvpRateRank\x10\xf2\x02\x12,\n" +
	"'MissionType_AbsoluteTowerTotalClearRank\x10\xf3\x02\x125\n" +
	"0MissionType_AbsoluteTowerCharacterTotalClearRank\x10\xf4\x02\x12'\n" +
	"\"MissionType_AbsoluteTowerClearRank\x10\xf5\x02\x12%\n" +
	" MissionType_AbsoluteIdolCardSkin\x10\xf6\x02\x12$\n" +
	"\x1fMissionType_AbsoluteSupportCard\x10\xf7\x02\x12(\n" +
	"#MissionType_AbsoluteTowerLayerClear\x10\xf8\x02\x12,\n" +
	"'MissionType_AbsolutePvpRateCurrentGrade\x10\xf9\x02\x12.\n" +
	")MissionType_AbsoluteLinkSmartphoneWithDmm\x10\xfa\x02\x121\n" +
	",MissionType_AbsoluteProduceIdolCardHighScore\x10\x91\x03\x122\n" +
	"-MissionType_AbsoluteProducePlanTotalHighScore\x10\x92\x03\x12;\n" +
	"6MissionType_AbsoluteProducePictureBookProduceCardCount\x10\x9a\x03\x12<\n" +
	"7MissionType_AbsoluteProducePictureBookProduceDrinkCount\x10\x9b\x03\x12;\n" +
	"6MissionType_AbsoluteProducePictureBookProduceItemCount\x10\x9c\x03\x12/\n" +
	"*MissionType_AbsoluteProduceCharacterEnding\x10\xa4\x03\x12)\n" +
	"$MissionType_AbsoluteSeminarExamClear\x10\xa5\x03\x122\n" +
	"-MissionType_AbsoluteProducePlayCharacterCount\x10\xa6\x03\x12)\n" +
	"$MissionType_AbsoluteProduceStoryRead\x10\xa7\x03\x12\x1f\n" +
	"\x1aMissionType_ConditionClear\x10\xe6\a\x12&\n" +
	"!MissionType_ProduceConditionClear\x10\xe7\a\x12:\n" +
	"5MissionType_ProduceConditionClearBeforeLiveEvaluation\x10\xe8\a*f\n" +
	"\tMusicType\x12\x15\n" +
	"\x11MusicType_Unknown\x10\x00\x12\x13\n" +
	"\x0fMusicType_Music\x10\x01\x12\x1a\n" +
	"\x16MusicType_Instrumental\x10\x02\x12\x11\n" +
	"\rMusicType_Bgm\x10\x03*\xbd\x01\n" +
	"\x1aMusicWishListRequesterType\x12&\n" +
	"\"MusicWishListRequesterType_Unknown\x10\x00\x12#\n" +
	"\x1fMusicWishListRequesterType_Self\x10\x01\x12(\n" +
	"$MusicWishListRequesterType_OtherUser\x10\x02\x12(\n" +
	"$MusicWishListRequesterType_Character\x10\x03*t\n" +
	"\x0eNoticeCategory\x12\x1a\n" +
	"\x16NoticeCategory_Unknown\x10\x00\x12\x17\n" +
	"\x13NoticeCategory_Info\x10\x01\x12\x16\n" +
	"\x12NoticeCategory_Bug\x10\x02\x12\x15\n" +
	"\x11NoticeCategory_Pr\x10\x03*\xe6\x01\n" +
	"\n" +
	"NoticeType\x12\x16\n" +
	"\x12NoticeType_Unknown\x10\x00\x12\x15\n" +
	"\x11NoticeType_Update\x10\x01\x12\x14\n" +
	"\x10NoticeType_Gasha\x10\x02\x12\x17\n" +
	"\x13NoticeType_Campaign\x10\x03\x12\x14\n" +
	"\x10NoticeType_Event\x10\x04\x12\x18\n" +
	"\x14NoticeType_Important\x10\x05\x12\x1a\n" +
	"\x16NoticeType_Information\x10\x06\x12\x1a\n" +
	"\x16NoticeType_Maintenance\x10\a\x12\x12\n" +
	"\x0eNoticeType_Bug\x10\b*\xbb\x01\n" +
	"%PaymentPendingReceiptDialogTimingType\x121\n" +
	"-PaymentPendingReceiptDialogTimingType_Unknown\x10\x00\x12.\n" +
	"*PaymentPendingReceiptDialogTimingType_Skip\x10\x01\x12/\n" +
	"+PaymentPendingReceiptDialogTimingType_Daily\x10\x02*\xd0\x01\n" +
	"\x17PhotoBackgroundCategory\x12#\n" +
	"\x1fPhotoBackgroundCategory_Unknown\x10\x00\x12\"\n" +
	"\x1ePhotoBackgroundCategory_Gakuen\x10\x01\x12%\n" +
	"!PhotoBackgroundCategory_Dormitory\x10\x02\x12\"\n" +
	"\x1ePhotoBackgroundCategory_Around\x10\x03\x12!\n" +
	"\x1dPhotoBackgroundCategory_Other\x10c*\xcd\x01\n" +
	"\x17PhotoBackgroundTimeType\x12#\n" +
	"\x1fPhotoBackgroundTimeType_Unknown\x10\x00\x12#\n" +
	"\x1fPhotoBackgroundTimeType_Morning\x10\x01\x12 \n" +
	"\x1cPhotoBackgroundTimeType_Noon\x10\x02\x12#\n" +
	"\x1fPhotoBackgroundTimeType_Evening\x10\x03\x12!\n" +
	"\x1dPhotoBackgroundTimeType_Night\x10\x04*\xaa\x01\n" +
	"\x16PhotoButtonExecuteType\x12\"\n" +
	"\x1ePhotoButtonExecuteType_Unknown\x10\x00\x12 \n" +
	"\x1cPhotoButtonExecuteType_Click\x10\x01\x12%\n" +
	"!PhotoButtonExecuteType_PressStart\x10\x02\x12#\n" +
	"\x1fPhotoButtonExecuteType_PressEnd\x10\x03*\x91\x01\n" +
	"\x13PhotoLookTargetType\x12\x1f\n" +
	"\x1bPhotoLookTargetType_Unknown\x10\x00\x12\x1a\n" +
	"\x16PhotoLookTargetType_Ng\x10\x01\x12\x1b\n" +
	"\x17PhotoLookTargetType_Eye\x10\x02\x12 \n" +
	"\x1cPhotoLookTargetType_FullBody\x10\x03*v\n" +
	"\x13PhotoPoseMotionType\x12\x1f\n" +
	"\x1bPhotoPoseMotionType_Unknown\x10\x00\x12 \n" +
	"\x1cPhotoPoseMotionType_Reaction\x10\x01\x12\x1c\n" +
	"\x18PhotoPoseMotionType_Wait\x10\x02*\x87\x01\n" +
	"\fPlatformType\x12\x18\n" +
	"\x14PlatformType_Unknown\x10\x00\x12\x14\n" +
	"\x10PlatformType_Ios\x10\x01\x12\x18\n" +
	"\x14PlatformType_Android\x10\x02\x12\x14\n" +
	"\x10PlatformType_Dmm\x10\x03\x12\x17\n" +
	"\x12PlatformType_Other\x10\xe7\a*\x89\x01\n" +
	"\x0ePreferenceType\x12\x1a\n" +
	"\x16PreferenceType_Unknown\x10\x00\x12)\n" +
	"%PreferenceType_PhotoButtonExecuteType\x10\x01\x120\n" +
	",PreferenceType_ProduceDisableForceLiveCommon\x10\x02*\xac\x06\n" +
	"\x0eProduceAdvType\x12\x1a\n" +
	"\x16ProduceAdvType_Unknown\x10\x00\x12(\n" +
	"$ProduceAdvType_BeforeFinalLessonHard\x10\x01\x12'\n" +
	"#ProduceAdvType_BeforeMid1LessonHard\x10\x02\x12'\n" +
	"#ProduceAdvType_BeforeMid2LessonHard\x10\x03\x12-\n" +
	")ProduceAdvType_BeforeFinalAuditionRefresh\x10\n" +
	"\x12,\n" +
	"(ProduceAdvType_BeforeMid1AuditionRefresh\x10\v\x12,\n" +
	"(ProduceAdvType_BeforeMid2AuditionRefresh\x10\f\x12,\n" +
	"(ProduceAdvType_BeforeFinalAuditionSelect\x10\r\x12+\n" +
	"'ProduceAdvType_BeforeMid1AuditionSelect\x10\x0e\x12+\n" +
	"'ProduceAdvType_BeforeMid2AuditionSelect\x10\x0f\x12\x1f\n" +
	"\x1bProduceAdvType_Introduction\x10\x11\x12\x1b\n" +
	"\x17ProduceAdvType_StepSkip\x10\x12\x12\x1a\n" +
	"\x16ProduceAdvType_Opening\x10\x13\x12'\n" +
	"#ProduceAdvType_ProduceResultTrueEnd\x10\x14\x12!\n" +
	"\x1dProduceAdvType_ProduceResultA\x10\x15\x12!\n" +
	"\x1dProduceAdvType_ProduceResultB\x10\x16\x12!\n" +
	"\x1dProduceAdvType_ProduceResultC\x10\x17\x12+\n" +
	"'ProduceAdvType_ProduceResultFailedFinal\x10\x18\x12*\n" +
	"&ProduceAdvType_ProduceResultFailedMid1\x10\x19\x12*\n" +
	"&ProduceAdvType_ProduceResultFailedMid2\x10\x1a*\x8f\x03\n" +
	"\x13ProduceCampaignType\x12\x1f\n" +
	"\x1bProduceCampaignType_Unknown\x10\x00\x12'\n" +
	"#ProduceCampaignType_ActionPointDown\x10\x01\x12+\n" +
	"'ProduceCampaignType_MemoryRentalCountUp\x10\x02\x12(\n" +
	"$ProduceCampaignType_RewardQuantityUp\x10\x03\x12.\n" +
	"*ProduceCampaignType_ProduceResultRewardAdd\x10\x04\x121\n" +
	"-ProduceCampaignType_ProduceResultRewardChange\x10\x05\x12+\n" +
	"'ProduceCampaignType_MemoryRerollCountUp\x10\x06\x12(\n" +
	"$ProduceCampaignType_MemoryRerollFree\x10\a\x12\x1d\n" +
	"\x19ProduceCampaignType_Event\x10\b*\xa1\x01\n" +
	"\x13ProduceCardCategory\x12\x1f\n" +
	"\x1bProduceCardCategory_Unknown\x10\x00\x12#\n" +
	"\x1fProduceCardCategory_ActiveSkill\x10\x01\x12#\n" +
	"\x1fProduceCardCategory_MentalSkill\x10\x02\x12\x1f\n" +
	"\x1bProduceCardCategory_Trouble\x10\x03*\xc5\x15\n" +
	"\x19ProduceCardGrowEffectType\x12%\n" +
	"!ProduceCardGrowEffectType_Unknown\x10\x00\x12'\n" +
	"#ProduceCardGrowEffectType_LessonAdd\x10\x01\x12*\n" +
	"&ProduceCardGrowEffectType_LessonReduce\x10\x02\x12,\n" +
	"(ProduceCardGrowEffectType_LessonCountAdd\x10\x03\x12/\n" +
	"+ProduceCardGrowEffectType_LessonCountReduce\x10\x04\x12&\n" +
	"\"ProduceCardGrowEffectType_BlockAdd\x10\x05\x12)\n" +
	"%ProduceCardGrowEffectType_BlockReduce\x10\x06\x12/\n" +
	"+ProduceCardGrowEffectType_FullPowerPointAdd\x10\a\x122\n" +
	".ProduceCardGrowEffectType_FullPowerPointReduce\x10\b\x12,\n" +
	"(ProduceCardGrowEffectType_CostBuffReduce\x10\n" +
	"\x12)\n" +
	"%ProduceCardGrowEffectType_CostBuffAdd\x10\v\x12(\n" +
	"$ProduceCardGrowEffectType_CostReduce\x10\f\x12%\n" +
	"!ProduceCardGrowEffectType_CostAdd\x10\r\x121\n" +
	"-ProduceCardGrowEffectType_CostPenetrateReduce\x10\x0e\x12.\n" +
	"*ProduceCardGrowEffectType_CostPenetrateAdd\x10\x0f\x122\n" +
	".ProduceCardGrowEffectType_ParameterBuffTurnAdd\x10\x10\x125\n" +
	"1ProduceCardGrowEffectType_ParameterBuffTurnReduce\x10\x11\x12+\n" +
	"'ProduceCardGrowEffectType_LessonBuffAdd\x10\x12\x12.\n" +
	"*ProduceCardGrowEffectType_LessonBuffReduce\x10\x13\x12'\n" +
	"#ProduceCardGrowEffectType_ReviewAdd\x10\x14\x12*\n" +
	"&ProduceCardGrowEffectType_ReviewReduce\x10\x15\x12+\n" +
	"'ProduceCardGrowEffectType_AggressiveAdd\x10\x16\x12.\n" +
	"*ProduceCardGrowEffectType_AggressiveReduce\x10\x17\x12)\n" +
	"%ProduceCardGrowEffectType_CardDrawAdd\x10\x18\x12,\n" +
	"(ProduceCardGrowEffectType_CardDrawReduce\x10\x19\x12=\n" +
	"9ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnAdd\x10\x1a\x12@\n" +
	"<ProduceCardGrowEffectType_ParameterBuffMultiplePerTurnReduce\x10\x1b\x12;\n" +
	"7ProduceCardGrowEffectType_StaminaConsumptionDownTurnAdd\x10\x1c\x12>\n" +
	":ProduceCardGrowEffectType_StaminaConsumptionDownTurnReduce\x10\x1d\x12:\n" +
	"6ProduceCardGrowEffectType_StaminaConsumptionAddTurnAdd\x10\x1e\x12=\n" +
	"9ProduceCardGrowEffectType_StaminaConsumptionAddTurnReduce\x10\x1f\x12'\n" +
	"#ProduceCardGrowEffectType_EffectAdd\x10 \x12*\n" +
	"&ProduceCardGrowEffectType_EffectDelete\x10!\x12*\n" +
	"&ProduceCardGrowEffectType_EffectChange\x10\"\x125\n" +
	"1ProduceCardGrowEffectType_CardStatusEnchantChange\x10#\x12/\n" +
	"+ProduceCardGrowEffectType_PlayTriggerChange\x10$\x125\n" +
	"1ProduceCardGrowEffectType_PlayEffectTriggerChange\x10%\x128\n" +
	"4ProduceCardGrowEffectType_PlayMovePositionTypeChange\x10&\x12(\n" +
	"$ProduceCardGrowEffectType_InitialAdd\x10'\x122\n" +
	".ProduceCardGrowEffectType_CostLessonBuffReduce\x10(\x12/\n" +
	"+ProduceCardGrowEffectType_CostLessonBuffAdd\x10)\x12.\n" +
	"*ProduceCardGrowEffectType_CostReviewReduce\x10*\x12+\n" +
	"'ProduceCardGrowEffectType_CostReviewAdd\x10+\x122\n" +
	".ProduceCardGrowEffectType_CostAggressiveReduce\x10,\x12/\n" +
	"+ProduceCardGrowEffectType_CostAggressiveAdd\x10-\x125\n" +
	"1ProduceCardGrowEffectType_CostParameterBuffReduce\x10.\x122\n" +
	".ProduceCardGrowEffectType_CostParameterBuffAdd\x10/\x126\n" +
	"2ProduceCardGrowEffectType_CostFullPowerPointReduce\x100\x123\n" +
	"/ProduceCardGrowEffectType_CostFullPowerPointAdd\x101\x122\n" +
	".ProduceCardGrowEffectType_LessonDependBlockAdd\x102\x12C\n" +
	"?ProduceCardGrowEffectType_LessonDependExamCardPlayAggressiveAdd\x103\x127\n" +
	"3ProduceCardGrowEffectType_LessonDependExamReviewAdd\x104\x12A\n" +
	"=ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnAdd\x105\x12D\n" +
	"@ProduceCardGrowEffectType_CostParameterBuffMultiplePerTurnReduce\x106*\xfd\x01\n" +
	" ProduceCardMoveEffectTriggerType\x12,\n" +
	"(ProduceCardMoveEffectTriggerType_Unknown\x10\x00\x12)\n" +
	"%ProduceCardMoveEffectTriggerType_Lost\x10\x01\x12*\n" +
	"&ProduceCardMoveEffectTriggerType_Grave\x10\x02\x12)\n" +
	"%ProduceCardMoveEffectTriggerType_Draw\x10\x03\x12)\n" +
	"%ProduceCardMoveEffectTriggerType_Hold\x10\x04*\xe0\x02\n" +
	"\x1bProduceCardMovePositionType\x12'\n" +
	"#ProduceCardMovePositionType_Unknown\x10\x00\x12$\n" +
	" ProduceCardMovePositionType_Hand\x10\x01\x12)\n" +
	"%ProduceCardMovePositionType_DeckFirst\x10\x02\x12(\n" +
	"$ProduceCardMovePositionType_DeckLast\x10\x03\x12*\n" +
	"&ProduceCardMovePositionType_DeckRandom\x10\x04\x12%\n" +
	"!ProduceCardMovePositionType_Grave\x10\x05\x12$\n" +
	" ProduceCardMovePositionType_Lost\x10\x06\x12$\n" +
	" ProduceCardMovePositionType_Hold\x10\a*\x98\x01\n" +
	"\x14ProduceCardOrderType\x12 \n" +
	"\x1cProduceCardOrderType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aProduceCardOrderType_First\x10\x01\x12\x1d\n" +
	"\x19ProduceCardOrderType_Last\x10\x02\x12\x1f\n" +
	"\x1bProduceCardOrderType_Random\x10\x03*\x90\x04\n" +
	"\x17ProduceCardPositionType\x12#\n" +
	"\x1fProduceCardPositionType_Unknown\x10\x00\x12 \n" +
	"\x1cProduceCardPositionType_None\x10\x01\x12 \n" +
	"\x1cProduceCardPositionType_Hand\x10\x02\x12 \n" +
	"\x1cProduceCardPositionType_Deck\x10\x03\x12!\n" +
	"\x1dProduceCardPositionType_Grave\x10\x04\x12 \n" +
	"\x1cProduceCardPositionType_Lost\x10\x05\x12#\n" +
	"\x1fProduceCardPositionType_DeckAll\x10\x06\x12&\n" +
	"\"ProduceCardPositionType_RandomPool\x10\a\x12#\n" +
	"\x1fProduceCardPositionType_Playing\x10\b\x12$\n" +
	" ProduceCardPositionType_PlayHand\x10\t\x12\"\n" +
	"\x1eProduceCardPositionType_Target\x10\v\x12 \n" +
	"\x1cProduceCardPositionType_Self\x10\f\x12 \n" +
	"\x1cProduceCardPositionType_Hold\x10\r\x12%\n" +
	"!ProduceCardPositionType_DeckGrave\x10\x0e*\x99\x01\n" +
	"\x11ProduceCardRarity\x12\x1d\n" +
	"\x19ProduceCardRarity_Unknown\x10\x00\x12\x17\n" +
	"\x13ProduceCardRarity_N\x10\x01\x12\x17\n" +
	"\x13ProduceCardRarity_R\x10\x02\x12\x18\n" +
	"\x14ProduceCardRarity_Sr\x10\x03\x12\x19\n" +
	"\x15ProduceCardRarity_Ssr\x10\x04*\xf0\x01\n" +
	"\x1bProduceCardSearchStatusType\x12'\n" +
	"#ProduceCardSearchStatusType_Unknown\x10\x00\x12(\n" +
	"$ProduceCardSearchStatusType_LostPlay\x10\x01\x12+\n" +
	"'ProduceCardSearchStatusType_EndTurnLost\x10\x02\x12'\n" +
	"#ProduceCardSearchStatusType_Initial\x10\x04\x12(\n" +
	"$ProduceCardSearchStatusType_Restrict\x10\x05*\xd6\x1a\n" +
	"\x14ProduceConditionType\x12 \n" +
	"\x1cProduceConditionType_Unknown\x10\x00\x12&\n" +
	"\"ProduceConditionType_EventOccurred\x10\x01\x12)\n" +
	"%ProduceConditionType_EventNotOccurred\x10\x02\x12$\n" +
	" ProduceConditionType_SupportCard\x10\x03\x12(\n" +
	"$ProduceConditionType_MemoryCharacter\x10\x04\x12(\n" +
	"$ProduceConditionType_SelectStepCount\x10\x06\x120\n" +
	",ProduceConditionType_ProduceCardUpgradeCount\x10\t\x12/\n" +
	"+ProduceConditionType_ProduceCardDeleteCount\x10\n" +
	"\x12/\n" +
	"+ProduceConditionType_CurrentStepCountPermil\x10\f\x12)\n" +
	"%ProduceConditionType_LessonClearCount\x10\r\x12)\n" +
	"%ProduceConditionType_CurrentStepCount\x10\x0e\x12\x1e\n" +
	"\x1aProduceConditionType_Vocal\x10\x0f\x12\x1e\n" +
	"\x1aProduceConditionType_Dance\x10\x10\x12\x1f\n" +
	"\x1bProduceConditionType_Visual\x10\x11\x12 \n" +
	"\x1cProduceConditionType_Stamina\x10\x12\x12%\n" +
	"!ProduceConditionType_ProducePoint\x10\x14\x12'\n" +
	"#ProduceConditionType_HasProduceCard\x10\x15\x12)\n" +
	"%ProduceConditionType_ProduceCardCount\x10\x16\x12*\n" +
	"&ProduceConditionType_ProduceDrinkCount\x10\x17\x12)\n" +
	"%ProduceConditionType_ProduceItemCount\x10\x18\x129\n" +
	"5ProduceConditionType_ShopPreviousConsumedProducePoint\x10\x1a\x120\n" +
	",ProduceConditionType_ShopProduceCardBuyCount\x10\x1b\x120\n" +
	",ProduceConditionType_ShopProduceItemBuyCount\x10\x1c\x121\n" +
	"-ProduceConditionType_ShopProduceDrinkBuyCount\x10\x1d\x12)\n" +
	"%ProduceConditionType_LessonVocalScore\x10\x1e\x12)\n" +
	"%ProduceConditionType_LessonDanceScore\x10\x1f\x12*\n" +
	"&ProduceConditionType_LessonVisualScore\x10 \x12/\n" +
	"+ProduceConditionType_ProduceEffectTypeCount\x10!\x12*\n" +
	"&ProduceConditionType_AuditionMid1Score\x10\"\x12*\n" +
	"&ProduceConditionType_AuditionMid2Score\x10#\x12+\n" +
	"'ProduceConditionType_AuditionFinalScore\x10$\x12)\n" +
	"%ProduceConditionType_AuditionMid1Pass\x10%\x12)\n" +
	"%ProduceConditionType_AuditionMid2Pass\x10&\x12*\n" +
	"&ProduceConditionType_AuditionFinalPass\x10'\x123\n" +
	"/ProduceConditionType_SelectStepCountVocalLesson\x10+\x123\n" +
	"/ProduceConditionType_SelectStepCountDanceLesson\x10,\x124\n" +
	"0ProduceConditionType_SelectStepCountVisualLesson\x10-\x12'\n" +
	"#ProduceConditionType_SelectableStep\x10.\x124\n" +
	"0ProduceConditionType_NextAuditionBaseVocalPermil\x10/\x124\n" +
	"0ProduceConditionType_NextAuditionBaseDancePermil\x100\x125\n" +
	"1ProduceConditionType_NextAuditionBaseVisualPermil\x101\x12&\n" +
	"\"ProduceConditionType_DearnessLevel\x102\x120\n" +
	",ProduceConditionType_ClearProduceAchievement\x103\x12%\n" +
	"!ProduceConditionType_ConditionSet\x104\x12'\n" +
	"#ProduceConditionType_CurrentProduce\x105\x12*\n" +
	"&ProduceConditionType_ProduceScoreGrade\x107\x12%\n" +
	"!ProduceConditionType_ProduceScore\x108\x12\"\n" +
	"\x1eProduceConditionType_Character\x109\x12!\n" +
	"\x1dProduceConditionType_IdolCard\x10:\x12/\n" +
	"+ProduceConditionType_IdolCardExamEffectType\x10;\x12+\n" +
	"'ProduceConditionType_LatestAuditionRank\x10<\x129\n" +
	"5ProduceConditionType_LatestAuditionReachForceEndScore\x10=\x126\n" +
	"2ProduceConditionType_LatestAuditionBaseScorePermil\x10>\x124\n" +
	"0ProduceConditionType_LatestAuditionExamSkipCount\x10?\x12\x1f\n" +
	"\x1bProduceConditionType_Result\x10@\x128\n" +
	"4ProduceConditionType_NextAuditionEasyBaseVocalPermil\x10A\x128\n" +
	"4ProduceConditionType_NextAuditionEasyBaseDancePermil\x10B\x129\n" +
	"5ProduceConditionType_NextAuditionEasyBaseVisualPermil\x10C\x12'\n" +
	"#ProduceConditionType_ProduceCardGet\x10D\x12(\n" +
	"$ProduceConditionType_ProduceDrinkGet\x10E\x12'\n" +
	"#ProduceConditionType_ProduceItemGet\x10F\x12,\n" +
	"(ProduceConditionType_ProduceCardUseCount\x10G\x12-\n" +
	")ProduceConditionType_ProduceDrinkUseCount\x10H\x12,\n" +
	"(ProduceConditionType_ProduceItemUseCount\x10I\x12)\n" +
	"%ProduceConditionType_ExamTriggerCount\x10J\x12/\n" +
	"+ProduceConditionType_LessonExamTriggerCount\x10K\x121\n" +
	"-ProduceConditionType_AuditionExamTriggerCount\x10L\x120\n" +
	",ProduceConditionType_IdolCardProducePlanType\x10M\x12\"\n" +
	"\x1eProduceConditionType_VoteCount\x10N\x127\n" +
	"3ProduceConditionType_LatestAuditionStepSelectNumber\x10O\x120\n" +
	",ProduceConditionType_CurrentAuditionStepType\x10P\x128\n" +
	"4ProduceConditionType_CurrentAuditionStepSelectNumber\x10Q\x12&\n" +
	"\"ProduceConditionType_DearnessPoint\x10R\x12\x1d\n" +
	"\x18ProduceConditionType_Set\x10\xe6\a\x12%\n" +
	" ProduceConditionType_NegativeSet\x10\xe7\a*\xbc\x01\n" +
	"\x1aProduceDescriptionSwapType\x12&\n" +
	"\"ProduceDescriptionSwapType_Unknown\x10\x00\x12%\n" +
	"!ProduceDescriptionSwapType_Lesson\x10\x01\x12'\n" +
	"#ProduceDescriptionSwapType_Audition\x10\x02\x12&\n" +
	"\"ProduceDescriptionSwapType_Contest\x10\x03*\xed\a\n" +
	"\x16ProduceDescriptionType\x12\"\n" +
	"\x1eProduceDescriptionType_Unknown\x10\x00\x12$\n" +
	" ProduceDescriptionType_PlainText\x10\x01\x120\n" +
	",ProduceDescriptionType_ProduceExamEffectType\x10\x02\x12.\n" +
	"*ProduceDescriptionType_ProduceCardCategory\x10\x03\x12#\n" +
	"\x1fProduceDescriptionType_DiffText\x10\x05\x12\x1f\n" +
	"\x1bProduceDescriptionType_Exam\x10\x06\x124\n" +
	"0ProduceDescriptionType_ProduceCardGrowEffectType\x10\a\x12*\n" +
	"&ProduceDescriptionType_ProduceStepType\x10\b\x12-\n" +
	")ProduceDescriptionType_ProduceDescription\x10\n" +
	"\x121\n" +
	"-ProduceDescriptionType_ProduceDescriptionName\x10\v\x12&\n" +
	"\"ProduceDescriptionType_ProduceCard\x10\f\x125\n" +
	"1ProduceDescriptionType_ProduceCardAnyUpgradeCount\x10\r\x12&\n" +
	"\"ProduceDescriptionType_ProduceItem\x10\x0e\x12'\n" +
	"#ProduceDescriptionType_ProduceDrink\x10\x0f\x12$\n" +
	" ProduceDescriptionType_ExamValue\x10\x1e\x12%\n" +
	"!ProduceDescriptionType_ExamValue2\x10\x1f\x12#\n" +
	"\x1fProduceDescriptionType_ExamTurn\x10 \x12(\n" +
	"$ProduceDescriptionType_ExamTurnTimer\x10!\x12$\n" +
	" ProduceDescriptionType_ExamCount\x10\"\x12G\n" +
	"CProduceDescriptionType_ExamCardCreateSearchTurnTimerProduceCardName\x10#\x120\n" +
	",ProduceDescriptionType_ExamProduceExamEffect\x10$\x120\n" +
	",ProduceDescriptionType_ExamProduceCardSearch\x10%*r\n" +
	"\x12ProduceDisplayType\x12\x1e\n" +
	"\x1aProduceDisplayType_Unknown\x10\x00\x12\x1d\n" +
	"\x19ProduceDisplayType_Itself\x10\x01\x12\x1d\n" +
	"\x19ProduceDisplayType_Choice\x10\x02*\x9f\x01\n" +
	"\x12ProduceDrinkRarity\x12\x1e\n" +
	"\x1aProduceDrinkRarity_Unknown\x10\x00\x12\x18\n" +
	"\x14ProduceDrinkRarity_N\x10\x01\x12\x18\n" +
	"\x14ProduceDrinkRarity_R\x10\x02\x12\x19\n" +
	"\x15ProduceDrinkRarity_Sr\x10\x03\x12\x1a\n" +
	"\x16ProduceDrinkRarity_Ssr\x10\x04*\xdf)\n" +
	"\x11ProduceEffectType\x12\x1d\n" +
	"\x19ProduceEffectType_Unknown\x10\x00\x12#\n" +
	"\x1fProduceEffectType_VocalAddition\x10\x01\x12#\n" +
	"\x1fProduceEffectType_DanceAddition\x10\x02\x12$\n" +
	" ProduceEffectType_VisualAddition\x10\x03\x12\x1f\n" +
	"\x1bProduceEffectType_VocalDown\x10\x04\x12\x1f\n" +
	"\x1bProduceEffectType_DanceDown\x10\x05\x12 \n" +
	"\x1cProduceEffectType_VisualDown\x10\x06\x12-\n" +
	")ProduceEffectType_VocalGrowthRateAddition\x10\a\x12-\n" +
	")ProduceEffectType_DanceGrowthRateAddition\x10\b\x12.\n" +
	"*ProduceEffectType_VisualGrowthRateAddition\x10\t\x12)\n" +
	"%ProduceEffectType_VocalGrowthRateDown\x10\n" +
	"\x12)\n" +
	"%ProduceEffectType_DanceGrowthRateDown\x10\v\x12*\n" +
	"&ProduceEffectType_VisualGrowthRateDown\x10\f\x12'\n" +
	"#ProduceEffectType_StaminaRecoverFix\x10\r\x12,\n" +
	"(ProduceEffectType_StaminaRecoverMultiple\x10\x0e\x12&\n" +
	"\"ProduceEffectType_StaminaReduceFix\x10\x0f\x12+\n" +
	"'ProduceEffectType_StaminaReduceMultiple\x10\x10\x12$\n" +
	" ProduceEffectType_StaminaSpecify\x10\x11\x12+\n" +
	"'ProduceEffectType_StaminaRecoverValueUp\x10\x12\x12-\n" +
	")ProduceEffectType_StaminaRecoverValueDown\x10\x13\x12*\n" +
	"&ProduceEffectType_StaminaReduceValueUp\x10\x14\x12,\n" +
	"(ProduceEffectType_StaminaReduceValueDown\x10\x15\x12+\n" +
	"'ProduceEffectType_StaminaRecoverDisable\x10\x16\x12(\n" +
	"$ProduceEffectType_MaxStaminaAddition\x10\x17\x12)\n" +
	"%ProduceEffectType_MaxStaminaReduceFix\x10\x18\x12.\n" +
	"*ProduceEffectType_MaxStaminaReduceMultiple\x10\x19\x12+\n" +
	"'ProduceEffectType_ProducePointReduceFix\x10\x1a\x120\n" +
	",ProduceEffectType_ProducePointReduceMultiple\x10\x1b\x12)\n" +
	"%ProduceEffectType_ProducePointSpecify\x10\x1c\x121\n" +
	"-ProduceEffectType_ProducePointAdditionValueUp\x10\x1d\x123\n" +
	"/ProduceEffectType_ProducePointAdditionValueDown\x10\x1e\x12/\n" +
	"+ProduceEffectType_ProducePointReduceValueUp\x10\x1f\x121\n" +
	"-ProduceEffectType_ProducePointReduceValueDown\x10 \x12(\n" +
	"$ProduceEffectType_ProduceCardUpgrade\x10!\x12*\n" +
	"&ProduceEffectType_ProduceCardDuplicate\x10\"\x121\n" +
	"-ProduceEffectType_ProduceCardDuplicateUpgrade\x10#\x12'\n" +
	"#ProduceEffectType_ProduceCardChange\x10$\x12.\n" +
	"*ProduceEffectType_ProduceCardChangeUpgrade\x10%\x12'\n" +
	"#ProduceEffectType_ProduceCardDelete\x10&\x12*\n" +
	"&ProduceEffectType_ProducePointAddition\x10'\x12,\n" +
	"(ProduceEffectType_ProducePointGetDisable\x10(\x12+\n" +
	"'ProduceEffectType_ProduceItemGetDisable\x10)\x12,\n" +
	"(ProduceEffectType_ProduceDrinkGetDisable\x10*\x12#\n" +
	"\x1fProduceEffectType_ProduceReward\x10+\x12&\n" +
	"\"ProduceEffectType_ProduceRewardSet\x10,\x124\n" +
	"0ProduceEffectType_AuditionParameterBonusMultiple\x105\x126\n" +
	"2ProduceEffectType_LessonSpChangeRatePermilAddition\x106\x12;\n" +
	"7ProduceEffectType_LessonVocalSpChangeRatePermilAddition\x107\x12;\n" +
	"7ProduceEffectType_LessonDanceSpChangeRatePermilAddition\x108\x12<\n" +
	"8ProduceEffectType_LessonVisualSpChangeRatePermilAddition\x109\x122\n" +
	".ProduceEffectType_LessonSpChangeRatePermilDown\x10:\x12'\n" +
	"#ProduceEffectType_ExamStatusEnchant\x10<\x12;\n" +
	"7ProduceEffectType_LessonPresentProduceCardRewardCountUp\x10=\x12=\n" +
	"9ProduceEffectType_LessonPresentProduceCardRewardCountDown\x10>\x12A\n" +
	"=ProduceEffectType_LessonPresentSearchProduceCardRewardCountUp\x10?\x12/\n" +
	"+ProduceEffectType_ShopPriceDiscountMultiple\x10A\x12:\n" +
	"6ProduceEffectType_ShopProduceCardPriceDiscountMultiple\x10B\x12;\n" +
	"7ProduceEffectType_ShopProduceDrinkPriceDiscountMultiple\x10D\x12A\n" +
	"=ProduceEffectType_ShopProduceCardUpgradePriceDiscountMultiple\x10E\x128\n" +
	"4ProduceEffectType_ShopProduceCardUpgradePriceSpecify\x10F\x12@\n" +
	"<ProduceEffectType_ShopProduceCardDeletePriceDiscountMultiple\x10G\x127\n" +
	"3ProduceEffectType_ShopProduceCardDeletePriceSpecify\x10H\x120\n" +
	",ProduceEffectType_ProduceResultRewardMoneyUp\x10M\x12B\n" +
	">ProduceEffectType_ProduceResultRewardSupportCardEnhancePointUp\x10O\x126\n" +
	"2ProduceEffectType_SupportCardEventStaminaRecoverUp\x10P\x12A\n" +
	"=ProduceEffectType_SupportCardEventProducePointAdditionValueUp\x10Q\x12>\n" +
	":ProduceEffectType_SupportCardEventParameterAdditionValueUp\x10R\x123\n" +
	"/ProduceEffectType_SupportCardEventProbabilityUp\x10S\x121\n" +
	"-ProduceEffectType_LessonPresentProducePointUp\x10T\x123\n" +
	"/ProduceEffectType_LessonPresentProducePointDown\x10U\x12@\n" +
	"<ProduceEffectType_SupportCardProduceCardUpgradeProbabilityUp\x10V\x124\n" +
	"0ProduceEffectType_ProduceCardSelectRerollCountUp\x10W\x128\n" +
	"4ProduceEffectType_ProducePointAdditionDisableTrigger\x10X\x12#\n" +
	"\x1fProduceEffectType_LessonLimitUp\x10Y\x12&\n" +
	"\"ProduceEffectType_ParameterLimitUp\x10Z\x12\"\n" +
	"\x1eProduceEffectType_VocalLimitUp\x10[\x12\"\n" +
	"\x1eProduceEffectType_DanceLimitUp\x10\\\x12#\n" +
	"\x1fProduceEffectType_VisualLimitUp\x10]\x128\n" +
	"4ProduceEffectType_SupportCardEventProduceCardUpgrade\x10^\x12 \n" +
	"\x1cProduceEffectType_ExamTurnUp\x10_\x12\"\n" +
	"\x1eProduceEffectType_ExamTurnDown\x10`\x12(\n" +
	"$ProduceEffectType_AuditionNpcEnhance\x10a\x12)\n" +
	"%ProduceEffectType_ShopPriceUpMultiple\x10b\x124\n" +
	"0ProduceEffectType_ShopProduceCardPriceUpMultiple\x10c\x125\n" +
	"1ProduceEffectType_ShopProduceDrinkPriceUpMultiple\x10d\x12;\n" +
	"7ProduceEffectType_ShopProduceCardUpgradePriceUpMultiple\x10e\x12:\n" +
	"6ProduceEffectType_ShopProduceCardDeletePriceUpMultiple\x10f\x12*\n" +
	"&ProduceEffectType_EventSchoolStaminaUp\x10g\x12,\n" +
	"(ProduceEffectType_EventSchoolStaminaDown\x10h\x121\n" +
	"-ProduceEffectType_EventActivityProducePointUp\x10i\x123\n" +
	"/ProduceEffectType_EventActivityProducePointDown\x10j\x124\n" +
	"0ProduceEffectType_BeforeAuditionRefreshStaminaUp\x10k\x126\n" +
	"2ProduceEffectType_BeforeAuditionRefreshStaminaDown\x10l\x12'\n" +
	"#ProduceEffectType_ShopRerollCountUp\x10m\x12/\n" +
	"+ProduceEffectType_ProduceCardExcludeCountUp\x10n\x121\n" +
	"-ProduceEffectType_CustomizeProduceCardCountUp\x10o\x12@\n" +
	"<ProduceEffectType_CustomizeProduceCardProducePointUpMultiple\x10p\x12B\n" +
	">ProduceEffectType_CustomizeProduceCardProducePointDownMultiple\x10q\x12'\n" +
	"#ProduceEffectType_VoteCountAddition\x10r\x12.\n" +
	"*ProduceEffectType_EventBusinessVoteCountUp\x10s\x120\n" +
	",ProduceEffectType_EventBusinessVoteCountDown\x10t\x124\n" +
	"0ProduceEffectType_EventBusinessExcellentPermilUp\x10u\x126\n" +
	"2ProduceEffectType_EventBusinessExcellentPermilDown\x10v\x12)\n" +
	"%ProduceEffectType_AuditionVoteCountUp\x10w\x12+\n" +
	"'ProduceEffectType_AuditionVoteCountDown\x10x\x12)\n" +
	"%ProduceEffectType_SelfLessonStaminaUp\x10y\x12+\n" +
	"'ProduceEffectType_SelfLessonStaminaDown\x10z\x12+\n" +
	"'ProduceEffectType_HighScoreGoldAddition\x10{\x128\n" +
	"4ProduceEffectType_IdolCardProduceCardCustomizeEnable\x10|*\xe7\x05\n" +
	"\x19ProduceEventCharacterType\x12%\n" +
	"!ProduceEventCharacterType_Unknown\x10\x00\x12%\n" +
	"!ProduceEventCharacterType_Opening\x10\x01\x12(\n" +
	"$ProduceEventCharacterType_AfterStep1\x10\x02\x120\n" +
	",ProduceEventCharacterType_BeforeAuditionMid1\x10\x03\x12/\n" +
	"+ProduceEventCharacterType_AfterAuditionMid1\x10\x04\x12(\n" +
	"$ProduceEventCharacterType_AfterStep2\x10\x05\x120\n" +
	",ProduceEventCharacterType_BeforeAuditionMid2\x10\x06\x12/\n" +
	"+ProduceEventCharacterType_AfterAuditionMid2\x10\a\x121\n" +
	"-ProduceEventCharacterType_BeforeAuditionFinal\x10\b\x120\n" +
	",ProduceEventCharacterType_AfterAuditionFinal\x10\t\x12%\n" +
	"!ProduceEventCharacterType_Failure\x10\n" +
	"\x12$\n" +
	" ProduceEventCharacterType_Ending\x10\v\x129\n" +
	"5ProduceEventCharacterType_AfterStepBeforeAuditionMid1\x10\f\x129\n" +
	"5ProduceEventCharacterType_AfterStepBeforeAuditionMid2\x10\r\x12:\n" +
	"6ProduceEventCharacterType_AfterStepBeforeAuditionFinal\x10\x0e*\x96\x01\n" +
	"\x1aProduceEventSuggestionType\x12&\n" +
	"\"ProduceEventSuggestionType_Unknown\x10\x00\x12&\n" +
	"\"ProduceEventSuggestionType_Primary\x10\x01\x12(\n" +
	"$ProduceEventSuggestionType_Secondary\x10\x02*\x92\x02\n" +
	"\x10ProduceEventType\x12\x1c\n" +
	"\x18ProduceEventType_Unknown\x10\x00\x12\x1d\n" +
	"\x19ProduceEventType_Activity\x10\x01\x12\x1b\n" +
	"\x17ProduceEventType_School\x10\x02\x12\x1e\n" +
	"\x1aProduceEventType_Character\x10\x03\x12$\n" +
	" ProduceEventType_CharacterGrowth\x10\x04\x12\x1d\n" +
	"\x19ProduceEventType_IdolCard\x10\x05\x12 \n" +
	"\x1cProduceEventType_SupportCard\x10\x06\x12\x1d\n" +
	"\x19ProduceEventType_Business\x10\a*\xb1\x02\n" +
	"'ProduceExamAutoCardSelectEvaluationType\x123\n" +
	"/ProduceExamAutoCardSelectEvaluationType_Unknown\x10\x00\x12=\n" +
	"9ProduceExamAutoCardSelectEvaluationType_LessonCoefficient\x10\x01\x12E\n" +
	"AProduceExamAutoCardSelectEvaluationType_FullPowerPointCoefficient\x10\x02\x12K\n" +
	"GProduceExamAutoCardSelectEvaluationType_FullPowerPointValue2Coefficient\x10\x03*\xa2\x14\n" +
	"\x1dProduceExamAutoEvaluationType\x12)\n" +
	"%ProduceExamAutoEvaluationType_Unknown\x10\x00\x12+\n" +
	"'ProduceExamAutoEvaluationType_Parameter\x10\x01\x12'\n" +
	"#ProduceExamAutoEvaluationType_Block\x10\x02\x12)\n" +
	"%ProduceExamAutoEvaluationType_Stamina\x10\x03\x120\n" +
	",ProduceExamAutoEvaluationType_ExamLessonBuff\x10\x04\x12,\n" +
	"(ProduceExamAutoEvaluationType_ExamReview\x10\x05\x128\n" +
	"4ProduceExamAutoEvaluationType_ExamCardPlayAggressive\x10\x06\x123\n" +
	"/ProduceExamAutoEvaluationType_ExamParameterBuff\x10\a\x12<\n" +
	"8ProduceExamAutoEvaluationType_ExamStaminaConsumptionDown\x10\b\x12;\n" +
	"7ProduceExamAutoEvaluationType_ExamStaminaConsumptionAdd\x10\t\x122\n" +
	".ProduceExamAutoEvaluationType_ExamBlockAddDown\x10\n" +
	"\x129\n" +
	"5ProduceExamAutoEvaluationType_ExamGimmickLessonDebuff\x10\v\x12<\n" +
	"8ProduceExamAutoEvaluationType_ExamGimmickParameterDebuff\x10\f\x123\n" +
	"/ProduceExamAutoEvaluationType_ExamGimmickSleepy\x10\r\x122\n" +
	".ProduceExamAutoEvaluationType_ExamGimmickSlump\x10\x0e\x12?\n" +
	";ProduceExamAutoEvaluationType_ExamStaminaConsumptionDownFix\x10\x0f\x122\n" +
	".ProduceExamAutoEvaluationType_PlayableValueAdd\x10\x10\x12>\n" +
	":ProduceExamAutoEvaluationType_ParameterBuffMultiplePerTurn\x10\x11\x127\n" +
	"3ProduceExamAutoEvaluationType_ParameterBuffOverTurn\x10\x12\x12/\n" +
	"+ProduceExamAutoEvaluationType_ExamExtraTurn\x10\x13\x123\n" +
	"/ProduceExamAutoEvaluationType_ExamConcentration\x10\x14\x122\n" +
	".ProduceExamAutoEvaluationType_ExamPreservation\x10\x15\x12/\n" +
	"+ProduceExamAutoEvaluationType_ExamFullPower\x10\x16\x129\n" +
	"5ProduceExamAutoEvaluationType_ExamFullPowerPointTotal\x10\x17\x128\n" +
	"4ProduceExamAutoEvaluationType_ExamConcentrationCount\x10\x18\x127\n" +
	"3ProduceExamAutoEvaluationType_ExamPreservationCount\x10\x19\x124\n" +
	"0ProduceExamAutoEvaluationType_ExamFullPowerCount\x10\x1a\x12+\n" +
	"'ProduceExamAutoEvaluationType_HoldCount\x10\x1b\x12/\n" +
	"+ProduceExamAutoEvaluationType_DrawCardCount\x10\x1c\x12,\n" +
	"(ProduceExamAutoEvaluationType_RemainTurn\x10\x1d\x120\n" +
	",ProduceExamAutoEvaluationType_ExamAntiDebuff\x10\x1e\x12,\n" +
	"(ProduceExamAutoEvaluationType_StanceLock\x10\x1f\x126\n" +
	"2ProduceExamAutoEvaluationType_ExamBlockRestriction\x10 \x129\n" +
	"5ProduceExamAutoEvaluationType_ExamLessonValueMultiple\x10!\x124\n" +
	"0ProduceExamAutoEvaluationType_ExamReviewMultiple\x10\"\x12:\n" +
	"6ProduceExamAutoEvaluationType_ExamEnthusiasticAdditive\x10#\x12:\n" +
	"6ProduceExamAutoEvaluationType_ExamEnthusiasticMultiple\x10$\x12E\n" +
	"AProduceExamAutoEvaluationType_ExamFullPowerLessonMultipleAdditive\x10%\x12I\n" +
	"EProduceExamAutoEvaluationType_ExamConcentrationLessonMultipleAdditive\x10&\x128\n" +
	"4ProduceExamAutoEvaluationType_ExamLessonBuffAdditive\x10'\x12;\n" +
	"7ProduceExamAutoEvaluationType_ExamParameterBuffAdditive\x10(\x128\n" +
	"4ProduceExamAutoEvaluationType_ExamAggressiveAdditive\x10)\x124\n" +
	"0ProduceExamAutoEvaluationType_ExamReviewAdditive\x10*\x12<\n" +
	"8ProduceExamAutoEvaluationType_ExamFullPowerPointAdditive\x10+\x12A\n" +
	"=ProduceExamAutoEvaluationType_ExamGrowEffectLessonAddAdditive\x10,\x12Q\n" +
	"MProduceExamAutoEvaluationType_ExamLessonValueMultipleDependReviewOrAggressive\x10-*\xf56\n" +
	"\x15ProduceExamEffectType\x12!\n" +
	"\x1dProduceExamEffectType_Unknown\x10\x00\x12$\n" +
	" ProduceExamEffectType_ExamLesson\x10\x01\x12+\n" +
	"'ProduceExamEffectType_ExamParameterBuff\x10\x02\x12#\n" +
	"\x1fProduceExamEffectType_ExamBlock\x10\x03\x12&\n" +
	"\"ProduceExamEffectType_ExamCardDraw\x10\x04\x124\n" +
	"0ProduceExamEffectType_ExamStaminaConsumptionDown\x10\x05\x12*\n" +
	"&ProduceExamEffectType_ExamCardCreateId\x10\x06\x12.\n" +
	"*ProduceExamEffectType_ExamStaminaReduceFix\x10\a\x12&\n" +
	"\"ProduceExamEffectType_ExamCardMove\x10\t\x12(\n" +
	"$ProduceExamEffectType_ExamLessonBuff\x10\n" +
	"\x12)\n" +
	"%ProduceExamEffectType_ExamCardUpgrade\x10\v\x120\n" +
	",ProduceExamEffectType_ExamBlockValueMultiple\x10\r\x12.\n" +
	"*ProduceExamEffectType_ExamPlayableValueAdd\x10\x0e\x120\n" +
	",ProduceExamEffectType_ExamLessonBuffMultiple\x10\x0f\x12:\n" +
	"6ProduceExamEffectType_ExamCardStaminaConsumptionChange\x10\x11\x12.\n" +
	"*ProduceExamEffectType_ExamBlockRestriction\x10\x12\x12/\n" +
	"+ProduceExamEffectType_ExamLessonDependBlock\x10\x13\x12.\n" +
	"*ProduceExamEffectType_ExamCardCreateSearch\x10\x15\x12+\n" +
	"'ProduceExamEffectType_ExamStatusEnchant\x10\x16\x126\n" +
	"2ProduceExamEffectType_ExamMultipleLessonBuffLesson\x10\x17\x121\n" +
	"-ProduceExamEffectType_ExamForcePlayCardSearch\x10\x18\x12?\n" +
	";ProduceExamEffectType_ExamCardStaminaConsumptionDownSpecify\x10\x1a\x12+\n" +
	"'ProduceExamEffectType_ExamStaminaDamage\x10\x1b\x12/\n" +
	"+ProduceExamEffectType_ExamStaminaRecoverFix\x10\x1c\x12'\n" +
	"#ProduceExamEffectType_ExamLessonFix\x10\x1d\x12+\n" +
	"'ProduceExamEffectType_ExamCardDuplicate\x10\x1e\x12$\n" +
	" ProduceExamEffectType_ExamReview\x10\x1f\x126\n" +
	"2ProduceExamEffectType_ExamLessonValueChangePerPlay\x10 \x12:\n" +
	"6ProduceExamEffectType_ExamCardStaminaConsumptionReduce\x10!\x121\n" +
	"-ProduceExamEffectType_ExamReviewValueMultiple\x10$\x12;\n" +
	"7ProduceExamEffectType_ExamCardSearchEffectPlayCountBuff\x10&\x121\n" +
	"-ProduceExamEffectType_ExamLessonValueMultiple\x10'\x120\n" +
	",ProduceExamEffectType_ExamCardPlayAggressive\x10*\x12+\n" +
	"'ProduceExamEffectType_ExamConcentration\x10-\x12*\n" +
	"&ProduceExamEffectType_ExamPreservation\x10.\x12'\n" +
	"#ProduceExamEffectType_ExamFullPower\x10/\x12)\n" +
	"%ProduceExamEffectType_ExamStanceReset\x100\x12,\n" +
	"(ProduceExamEffectType_ExamFullPowerPoint\x101\x12&\n" +
	"\"ProduceExamEffectType_ExamForecast\x102\x122\n" +
	".ProduceExamEffectType_ExamFullPowerPointReduce\x103\x12,\n" +
	"(ProduceExamEffectType_ExamLessonAddBlock\x104\x122\n" +
	".ProduceExamEffectType_ExamLessonFullPowerPoint\x108\x12D\n" +
	"@ProduceExamEffectType_ExamSearchPlayCardStaminaConsumptionChange\x10;\x12+\n" +
	"'ProduceExamEffectType_ExamStaminaReduce\x10<\x12'\n" +
	"#ProduceExamEffectType_ExamUplifting\x10>\x12'\n" +
	"#ProduceExamEffectType_ExamExtraTurn\x10?\x12(\n" +
	"$ProduceExamEffectType_ExamAntiDebuff\x10B\x123\n" +
	"/ProduceExamEffectType_ExamStaminaConsumptionAdd\x10E\x12+\n" +
	"'ProduceExamEffectType_ExamThresholdDown\x10F\x12*\n" +
	"&ProduceExamEffectType_ExamBlockAddDown\x10I\x125\n" +
	"1ProduceExamEffectType_ExamBlockAddDownRestriction\x10J\x12/\n" +
	"+ProduceExamEffectType_ExamStaminaRecoverAdd\x10L\x121\n" +
	"-ProduceExamEffectType_ExamStaminaReduceChange\x10M\x12#\n" +
	"\x1fProduceExamEffectType_ExamPanic\x10N\x129\n" +
	"5ProduceExamEffectType_ExamLessonChangeSpecifyLessThan\x10Q\x12&\n" +
	"\"ProduceExamEffectType_ExamHandHold\x10R\x126\n" +
	"2ProduceExamEffectType_ExamStaminaConsumptionAddFix\x10T\x127\n" +
	"3ProduceExamEffectType_ExamStaminaConsumptionAddDown\x10U\x127\n" +
	"3ProduceExamEffectType_ExamStaminaRecoverRestriction\x10V\x127\n" +
	"3ProduceExamEffectType_ExamStaminaConsumptionDownAdd\x10Y\x12,\n" +
	"(ProduceExamEffectType_ExamGetCardUpgrade\x10Z\x127\n" +
	"3ProduceExamEffectType_ExamStaminaConsumptionDownFix\x10]\x124\n" +
	"0ProduceExamEffectType_ExamHandGraveCountCardDraw\x10b\x123\n" +
	"/ProduceExamEffectType_ExamHandGraveCountCardAdd\x10c\x12)\n" +
	"%ProduceExamEffectType_ExamEffectTimer\x10g\x121\n" +
	"-ProduceExamEffectType_ExamGimmickLessonDebuff\x10i\x124\n" +
	"0ProduceExamEffectType_ExamGimmickParameterDebuff\x10j\x12+\n" +
	"'ProduceExamEffectType_ExamGimmickSleepy\x10k\x121\n" +
	"-ProduceExamEffectType_ExamGimmickEnthusiastic\x10m\x122\n" +
	".ProduceExamEffectType_ExamGimmickPlayCardLimit\x10q\x12*\n" +
	"&ProduceExamEffectType_ExamGimmickSlump\x10r\x12:\n" +
	"6ProduceExamEffectType_ExamGimmickStartTurnCardDrawDown\x10s\x124\n" +
	"0ProduceExamEffectType_ExamStaminaRecoverMultiple\x10u\x122\n" +
	".ProduceExamEffectType_ExamLessonPerSearchCount\x10v\x12&\n" +
	"\"ProduceExamEffectType_ExamBlockFix\x10w\x129\n" +
	"5ProduceExamEffectType_ExamLessonAddMultipleLessonBuff\x10x\x12/\n" +
	"+ProduceExamEffectType_ExamCardStatusEnchant\x10y\x12'\n" +
	"#ProduceExamEffectType_ExamBlockDown\x10z\x129\n" +
	"5ProduceExamEffectType_ExamLessonChangeSpecifyMoreThan\x10{\x124\n" +
	"0ProduceExamEffectType_ExamLessonDependExamReview\x10|\x12@\n" +
	"<ProduceExamEffectType_ExamLessonDependExamCardPlayAggressive\x10}\x123\n" +
	"/ProduceExamEffectType_ExamReviewDependExamBlock\x10~\x123\n" +
	"/ProduceExamEffectType_ExamBlockDependExamReview\x10\x7f\x12A\n" +
	"<ProduceExamEffectType_ExamReviewDependExamCardPlayAggressive\x10\x80\x01\x12;\n" +
	"6ProduceExamEffectType_ExamParameterBuffMultiplePerTurn\x10\x81\x01\x12<\n" +
	"7ProduceExamEffectType_ExamLessonBuffDependParameterBuff\x10\x82\x01\x128\n" +
	"3ProduceExamEffectType_ExamLessonDependParameterBuff\x10\x83\x01\x12=\n" +
	"8ProduceExamEffectType_ExamLessonAddMultipleParameterBuff\x10\x84\x01\x123\n" +
	".ProduceExamEffectType_ExamBlockPerUseCardCount\x10\x85\x01\x12*\n" +
	"%ProduceExamEffectType_ExamChainEffect\x10\x8c\x01\x12%\n" +
	" ProduceExamEffectType_StanceLock\x10\x8d\x01\x122\n" +
	"-ProduceExamEffectType_ExamLessonDependStamina\x10\x8e\x01\x129\n" +
	"4ProduceExamEffectType_ExamBlockAddMultipleAggressive\x10\x8f\x01\x12@\n" +
	";ProduceExamEffectType_ExamLessonDependStaminaConsumptionSum\x10\x90\x01\x127\n" +
	"2ProduceExamEffectType_ExamChainEffectPerPassedTurn\x10\x91\x01\x127\n" +
	"2ProduceExamEffectType_ExamChainEffectPerRemainTurn\x10\x92\x01\x12;\n" +
	"6ProduceExamEffectType_ExamLessonDependPlayCardCountSum\x10\x93\x01\x12,\n" +
	"'ProduceExamEffectType_ExamDebuffRecover\x10\x94\x01\x126\n" +
	"1ProduceExamEffectType_ExamAggressiveValueMultiple\x10\x95\x01\x12/\n" +
	"*ProduceExamEffectType_ExamItemFireLimitAdd\x10\x96\x01\x12+\n" +
	"&ProduceExamEffectType_ExamReviewReduce\x10\x97\x01\x12/\n" +
	"*ProduceExamEffectType_ExamAggressiveReduce\x10\x98\x01\x12/\n" +
	"*ProduceExamEffectType_ExamLessonBuffReduce\x10\x99\x01\x122\n" +
	"-ProduceExamEffectType_ExamParameterBuffReduce\x10\x9a\x01\x126\n" +
	"1ProduceExamEffectType_ExamLessonValueMultipleDown\x10\x9b\x01\x12,\n" +
	"'ProduceExamEffectType_ExamAddGrowEffect\x10\x9c\x01\x12:\n" +
	"5ProduceExamEffectType_ExamParameterBuffPerSearchCount\x10\x9d\x01\x127\n" +
	"2ProduceExamEffectType_ExamLessonBuffPerSearchCount\x10\x9e\x01\x123\n" +
	".ProduceExamEffectType_ExamReviewPerSearchCount\x10\x9f\x01\x127\n" +
	"2ProduceExamEffectType_ExamAggressivePerSearchCount\x10\xa0\x01\x122\n" +
	"-ProduceExamEffectType_ExamBlockPerSearchCount\x10\xa1\x01\x12;\n" +
	"6ProduceExamEffectType_ExamFullPowerPointPerSearchCount\x10\xa2\x01\x12>\n" +
	"9ProduceExamEffectType_ExamLessonDependBlockAndSearchCount\x10\xa3\x01\x12C\n" +
	">ProduceExamEffectType_ExamLessonDependAggressiveAndSearchCount\x10\xa4\x01\x12?\n" +
	":ProduceExamEffectType_ExamLessonDependReviewAndSearchCount\x10\xa5\x01\x123\n" +
	".ProduceExamEffectType_ExamEffectPerSearchCount\x10\xa6\x01\x12/\n" +
	"*ProduceExamEffectType_ExamOverPreservation\x10\xa7\x01\x12<\n" +
	"7ProduceExamEffectType_ExamParameterBuffDependLessonBuff\x10\xa8\x01\x125\n" +
	"0ProduceExamEffectType_ExamAggressiveDependReview\x10\xa9\x01\x123\n" +
	".ProduceExamEffectType_ExamEnthusiasticAdditive\x10\xaa\x01\x123\n" +
	".ProduceExamEffectType_ExamEnthusiasticMultiple\x10\xab\x01\x12>\n" +
	"9ProduceExamEffectType_ExamFullPowerLessonMultipleAdditive\x10\xac\x01\x12B\n" +
	"=ProduceExamEffectType_ExamConcentrationLessonMultipleAdditive\x10\xad\x01\x121\n" +
	",ProduceExamEffectType_ExamLessonBuffAdditive\x10\xae\x01\x124\n" +
	"/ProduceExamEffectType_ExamParameterBuffAdditive\x10\xaf\x01\x121\n" +
	",ProduceExamEffectType_ExamAggressiveAdditive\x10\xb0\x01\x12-\n" +
	"(ProduceExamEffectType_ExamReviewAdditive\x10\xb1\x01\x125\n" +
	"0ProduceExamEffectType_ExamFullPowerPointAdditive\x10\xb2\x01\x12:\n" +
	"5ProduceExamEffectType_ExamGrowEffectLessonAddAdditive\x10\xb3\x01\x12A\n" +
	"<ProduceExamEffectType_ExamParameterBuffMultiplePerTurnReduce\x10\xb4\x01\x12J\n" +
	"EProduceExamEffectType_ExamLessonValueMultipleDependReviewOrAggressive\x10\xb5\x01\x12-\n" +
	"(ProduceExamEffectType_ExamReviewMultiple\x10\xb6\x01\x129\n" +
	"4ProduceExamEffectType_ExamMultipleEnthusiasticLesson\x10\xb7\x01\x12:\n" +
	"5ProduceExamEffectType_ExamMultipleConcentrationLesson\x10\xb8\x01\x126\n" +
	"1ProduceExamEffectType_ExamMultipleFullPowerLesson\x10\xb9\x01*\xf9\x0e\n" +
	"\x1aProduceExamFieldStatusType\x12&\n" +
	"\"ProduceExamFieldStatusType_Unknown\x10\x00\x12,\n" +
	"(ProduceExamFieldStatusType_ParameterBuff\x10\x01\x120\n" +
	",ProduceExamFieldStatusType_StaminaUpMultiple\x10\x04\x122\n" +
	".ProduceExamFieldStatusType_StaminaLessMultiple\x10\x05\x125\n" +
	"1ProduceExamFieldStatusType_StaminaConsumptionDown\x10\t\x12.\n" +
	"*ProduceExamFieldStatusType_ConcentrationUp\x10\v\x12-\n" +
	")ProduceExamFieldStatusType_PreservationUp\x10\f\x12*\n" +
	"&ProduceExamFieldStatusType_FullPowerUp\x10\r\x122\n" +
	".ProduceExamFieldStatusType_PlayCardRestriction\x10\x10\x12&\n" +
	"\"ProduceExamFieldStatusType_NoBlock\x10\x12\x12,\n" +
	"(ProduceExamFieldStatusType_PlayCardSkill\x10\x13\x12-\n" +
	")ProduceExamFieldStatusType_PlayCardLesson\x10\x14\x12.\n" +
	"*ProduceExamFieldStatusType_PlayCardSupport\x10\x15\x12-\n" +
	")ProduceExamFieldStatusType_TurnProgressUp\x10\x16\x129\n" +
	"5ProduceExamFieldStatusType_ConditionThresholdMultiple\x10\x1b\x12=\n" +
	"9ProduceExamFieldStatusType_ConditionThresholdMultipleDown\x10\x1c\x12+\n" +
	"'ProduceExamFieldStatusType_LessonBuffUp\x10!\x12&\n" +
	"\"ProduceExamFieldStatusType_BlockUp\x10\"\x12'\n" +
	"#ProduceExamFieldStatusType_ReviewUp\x10#\x124\n" +
	"0ProduceExamFieldStatusType_GimmickLessonDebuffUp\x10$\x12.\n" +
	"*ProduceExamFieldStatusType_GimmickSleepyUp\x10%\x12.\n" +
	"*ProduceExamFieldStatusType_ParameterBuffUp\x10&\x12+\n" +
	"'ProduceExamFieldStatusType_BlockAddDown\x10'\x125\n" +
	"1ProduceExamFieldStatusType_GimmickParameterDebuff\x10(\x12,\n" +
	"(ProduceExamFieldStatusType_RemainingTurn\x10)\x123\n" +
	"/ProduceExamFieldStatusType_CardPlayAggressiveUp\x10*\x120\n" +
	",ProduceExamFieldStatusType_ParameterLessThan\x10+\x12/\n" +
	"+ProduceExamFieldStatusType_FullPowerPointUp\x10,\x125\n" +
	"1ProduceExamFieldStatusType_FullPowerPointGetSumUp\x10-\x12'\n" +
	"#ProduceExamFieldStatusType_NoStance\x10.\x122\n" +
	".ProduceExamFieldStatusType_StanceChangeCountUp\x10/\x129\n" +
	"5ProduceExamFieldStatusType_ConcentrationChangeCountUp\x100\x128\n" +
	"4ProduceExamFieldStatusType_PreservationChangeCountUp\x101\x125\n" +
	"1ProduceExamFieldStatusType_FullPowerChangeCountUp\x102\x120\n" +
	",ProduceExamFieldStatusType_CardSearchCountUp\x103\x12-\n" +
	")ProduceExamFieldStatusType_PlayCardSearch\x104\x12=\n" +
	"9ProduceExamFieldStatusType_ParameterBuffMultiplePerTurnUp\x105\x12-\n" +
	")ProduceExamFieldStatusType_EnthusiasticUp\x106*\xd4\x0f\n" +
	"\x14ProduceExamPhaseType\x12 \n" +
	"\x1cProduceExamPhaseType_Unknown\x10\x00\x12%\n" +
	"!ProduceExamPhaseType_ExamCardDraw\x10\x01\x12%\n" +
	"!ProduceExamPhaseType_ExamCardPlay\x10\x02\x12*\n" +
	"&ProduceExamPhaseType_ExamCardPlayAfter\x10\x03\x12&\n" +
	"\"ProduceExamPhaseType_ExamStartTurn\x10\x04\x12$\n" +
	" ProduceExamPhaseType_ExamEndTurn\x10\x05\x12&\n" +
	"\"ProduceExamPhaseType_ExamStartExam\x10\x06\x12%\n" +
	"!ProduceExamPhaseType_ExamCardMove\x10\a\x12$\n" +
	" ProduceExamPhaseType_ExamCardAdd\x10\b\x12#\n" +
	"\x1fProduceExamPhaseType_ExamLesson\x10\t\x12%\n" +
	"!ProduceExamPhaseType_ExamForecast\x10\n" +
	"\x12+\n" +
	"'ProduceExamPhaseType_ExamSearchCardPlay\x10\v\x12)\n" +
	"%ProduceExamPhaseType_ExamStanceChange\x10\f\x12)\n" +
	"%ProduceExamPhaseType_ExamStatusChange\x10\r\x12&\n" +
	"\"ProduceExamPhaseType_ExamTurnCheck\x10\x10\x12%\n" +
	"!ProduceExamPhaseType_ExamUseDrink\x10\x11\x12%\n" +
	"!ProduceExamPhaseType_ExamGetPoint\x10\x12\x12$\n" +
	" ProduceExamPhaseType_ExamShuffle\x10\x13\x12*\n" +
	"&ProduceExamPhaseType_ExamStaminaReduce\x10\x14\x12&\n" +
	"\"ProduceExamPhaseType_ExamTurnTimer\x10\x15\x12)\n" +
	"%ProduceExamPhaseType_ExamTurnInterval\x10\x16\x12.\n" +
	"*ProduceExamPhaseType_ExamPlayCountInterval\x10\x17\x12.\n" +
	"*ProduceExamPhaseType_ExamStaminaReduceCard\x10\x18\x122\n" +
	".ProduceExamPhaseType_ExamPlayTurnCountInterval\x10\x19\x12\"\n" +
	"\x1eProduceExamPhaseType_StartPlay\x10\x1b\x12&\n" +
	"\"ProduceExamPhaseType_StartExamPlay\x10\x1c\x12)\n" +
	"%ProduceExamPhaseType_ExamCardMoveHand\x10\x1d\x12*\n" +
	"&ProduceExamPhaseType_ExamCardMoveGrave\x10\x1e\x12)\n" +
	"%ProduceExamPhaseType_ExamCardMoveLost\x10\x1f\x12.\n" +
	"*ProduceExamPhaseType_ExamLessonParameterUp\x10!\x12(\n" +
	"$ProduceExamPhaseType_ExamBuffConsume\x10\"\x126\n" +
	"2ProduceExamPhaseType_ExamStanceChangeCountInterval\x10#\x12.\n" +
	"*ProduceExamPhaseType_ExamStanceChangeCount\x10$\x126\n" +
	"2ProduceExamPhaseType_ExamStanceChangeConcentration\x10%\x125\n" +
	"1ProduceExamPhaseType_ExamStanceChangePreservation\x10&\x122\n" +
	".ProduceExamPhaseType_ExamStanceChangeFullPower\x10'\x12(\n" +
	"$ProduceExamPhaseType_ExamStanceReset\x10(\x12%\n" +
	"!ProduceExamPhaseType_ExamTurnSkip\x10)\x12)\n" +
	"%ProduceExamPhaseType_ExamEndTurnTimer\x10*\x12,\n" +
	"(ProduceExamPhaseType_ExamEndTurnInterval\x10+\x123\n" +
	"/ProduceExamPhaseType_ExamPlayCountIntervalAfter\x10,\x12:\n" +
	"6ProduceExamPhaseType_ExamStanceChangeFromConcentration\x10-\x129\n" +
	"5ProduceExamPhaseType_ExamStanceChangeFromPreservation\x10.\x126\n" +
	"2ProduceExamPhaseType_ExamStanceChangeFromFullPower\x10/\x12\x1e\n" +
	"\x19ProduceExamPhaseType_None\x10\xe7\a*\xa1\x01\n" +
	"\x15ProduceExamResultType\x12!\n" +
	"\x1dProduceExamResultType_Unknown\x10\x00\x12!\n" +
	"\x1dProduceExamResultType_Success\x10\x01\x12 \n" +
	"\x1cProduceExamResultType_Normal\x10\x02\x12 \n" +
	"\x1cProduceExamResultType_Failed\x10\x03*k\n" +
	"\x1bProduceExamTriggerCheckType\x12'\n" +
	"#ProduceExamTriggerCheckType_Unknown\x10\x00\x12#\n" +
	"\x1fProduceExamTriggerCheckType_Not\x10\x01*\x8c\x01\n" +
	"\x19ProduceHighScoreEventType\x12%\n" +
	"!ProduceHighScoreEventType_Unknown\x10\x00\x12$\n" +
	" ProduceHighScoreEventType_Normal\x10\x01\x12\"\n" +
	"\x1eProduceHighScoreEventType_Rush\x10\x02*\x90\x01\n" +
	"\x15ProduceItemEffectType\x12!\n" +
	"\x1dProduceItemEffectType_Unknown\x10\x00\x12'\n" +
	"#ProduceItemEffectType_ProduceEffect\x10\x01\x12+\n" +
	"'ProduceItemEffectType_ExamStatusEnchant\x10\x02*\x99\x01\n" +
	"\x11ProduceItemRarity\x12\x1d\n" +
	"\x19ProduceItemRarity_Unknown\x10\x00\x12\x17\n" +
	"\x13ProduceItemRarity_N\x10\x01\x12\x17\n" +
	"\x13ProduceItemRarity_R\x10\x02\x12\x18\n" +
	"\x14ProduceItemRarity_Sr\x10\x03\x12\x19\n" +
	"\x15ProduceItemRarity_Ssr\x10\x04*\xbe\x01\n" +
	"\x0fProduceLiveType\x12\x1b\n" +
	"\x17ProduceLiveType_Unknown\x10\x00\x12\x1b\n" +
	"\x17ProduceLiveType_TrueEnd\x10\x01\x12\x15\n" +
	"\x11ProduceLiveType_A\x10\x02\x12\x15\n" +
	"\x11ProduceLiveType_B\x10\x03\x12\x15\n" +
	"\x11ProduceLiveType_C\x10\x04\x12\x15\n" +
	"\x11ProduceLiveType_D\x10\x05\x12\x15\n" +
	"\x11ProduceLiveType_E\x10\x06*\xbc\x01\n" +
	"!ProduceMemoryProduceCardPhaseType\x12-\n" +
	")ProduceMemoryProduceCardPhaseType_Unknown\x10\x00\x122\n" +
	".ProduceMemoryProduceCardPhaseType_ProduceStart\x10\x01\x124\n" +
	"0ProduceMemoryProduceCardPhaseType_EndAuditionMid\x10\x02*\x99\x01\n" +
	"\x14ProduceParameterType\x12 \n" +
	"\x1cProduceParameterType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aProduceParameterType_Vocal\x10\x01\x12\x1e\n" +
	"\x1aProduceParameterType_Dance\x10\x02\x12\x1f\n" +
	"\x1bProduceParameterType_Visual\x10\x03*\xc5\r\n" +
	"\x10ProducePhaseType\x12\x1c\n" +
	"\x18ProducePhaseType_Unknown\x10\x00\x12$\n" +
	" ProducePhaseType_RecoveryStamina\x10\x01\x12)\n" +
	"%ProducePhaseType_CustomizeProduceCard\x10\x03\x12$\n" +
	" ProducePhaseType_GetProducePoint\x10\x04\x12#\n" +
	"\x1fProducePhaseType_GetProduceItem\x10\x06\x12$\n" +
	" ProducePhaseType_GetProduceDrink\x10\a\x12$\n" +
	" ProducePhaseType_UseProduceDrink\x10\b\x12#\n" +
	"\x1fProducePhaseType_GetProduceCard\x10\t\x12'\n" +
	"#ProducePhaseType_UpgradeProduceCard\x10\n" +
	"\x12&\n" +
	"\"ProducePhaseType_DeleteProduceCard\x10\v\x12!\n" +
	"\x1dProducePhaseType_ProduceStart\x10\f\x12\x1e\n" +
	"\x1aProducePhaseType_StartStep\x10\r\x12#\n" +
	"\x1fProducePhaseType_StartCustomize\x10\x0e\x12\x1e\n" +
	"\x1aProducePhaseType_StartShop\x10\x0f\x12!\n" +
	"\x1dProducePhaseType_StartRefresh\x10\x10\x12!\n" +
	"\x1dProducePhaseType_StartPresent\x10\x11\x12 \n" +
	"\x1cProducePhaseType_StartLesson\x10\x12\x12+\n" +
	"'ProducePhaseType_EndLessonBeforePresent\x10\x13\x12\x1e\n" +
	"\x1aProducePhaseType_EndLesson\x10\x14\x12!\n" +
	"\x1dProducePhaseType_FailedLesson\x10\x15\x12)\n" +
	"%ProducePhaseType_EndStepEventActivity\x10\x16\x12'\n" +
	"#ProducePhaseType_EndStepEventSchool\x10\x17\x121\n" +
	"-ProducePhaseType_EndStepEventCharacterOpening\x10\x18\x12&\n" +
	"\"ProducePhaseType_ChangeProduceCard\x10\x19\x12)\n" +
	"%ProducePhaseType_EndStepEventBusiness\x10\x1a\x12-\n" +
	")ProducePhaseType_EndBeforeAuditionRefresh\x10\x1b\x12%\n" +
	"!ProducePhaseType_StartAuditionMid\x10*\x12&\n" +
	"\"ProducePhaseType_StartAuditionMid1\x10+\x12&\n" +
	"\"ProducePhaseType_StartAuditionMid2\x10,\x12'\n" +
	"#ProducePhaseType_StartAuditionFinal\x10-\x12\"\n" +
	"\x1eProducePhaseType_StartAudition\x10.\x12#\n" +
	"\x1fProducePhaseType_EndAuditionMid\x10/\x12$\n" +
	" ProducePhaseType_EndAuditionMid1\x100\x12$\n" +
	" ProducePhaseType_EndAuditionMid2\x101\x12%\n" +
	"!ProducePhaseType_EndAuditionFinal\x102\x12 \n" +
	"\x1cProducePhaseType_EndAudition\x103\x12 \n" +
	"\x1cProducePhaseType_BuyShopItem\x104\x12+\n" +
	"'ProducePhaseType_BuyShopItemProduceCard\x105\x12,\n" +
	"(ProducePhaseType_BuyShopItemProduceDrink\x106\x12+\n" +
	"'ProducePhaseType_BuyShopItemProduceItem\x107\x122\n" +
	".ProducePhaseType_BuyShopItemUpgradeProduceCard\x108\x121\n" +
	"-ProducePhaseType_BuyShopItemDeleteProduceCard\x109\x12\x1f\n" +
	"\x1bProducePhaseType_EndPresent\x10:\x12\x1c\n" +
	"\x18ProducePhaseType_EndShop\x10;*\x98\x01\n" +
	"\x14ProducePickRangeType\x12 \n" +
	"\x1cProducePickRangeType_Unknown\x10\x00\x12\x1f\n" +
	"\x1bProducePickRangeType_Select\x10\x01\x12\x1f\n" +
	"\x1bProducePickRangeType_Random\x10\x02\x12\x1c\n" +
	"\x18ProducePickRangeType_All\x10\x03*\x9b\x01\n" +
	"\x0fProducePlanType\x12\x1b\n" +
	"\x17ProducePlanType_Unknown\x10\x00\x12\x1a\n" +
	"\x16ProducePlanType_Common\x10\x01\x12\x19\n" +
	"\x15ProducePlanType_Plan1\x10\x02\x12\x19\n" +
	"\x15ProducePlanType_Plan2\x10\x03\x12\x19\n" +
	"\x15ProducePlanType_Plan3\x10\x04*\xba\x02\n" +
	"!ProduceProgressAuditionStatusType\x12-\n" +
	")ProduceProgressAuditionStatusType_Unknown\x10\x00\x128\n" +
	"4ProduceProgressAuditionStatusType_ReadyForExamBattle\x10\x01\x12:\n" +
	"6ProduceProgressAuditionStatusType_InProgressExamBattle\x10\x02\x127\n" +
	"3ProduceProgressAuditionStatusType_ExamBattleSuccess\x10\x03\x127\n" +
	"3ProduceProgressAuditionStatusType_ExamBattleFailure\x10\x04*\x93\x04\n" +
	"\x1cProduceProgressConditionType\x12(\n" +
	"$ProduceProgressConditionType_Unknown\x10\x00\x12-\n" +
	")ProduceProgressConditionType_StaminaRatio\x10\x01\x12+\n" +
	"'ProduceProgressConditionType_StaminaFix\x10\x02\x12-\n" +
	")ProduceProgressConditionType_ProducePoint\x10\x03\x121\n" +
	"-ProduceProgressConditionType_ProduceItemCount\x10\x04\x122\n" +
	".ProduceProgressConditionType_ProduceDrinkCount\x10\x05\x121\n" +
	"-ProduceProgressConditionType_ProduceCardCount\x10\x06\x12&\n" +
	"\"ProduceProgressConditionType_Vocal\x10\a\x12&\n" +
	"\"ProduceProgressConditionType_Dance\x10\b\x12'\n" +
	"#ProduceProgressConditionType_Visual\x10\t\x12+\n" +
	"'ProduceProgressConditionType_StepNumber\x10\n" +
	"*\xc3\n" +
	"\n" +
	"\x15ProduceProgressStatus\x12!\n" +
	"\x1dProduceProgressStatus_Unknown\x10\x00\x12$\n" +
	" ProduceProgressStatus_OpeningAdv\x10\x01\x127\n" +
	"3ProduceProgressStatus_OpeningCharacterDearnessStory\x10\x02\x12/\n" +
	"+ProduceProgressStatus_CharacterEventOpening\x10\x03\x12(\n" +
	"$ProduceProgressStatus_SelectNextStep\x10\x04\x12/\n" +
	"+ProduceProgressStatus_BeforeAuditionRefresh\x10\x05\x122\n" +
	".ProduceProgressStatus_BeforeStepCharacterEvent\x10\x06\x124\n" +
	"0ProduceProgressStatus_BeforeStepSupportCardEvent\x10\a\x12$\n" +
	" ProduceProgressStatus_StepAction\x10\b\x129\n" +
	"5ProduceProgressStatus_AfterStepAuditionCharacterEvent\x10\t\x127\n" +
	"3ProduceProgressStatus_AfterStepCharacterGrowthEvent\x10\n" +
	"\x129\n" +
	"5ProduceProgressStatus_AfterStepCharacterDearnessStory\x10\v\x120\n" +
	",ProduceProgressStatus_AfterStepIdolCardEvent\x10\f\x123\n" +
	"/ProduceProgressStatus_AfterStepSupportCardEvent\x10\r\x121\n" +
	"-ProduceProgressStatus_AfterStepCharacterEvent\x10\x0e\x123\n" +
	"/ProduceProgressStatus_StartBeforeLiveEvaluation\x10\x0f\x121\n" +
	"-ProduceProgressStatus_EndBeforeLiveEvaluation\x10\x10\x12'\n" +
	"#ProduceProgressStatus_IdolCardEvent\x10\x11\x12/\n" +
	"+ProduceProgressStatus_CharacterEventFailure\x10\x12\x12.\n" +
	"*ProduceProgressStatus_CharacterEventEnding\x10\x13\x121\n" +
	"-ProduceProgressStatus_BeforeStepCampaignEvent\x10\x14\x120\n" +
	",ProduceProgressStatus_AfterStepCampaignEvent\x10\x15\x12\x1d\n" +
	"\x19ProduceProgressStatus_End\x10\x1e\x12 \n" +
	"\x1cProduceProgressStatus_Result\x10\x1f\x12&\n" +
	"\"ProduceProgressStatus_GuildMission\x10 \x126\n" +
	"2ProduceProgressStatus_EndingCharacterDearnessStory\x10!\x12'\n" +
	"#ProduceProgressStatus_DearnessBoost\x10\"\x12\"\n" +
	"\x1eProduceProgressStatus_Finished\x10c*\x92\x04\n" +
	"\x19ProduceResourceOriginType\x12%\n" +
	"!ProduceResourceOriginType_Unknown\x10\x00\x12%\n" +
	"!ProduceResourceOriginType_Produce\x10\x01\x12&\n" +
	"\"ProduceResourceOriginType_IdolCard\x10\x02\x12)\n" +
	"%ProduceResourceOriginType_SupportCard\x10\x03\x12+\n" +
	"'ProduceResourceOriginType_MemoryAbility\x10\x04\x12)\n" +
	"%ProduceResourceOriginType_ProduceCard\x10\x05\x12)\n" +
	"%ProduceResourceOriginType_ProduceItem\x10\x06\x12*\n" +
	"&ProduceResourceOriginType_StepAudition\x10\n" +
	"\x12'\n" +
	"#ProduceResourceOriginType_StepEvent\x10\v\x12)\n" +
	"%ProduceResourceOriginType_StepPresent\x10\f\x12&\n" +
	"\"ProduceResourceOriginType_StepShop\x10\r\x12)\n" +
	"%ProduceResourceOriginType_ExamGimmick\x10\x0e*\x94\x04\n" +
	"\x13ProduceResourceType\x12\x1f\n" +
	"\x1bProduceResourceType_Unknown\x10\x00\x12#\n" +
	"\x1fProduceResourceType_ProduceCard\x10\x01\x12#\n" +
	"\x1fProduceResourceType_ProduceItem\x10\x02\x12$\n" +
	" ProduceResourceType_ProduceDrink\x10\x03\x12$\n" +
	" ProduceResourceType_ProducePoint\x10\x04\x12\x1f\n" +
	"\x1bProduceResourceType_Stamina\x10\x05\x12&\n" +
	"\"ProduceResourceType_ParameterVocal\x10\x06\x12&\n" +
	"\"ProduceResourceType_ParameterDance\x10\a\x12'\n" +
	"#ProduceResourceType_ParameterVisual\x10\b\x12\x1c\n" +
	"\x18ProduceResourceType_Vote\x10\t\x12%\n" +
	"!ProduceResourceType_HighScoreGold\x10d\x12$\n" +
	"\x1fProduceResourceType_CardUpgrade\x10\xe5\a\x12#\n" +
	"\x1eProduceResourceType_CardDelete\x10\xe6\a\x12\x1c\n" +
	"\x17ProduceResourceType_Set\x10\xe7\a*r\n" +
	"\x11ProduceRewardType\x12\x1d\n" +
	"\x19ProduceRewardType_Unknown\x10\x00\x12!\n" +
	"\x1dProduceRewardType_Probability\x10\x01\x12\x1b\n" +
	"\x17ProduceRewardType_Ratio\x10\x02*\x83\x04\n" +
	"\x1bProduceScheduleLocationType\x12'\n" +
	"#ProduceScheduleLocationType_Unknown\x10\x00\x12-\n" +
	")ProduceScheduleLocationType_ProducerRoom1\x10\x01\x12-\n" +
	")ProduceScheduleLocationType_ProducerRoom2\x10\x02\x12)\n" +
	"%ProduceScheduleLocationType_Classroom\x10\x03\x12'\n" +
	"#ProduceScheduleLocationType_Rooftop\x10\x04\x12)\n" +
	"%ProduceScheduleLocationType_Courtyard\x10\x05\x12-\n" +
	")ProduceScheduleLocationType_ProducerRoom3\x10\x06\x12-\n" +
	")ProduceScheduleLocationType_ProducerRoom4\x10\a\x12*\n" +
	"&ProduceScheduleLocationType_Classroom2\x10\b\x12(\n" +
	"$ProduceScheduleLocationType_Rooftop2\x10\t\x12*\n" +
	"&ProduceScheduleLocationType_Courtyard2\x10\n" +
	"*\xe0\x01\n" +
	"\x19ProduceScheduleMotionType\x12%\n" +
	"!ProduceScheduleMotionType_Unknown\x10\x00\x12#\n" +
	"\x1fProduceScheduleMotionType_Wait1\x10\x01\x12#\n" +
	"\x1fProduceScheduleMotionType_Wait2\x10\x02\x12&\n" +
	"\"ProduceScheduleMotionType_Reaction\x10\x03\x12*\n" +
	"&ProduceScheduleMotionType_ReactionOnce\x10\x04*\xad\x01\n" +
	" ProduceScheduleStaminaMotionType\x12,\n" +
	"(ProduceScheduleStaminaMotionType_Unknown\x10\x00\x12+\n" +
	"'ProduceScheduleStaminaMotionType_Enough\x10\x01\x12.\n" +
	"*ProduceScheduleStaminaMotionType_NotEnough\x10\x02*\xe2\x03\n" +
	"\x16ProduceSkillEffectType\x12\"\n" +
	"\x1eProduceSkillEffectType_Unknown\x10\x00\x12(\n" +
	"$ProduceSkillEffectType_VocalAddition\x10d\x122\n" +
	".ProduceSkillEffectType_VocalGrowthRateAddition\x10e\x12)\n" +
	"$ProduceSkillEffectType_DanceAddition\x10\xc8\x01\x123\n" +
	".ProduceSkillEffectType_DanceGrowthRateAddition\x10\xc9\x01\x12*\n" +
	"%ProduceSkillEffectType_VisualAddition\x10\xac\x02\x124\n" +
	"/ProduceSkillEffectType_VisualGrowthRateAddition\x10\xad\x02\x12+\n" +
	"&ProduceSkillEffectType_StaminaAddition\x10\xf4\x03\x12,\n" +
	"'ProduceSkillEffectType_ProduceRewardSet\x10\xe8\a\x12)\n" +
	"$ProduceSkillEffectType_ProduceEffect\x10\xe9\a*\x82\x01\n" +
	"\x16ProduceStartMotionType\x12\"\n" +
	"\x1eProduceStartMotionType_Unknown\x10\x00\x12#\n" +
	"\x1fProduceStartMotionType_Reaction\x10\x01\x12\x1f\n" +
	"\x1bProduceStartMotionType_Wait\x10\x02*\x9f\x02\n" +
	"\x1dProduceStepAuditionMotionType\x12)\n" +
	"%ProduceStepAuditionMotionType_Unknown\x10\x00\x12'\n" +
	"#ProduceStepAuditionMotionType_Start\x10\x01\x12)\n" +
	"%ProduceStepAuditionMotionType_Result1\x10\x02\x12)\n" +
	"%ProduceStepAuditionMotionType_Result2\x10\x03\x12)\n" +
	"%ProduceStepAuditionMotionType_Result3\x10\x04\x12)\n" +
	"%ProduceStepAuditionMotionType_Failure\x10\x05*\xc8\x03\n" +
	"\x17ProduceStepAuditionType\x12#\n" +
	"\x1fProduceStepAuditionType_Unknown\x10\x00\x12$\n" +
	" ProduceStepAuditionType_Mid1Easy\x10\x01\x12&\n" +
	"\"ProduceStepAuditionType_Mid1Normal\x10\x02\x12$\n" +
	" ProduceStepAuditionType_Mid1Hard\x10\x03\x12$\n" +
	" ProduceStepAuditionType_Mid2Easy\x10\x04\x12&\n" +
	"\"ProduceStepAuditionType_Mid2Normal\x10\x05\x12$\n" +
	" ProduceStepAuditionType_Mid2Hard\x10\x06\x12%\n" +
	"!ProduceStepAuditionType_FinalEasy\x10\a\x12'\n" +
	"#ProduceStepAuditionType_FinalNormal\x10\b\x12%\n" +
	"!ProduceStepAuditionType_FinalHard\x10\t\x12)\n" +
	"%ProduceStepAuditionType_FinalVeryHard\x10\n" +
	"*\xe0\x01\n" +
	"\x17ProduceStepBusinessType\x12#\n" +
	"\x1fProduceStepBusinessType_Unknown\x10\x00\x12'\n" +
	"#ProduceStepBusinessType_ProduceCard\x10\x01\x12(\n" +
	"$ProduceStepBusinessType_ProduceDrink\x10\x02\x12(\n" +
	"$ProduceStepBusinessType_ProducePoint\x10\x03\x12#\n" +
	"\x1fProduceStepBusinessType_Stamina\x10\x04*\xa6\x01\n" +
	"\x1fProduceStepFanPresentMotionType\x12+\n" +
	"'ProduceStepFanPresentMotionType_Unknown\x10\x00\x12,\n" +
	"(ProduceStepFanPresentMotionType_Reaction\x10\x01\x12(\n" +
	"$ProduceStepFanPresentMotionType_Wait\x10\x02*\xca\x05\n" +
	"\x15ProduceStepLessonType\x12!\n" +
	"\x1dProduceStepLessonType_Unknown\x10\x00\x12 \n" +
	"\x1cProduceStepLessonType_Lesson\x10\x01\x12&\n" +
	"\"ProduceStepLessonType_LessonNormal\x10\x02\x12\"\n" +
	"\x1eProduceStepLessonType_LessonSp\x10\x03\x12$\n" +
	" ProduceStepLessonType_LessonHard\x10\x04\x12%\n" +
	"!ProduceStepLessonType_LessonVocal\x10\x05\x12%\n" +
	"!ProduceStepLessonType_LessonDance\x10\x06\x12&\n" +
	"\"ProduceStepLessonType_LessonVisual\x10\a\x12+\n" +
	"'ProduceStepLessonType_LessonVocalNormal\x10\b\x12'\n" +
	"#ProduceStepLessonType_LessonVocalSp\x10\t\x12)\n" +
	"%ProduceStepLessonType_LessonVocalHard\x10\n" +
	"\x12+\n" +
	"'ProduceStepLessonType_LessonDanceNormal\x10\v\x12'\n" +
	"#ProduceStepLessonType_LessonDanceSp\x10\f\x12)\n" +
	"%ProduceStepLessonType_LessonDanceHard\x10\r\x12,\n" +
	"(ProduceStepLessonType_LessonVisualNormal\x10\x0e\x12(\n" +
	"$ProduceStepLessonType_LessonVisualSp\x10\x0f\x12*\n" +
	"&ProduceStepLessonType_LessonVisualHard\x10\x10*y\n" +
	"\x14ProduceStepPhaseType\x12 \n" +
	"\x1cProduceStepPhaseType_Unknown\x10\x00\x12\x1f\n" +
	"\x1bProduceStepPhaseType_Before\x10\x01\x12\x1e\n" +
	"\x1aProduceStepPhaseType_After\x10\x02*\x90\b\n" +
	"\x0fProduceStepType\x12\x1b\n" +
	"\x17ProduceStepType_Unknown\x10\x00\x12%\n" +
	"!ProduceStepType_LessonVocalNormal\x10\x01\x12!\n" +
	"\x1dProduceStepType_LessonVocalSp\x10\x02\x12#\n" +
	"\x1fProduceStepType_LessonVocalHard\x10\x03\x12%\n" +
	"!ProduceStepType_LessonDanceNormal\x10\x04\x12!\n" +
	"\x1dProduceStepType_LessonDanceSp\x10\x05\x12#\n" +
	"\x1fProduceStepType_LessonDanceHard\x10\x06\x12&\n" +
	"\"ProduceStepType_LessonVisualNormal\x10\a\x12\"\n" +
	"\x1eProduceStepType_LessonVisualSp\x10\b\x12$\n" +
	" ProduceStepType_LessonVisualHard\x10\t\x12\x19\n" +
	"\x15ProduceStepType_Event\x10\n" +
	"\x12!\n" +
	"\x1dProduceStepType_EventActivity\x10\v\x12\x1f\n" +
	"\x1bProduceStepType_EventSchool\x10\f\x12\x18\n" +
	"\x14ProduceStepType_Shop\x10\r\x12\x1b\n" +
	"\x17ProduceStepType_Refresh\x10\x0e\x12\x1b\n" +
	"\x17ProduceStepType_Present\x10\x0f\x12 \n" +
	"\x1cProduceStepType_AuditionMid1\x10\x10\x12 \n" +
	"\x1cProduceStepType_AuditionMid2\x10\x11\x12!\n" +
	"\x1dProduceStepType_AuditionFinal\x10\x12\x12)\n" +
	"%ProduceStepType_SelfLessonVocalNormal\x10\x13\x12%\n" +
	"!ProduceStepType_SelfLessonVocalSp\x10\x14\x12)\n" +
	"%ProduceStepType_SelfLessonDanceNormal\x10\x15\x12%\n" +
	"!ProduceStepType_SelfLessonDanceSp\x10\x16\x12*\n" +
	"&ProduceStepType_SelfLessonVisualNormal\x10\x17\x12&\n" +
	"\"ProduceStepType_SelfLessonVisualSp\x10\x18\x12\x1c\n" +
	"\x18ProduceStepType_Business\x10\x19\x12!\n" +
	"\x1dProduceStepType_EventBusiness\x10\x1a\x12\x1e\n" +
	"\x1aProduceStepType_FanPresent\x10\x1b\x12\x1d\n" +
	"\x19ProduceStepType_Customize\x10\x1c*\xeb\x02\n" +
	"\x10ProduceStoryType\x12\x1c\n" +
	"\x18ProduceStoryType_Unknown\x10\x00\x12\x1d\n" +
	"\x19ProduceStoryType_Dearness\x10\x01\x12\x1e\n" +
	"\x1aProduceStoryType_Character\x10\x02\x12$\n" +
	" ProduceStoryType_CharacterGrowth\x10\x03\x12\x1d\n" +
	"\x19ProduceStoryType_IdolCard\x10\x04\x12 \n" +
	"\x1cProduceStoryType_SupportCard\x10\x05\x12&\n" +
	"\"ProduceStoryType_StepActivityEvent\x10\x06\x12$\n" +
	" ProduceStoryType_StepSchoolEvent\x10\a\x12\x1d\n" +
	"\x19ProduceStoryType_Campaign\x10\b\x12&\n" +
	"\"ProduceStoryType_StepBusinessEvent\x10\t*\x9b\x03\n" +
	"\x18ProduceTriggerOriginType\x12$\n" +
	" ProduceTriggerOriginType_Unknown\x10\x00\x12&\n" +
	"\"ProduceTriggerOriginType_Character\x10\x01\x12%\n" +
	"!ProduceTriggerOriginType_IdolCard\x10\x02\x12(\n" +
	"$ProduceTriggerOriginType_SupportCard\x10\x03\x12#\n" +
	"\x1fProduceTriggerOriginType_Memory\x10\x04\x12\"\n" +
	"\x1eProduceTriggerOriginType_Event\x10\x05\x12!\n" +
	"\x1dProduceTriggerOriginType_Item\x10\x06\x12\"\n" +
	"\x1eProduceTriggerOriginType_Drink\x10\a\x12$\n" +
	" ProduceTriggerOriginType_Produce\x10\b\x12*\n" +
	"&ProduceTriggerOriginType_DearnessStory\x10\t*c\n" +
	"\vProduceType\x12\x17\n" +
	"\x13ProduceType_Unknown\x10\x00\x12\x19\n" +
	"\x15ProduceType_FirstStar\x10\x01\x12 \n" +
	"\x1cProduceType_NextIdolAudition\x10\x02*\xe7\x02\n" +
	"\x17ProducerLevelUnlockType\x12#\n" +
	"\x1fProducerLevelUnlockType_Unknown\x10\x00\x12'\n" +
	"#ProducerLevelUnlockType_ProduceCard\x10\x01\x12(\n" +
	"$ProducerLevelUnlockType_ProduceDrink\x10\x02\x122\n" +
	".ProducerLevelUnlockType_ShopProduceCardUpgrade\x10\n" +
	"\x121\n" +
	"-ProducerLevelUnlockType_ShopProduceCardDelete\x10\v\x128\n" +
	"4ProducerLevelUnlockType_ProduceCardSelectRerollCount\x10\f\x123\n" +
	"/ProducerLevelUnlockType_ProduceCardExcludeCount\x10\r*\xea\x02\n" +
	"\x1dPurchaseTransactionStatusType\x12)\n" +
	"%PurchaseTransactionStatusType_Unknown\x10\x00\x12&\n" +
	"\"PurchaseTransactionStatusType_None\x10\x01\x12-\n" +
	")PurchaseTransactionStatusType_Initialized\x10\x02\x123\n" +
	"/PurchaseTransactionStatusType_InvalidMasterData\x10\x03\x12.\n" +
	"*PurchaseTransactionStatusType_ChargeFailed\x10\x04\x124\n" +
	"0PurchaseTransactionStatusType_ProvideBonusFailed\x10\x05\x12,\n" +
	"'PurchaseTransactionStatusType_Completed\x10\xe7\a*\xeb\x01\n" +
	"\bPushType\x12\x14\n" +
	"\x10PushType_Unknown\x10\x00\x12\x13\n" +
	"\x0fPushType_ApFull\x10\x01\x12\x16\n" +
	"\x12PushType_MoneyFull\x10\x02\x12\x19\n" +
	"\x15PushType_DailyMission\x10\x03\x12\x12\n" +
	"\x0ePushType_Login\x10\x04\x12&\n" +
	"\"PushType_PvpRateRemainingPlayCount\x10\x05\x12\x1f\n" +
	"\x1bPushType_WorkMiniLiveFinish\x10e\x12$\n" +
	" PushType_WorkLiveStreamingFinish\x10f*\xd0\x01\n" +
	"\fPvpRateGrade\x12\x18\n" +
	"\x14PvpRateGrade_Unknown\x10\x00\x12\x13\n" +
	"\x0fPvpRateGrade__1\x10\x01\x12\x13\n" +
	"\x0fPvpRateGrade__2\x10\x02\x12\x13\n" +
	"\x0fPvpRateGrade__3\x10\x03\x12\x13\n" +
	"\x0fPvpRateGrade__4\x10\x04\x12\x13\n" +
	"\x0fPvpRateGrade__5\x10\x05\x12\x13\n" +
	"\x0fPvpRateGrade__6\x10\x06\x12\x13\n" +
	"\x0fPvpRateGrade__7\x10\a\x12\x13\n" +
	"\x0fPvpRateGrade__8\x10\b*i\n" +
	"\x11PvpRateMotionType\x12\x1d\n" +
	"\x19PvpRateMotionType_Unknown\x10\x00\x12\x19\n" +
	"\x15PvpRateMotionType_Win\x10\x01\x12\x1a\n" +
	"\x16PvpRateMotionType_Lose\x10\x02*\xe7\x01\n" +
	"\x10PvpRatePhaseType\x12\x1c\n" +
	"\x18PvpRatePhaseType_Unknown\x10\x00\x12\"\n" +
	"\x1ePvpRatePhaseType_MatchedRivals\x10\x01\x12%\n" +
	"!PvpRatePhaseType_BeforeFirstStage\x10\x02\x12&\n" +
	"\"PvpRatePhaseType_BeforeSecondStage\x10\x03\x12%\n" +
	"!PvpRatePhaseType_BeforeThirdStage\x10\x04\x12\x1b\n" +
	"\x17PvpRatePhaseType_Result\x10\x05*\x82\x01\n" +
	"\x10PvpRateRivalType\x12\x1c\n" +
	"\x18PvpRateRivalType_Unknown\x10\x00\x12\x19\n" +
	"\x15PvpRateRivalType_High\x10\x01\x12\x1b\n" +
	"\x17PvpRateRivalType_Middle\x10\x02\x12\x18\n" +
	"\x14PvpRateRivalType_Low\x10\x03*\xe0\x01\n" +
	"\x17PvpRateSeasonStatusType\x12#\n" +
	"\x1fPvpRateSeasonStatusType_Unknown\x10\x00\x12%\n" +
	"!PvpRateSeasonStatusType_OutOfTerm\x10\x01\x12,\n" +
	"(PvpRateSeasonStatusType_PrepareStartTerm\x10\x02\x12'\n" +
	"#PvpRateSeasonStatusType_NotAttended\x10\x03\x12\"\n" +
	"\x1ePvpRateSeasonStatusType_InTerm\x10\x04*{\n" +
	"\x10PvpRateStageType\x12\x1c\n" +
	"\x18PvpRateStageType_Unknown\x10\x00\x12\x17\n" +
	"\x13PvpRateStageType__1\x10\x01\x12\x17\n" +
	"\x13PvpRateStageType__2\x10\x02\x12\x17\n" +
	"\x13PvpRateStageType__3\x10\x03*\x9e\x01\n" +
	"\x0fResetTimingType\x12\x1b\n" +
	"\x17ResetTimingType_Unknown\x10\x00\x12\x19\n" +
	"\x15ResetTimingType_Daily\x10\x01\x12\x1a\n" +
	"\x16ResetTimingType_Weekly\x10\x02\x12\x1b\n" +
	"\x17ResetTimingType_Monthly\x10\x03\x12\x1a\n" +
	"\x15ResetTimingType_Never\x10\xe7\a*\x97\x01\n" +
	"\x12ResourceOriginType\x12\x1e\n" +
	"\x1aResourceOriginType_Unknown\x10\x00\x12\x1f\n" +
	"\x1bResourceOriginType_IdolCard\x10\x01\x12#\n" +
	"\x1fResourceOriginType_IdolCardSkin\x10\x02\x12\x1b\n" +
	"\x17ResourceOriginType_Shop\x10\x03*\xca\x06\n" +
	"\fResourceType\x12\x18\n" +
	"\x14ResourceType_Unknown\x10\x00\x12\x1c\n" +
	"\x18ResourceType_ProduceCard\x10\x01\x12\x15\n" +
	"\x11ResourceType_Item\x10\x02\x12\x17\n" +
	"\x13ResourceType_Memory\x10\x03\x12\x1c\n" +
	"\x18ResourceType_SupportCard\x10\x04\x12\x1d\n" +
	"\x19ResourceType_IdolCardSkin\x10\x05\x12!\n" +
	"\x1dResourceType_MissionPassPoint\x10\x06\x12'\n" +
	"#ResourceType_MissionPassPremiumPass\x10\a\x12\x1c\n" +
	"\x18ResourceType_ActionPoint\x10\b\x12\x18\n" +
	"\x14ResourceType_UserExp\x10\t\x12\x19\n" +
	"\x15ResourceType_FanCount\x10\n" +
	"\x12'\n" +
	"#ResourceType_FriendFollowLimitCount\x10\v\x12\x16\n" +
	"\x12ResourceType_Music\x10\f\x12\x1c\n" +
	"\x18ResourceType_CostumeHead\x10\r\x12\x18\n" +
	"\x14ResourceType_Costume\x10\x0e\x12 \n" +
	"\x1cResourceType_MeishiBaseAsset\x10\x0f\x12(\n" +
	"$ResourceType_MeishiIllustrationAsset\x10\x10\x12 \n" +
	"\x1cResourceType_InvitationPoint\x10\x11\x12\x16\n" +
	"\x12ResourceType_Story\x10\x12\x12 \n" +
	"\x1cResourceType_StoryEventPoint\x10\x13\x12!\n" +
	"\x1dResourceType_PvpRatePlayCount\x10\x14\x12 \n" +
	"\x1cResourceType_PhotoBackground\x10\x15\x12\x1a\n" +
	"\x16ResourceType_PhotoPose\x10\x16\x12\x1e\n" +
	"\x1aResourceType_DearnessPoint\x10\x17\x12\x1c\n" +
	"\x17ResourceType_JewelTotal\x10\xcc\b\x12\x1f\n" +
	"\x1aResourceType_JewelPaidOnly\x10\xcd\b\x12\x15\n" +
	"\x10ResourceType_Set\x10\x8fN*\xe1\x02\n" +
	"\vResultGrade\x12\x17\n" +
	"\x13ResultGrade_Unknown\x10\x00\x12\x11\n" +
	"\rResultGrade_F\x10\x01\x12\x11\n" +
	"\rResultGrade_E\x10\x02\x12\x11\n" +
	"\rResultGrade_D\x10\x03\x12\x11\n" +
	"\rResultGrade_C\x10\x04\x12\x15\n" +
	"\x11ResultGrade_CPlus\x10\x05\x12\x11\n" +
	"\rResultGrade_B\x10\x06\x12\x15\n" +
	"\x11ResultGrade_BPlus\x10\a\x12\x11\n" +
	"\rResultGrade_A\x10\b\x12\x15\n" +
	"\x11ResultGrade_APlus\x10\t\x12\x11\n" +
	"\rResultGrade_S\x10\n" +
	"\x12\x15\n" +
	"\x11ResultGrade_SPlus\x10\v\x12\x12\n" +
	"\x0eResultGrade_Ss\x10\f\x12\x16\n" +
	"\x12ResultGrade_SsPlus\x10\r\x12\x13\n" +
	"\x0fResultGrade_Sss\x10\x0e\x12\x17\n" +
	"\x13ResultGrade_SssPlus\x10\x0f*\xc9\x01\n" +
	"\x0fResultGradeType\x12\x1b\n" +
	"\x17ResultGradeType_Unknown\x10\x00\x12 \n" +
	"\x1cResultGradeType_ProduceScore\x10\x01\x12#\n" +
	"\x1fResultGradeType_MemoryParameter\x10\x03\x12,\n" +
	"(ResultGradeType_ProduceIdolCardParameter\x10\x05\x12$\n" +
	" ResultGradeType_ProduceVoteCount\x10\x06*\xd2\x01\n" +
	"\x11RewardProvideType\x12\x1d\n" +
	"\x19RewardProvideType_Unknown\x10\x00\x12\x1e\n" +
	"\x1aRewardProvideType_PatternA\x10\x01\x12\x1e\n" +
	"\x1aRewardProvideType_PatternB\x10\x02\x12\x1e\n" +
	"\x1aRewardProvideType_PatternC\x10\x03\x12\x1e\n" +
	"\x1aRewardProvideType_PatternD\x10\x04\x12\x1e\n" +
	"\x1aRewardProvideType_PatternE\x10\x05*b\n" +
	"\rRewardSetType\x12\x19\n" +
	"\x15RewardSetType_Unknown\x10\x00\x12\x1d\n" +
	"\x19RewardSetType_Probability\x10\x01\x12\x17\n" +
	"\x13RewardSetType_Ratio\x10\x02*\x9d\x01\n" +
	"\bRuleType\x12\x14\n" +
	"\x10RuleType_Unknown\x10\x00\x12\x1b\n" +
	"\x17RuleType_FundSettlement\x10\x01\x12\"\n" +
	"\x1eRuleType_CommercialTransaction\x10\x02\x12\x16\n" +
	"\x12RuleType_Copyright\x10\x03\x12\"\n" +
	"\x1eRuleType_PrereleaseMaintenance\x10\x04*\xa7\x01\n" +
	"\rServingStatus\x12\x19\n" +
	"\x15ServingStatus_Unknown\x10\x00\x12 \n" +
	"\x1cServingStatus_UnknownServing\x10\x01\x12\x19\n" +
	"\x15ServingStatus_Serving\x10\x02\x12\x1c\n" +
	"\x18ServingStatus_NotServing\x10\x03\x12 \n" +
	"\x1cServingStatus_ServiceUnknown\x10\x04*o\n" +
	"\x11ShopItemLabelType\x12\x1d\n" +
	"\x19ShopItemLabelType_Unknown\x10\x00\x12\x1a\n" +
	"\x16ShopItemLabelType_Sale\x10\x01\x12\x1f\n" +
	"\x1bShopItemLabelType_Recommend\x10\x02*p\n" +
	"\bShopType\x12\x14\n" +
	"\x10ShopType_Unknown\x10\x00\x12\x12\n" +
	"\x0eShopType_Jewel\x10\x01\x12\x11\n" +
	"\rShopType_Pass\x10\x02\x12\x11\n" +
	"\rShopType_Pack\x10\x03\x12\x14\n" +
	"\x10ShopType_Costume\x10\x04*v\n" +
	"\vSkillRarity\x12\x17\n" +
	"\x13SkillRarity_Unknown\x10\x00\x12\x11\n" +
	"\rSkillRarity_R\x10\x01\x12\x12\n" +
	"\x0eSkillRarity_Sr\x10\x02\x12\x13\n" +
	"\x0fSkillRarity_Ssr\x10\x03\x12\x12\n" +
	"\x0eSkillRarity_Ur\x10\x04*\xa5\x04\n" +
	"\x1eStartupNotificationDisplayType\x12*\n" +
	"&StartupNotificationDisplayType_Unknown\x10\x00\x12'\n" +
	"#StartupNotificationDisplayType_Home\x10\x01\x12'\n" +
	"#StartupNotificationDisplayType_Shop\x10\x02\x12-\n" +
	")StartupNotificationDisplayType_StoryEvent\x10\x03\x123\n" +
	"/StartupNotificationDisplayType_ProduceHighScore\x10\x04\x12(\n" +
	"$StartupNotificationDisplayType_Tower\x10\x05\x12/\n" +
	"+StartupNotificationDisplayType_MissionPanel\x10\x06\x126\n" +
	"2StartupNotificationDisplayType_MissionDailyRelease\x10\a\x120\n" +
	",StartupNotificationDisplayType_StoryCampaign\x10\b\x120\n" +
	",StartupNotificationDisplayType_ProduceResult\x10\t\x12*\n" +
	"&StartupNotificationDisplayType_GvgRaid\x10\n" +
	"*\xd2\x01\n" +
	"\x1dStartupNotificationEffectType\x12)\n" +
	"%StartupNotificationEffectType_Unknown\x10\x00\x12+\n" +
	"'StartupNotificationEffectType_Confetti1\x10\x01\x12+\n" +
	"'StartupNotificationEffectType_Confetti2\x10\x02\x12,\n" +
	"(StartupNotificationEffectType_Twinkling1\x10\x03*\x96\x02\n" +
	"\x17StartupNotificationType\x12#\n" +
	"\x1fStartupNotificationType_Unknown\x10\x00\x12!\n" +
	"\x1dStartupNotificationType_Movie\x10\x01\x12\x1f\n" +
	"\x1bStartupNotificationType_Adv\x10\x02\x12!\n" +
	"\x1dStartupNotificationType_Image\x10\x03\x12\"\n" +
	"\x1eStartupNotificationType_Notice\x10\x04\x12 \n" +
	"\x1cStartupNotificationType_Shop\x10\x05\x12)\n" +
	"%StartupNotificationType_ProfileReport\x10\x06*t\n" +
	"\x11StoryCampaignType\x12\x1d\n" +
	"\x19StoryCampaignType_Unknown\x10\x00\x12\x1b\n" +
	"\x17StoryCampaignType_Event\x10\x01\x12#\n" +
	"\x1fStoryCampaignType_DearnessStory\x10\x02*\xa1\x01\n" +
	"\x14StoryEventMotionType\x12 \n" +
	"\x1cStoryEventMotionType_Unknown\x10\x00\x12\x1d\n" +
	"\x19StoryEventMotionType_Wait\x10\x01\x12!\n" +
	"\x1dStoryEventMotionType_Reaction\x10\x02\x12%\n" +
	"!StoryEventMotionType_ReactionOnce\x10\x03*\xa3\x01\n" +
	"\x0eStoryEventType\x12\x1a\n" +
	"\x16StoryEventType_Unknown\x10\x00\x12\x19\n" +
	"\x15StoryEventType_Normal\x10\x01\x12\x1b\n" +
	"\x17StoryEventType_BoxGasha\x10\x02\x12\x1c\n" +
	"\x18StoryEventType_MainStory\x10\x03\x12\x1f\n" +
	"\x1bStoryEventType_GuildMission\x10\x04*\xc5\x02\n" +
	"\tStoryType\x12\x15\n" +
	"\x11StoryType_Unknown\x10\x00\x12\x12\n" +
	"\x0eStoryType_Main\x10\x01\x12#\n" +
	"\x1fStoryType_CampaignDearnessStory\x10\x02\x12\x16\n" +
	"\x12StoryType_Birthday\x10\x03\x12 \n" +
	"\x1cStoryType_ExtraDearnessStory\x10\x04\x12\x1b\n" +
	"\x17StoryType_DearnessStory\x10\x05\x12\x17\n" +
	"\x13StoryType_AprilFool\x10\x06\x12\x12\n" +
	"\x0eStoryType_Tour\x10\a\x12\x18\n" +
	"\x14StoryType_StoryEvent\x10\t\x12\x15\n" +
	"\x11StoryType_GvgRaid\x10\n" +
	"\x12\x1e\n" +
	"\x1aStoryType_ProduceHighScore\x10\v\x12\x13\n" +
	"\x0fStoryType_Other\x10c*\xca\x01\n" +
	"\x19SupportCardLevelLimitRank\x12%\n" +
	"!SupportCardLevelLimitRank_Unknown\x10\x00\x12 \n" +
	"\x1cSupportCardLevelLimitRank__1\x10\x01\x12 \n" +
	"\x1cSupportCardLevelLimitRank__2\x10\x02\x12 \n" +
	"\x1cSupportCardLevelLimitRank__3\x10\x03\x12 \n" +
	"\x1cSupportCardLevelLimitRank__4\x10\x04*\x80\x01\n" +
	"\x11SupportCardRarity\x12\x1d\n" +
	"\x19SupportCardRarity_Unknown\x10\x00\x12\x17\n" +
	"\x13SupportCardRarity_R\x10\x01\x12\x18\n" +
	"\x14SupportCardRarity_Sr\x10\x02\x12\x19\n" +
	"\x15SupportCardRarity_Ssr\x10\x03*\x9c\x01\n" +
	"\x0fSupportCardType\x12\x1b\n" +
	"\x17SupportCardType_Unknown\x10\x00\x12\x19\n" +
	"\x15SupportCardType_Vocal\x10\x01\x12\x19\n" +
	"\x15SupportCardType_Dance\x10\x02\x12\x1a\n" +
	"\x16SupportCardType_Visual\x10\x03\x12\x1a\n" +
	"\x16SupportCardType_Assist\x10\x04*z\n" +
	"\tTermsType\x12\x15\n" +
	"\x11TermsType_Unknown\x10\x00\x12\x1c\n" +
	"\x18TermsType_TermsOfService\x10\x01\x12\x1b\n" +
	"\x17TermsType_PrivacyPolicy\x10\x02\x12\x1b\n" +
	"\x17TermsType_GlobalConsent\x10\x03*\xe0\x02\n" +
	"\bTimeType\x12\x14\n" +
	"\x10TimeType_Unknown\x10\x00\x12\x1a\n" +
	"\x16TimeType_LastLoginTime\x10\x01\x12$\n" +
	" TimeType_WorkLastInitializedTime\x10\x02\x12!\n" +
	"\x1dTimeType_NoticeInfoViewedTime\x10\x03\x12 \n" +
	"\x1cTimeType_NoticeBugViewedTime\x10\x04\x12\x1f\n" +
	"\x1bTimeType_NoticePrviewedTime\x10\x05\x12&\n" +
	"\"TimeType_LastFriendCoinReceiveTime\x10\x06\x12\x1e\n" +
	"\x1aTimeType_GuildJoinableTime\x10\n" +
	"\x12#\n" +
	"\x1fTimeType_GuildEstablishableTime\x10\v\x12)\n" +
	"%TimeType_GuildDonationRequestableTime\x10\f*\x97\x01\n" +
	"\bTipsType\x12\x14\n" +
	"\x10TipsType_Unknown\x10\x00\x12\x1c\n" +
	"\x18TipsType_CharacterDetail\x10\x01\x12\x1c\n" +
	"\x18TipsType_CharacterGossip\x10\x02\x12\x12\n" +
	"\x0eTipsType_World\x10\x03\x12\x11\n" +
	"\rTipsType_Help\x10\x04\x12\x12\n" +
	"\x0eTipsType_Comic\x10\x05*\x81\x01\n" +
	"\x15TourProgressPhaseType\x12!\n" +
	"\x1dTourProgressPhaseType_Unknown\x10\x00\x12\"\n" +
	"\x1eTourProgressPhaseType_Progress\x10\x01\x12!\n" +
	"\x1dTourProgressPhaseType_ExamEnd\x10\x02*\xe0\x02\n" +
	"\x0eTourScoreGrade\x12\x1a\n" +
	"\x16TourScoreGrade_Unknown\x10\x00\x12\x14\n" +
	"\x10TourScoreGrade_F\x10\x01\x12\x14\n" +
	"\x10TourScoreGrade_E\x10\x02\x12\x14\n" +
	"\x10TourScoreGrade_D\x10\x03\x12\x14\n" +
	"\x10TourScoreGrade_C\x10\x04\x12\x18\n" +
	"\x14TourScoreGrade_CPlus\x10\x05\x12\x14\n" +
	"\x10TourScoreGrade_B\x10\x06\x12\x18\n" +
	"\x14TourScoreGrade_BPlus\x10\a\x12\x14\n" +
	"\x10TourScoreGrade_A\x10\b\x12\x18\n" +
	"\x14TourScoreGrade_APlus\x10\t\x12\x14\n" +
	"\x10TourScoreGrade_S\x10\n" +
	"\x12\x18\n" +
	"\x14TourScoreGrade_SPlus\x10\v\x12\x15\n" +
	"\x11TourScoreGrade_Ss\x10\f\x12\x19\n" +
	"\x15TourScoreGrade_SsPlus\x10\r*\x9e\x01\n" +
	"\x15TourStageIconSizeType\x12!\n" +
	"\x1dTourStageIconSizeType_Unknown\x10\x00\x12\x1f\n" +
	"\x1bTourStageIconSizeType_Small\x10\x01\x12 \n" +
	"\x1cTourStageIconSizeType_Medium\x10\x02\x12\x1f\n" +
	"\x1bTourStageIconSizeType_Large\x10\x03*\x92\x01\n" +
	"\x1aTutorialCharacterVoiceType\x12&\n" +
	"\"TutorialCharacterVoiceType_Unknown\x10\x00\x12%\n" +
	"!TutorialCharacterVoiceType_Select\x10\x01\x12%\n" +
	"!TutorialCharacterVoiceType_Random\x10\x02*\x9e\x02\n" +
	"\x1eTutorialNavigationPositionType\x12*\n" +
	"&TutorialNavigationPositionType_Unknown\x10\x00\x12&\n" +
	"\"TutorialNavigationPositionType_Top\x10\x01\x12(\n" +
	"$TutorialNavigationPositionType_Upper\x10\x02\x12)\n" +
	"%TutorialNavigationPositionType_Middle\x10\x03\x12(\n" +
	"$TutorialNavigationPositionType_Lower\x10\x04\x12)\n" +
	"%TutorialNavigationPositionType_Bottom\x10\x05*\xe7\x01\n" +
	"\x16TutorialNavigationType\x12\"\n" +
	"\x1eTutorialNavigationType_Unknown\x10\x00\x12\x1f\n" +
	"\x1bTutorialNavigationType_Tips\x10\x01\x12 \n" +
	"\x1cTutorialNavigationType_Arrow\x10\x02\x12 \n" +
	"\x1cTutorialNavigationType_Focus\x10\x03\x12$\n" +
	" TutorialNavigationType_Character\x10\x04\x12\x1e\n" +
	"\x1aTutorialNavigationType_Adv\x10\x05*\xbc\x03\n" +
	"\x1aTutorialProduceCommandType\x12&\n" +
	"\"TutorialProduceCommandType_Unknown\x10\x00\x12$\n" +
	" TutorialProduceCommandType_Start\x10\x01\x12#\n" +
	"\x1fTutorialProduceCommandType_Next\x10\x02\x12,\n" +
	"(TutorialProduceCommandType_StepLessonEnd\x10\x03\x121\n" +
	"-TutorialProduceCommandType_StepPresentReceive\x10\x04\x122\n" +
	".TutorialProduceCommandType_StepAuditionExamEnd\x10\x05\x12.\n" +
	"*TutorialProduceCommandType_StepAuditionEnd\x10\x06\x12?\n" +
	";TutorialProduceCommandType_CheckBeforeLiveProduceEvaluation\x10\a\x12%\n" +
	"!TutorialProduceCommandType_Result\x10\b*\xea\x13\n" +
	"\fTutorialType\x12\x18\n" +
	"\x14TutorialType_Unknown\x10\x00\x12\x1a\n" +
	"\x16TutorialType_GameStart\x10\x01\x12\x19\n" +
	"\x15TutorialType_MainTask\x10\x02\x12\x15\n" +
	"\x11TutorialType_Work\x10\x03\x12\x19\n" +
	"\x15TutorialType_IdolCard\x10\x04\x12\x1d\n" +
	"\x19TutorialType_IdolCardSkin\x10\x05\x12\x18\n" +
	"\x14TutorialType_PvpRate\x10\x06\x12\x1a\n" +
	"\x16TutorialType_CoinGasha\x10\a\x12\x1d\n" +
	"\x19TutorialType_MoneyReceive\x10\b\x12\x1c\n" +
	"\x18TutorialType_MissionPass\x10\t\x12\x18\n" +
	"\x14TutorialType_Profile\x10\n" +
	"\x12\x17\n" +
	"\x13TutorialType_Meishi\x10\v\x12\x17\n" +
	"\x13TutorialType_Friend\x10\f\x12\x1c\n" +
	"\x18TutorialType_Achievement\x10\x0e\x12-\n" +
	")TutorialType_IdolCardLevelLimitRankUpdate\x10\x0f\x12'\n" +
	"#TutorialType_SupportCardLevelUpdate\x10\x10\x12\x1d\n" +
	"\x19TutorialType_ItemExchange\x10\x11\x12\x1e\n" +
	"\x1aTutorialType_DailyExchange\x10\x12\x12\x16\n" +
	"\x12TutorialType_Tower\x10\x13\x12\x16\n" +
	"\x12TutorialType_Guild\x10\x14\x12(\n" +
	"$TutorialType_TutorialReceiveIdolCard\x10\x15\x12\x19\n" +
	"\x15TutorialType_PhotoTop\x10\x16\x12\x1a\n" +
	"\x16TutorialType_PhotoIdol\x10\x17\x12\x1d\n" +
	"\x19TutorialType_PhotoPrepare\x10\x18\x12\x16\n" +
	"\x12TutorialType_Photo\x10\x19\x12!\n" +
	"\x1dTutorialType_MeishiEditCustom\x10\x1a\x12'\n" +
	"#TutorialType_MeishiEditCustomManual\x10\x1b\x12!\n" +
	"\x1dTutorialType_IdolCardSkinUnit\x10\x1c\x12\x1c\n" +
	"\x18TutorialType_DearnessTop\x10\x1d\x12\x1e\n" +
	"\x1aTutorialType_DearnessPoint\x10\x1e\x12&\n" +
	"\"TutorialType_ProduceIdolCardSelect\x10d\x12)\n" +
	"%TutorialType_ProduceSupportCardSelect\x10e\x12$\n" +
	" TutorialType_ProduceMemorySelect\x10f\x12 \n" +
	"\x1cTutorialType_ProduceSchedule\x10g\x12\x1d\n" +
	"\x19TutorialType_ProduceEvent\x10h\x12#\n" +
	"\x1fTutorialType_ProducePresentStep\x10i\x12 \n" +
	"\x1cTutorialType_ProduceShopStep\x10j\x12#\n" +
	"\x1fTutorialType_ProduceExamGimmick\x10k\x12#\n" +
	"\x1fTutorialType_ProduceExamPerfect\x10l\x12,\n" +
	"(TutorialType_ProduceBeforeLiveEvaluation\x10m\x12(\n" +
	"$TutorialType_ProduceDifficultySelect\x10n\x12#\n" +
	"\x1fTutorialType_ProduceCardUpgrade\x10o\x12\"\n" +
	"\x1eTutorialType_ProduceCardDelete\x10p\x12\x1d\n" +
	"\x19TutorialType_ProduceDrink\x10q\x120\n" +
	",TutorialType_ProduceCardUpgradeBySupportCard\x10r\x12\"\n" +
	"\x1eTutorialType_ProduceExamBattle\x10s\x12(\n" +
	"$TutorialType_ProduceSupportCardEvent\x10t\x12+\n" +
	"'TutorialType_ProduceStepLessonHardBonus\x10u\x12)\n" +
	"%TutorialType_ProduceStepLessonPresent\x10v\x12-\n" +
	")TutorialType_ProduceBeforeAuditionRefresh\x10w\x12(\n" +
	"$TutorialType_ProduceBeforeLessonHard\x10x\x12!\n" +
	"\x1dTutorialType_ProduceChallenge\x10y\x12+\n" +
	"'TutorialType_ProduceNextIdolAuditionTop\x10z\x120\n" +
	",TutorialType_ProduceNextIdolAuditionSchedule\x10{\x12:\n" +
	"6TutorialType_ProduceNextIdolAuditionStepAuditionSelect\x10|\x129\n" +
	"5TutorialType_ProduceNextIdolAuditionStepAuditionStart\x10}\x12.\n" +
	"*TutorialType_ProduceNextIdolAuditionResult\x10~\x12$\n" +
	" TutorialType_ProduceStepBusiness\x10\x7f\x12&\n" +
	"!TutorialType_ProduceStepCustomize\x10\x80\x01\x12'\n" +
	"\"TutorialType_ProduceStepFanPresent\x10\x81\x01\x12\x1e\n" +
	"\x19TutorialType_MissionPanel\x10\xc8\x01\x12\"\n" +
	"\x1dTutorialType_ProduceHighScore\x10\xc9\x01\x12\x1c\n" +
	"\x17TutorialType_StoryEvent\x10\xca\x01\x12%\n" +
	" TutorialType_StoryEventMainStroy\x10\xcb\x01\x12$\n" +
	"\x1fTutorialType_StoryEventBoxGasha\x10\xcc\x01\x12(\n" +
	"#TutorialType_StoryEventGuildMission\x10\xcd\x01\x12\x19\n" +
	"\x14TutorialType_GvgRaid\x10\xce\x01\x12/\n" +
	"*TutorialType_ProduceNextIdolAuditionMaster\x10\xcf\x01\x126\n" +
	"1TutorialType_ProduceNextIdolAuditionMasterRanking\x10\xd0\x01\x12\x16\n" +
	"\x11TutorialType_Tour\x10\xd1\x01*\\\n" +
	"\fViewAreaType\x12\x18\n" +
	"\x14ViewAreaType_Unknown\x10\x00\x12\x18\n" +
	"\x14ViewAreaType_Produce\x10\x01\x12\x18\n" +
	"\x14ViewAreaType_OutGame\x10\x02*\xb6\x01\n" +
	"\x13VoicePlayScreenType\x12\x1f\n" +
	"\x1bVoicePlayScreenType_Unknown\x10\x00\x12\x1c\n" +
	"\x18VoicePlayScreenType_Home\x10\x01\x12\x1f\n" +
	"\x1bVoicePlayScreenType_Produce\x10\x02\x12\x1d\n" +
	"\x19VoicePlayScreenType_Other\x10\x03\x12 \n" +
	"\x1cVoicePlayScreenType_IdolCard\x10\x04*\xb2\x01\n" +
	"\aWeekday\x12\x13\n" +
	"\x0fWeekday_Unknown\x10\x00\x12\x12\n" +
	"\x0eWeekday_Sunday\x10\x01\x12\x12\n" +
	"\x0eWeekday_Monday\x10\x02\x12\x13\n" +
	"\x0fWeekday_Tuesday\x10\x03\x12\x15\n" +
	"\x11Weekday_Wednesday\x10\x04\x12\x14\n" +
	"\x10Weekday_Thursday\x10\x05\x12\x12\n" +
	"\x0eWeekday_Friday\x10\x06\x12\x14\n" +
	"\x10Weekday_Saturday\x10\a*\x83\x02\n" +
	"\x0eWorkMotionType\x12\x1a\n" +
	"\x16WorkMotionType_Unknown\x10\x00\x12&\n" +
	"\"WorkMotionType_CharacterSelectWait\x10\x01\x12*\n" +
	"&WorkMotionType_CharacterSelectReaction\x10\x02\x12\x1e\n" +
	"\x1aWorkMotionType_StartNormal\x10\x03\x12\x1c\n" +
	"\x18WorkMotionType_StartFine\x10\x04\x12\x1f\n" +
	"\x1bWorkMotionType_FinishNormal\x10\x05\x12\"\n" +
	"\x1eWorkMotionType_FinishExcellent\x10\x06*S\n" +
	"\bWorkType\x12\x14\n" +
	"\x10WorkType_Unknown\x10\x00\x12\x15\n" +
	"\x11WorkType_MiniLive\x10\x01\x12\x1a\n" +
	"\x16WorkType_LiveStreaming\x10\x02B\x1dZ\x1bvertesan/campus/proto/penumb\x06proto3"

var (
	file_penum_proto_rawDescOnce sync.Once
	file_penum_proto_rawDescData []byte
)

func file_penum_proto_rawDescGZIP() []byte {
	file_penum_proto_rawDescOnce.Do(func() {
		file_penum_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_penum_proto_rawDesc), len(file_penum_proto_rawDesc)))
	})
	return file_penum_proto_rawDescData
}

var file_penum_proto_enumTypes = make([]protoimpl.EnumInfo, 199)
var file_penum_proto_goTypes = []any{
	(AchievementCategory)(0),                     // 0: penum.AchievementCategory
	(AntiCheatFeatureType)(0),                    // 1: penum.AntiCheatFeatureType
	(AppReviewType)(0),                           // 2: penum.AppReviewType
	(AssetCopyRuleGroup)(0),                      // 3: penum.AssetCopyRuleGroup
	(AssetCopyRuleType)(0),                       // 4: penum.AssetCopyRuleType
	(AssetDownloadType)(0),                       // 5: penum.AssetDownloadType
	(AssetKind)(0),                               // 6: penum.AssetKind
	(AuthProviderType)(0),                        // 7: penum.AuthProviderType
	(CharacterDetailType)(0),                     // 8: penum.CharacterDetailType
	(CharacterPersonalityType)(0),                // 9: penum.CharacterPersonalityType
	(CoinGashaBoxResetTypeType)(0),               // 10: penum.CoinGashaBoxResetTypeType
	(CoinGashaType)(0),                           // 11: penum.CoinGashaType
	(ConditionMinMaxType)(0),                     // 12: penum.ConditionMinMaxType
	(ConditionOperatorType)(0),                   // 13: penum.ConditionOperatorType
	(ConditionType)(0),                           // 14: penum.ConditionType
	(ConsentAgreementType)(0),                    // 15: penum.ConsentAgreementType
	(ConsentType)(0),                             // 16: penum.ConsentType
	(CostumeFeatureType)(0),                      // 17: penum.CostumeFeatureType
	(CostumeMotionType)(0),                       // 18: penum.CostumeMotionType
	(CostumeSetType)(0),                          // 19: penum.CostumeSetType
	(CountType)(0),                               // 20: penum.CountType
	(DearnessMotionType)(0),                      // 21: penum.DearnessMotionType
	(DeckRecommendType)(0),                       // 22: penum.DeckRecommendType
	(ErrorCode)(0),                               // 23: penum.ErrorCode
	(EventStoryFilterType)(0),                    // 24: penum.EventStoryFilterType
	(EventType)(0),                               // 25: penum.EventType
	(ExamActionType)(0),                          // 26: penum.ExamActionType
	(ExamAiModelType)(0),                         // 27: penum.ExamAiModelType
	(ExamCommandType)(0),                         // 28: penum.ExamCommandType
	(ExamCostType)(0),                            // 29: penum.ExamCostType
	(ExamDescriptionType)(0),                     // 30: penum.ExamDescriptionType
	(ExamGameType)(0),                            // 31: penum.ExamGameType
	(ExamIdolStatusType)(0),                      // 32: penum.ExamIdolStatusType
	(ExamMotionTargetType)(0),                    // 33: penum.ExamMotionTargetType
	(ExamMotionType)(0),                          // 34: penum.ExamMotionType
	(ExamOutGameMotionType)(0),                   // 35: penum.ExamOutGameMotionType
	(ExamPhaseType)(0),                           // 36: penum.ExamPhaseType
	(ExamPlayType)(0),                            // 37: penum.ExamPlayType
	(ExamStatusEffectType)(0),                    // 38: penum.ExamStatusEffectType
	(ExchangeItemCategoryType)(0),                // 39: penum.ExchangeItemCategoryType
	(ExchangeItemResetCheckStatus)(0),            // 40: penum.ExchangeItemResetCheckStatus
	(ExchangeType)(0),                            // 41: penum.ExchangeType
	(FeatureMaintenanceType)(0),                  // 42: penum.FeatureMaintenanceType
	(FourPanelComicSeries)(0),                    // 43: penum.FourPanelComicSeries
	(FriendStatusType)(0),                        // 44: penum.FriendStatusType
	(GashaAnimationRarity)(0),                    // 45: penum.GashaAnimationRarity
	(GashaAnimationStepType)(0),                  // 46: penum.GashaAnimationStepType
	(GashaButtonAppealType)(0),                   // 47: penum.GashaButtonAppealType
	(GashaButtonType)(0),                         // 48: penum.GashaButtonType
	(GashaCardBonusType)(0),                      // 49: penum.GashaCardBonusType
	(GashaLimitType)(0),                          // 50: penum.GashaLimitType
	(GashaType)(0),                               // 51: penum.GashaType
	(GiftFilterType)(0),                          // 52: penum.GiftFilterType
	(GuildActivityPolicyType)(0),                 // 53: penum.GuildActivityPolicyType
	(GuildJoinRequestRouteType)(0),               // 54: penum.GuildJoinRequestRouteType
	(GuildJoinType)(0),                           // 55: penum.GuildJoinType
	(GuildMissionPhaseType)(0),                   // 56: penum.GuildMissionPhaseType
	(GuildNotificationType)(0),                   // 57: penum.GuildNotificationType
	(GuildRoleType)(0),                           // 58: penum.GuildRoleType
	(GuildSearchMemberCountRangeType)(0),         // 59: penum.GuildSearchMemberCountRangeType
	(GvgRaidStageIconSizeType)(0),                // 60: penum.GvgRaidStageIconSizeType
	(HomeLocationType)(0),                        // 61: penum.HomeLocationType
	(HomeMotionType)(0),                          // 62: penum.HomeMotionType
	(HomeTimeType)(0),                            // 63: penum.HomeTimeType
	(HomeType)(0),                                // 64: penum.HomeType
	(IdolCardDifficultyType)(0),                  // 65: penum.IdolCardDifficultyType
	(IdolCardLevelLimitEffectType)(0),            // 66: penum.IdolCardLevelLimitEffectType
	(IdolCardLevelLimitRank)(0),                  // 67: penum.IdolCardLevelLimitRank
	(IdolCardPotentialEffectType)(0),             // 68: penum.IdolCardPotentialEffectType
	(IdolCardPotentialRank)(0),                   // 69: penum.IdolCardPotentialRank
	(IdolCardRarity)(0),                          // 70: penum.IdolCardRarity
	(IdolSkillPossessionType)(0),                 // 71: penum.IdolSkillPossessionType
	(ItemRarity)(0),                              // 72: penum.ItemRarity
	(ItemType)(0),                                // 73: penum.ItemType
	(LangType)(0),                                // 74: penum.LangType
	(LinkType)(0),                                // 75: penum.LinkType
	(LoginBonusType)(0),                          // 76: penum.LoginBonusType
	(MainTaskType)(0),                            // 77: penum.MainTaskType
	(MediaType)(0),                               // 78: penum.MediaType
	(MeishiBaseAssetType)(0),                     // 79: penum.MeishiBaseAssetType
	(MeishiIllustrationType)(0),                  // 80: penum.MeishiIllustrationType
	(MeishiObjectType)(0),                        // 81: penum.MeishiObjectType
	(MissionCategory)(0),                         // 82: penum.MissionCategory
	(MissionType)(0),                             // 83: penum.MissionType
	(MusicType)(0),                               // 84: penum.MusicType
	(MusicWishListRequesterType)(0),              // 85: penum.MusicWishListRequesterType
	(NoticeCategory)(0),                          // 86: penum.NoticeCategory
	(NoticeType)(0),                              // 87: penum.NoticeType
	(PaymentPendingReceiptDialogTimingType)(0),   // 88: penum.PaymentPendingReceiptDialogTimingType
	(PhotoBackgroundCategory)(0),                 // 89: penum.PhotoBackgroundCategory
	(PhotoBackgroundTimeType)(0),                 // 90: penum.PhotoBackgroundTimeType
	(PhotoButtonExecuteType)(0),                  // 91: penum.PhotoButtonExecuteType
	(PhotoLookTargetType)(0),                     // 92: penum.PhotoLookTargetType
	(PhotoPoseMotionType)(0),                     // 93: penum.PhotoPoseMotionType
	(PlatformType)(0),                            // 94: penum.PlatformType
	(PreferenceType)(0),                          // 95: penum.PreferenceType
	(ProduceAdvType)(0),                          // 96: penum.ProduceAdvType
	(ProduceCampaignType)(0),                     // 97: penum.ProduceCampaignType
	(ProduceCardCategory)(0),                     // 98: penum.ProduceCardCategory
	(ProduceCardGrowEffectType)(0),               // 99: penum.ProduceCardGrowEffectType
	(ProduceCardMoveEffectTriggerType)(0),        // 100: penum.ProduceCardMoveEffectTriggerType
	(ProduceCardMovePositionType)(0),             // 101: penum.ProduceCardMovePositionType
	(ProduceCardOrderType)(0),                    // 102: penum.ProduceCardOrderType
	(ProduceCardPositionType)(0),                 // 103: penum.ProduceCardPositionType
	(ProduceCardRarity)(0),                       // 104: penum.ProduceCardRarity
	(ProduceCardSearchStatusType)(0),             // 105: penum.ProduceCardSearchStatusType
	(ProduceConditionType)(0),                    // 106: penum.ProduceConditionType
	(ProduceDescriptionSwapType)(0),              // 107: penum.ProduceDescriptionSwapType
	(ProduceDescriptionType)(0),                  // 108: penum.ProduceDescriptionType
	(ProduceDisplayType)(0),                      // 109: penum.ProduceDisplayType
	(ProduceDrinkRarity)(0),                      // 110: penum.ProduceDrinkRarity
	(ProduceEffectType)(0),                       // 111: penum.ProduceEffectType
	(ProduceEventCharacterType)(0),               // 112: penum.ProduceEventCharacterType
	(ProduceEventSuggestionType)(0),              // 113: penum.ProduceEventSuggestionType
	(ProduceEventType)(0),                        // 114: penum.ProduceEventType
	(ProduceExamAutoCardSelectEvaluationType)(0), // 115: penum.ProduceExamAutoCardSelectEvaluationType
	(ProduceExamAutoEvaluationType)(0),           // 116: penum.ProduceExamAutoEvaluationType
	(ProduceExamEffectType)(0),                   // 117: penum.ProduceExamEffectType
	(ProduceExamFieldStatusType)(0),              // 118: penum.ProduceExamFieldStatusType
	(ProduceExamPhaseType)(0),                    // 119: penum.ProduceExamPhaseType
	(ProduceExamResultType)(0),                   // 120: penum.ProduceExamResultType
	(ProduceExamTriggerCheckType)(0),             // 121: penum.ProduceExamTriggerCheckType
	(ProduceHighScoreEventType)(0),               // 122: penum.ProduceHighScoreEventType
	(ProduceItemEffectType)(0),                   // 123: penum.ProduceItemEffectType
	(ProduceItemRarity)(0),                       // 124: penum.ProduceItemRarity
	(ProduceLiveType)(0),                         // 125: penum.ProduceLiveType
	(ProduceMemoryProduceCardPhaseType)(0),       // 126: penum.ProduceMemoryProduceCardPhaseType
	(ProduceParameterType)(0),                    // 127: penum.ProduceParameterType
	(ProducePhaseType)(0),                        // 128: penum.ProducePhaseType
	(ProducePickRangeType)(0),                    // 129: penum.ProducePickRangeType
	(ProducePlanType)(0),                         // 130: penum.ProducePlanType
	(ProduceProgressAuditionStatusType)(0),       // 131: penum.ProduceProgressAuditionStatusType
	(ProduceProgressConditionType)(0),            // 132: penum.ProduceProgressConditionType
	(ProduceProgressStatus)(0),                   // 133: penum.ProduceProgressStatus
	(ProduceResourceOriginType)(0),               // 134: penum.ProduceResourceOriginType
	(ProduceResourceType)(0),                     // 135: penum.ProduceResourceType
	(ProduceRewardType)(0),                       // 136: penum.ProduceRewardType
	(ProduceScheduleLocationType)(0),             // 137: penum.ProduceScheduleLocationType
	(ProduceScheduleMotionType)(0),               // 138: penum.ProduceScheduleMotionType
	(ProduceScheduleStaminaMotionType)(0),        // 139: penum.ProduceScheduleStaminaMotionType
	(ProduceSkillEffectType)(0),                  // 140: penum.ProduceSkillEffectType
	(ProduceStartMotionType)(0),                  // 141: penum.ProduceStartMotionType
	(ProduceStepAuditionMotionType)(0),           // 142: penum.ProduceStepAuditionMotionType
	(ProduceStepAuditionType)(0),                 // 143: penum.ProduceStepAuditionType
	(ProduceStepBusinessType)(0),                 // 144: penum.ProduceStepBusinessType
	(ProduceStepFanPresentMotionType)(0),         // 145: penum.ProduceStepFanPresentMotionType
	(ProduceStepLessonType)(0),                   // 146: penum.ProduceStepLessonType
	(ProduceStepPhaseType)(0),                    // 147: penum.ProduceStepPhaseType
	(ProduceStepType)(0),                         // 148: penum.ProduceStepType
	(ProduceStoryType)(0),                        // 149: penum.ProduceStoryType
	(ProduceTriggerOriginType)(0),                // 150: penum.ProduceTriggerOriginType
	(ProduceType)(0),                             // 151: penum.ProduceType
	(ProducerLevelUnlockType)(0),                 // 152: penum.ProducerLevelUnlockType
	(PurchaseTransactionStatusType)(0),           // 153: penum.PurchaseTransactionStatusType
	(PushType)(0),                                // 154: penum.PushType
	(PvpRateGrade)(0),                            // 155: penum.PvpRateGrade
	(PvpRateMotionType)(0),                       // 156: penum.PvpRateMotionType
	(PvpRatePhaseType)(0),                        // 157: penum.PvpRatePhaseType
	(PvpRateRivalType)(0),                        // 158: penum.PvpRateRivalType
	(PvpRateSeasonStatusType)(0),                 // 159: penum.PvpRateSeasonStatusType
	(PvpRateStageType)(0),                        // 160: penum.PvpRateStageType
	(ResetTimingType)(0),                         // 161: penum.ResetTimingType
	(ResourceOriginType)(0),                      // 162: penum.ResourceOriginType
	(ResourceType)(0),                            // 163: penum.ResourceType
	(ResultGrade)(0),                             // 164: penum.ResultGrade
	(ResultGradeType)(0),                         // 165: penum.ResultGradeType
	(RewardProvideType)(0),                       // 166: penum.RewardProvideType
	(RewardSetType)(0),                           // 167: penum.RewardSetType
	(RuleType)(0),                                // 168: penum.RuleType
	(ServingStatus)(0),                           // 169: penum.ServingStatus
	(ShopItemLabelType)(0),                       // 170: penum.ShopItemLabelType
	(ShopType)(0),                                // 171: penum.ShopType
	(SkillRarity)(0),                             // 172: penum.SkillRarity
	(StartupNotificationDisplayType)(0),          // 173: penum.StartupNotificationDisplayType
	(StartupNotificationEffectType)(0),           // 174: penum.StartupNotificationEffectType
	(StartupNotificationType)(0),                 // 175: penum.StartupNotificationType
	(StoryCampaignType)(0),                       // 176: penum.StoryCampaignType
	(StoryEventMotionType)(0),                    // 177: penum.StoryEventMotionType
	(StoryEventType)(0),                          // 178: penum.StoryEventType
	(StoryType)(0),                               // 179: penum.StoryType
	(SupportCardLevelLimitRank)(0),               // 180: penum.SupportCardLevelLimitRank
	(SupportCardRarity)(0),                       // 181: penum.SupportCardRarity
	(SupportCardType)(0),                         // 182: penum.SupportCardType
	(TermsType)(0),                               // 183: penum.TermsType
	(TimeType)(0),                                // 184: penum.TimeType
	(TipsType)(0),                                // 185: penum.TipsType
	(TourProgressPhaseType)(0),                   // 186: penum.TourProgressPhaseType
	(TourScoreGrade)(0),                          // 187: penum.TourScoreGrade
	(TourStageIconSizeType)(0),                   // 188: penum.TourStageIconSizeType
	(TutorialCharacterVoiceType)(0),              // 189: penum.TutorialCharacterVoiceType
	(TutorialNavigationPositionType)(0),          // 190: penum.TutorialNavigationPositionType
	(TutorialNavigationType)(0),                  // 191: penum.TutorialNavigationType
	(TutorialProduceCommandType)(0),              // 192: penum.TutorialProduceCommandType
	(TutorialType)(0),                            // 193: penum.TutorialType
	(ViewAreaType)(0),                            // 194: penum.ViewAreaType
	(VoicePlayScreenType)(0),                     // 195: penum.VoicePlayScreenType
	(Weekday)(0),                                 // 196: penum.Weekday
	(WorkMotionType)(0),                          // 197: penum.WorkMotionType
	(WorkType)(0),                                // 198: penum.WorkType
}
var file_penum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_penum_proto_init() }
func file_penum_proto_init() {
	if File_penum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_penum_proto_rawDesc), len(file_penum_proto_rawDesc)),
			NumEnums:      199,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_penum_proto_goTypes,
		DependencyIndexes: file_penum_proto_depIdxs,
		EnumInfos:         file_penum_proto_enumTypes,
	}.Build()
	File_penum_proto = out.File
	file_penum_proto_goTypes = nil
	file_penum_proto_depIdxs = nil
}

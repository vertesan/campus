// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pcommon.proto

package pcommon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
	penum "vertesan/campus/proto/penum"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Achievement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AchievementId string                 `protobuf:"bytes,1,opt,name=achievementId,proto3" json:"achievementId,omitempty"`
	Threshold     int32                  `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Achievement) Reset() {
	*x = Achievement{}
	mi := &file_pcommon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Achievement) ProtoMessage() {}

func (x *Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Achievement.ProtoReflect.Descriptor instead.
func (*Achievement) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{0}
}

func (x *Achievement) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

func (x *Achievement) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type AntiCheatCriticalResult struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Records       []*AntiCheatCriticalResult_Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Logs          []*AntiCheatCriticalResult_Log    `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AntiCheatCriticalResult) Reset() {
	*x = AntiCheatCriticalResult{}
	mi := &file_pcommon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntiCheatCriticalResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiCheatCriticalResult) ProtoMessage() {}

func (x *AntiCheatCriticalResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiCheatCriticalResult.ProtoReflect.Descriptor instead.
func (*AntiCheatCriticalResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{1}
}

func (x *AntiCheatCriticalResult) GetRecords() []*AntiCheatCriticalResult_Record {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *AntiCheatCriticalResult) GetLogs() []*AntiCheatCriticalResult_Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type AntiCheatSummaryResult struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Scores        []*AntiCheatSummaryResult_Score `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AntiCheatSummaryResult) Reset() {
	*x = AntiCheatSummaryResult{}
	mi := &file_pcommon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntiCheatSummaryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiCheatSummaryResult) ProtoMessage() {}

func (x *AntiCheatSummaryResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiCheatSummaryResult.ProtoReflect.Descriptor instead.
func (*AntiCheatSummaryResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{2}
}

func (x *AntiCheatSummaryResult) GetScores() []*AntiCheatSummaryResult_Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type CoinGasha struct {
	state                 protoimpl.MessageState          `protogen:"open.v1"`
	Id                    string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                  penum.CoinGashaType             `protobuf:"varint,2,opt,name=type,proto3,enum=penum.CoinGashaType" json:"type,omitempty"`
	Name                  string                          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description           string                          `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AssetId               string                          `protobuf:"bytes,5,opt,name=assetId,proto3" json:"assetId,omitempty"`
	CoinGashaButtonId     string                          `protobuf:"bytes,6,opt,name=coinGashaButtonId,proto3" json:"coinGashaButtonId,omitempty"`
	FeatureRewardResetDay int32                           `protobuf:"varint,7,opt,name=featureRewardResetDay,proto3" json:"featureRewardResetDay,omitempty"`
	FeatureGashaRewards   []*CoinGashaReward              `protobuf:"bytes,8,rep,name=featureGashaRewards,proto3" json:"featureGashaRewards,omitempty"`
	CommonGashaRewards    []*CoinGashaReward              `protobuf:"bytes,9,rep,name=commonGashaRewards,proto3" json:"commonGashaRewards,omitempty"`
	PrevBoxList           []*CoinGashaBox                 `protobuf:"bytes,10,rep,name=prevBoxList,proto3" json:"prevBoxList,omitempty"`
	NextBoxList           []*CoinGashaBox                 `protobuf:"bytes,11,rep,name=nextBoxList,proto3" json:"nextBoxList,omitempty"`
	BoxResetType          penum.CoinGashaBoxResetTypeType `protobuf:"varint,12,opt,name=boxResetType,proto3,enum=penum.CoinGashaBoxResetTypeType" json:"boxResetType,omitempty"`
	ResetCount            int32                           `protobuf:"varint,13,opt,name=resetCount,proto3" json:"resetCount,omitempty"`
	IsResettable          bool                            `protobuf:"varint,14,opt,name=isResettable,proto3" json:"isResettable,omitempty"`
	TotalDrawCount        int32                           `protobuf:"varint,15,opt,name=totalDrawCount,proto3" json:"totalDrawCount,omitempty"`
	DrawCountRewards      []*CoinGashaDrawCountReward     `protobuf:"bytes,16,rep,name=drawCountRewards,proto3" json:"drawCountRewards,omitempty"`
	Unlock                bool                            `protobuf:"varint,50,opt,name=unlock,proto3" json:"unlock,omitempty"`
	ViewConditionSetId    string                          `protobuf:"bytes,51,opt,name=viewConditionSetId,proto3" json:"viewConditionSetId,omitempty"`
	UnlockConditionSetId  string                          `protobuf:"bytes,52,opt,name=unlockConditionSetId,proto3" json:"unlockConditionSetId,omitempty"`
	StartTime             int64                           `protobuf:"varint,100,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime               int64                           `protobuf:"varint,101,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Order                 int32                           `protobuf:"varint,102,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CoinGasha) Reset() {
	*x = CoinGasha{}
	mi := &file_pcommon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinGasha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGasha) ProtoMessage() {}

func (x *CoinGasha) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGasha.ProtoReflect.Descriptor instead.
func (*CoinGasha) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{3}
}

func (x *CoinGasha) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CoinGasha) GetType() penum.CoinGashaType {
	if x != nil {
		return x.Type
	}
	return penum.CoinGashaType(0)
}

func (x *CoinGasha) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoinGasha) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CoinGasha) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *CoinGasha) GetCoinGashaButtonId() string {
	if x != nil {
		return x.CoinGashaButtonId
	}
	return ""
}

func (x *CoinGasha) GetFeatureRewardResetDay() int32 {
	if x != nil {
		return x.FeatureRewardResetDay
	}
	return 0
}

func (x *CoinGasha) GetFeatureGashaRewards() []*CoinGashaReward {
	if x != nil {
		return x.FeatureGashaRewards
	}
	return nil
}

func (x *CoinGasha) GetCommonGashaRewards() []*CoinGashaReward {
	if x != nil {
		return x.CommonGashaRewards
	}
	return nil
}

func (x *CoinGasha) GetPrevBoxList() []*CoinGashaBox {
	if x != nil {
		return x.PrevBoxList
	}
	return nil
}

func (x *CoinGasha) GetNextBoxList() []*CoinGashaBox {
	if x != nil {
		return x.NextBoxList
	}
	return nil
}

func (x *CoinGasha) GetBoxResetType() penum.CoinGashaBoxResetTypeType {
	if x != nil {
		return x.BoxResetType
	}
	return penum.CoinGashaBoxResetTypeType(0)
}

func (x *CoinGasha) GetResetCount() int32 {
	if x != nil {
		return x.ResetCount
	}
	return 0
}

func (x *CoinGasha) GetIsResettable() bool {
	if x != nil {
		return x.IsResettable
	}
	return false
}

func (x *CoinGasha) GetTotalDrawCount() int32 {
	if x != nil {
		return x.TotalDrawCount
	}
	return 0
}

func (x *CoinGasha) GetDrawCountRewards() []*CoinGashaDrawCountReward {
	if x != nil {
		return x.DrawCountRewards
	}
	return nil
}

func (x *CoinGasha) GetUnlock() bool {
	if x != nil {
		return x.Unlock
	}
	return false
}

func (x *CoinGasha) GetViewConditionSetId() string {
	if x != nil {
		return x.ViewConditionSetId
	}
	return ""
}

func (x *CoinGasha) GetUnlockConditionSetId() string {
	if x != nil {
		return x.UnlockConditionSetId
	}
	return ""
}

func (x *CoinGasha) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CoinGasha) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CoinGasha) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type CoinGashaBox struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FeatureGashaRewards []*CoinGashaReward     `protobuf:"bytes,1,rep,name=featureGashaRewards,proto3" json:"featureGashaRewards,omitempty"`
	CommonGashaRewards  []*CoinGashaReward     `protobuf:"bytes,2,rep,name=commonGashaRewards,proto3" json:"commonGashaRewards,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CoinGashaBox) Reset() {
	*x = CoinGashaBox{}
	mi := &file_pcommon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinGashaBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaBox) ProtoMessage() {}

func (x *CoinGashaBox) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaBox.ProtoReflect.Descriptor instead.
func (*CoinGashaBox) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{4}
}

func (x *CoinGashaBox) GetFeatureGashaRewards() []*CoinGashaReward {
	if x != nil {
		return x.FeatureGashaRewards
	}
	return nil
}

func (x *CoinGashaBox) GetCommonGashaRewards() []*CoinGashaReward {
	if x != nil {
		return x.CommonGashaRewards
	}
	return nil
}

type CoinGashaDrawCountReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DrawCount     int32                  `protobuf:"varint,1,opt,name=drawCount,proto3" json:"drawCount,omitempty"`
	Reward        *Reward                `protobuf:"bytes,2,opt,name=reward,proto3" json:"reward,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoinGashaDrawCountReward) Reset() {
	*x = CoinGashaDrawCountReward{}
	mi := &file_pcommon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinGashaDrawCountReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaDrawCountReward) ProtoMessage() {}

func (x *CoinGashaDrawCountReward) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaDrawCountReward.ProtoReflect.Descriptor instead.
func (*CoinGashaDrawCountReward) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{5}
}

func (x *CoinGashaDrawCountReward) GetDrawCount() int32 {
	if x != nil {
		return x.DrawCount
	}
	return 0
}

func (x *CoinGashaDrawCountReward) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type CoinGashaReward struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Reward             *Reward                `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward,omitempty"`
	RemainingDrawCount int32                  `protobuf:"varint,2,opt,name=remainingDrawCount,proto3" json:"remainingDrawCount,omitempty"`
	MaxEmissionCount   int32                  `protobuf:"varint,3,opt,name=maxEmissionCount,proto3" json:"maxEmissionCount,omitempty"`
	IsPickup           bool                   `protobuf:"varint,4,opt,name=isPickup,proto3" json:"isPickup,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CoinGashaReward) Reset() {
	*x = CoinGashaReward{}
	mi := &file_pcommon_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinGashaReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaReward) ProtoMessage() {}

func (x *CoinGashaReward) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaReward.ProtoReflect.Descriptor instead.
func (*CoinGashaReward) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{6}
}

func (x *CoinGashaReward) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *CoinGashaReward) GetRemainingDrawCount() int32 {
	if x != nil {
		return x.RemainingDrawCount
	}
	return 0
}

func (x *CoinGashaReward) GetMaxEmissionCount() int32 {
	if x != nil {
		return x.MaxEmissionCount
	}
	return 0
}

func (x *CoinGashaReward) GetIsPickup() bool {
	if x != nil {
		return x.IsPickup
	}
	return false
}

type ConsumptionResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResourceType   penum.ResourceType     `protobuf:"varint,1,opt,name=resourceType,proto3,enum=penum.ResourceType" json:"resourceType,omitempty"`
	ResourceId     string                 `protobuf:"bytes,2,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Quantity       int64                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	BeforeQuantity int64                  `protobuf:"varint,4,opt,name=beforeQuantity,proto3" json:"beforeQuantity,omitempty"`
	AfterQuantity  int64                  `protobuf:"varint,5,opt,name=afterQuantity,proto3" json:"afterQuantity,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConsumptionResult) Reset() {
	*x = ConsumptionResult{}
	mi := &file_pcommon_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumptionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumptionResult) ProtoMessage() {}

func (x *ConsumptionResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumptionResult.ProtoReflect.Descriptor instead.
func (*ConsumptionResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{7}
}

func (x *ConsumptionResult) GetResourceType() penum.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ResourceType(0)
}

func (x *ConsumptionResult) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ConsumptionResult) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ConsumptionResult) GetBeforeQuantity() int64 {
	if x != nil {
		return x.BeforeQuantity
	}
	return 0
}

func (x *ConsumptionResult) GetAfterQuantity() int64 {
	if x != nil {
		return x.AfterQuantity
	}
	return 0
}

type Event struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	EventType                         penum.EventType        `protobuf:"varint,1,opt,name=eventType,proto3,enum=penum.EventType" json:"eventType,omitempty"`
	EventId                           string                 `protobuf:"bytes,2,opt,name=eventId,proto3" json:"eventId,omitempty"`
	HomeIconAssetId                   string                 `protobuf:"bytes,3,opt,name=homeIconAssetId,proto3" json:"homeIconAssetId,omitempty"`
	BannerAssetId                     string                 `protobuf:"bytes,4,opt,name=bannerAssetId,proto3" json:"bannerAssetId,omitempty"`
	Noti                              bool                   `protobuf:"varint,5,opt,name=noti,proto3" json:"noti,omitempty"`
	DailyMissionGroupId               string                 `protobuf:"bytes,6,opt,name=dailyMissionGroupId,proto3" json:"dailyMissionGroupId,omitempty"`
	MissionGroupId                    string                 `protobuf:"bytes,7,opt,name=missionGroupId,proto3" json:"missionGroupId,omitempty"`
	MissionDailyReleaseGroupId        string                 `protobuf:"bytes,8,opt,name=missionDailyReleaseGroupId,proto3" json:"missionDailyReleaseGroupId,omitempty"`
	MissionPanelSheetGroupId          string                 `protobuf:"bytes,9,opt,name=missionPanelSheetGroupId,proto3" json:"missionPanelSheetGroupId,omitempty"`
	StoryGroupId                      string                 `protobuf:"bytes,10,opt,name=storyGroupId,proto3" json:"storyGroupId,omitempty"`
	ItemId                            string                 `protobuf:"bytes,11,opt,name=itemId,proto3" json:"itemId,omitempty"`
	CharacterIds                      []string               `protobuf:"bytes,12,rep,name=characterIds,proto3" json:"characterIds,omitempty"`
	DearnessMissionPanelSheetGroupIds []string               `protobuf:"bytes,13,rep,name=dearnessMissionPanelSheetGroupIds,proto3" json:"dearnessMissionPanelSheetGroupIds,omitempty"`
	StartTime                         int64                  `protobuf:"varint,100,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                           int64                  `protobuf:"varint,101,opt,name=endTime,proto3" json:"endTime,omitempty"`
	FixRankTime                       int64                  `protobuf:"varint,99,opt,name=fixRankTime,proto3" json:"fixRankTime,omitempty"`
	CloseTime                         int64                  `protobuf:"varint,102,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	Priority                          int32                  `protobuf:"varint,103,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_pcommon_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{8}
}

func (x *Event) GetEventType() penum.EventType {
	if x != nil {
		return x.EventType
	}
	return penum.EventType(0)
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetHomeIconAssetId() string {
	if x != nil {
		return x.HomeIconAssetId
	}
	return ""
}

func (x *Event) GetBannerAssetId() string {
	if x != nil {
		return x.BannerAssetId
	}
	return ""
}

func (x *Event) GetNoti() bool {
	if x != nil {
		return x.Noti
	}
	return false
}

func (x *Event) GetDailyMissionGroupId() string {
	if x != nil {
		return x.DailyMissionGroupId
	}
	return ""
}

func (x *Event) GetMissionGroupId() string {
	if x != nil {
		return x.MissionGroupId
	}
	return ""
}

func (x *Event) GetMissionDailyReleaseGroupId() string {
	if x != nil {
		return x.MissionDailyReleaseGroupId
	}
	return ""
}

func (x *Event) GetMissionPanelSheetGroupId() string {
	if x != nil {
		return x.MissionPanelSheetGroupId
	}
	return ""
}

func (x *Event) GetStoryGroupId() string {
	if x != nil {
		return x.StoryGroupId
	}
	return ""
}

func (x *Event) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *Event) GetCharacterIds() []string {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *Event) GetDearnessMissionPanelSheetGroupIds() []string {
	if x != nil {
		return x.DearnessMissionPanelSheetGroupIds
	}
	return nil
}

func (x *Event) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Event) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Event) GetFixRankTime() int64 {
	if x != nil {
		return x.FixRankTime
	}
	return 0
}

func (x *Event) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *Event) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type ExamAiBaseModel struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ModelVersion        string                 `protobuf:"bytes,1,opt,name=modelVersion,proto3" json:"modelVersion,omitempty"`
	Env                 string                 `protobuf:"bytes,3,opt,name=env,proto3" json:"env,omitempty"`
	Tag                 string                 `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	MasterVersion       string                 `protobuf:"bytes,5,opt,name=masterVersion,proto3" json:"masterVersion,omitempty"`
	Name                string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	PlanType            penum.ProducePlanType  `protobuf:"varint,50,opt,name=planType,proto3,enum=penum.ProducePlanType" json:"planType,omitempty"`
	StaminaMin          int32                  `protobuf:"varint,51,opt,name=staminaMin,proto3" json:"staminaMin,omitempty"`
	StaminaMax          int32                  `protobuf:"varint,52,opt,name=staminaMax,proto3" json:"staminaMax,omitempty"`
	MaxStaminaMin       int32                  `protobuf:"varint,53,opt,name=maxStaminaMin,proto3" json:"maxStaminaMin,omitempty"`
	MaxStaminaMax       int32                  `protobuf:"varint,54,opt,name=maxStaminaMax,proto3" json:"maxStaminaMax,omitempty"`
	LimitTurnMin        int32                  `protobuf:"varint,55,opt,name=limitTurnMin,proto3" json:"limitTurnMin,omitempty"`
	LimitTurnMax        int32                  `protobuf:"varint,56,opt,name=limitTurnMax,proto3" json:"limitTurnMax,omitempty"`
	LimitBorderMin      int32                  `protobuf:"varint,57,opt,name=limitBorderMin,proto3" json:"limitBorderMin,omitempty"`
	LimitBorderMax      int32                  `protobuf:"varint,58,opt,name=limitBorderMax,proto3" json:"limitBorderMax,omitempty"`
	ClearBorderMin      int32                  `protobuf:"varint,59,opt,name=clearBorderMin,proto3" json:"clearBorderMin,omitempty"`
	ClearBorderMax      int32                  `protobuf:"varint,60,opt,name=clearBorderMax,proto3" json:"clearBorderMax,omitempty"`
	ProduceCardCountMin int32                  `protobuf:"varint,61,opt,name=produceCardCountMin,proto3" json:"produceCardCountMin,omitempty"`
	ProduceCardCountMax int32                  `protobuf:"varint,62,opt,name=produceCardCountMax,proto3" json:"produceCardCountMax,omitempty"`
	ProduceItemCountMin int32                  `protobuf:"varint,63,opt,name=produceItemCountMin,proto3" json:"produceItemCountMin,omitempty"`
	ProduceItemCountMax int32                  `protobuf:"varint,64,opt,name=produceItemCountMax,proto3" json:"produceItemCountMax,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ExamAiBaseModel) Reset() {
	*x = ExamAiBaseModel{}
	mi := &file_pcommon_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamAiBaseModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamAiBaseModel) ProtoMessage() {}

func (x *ExamAiBaseModel) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamAiBaseModel.ProtoReflect.Descriptor instead.
func (*ExamAiBaseModel) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{9}
}

func (x *ExamAiBaseModel) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

func (x *ExamAiBaseModel) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ExamAiBaseModel) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ExamAiBaseModel) GetMasterVersion() string {
	if x != nil {
		return x.MasterVersion
	}
	return ""
}

func (x *ExamAiBaseModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExamAiBaseModel) GetPlanType() penum.ProducePlanType {
	if x != nil {
		return x.PlanType
	}
	return penum.ProducePlanType(0)
}

func (x *ExamAiBaseModel) GetStaminaMin() int32 {
	if x != nil {
		return x.StaminaMin
	}
	return 0
}

func (x *ExamAiBaseModel) GetStaminaMax() int32 {
	if x != nil {
		return x.StaminaMax
	}
	return 0
}

func (x *ExamAiBaseModel) GetMaxStaminaMin() int32 {
	if x != nil {
		return x.MaxStaminaMin
	}
	return 0
}

func (x *ExamAiBaseModel) GetMaxStaminaMax() int32 {
	if x != nil {
		return x.MaxStaminaMax
	}
	return 0
}

func (x *ExamAiBaseModel) GetLimitTurnMin() int32 {
	if x != nil {
		return x.LimitTurnMin
	}
	return 0
}

func (x *ExamAiBaseModel) GetLimitTurnMax() int32 {
	if x != nil {
		return x.LimitTurnMax
	}
	return 0
}

func (x *ExamAiBaseModel) GetLimitBorderMin() int32 {
	if x != nil {
		return x.LimitBorderMin
	}
	return 0
}

func (x *ExamAiBaseModel) GetLimitBorderMax() int32 {
	if x != nil {
		return x.LimitBorderMax
	}
	return 0
}

func (x *ExamAiBaseModel) GetClearBorderMin() int32 {
	if x != nil {
		return x.ClearBorderMin
	}
	return 0
}

func (x *ExamAiBaseModel) GetClearBorderMax() int32 {
	if x != nil {
		return x.ClearBorderMax
	}
	return 0
}

func (x *ExamAiBaseModel) GetProduceCardCountMin() int32 {
	if x != nil {
		return x.ProduceCardCountMin
	}
	return 0
}

func (x *ExamAiBaseModel) GetProduceCardCountMax() int32 {
	if x != nil {
		return x.ProduceCardCountMax
	}
	return 0
}

func (x *ExamAiBaseModel) GetProduceItemCountMin() int32 {
	if x != nil {
		return x.ProduceItemCountMin
	}
	return 0
}

func (x *ExamAiBaseModel) GetProduceItemCountMax() int32 {
	if x != nil {
		return x.ProduceItemCountMax
	}
	return 0
}

type ExamAntiCheatTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Features      []penum.ExamGameType   `protobuf:"varint,1,rep,packed,name=features,proto3,enum=penum.ExamGameType" json:"features,omitempty"`
	Dates         []string               `protobuf:"bytes,2,rep,name=dates,proto3" json:"dates,omitempty"`
	UserIds       []string               `protobuf:"bytes,3,rep,name=userIds,proto3" json:"userIds,omitempty"`
	LogIds        []string               `protobuf:"bytes,4,rep,name=logIds,proto3" json:"logIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamAntiCheatTarget) Reset() {
	*x = ExamAntiCheatTarget{}
	mi := &file_pcommon_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamAntiCheatTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamAntiCheatTarget) ProtoMessage() {}

func (x *ExamAntiCheatTarget) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamAntiCheatTarget.ProtoReflect.Descriptor instead.
func (*ExamAntiCheatTarget) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{10}
}

func (x *ExamAntiCheatTarget) GetFeatures() []penum.ExamGameType {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *ExamAntiCheatTarget) GetDates() []string {
	if x != nil {
		return x.Dates
	}
	return nil
}

func (x *ExamAntiCheatTarget) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *ExamAntiCheatTarget) GetLogIds() []string {
	if x != nil {
		return x.LogIds
	}
	return nil
}

type ExamBattleAutoPlayer struct {
	state                  protoimpl.MessageState       `protogen:"open.v1"`
	CharacterId            string                       `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
	IdolCardId             string                       `protobuf:"bytes,2,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	PlanType               penum.ProducePlanType        `protobuf:"varint,3,opt,name=planType,proto3,enum=penum.ProducePlanType" json:"planType,omitempty"`
	ExamEffectType         penum.ProduceExamEffectType  `protobuf:"varint,4,opt,name=examEffectType,proto3,enum=penum.ProduceExamEffectType" json:"examEffectType,omitempty"`
	IdolCardLevelLimitRank penum.IdolCardLevelLimitRank `protobuf:"varint,5,opt,name=idolCardLevelLimitRank,proto3,enum=penum.IdolCardLevelLimitRank" json:"idolCardLevelLimitRank,omitempty"`
	IdolCardPotentialRank  penum.IdolCardPotentialRank  `protobuf:"varint,6,opt,name=idolCardPotentialRank,proto3,enum=penum.IdolCardPotentialRank" json:"idolCardPotentialRank,omitempty"`
	Power                  int32                        `protobuf:"varint,7,opt,name=power,proto3" json:"power,omitempty"`
	Seed                   int64                        `protobuf:"varint,50,opt,name=seed,proto3" json:"seed,omitempty"`
	Vocal                  int32                        `protobuf:"varint,51,opt,name=vocal,proto3" json:"vocal,omitempty"`
	Dance                  int32                        `protobuf:"varint,52,opt,name=dance,proto3" json:"dance,omitempty"`
	Visual                 int32                        `protobuf:"varint,53,opt,name=visual,proto3" json:"visual,omitempty"`
	VocalBonusPermil       int32                        `protobuf:"varint,54,opt,name=vocalBonusPermil,proto3" json:"vocalBonusPermil,omitempty"`
	DanceBonusPermil       int32                        `protobuf:"varint,55,opt,name=danceBonusPermil,proto3" json:"danceBonusPermil,omitempty"`
	VisualBonusPermil      int32                        `protobuf:"varint,56,opt,name=visualBonusPermil,proto3" json:"visualBonusPermil,omitempty"`
	MaxStamina             int32                        `protobuf:"varint,57,opt,name=maxStamina,proto3" json:"maxStamina,omitempty"`
	ProduceCards           []*ProduceCard               `protobuf:"bytes,58,rep,name=produceCards,proto3" json:"produceCards,omitempty"`
	ProduceItemIds         []string                     `protobuf:"bytes,59,rep,name=produceItemIds,proto3" json:"produceItemIds,omitempty"`
	Rank                   int32                        `protobuf:"varint,100,opt,name=rank,proto3" json:"rank,omitempty"`
	Score                  int32                        `protobuf:"varint,101,opt,name=score,proto3" json:"score,omitempty"`
	VocalScore             int32                        `protobuf:"varint,102,opt,name=vocalScore,proto3" json:"vocalScore,omitempty"`
	DanceScore             int32                        `protobuf:"varint,103,opt,name=danceScore,proto3" json:"danceScore,omitempty"`
	VisualScore            int32                        `protobuf:"varint,104,opt,name=visualScore,proto3" json:"visualScore,omitempty"`
	SelectIndexList        []int32                      `protobuf:"varint,105,rep,packed,name=selectIndexList,proto3" json:"selectIndexList,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExamBattleAutoPlayer) Reset() {
	*x = ExamBattleAutoPlayer{}
	mi := &file_pcommon_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamBattleAutoPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamBattleAutoPlayer) ProtoMessage() {}

func (x *ExamBattleAutoPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamBattleAutoPlayer.ProtoReflect.Descriptor instead.
func (*ExamBattleAutoPlayer) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{11}
}

func (x *ExamBattleAutoPlayer) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *ExamBattleAutoPlayer) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *ExamBattleAutoPlayer) GetPlanType() penum.ProducePlanType {
	if x != nil {
		return x.PlanType
	}
	return penum.ProducePlanType(0)
}

func (x *ExamBattleAutoPlayer) GetExamEffectType() penum.ProduceExamEffectType {
	if x != nil {
		return x.ExamEffectType
	}
	return penum.ProduceExamEffectType(0)
}

func (x *ExamBattleAutoPlayer) GetIdolCardLevelLimitRank() penum.IdolCardLevelLimitRank {
	if x != nil {
		return x.IdolCardLevelLimitRank
	}
	return penum.IdolCardLevelLimitRank(0)
}

func (x *ExamBattleAutoPlayer) GetIdolCardPotentialRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.IdolCardPotentialRank
	}
	return penum.IdolCardPotentialRank(0)
}

func (x *ExamBattleAutoPlayer) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetVocal() int32 {
	if x != nil {
		return x.Vocal
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetDance() int32 {
	if x != nil {
		return x.Dance
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetVisual() int32 {
	if x != nil {
		return x.Visual
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetVocalBonusPermil() int32 {
	if x != nil {
		return x.VocalBonusPermil
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetDanceBonusPermil() int32 {
	if x != nil {
		return x.DanceBonusPermil
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetVisualBonusPermil() int32 {
	if x != nil {
		return x.VisualBonusPermil
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetMaxStamina() int32 {
	if x != nil {
		return x.MaxStamina
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetProduceCards() []*ProduceCard {
	if x != nil {
		return x.ProduceCards
	}
	return nil
}

func (x *ExamBattleAutoPlayer) GetProduceItemIds() []string {
	if x != nil {
		return x.ProduceItemIds
	}
	return nil
}

func (x *ExamBattleAutoPlayer) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetVocalScore() int32 {
	if x != nil {
		return x.VocalScore
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetDanceScore() int32 {
	if x != nil {
		return x.DanceScore
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetVisualScore() int32 {
	if x != nil {
		return x.VisualScore
	}
	return 0
}

func (x *ExamBattleAutoPlayer) GetSelectIndexList() []int32 {
	if x != nil {
		return x.SelectIndexList
	}
	return nil
}

type ExamBattleAutoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppVersion    string                 `protobuf:"bytes,1,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	MasterVersion string                 `protobuf:"bytes,2,opt,name=masterVersion,proto3" json:"masterVersion,omitempty"`
	MasterHash    string                 `protobuf:"bytes,3,opt,name=masterHash,proto3" json:"masterHash,omitempty"`
	Vocal         int32                  `protobuf:"varint,4,opt,name=vocal,proto3" json:"vocal,omitempty"`
	Dance         int32                  `protobuf:"varint,5,opt,name=dance,proto3" json:"dance,omitempty"`
	Visual        int32                  `protobuf:"varint,6,opt,name=visual,proto3" json:"visual,omitempty"`
	ExamSettingId string                 `protobuf:"bytes,7,opt,name=examSettingId,proto3" json:"examSettingId,omitempty"`
	Stages        []*ExamBattleAutoStage `protobuf:"bytes,8,rep,name=stages,proto3" json:"stages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamBattleAutoRequest) Reset() {
	*x = ExamBattleAutoRequest{}
	mi := &file_pcommon_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamBattleAutoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamBattleAutoRequest) ProtoMessage() {}

func (x *ExamBattleAutoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamBattleAutoRequest.ProtoReflect.Descriptor instead.
func (*ExamBattleAutoRequest) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{12}
}

func (x *ExamBattleAutoRequest) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ExamBattleAutoRequest) GetMasterVersion() string {
	if x != nil {
		return x.MasterVersion
	}
	return ""
}

func (x *ExamBattleAutoRequest) GetMasterHash() string {
	if x != nil {
		return x.MasterHash
	}
	return ""
}

func (x *ExamBattleAutoRequest) GetVocal() int32 {
	if x != nil {
		return x.Vocal
	}
	return 0
}

func (x *ExamBattleAutoRequest) GetDance() int32 {
	if x != nil {
		return x.Dance
	}
	return 0
}

func (x *ExamBattleAutoRequest) GetVisual() int32 {
	if x != nil {
		return x.Visual
	}
	return 0
}

func (x *ExamBattleAutoRequest) GetExamSettingId() string {
	if x != nil {
		return x.ExamSettingId
	}
	return ""
}

func (x *ExamBattleAutoRequest) GetStages() []*ExamBattleAutoStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

type ExamBattleAutoStage struct {
	state                           protoimpl.MessageState  `protogen:"open.v1"`
	LimitTurn                       int32                   `protobuf:"varint,1,opt,name=limitTurn,proto3" json:"limitTurn,omitempty"`
	ProduceExamGimmickEffectGroupId string                  `protobuf:"bytes,2,opt,name=produceExamGimmickEffectGroupId,proto3" json:"produceExamGimmickEffectGroupId,omitempty"`
	SelfPlayers                     []*ExamBattleAutoPlayer `protobuf:"bytes,3,rep,name=selfPlayers,proto3" json:"selfPlayers,omitempty"`
	RivalPlayers                    []*ExamBattleAutoPlayer `protobuf:"bytes,4,rep,name=rivalPlayers,proto3" json:"rivalPlayers,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ExamBattleAutoStage) Reset() {
	*x = ExamBattleAutoStage{}
	mi := &file_pcommon_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamBattleAutoStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamBattleAutoStage) ProtoMessage() {}

func (x *ExamBattleAutoStage) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamBattleAutoStage.ProtoReflect.Descriptor instead.
func (*ExamBattleAutoStage) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{13}
}

func (x *ExamBattleAutoStage) GetLimitTurn() int32 {
	if x != nil {
		return x.LimitTurn
	}
	return 0
}

func (x *ExamBattleAutoStage) GetProduceExamGimmickEffectGroupId() string {
	if x != nil {
		return x.ProduceExamGimmickEffectGroupId
	}
	return ""
}

func (x *ExamBattleAutoStage) GetSelfPlayers() []*ExamBattleAutoPlayer {
	if x != nil {
		return x.SelfPlayers
	}
	return nil
}

func (x *ExamBattleAutoStage) GetRivalPlayers() []*ExamBattleAutoPlayer {
	if x != nil {
		return x.RivalPlayers
	}
	return nil
}

type ExamBattleAutoStageResult struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	SelfPlayers   []*ExamBattleAutoStageResult_Player `protobuf:"bytes,3,rep,name=selfPlayers,proto3" json:"selfPlayers,omitempty"`
	RivalPlayers  []*ExamBattleAutoStageResult_Player `protobuf:"bytes,4,rep,name=rivalPlayers,proto3" json:"rivalPlayers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamBattleAutoStageResult) Reset() {
	*x = ExamBattleAutoStageResult{}
	mi := &file_pcommon_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamBattleAutoStageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamBattleAutoStageResult) ProtoMessage() {}

func (x *ExamBattleAutoStageResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamBattleAutoStageResult.ProtoReflect.Descriptor instead.
func (*ExamBattleAutoStageResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{14}
}

func (x *ExamBattleAutoStageResult) GetSelfPlayers() []*ExamBattleAutoStageResult_Player {
	if x != nil {
		return x.SelfPlayers
	}
	return nil
}

func (x *ExamBattleAutoStageResult) GetRivalPlayers() []*ExamBattleAutoStageResult_Player {
	if x != nil {
		return x.RivalPlayers
	}
	return nil
}

type ExamBattleResult struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Rank              int32                  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Score             int32                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Stamina           int32                  `protobuf:"varint,3,opt,name=stamina,proto3" json:"stamina,omitempty"`
	ProduceDrinkIds   []string               `protobuf:"bytes,5,rep,name=produceDrinkIds,proto3" json:"produceDrinkIds,omitempty"`
	ProduceItems      []*ProduceItem         `protobuf:"bytes,6,rep,name=produceItems,proto3" json:"produceItems,omitempty"`
	ExamTriggerCounts []*ExamTriggerCount    `protobuf:"bytes,7,rep,name=examTriggerCounts,proto3" json:"examTriggerCounts,omitempty"`
	VocalScore        int32                  `protobuf:"varint,8,opt,name=vocalScore,proto3" json:"vocalScore,omitempty"`
	DanceScore        int32                  `protobuf:"varint,9,opt,name=danceScore,proto3" json:"danceScore,omitempty"`
	VisualScore       int32                  `protobuf:"varint,10,opt,name=visualScore,proto3" json:"visualScore,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExamBattleResult) Reset() {
	*x = ExamBattleResult{}
	mi := &file_pcommon_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamBattleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamBattleResult) ProtoMessage() {}

func (x *ExamBattleResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamBattleResult.ProtoReflect.Descriptor instead.
func (*ExamBattleResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{15}
}

func (x *ExamBattleResult) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ExamBattleResult) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ExamBattleResult) GetStamina() int32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *ExamBattleResult) GetProduceDrinkIds() []string {
	if x != nil {
		return x.ProduceDrinkIds
	}
	return nil
}

func (x *ExamBattleResult) GetProduceItems() []*ProduceItem {
	if x != nil {
		return x.ProduceItems
	}
	return nil
}

func (x *ExamBattleResult) GetExamTriggerCounts() []*ExamTriggerCount {
	if x != nil {
		return x.ExamTriggerCounts
	}
	return nil
}

func (x *ExamBattleResult) GetVocalScore() int32 {
	if x != nil {
		return x.VocalScore
	}
	return 0
}

func (x *ExamBattleResult) GetDanceScore() int32 {
	if x != nil {
		return x.DanceScore
	}
	return 0
}

func (x *ExamBattleResult) GetVisualScore() int32 {
	if x != nil {
		return x.VisualScore
	}
	return 0
}

type ExamCommandLog struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CommandType       penum.ExamCommandType  `protobuf:"varint,1,opt,name=commandType,proto3,enum=penum.ExamCommandType" json:"commandType,omitempty"`
	PhaseType         penum.ExamPhaseType    `protobuf:"varint,2,opt,name=phaseType,proto3,enum=penum.ExamPhaseType" json:"phaseType,omitempty"`
	SelectIndexes     []int32                `protobuf:"varint,3,rep,packed,name=selectIndexes,proto3" json:"selectIndexes,omitempty"`
	UseIndex          int32                  `protobuf:"varint,4,opt,name=useIndex,proto3" json:"useIndex,omitempty"`
	UseProduceCard    *ProduceCard           `protobuf:"bytes,5,opt,name=useProduceCard,proto3" json:"useProduceCard,omitempty"`
	UseProduceDrinkId string                 `protobuf:"bytes,6,opt,name=useProduceDrinkId,proto3" json:"useProduceDrinkId,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExamCommandLog) Reset() {
	*x = ExamCommandLog{}
	mi := &file_pcommon_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamCommandLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamCommandLog) ProtoMessage() {}

func (x *ExamCommandLog) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamCommandLog.ProtoReflect.Descriptor instead.
func (*ExamCommandLog) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{16}
}

func (x *ExamCommandLog) GetCommandType() penum.ExamCommandType {
	if x != nil {
		return x.CommandType
	}
	return penum.ExamCommandType(0)
}

func (x *ExamCommandLog) GetPhaseType() penum.ExamPhaseType {
	if x != nil {
		return x.PhaseType
	}
	return penum.ExamPhaseType(0)
}

func (x *ExamCommandLog) GetSelectIndexes() []int32 {
	if x != nil {
		return x.SelectIndexes
	}
	return nil
}

func (x *ExamCommandLog) GetUseIndex() int32 {
	if x != nil {
		return x.UseIndex
	}
	return 0
}

func (x *ExamCommandLog) GetUseProduceCard() *ProduceCard {
	if x != nil {
		return x.UseProduceCard
	}
	return nil
}

func (x *ExamCommandLog) GetUseProduceDrinkId() string {
	if x != nil {
		return x.UseProduceDrinkId
	}
	return ""
}

type ExamTriggerCount struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ProduceExamTriggerId string                 `protobuf:"bytes,1,opt,name=produceExamTriggerId,proto3" json:"produceExamTriggerId,omitempty"`
	Count                int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExamTriggerCount) Reset() {
	*x = ExamTriggerCount{}
	mi := &file_pcommon_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamTriggerCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamTriggerCount) ProtoMessage() {}

func (x *ExamTriggerCount) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamTriggerCount.ProtoReflect.Descriptor instead.
func (*ExamTriggerCount) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{17}
}

func (x *ExamTriggerCount) GetProduceExamTriggerId() string {
	if x != nil {
		return x.ProduceExamTriggerId
	}
	return ""
}

func (x *ExamTriggerCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ExamTurnEndLog struct {
	state                     protoimpl.MessageState     `protogen:"open.v1"`
	Turn                      int32                      `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	Score                     int32                      `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Stamina                   int32                      `protobuf:"varint,3,opt,name=stamina,proto3" json:"stamina,omitempty"`
	ConsumedStamina           int32                      `protobuf:"varint,4,opt,name=consumedStamina,proto3" json:"consumedStamina,omitempty"`
	Block                     int32                      `protobuf:"varint,5,opt,name=block,proto3" json:"block,omitempty"`
	AdditionBlock             int32                      `protobuf:"varint,6,opt,name=additionBlock,proto3" json:"additionBlock,omitempty"`
	ParameterType             penum.ProduceParameterType `protobuf:"varint,7,opt,name=parameterType,proto3,enum=penum.ProduceParameterType" json:"parameterType,omitempty"`
	IdolStatusType            penum.ExamIdolStatusType   `protobuf:"varint,8,opt,name=idolStatusType,proto3,enum=penum.ExamIdolStatusType" json:"idolStatusType,omitempty"`
	IdolStatusStepCount       int32                      `protobuf:"varint,9,opt,name=idolStatusStepCount,proto3" json:"idolStatusStepCount,omitempty"`
	StartPlayHandProduceCards []*ProduceCard             `protobuf:"bytes,50,rep,name=startPlayHandProduceCards,proto3" json:"startPlayHandProduceCards,omitempty"`
	StartPlayStatuses         []string                   `protobuf:"bytes,51,rep,name=startPlayStatuses,proto3" json:"startPlayStatuses,omitempty"`
	StartPlayHoldProduceCards []*ProduceCard             `protobuf:"bytes,52,rep,name=startPlayHoldProduceCards,proto3" json:"startPlayHoldProduceCards,omitempty"`
	Commands                  []*ExamCommandLog          `protobuf:"bytes,100,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ExamTurnEndLog) Reset() {
	*x = ExamTurnEndLog{}
	mi := &file_pcommon_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamTurnEndLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamTurnEndLog) ProtoMessage() {}

func (x *ExamTurnEndLog) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamTurnEndLog.ProtoReflect.Descriptor instead.
func (*ExamTurnEndLog) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{18}
}

func (x *ExamTurnEndLog) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *ExamTurnEndLog) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ExamTurnEndLog) GetStamina() int32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *ExamTurnEndLog) GetConsumedStamina() int32 {
	if x != nil {
		return x.ConsumedStamina
	}
	return 0
}

func (x *ExamTurnEndLog) GetBlock() int32 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *ExamTurnEndLog) GetAdditionBlock() int32 {
	if x != nil {
		return x.AdditionBlock
	}
	return 0
}

func (x *ExamTurnEndLog) GetParameterType() penum.ProduceParameterType {
	if x != nil {
		return x.ParameterType
	}
	return penum.ProduceParameterType(0)
}

func (x *ExamTurnEndLog) GetIdolStatusType() penum.ExamIdolStatusType {
	if x != nil {
		return x.IdolStatusType
	}
	return penum.ExamIdolStatusType(0)
}

func (x *ExamTurnEndLog) GetIdolStatusStepCount() int32 {
	if x != nil {
		return x.IdolStatusStepCount
	}
	return 0
}

func (x *ExamTurnEndLog) GetStartPlayHandProduceCards() []*ProduceCard {
	if x != nil {
		return x.StartPlayHandProduceCards
	}
	return nil
}

func (x *ExamTurnEndLog) GetStartPlayStatuses() []string {
	if x != nil {
		return x.StartPlayStatuses
	}
	return nil
}

func (x *ExamTurnEndLog) GetStartPlayHoldProduceCards() []*ProduceCard {
	if x != nil {
		return x.StartPlayHoldProduceCards
	}
	return nil
}

func (x *ExamTurnEndLog) GetCommands() []*ExamCommandLog {
	if x != nil {
		return x.Commands
	}
	return nil
}

type Gasha struct {
	state                         protoimpl.MessageState   `protogen:"open.v1"`
	Id                            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                          penum.GashaType          `protobuf:"varint,2,opt,name=type,proto3,enum=penum.GashaType" json:"type,omitempty"`
	Name                          string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description                   string                   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	GashaButtons                  []*GashaButton           `protobuf:"bytes,5,rep,name=gashaButtons,proto3" json:"gashaButtons,omitempty"`
	GashaStepUp                   *GashaStepUp             `protobuf:"bytes,6,opt,name=gashaStepUp,proto3" json:"gashaStepUp,omitempty"`
	GashaSelectPickup             *GashaSelectPickup       `protobuf:"bytes,7,opt,name=gashaSelectPickup,proto3" json:"gashaSelectPickup,omitempty"`
	GashaCardBonusId              string                   `protobuf:"bytes,20,opt,name=gashaCardBonusId,proto3" json:"gashaCardBonusId,omitempty"`
	GashaPoint                    *GashaPoint              `protobuf:"bytes,21,opt,name=gashaPoint,proto3" json:"gashaPoint,omitempty"`
	BonusRewards                  []*Reward                `protobuf:"bytes,22,rep,name=bonusRewards,proto3" json:"bonusRewards,omitempty"`
	BannerAssetId                 string                   `protobuf:"bytes,24,opt,name=bannerAssetId,proto3" json:"bannerAssetId,omitempty"`
	BannerLabelAssetId            string                   `protobuf:"bytes,25,opt,name=bannerLabelAssetId,proto3" json:"bannerLabelAssetId,omitempty"`
	MovieAssetId                  string                   `protobuf:"bytes,26,opt,name=movieAssetId,proto3" json:"movieAssetId,omitempty"`
	ScreenAssetId                 string                   `protobuf:"bytes,27,opt,name=screenAssetId,proto3" json:"screenAssetId,omitempty"`
	AppealTextAssetId             string                   `protobuf:"bytes,28,opt,name=appealTextAssetId,proto3" json:"appealTextAssetId,omitempty"`
	NoticeId                      string                   `protobuf:"bytes,29,opt,name=noticeId,proto3" json:"noticeId,omitempty"`
	ViewConditionSetId            string                   `protobuf:"bytes,30,opt,name=viewConditionSetId,proto3" json:"viewConditionSetId,omitempty"`
	UnlockConditionSetId          string                   `protobuf:"bytes,31,opt,name=unlockConditionSetId,proto3" json:"unlockConditionSetId,omitempty"`
	HasIdolCard                   bool                     `protobuf:"varint,32,opt,name=hasIdolCard,proto3" json:"hasIdolCard,omitempty"`
	PickupIdolCardSkinIds         []string                 `protobuf:"bytes,40,rep,name=pickupIdolCardSkinIds,proto3" json:"pickupIdolCardSkinIds,omitempty"`
	PickupSupportCardIds          []string                 `protobuf:"bytes,41,rep,name=pickupSupportCardIds,proto3" json:"pickupSupportCardIds,omitempty"`
	BackgroundPickupIdolCardSkins []*GashaBackgroundPickup `protobuf:"bytes,42,rep,name=backgroundPickupIdolCardSkins,proto3" json:"backgroundPickupIdolCardSkins,omitempty"`
	BackgroundPickupSupportCards  []*GashaBackgroundPickup `protobuf:"bytes,43,rep,name=backgroundPickupSupportCards,proto3" json:"backgroundPickupSupportCards,omitempty"`
	AnimationBackgroundAssetId    string                   `protobuf:"bytes,44,opt,name=animationBackgroundAssetId,proto3" json:"animationBackgroundAssetId,omitempty"`
	StartTime                     int64                    `protobuf:"varint,100,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                       int64                    `protobuf:"varint,101,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Order                         int32                    `protobuf:"varint,102,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Gasha) Reset() {
	*x = Gasha{}
	mi := &file_pcommon_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Gasha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gasha) ProtoMessage() {}

func (x *Gasha) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gasha.ProtoReflect.Descriptor instead.
func (*Gasha) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{19}
}

func (x *Gasha) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Gasha) GetType() penum.GashaType {
	if x != nil {
		return x.Type
	}
	return penum.GashaType(0)
}

func (x *Gasha) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Gasha) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Gasha) GetGashaButtons() []*GashaButton {
	if x != nil {
		return x.GashaButtons
	}
	return nil
}

func (x *Gasha) GetGashaStepUp() *GashaStepUp {
	if x != nil {
		return x.GashaStepUp
	}
	return nil
}

func (x *Gasha) GetGashaSelectPickup() *GashaSelectPickup {
	if x != nil {
		return x.GashaSelectPickup
	}
	return nil
}

func (x *Gasha) GetGashaCardBonusId() string {
	if x != nil {
		return x.GashaCardBonusId
	}
	return ""
}

func (x *Gasha) GetGashaPoint() *GashaPoint {
	if x != nil {
		return x.GashaPoint
	}
	return nil
}

func (x *Gasha) GetBonusRewards() []*Reward {
	if x != nil {
		return x.BonusRewards
	}
	return nil
}

func (x *Gasha) GetBannerAssetId() string {
	if x != nil {
		return x.BannerAssetId
	}
	return ""
}

func (x *Gasha) GetBannerLabelAssetId() string {
	if x != nil {
		return x.BannerLabelAssetId
	}
	return ""
}

func (x *Gasha) GetMovieAssetId() string {
	if x != nil {
		return x.MovieAssetId
	}
	return ""
}

func (x *Gasha) GetScreenAssetId() string {
	if x != nil {
		return x.ScreenAssetId
	}
	return ""
}

func (x *Gasha) GetAppealTextAssetId() string {
	if x != nil {
		return x.AppealTextAssetId
	}
	return ""
}

func (x *Gasha) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *Gasha) GetViewConditionSetId() string {
	if x != nil {
		return x.ViewConditionSetId
	}
	return ""
}

func (x *Gasha) GetUnlockConditionSetId() string {
	if x != nil {
		return x.UnlockConditionSetId
	}
	return ""
}

func (x *Gasha) GetHasIdolCard() bool {
	if x != nil {
		return x.HasIdolCard
	}
	return false
}

func (x *Gasha) GetPickupIdolCardSkinIds() []string {
	if x != nil {
		return x.PickupIdolCardSkinIds
	}
	return nil
}

func (x *Gasha) GetPickupSupportCardIds() []string {
	if x != nil {
		return x.PickupSupportCardIds
	}
	return nil
}

func (x *Gasha) GetBackgroundPickupIdolCardSkins() []*GashaBackgroundPickup {
	if x != nil {
		return x.BackgroundPickupIdolCardSkins
	}
	return nil
}

func (x *Gasha) GetBackgroundPickupSupportCards() []*GashaBackgroundPickup {
	if x != nil {
		return x.BackgroundPickupSupportCards
	}
	return nil
}

func (x *Gasha) GetAnimationBackgroundAssetId() string {
	if x != nil {
		return x.AnimationBackgroundAssetId
	}
	return ""
}

func (x *Gasha) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Gasha) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Gasha) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type GashaBackgroundPickup struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IdolCardSkinId string                 `protobuf:"bytes,1,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
	SupportCardId  string                 `protobuf:"bytes,2,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	MovieAssetId   string                 `protobuf:"bytes,3,opt,name=movieAssetId,proto3" json:"movieAssetId,omitempty"`
	ScreenAssetId  string                 `protobuf:"bytes,4,opt,name=screenAssetId,proto3" json:"screenAssetId,omitempty"`
	Rewards        []*Reward              `protobuf:"bytes,5,rep,name=rewards,proto3" json:"rewards,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GashaBackgroundPickup) Reset() {
	*x = GashaBackgroundPickup{}
	mi := &file_pcommon_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GashaBackgroundPickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaBackgroundPickup) ProtoMessage() {}

func (x *GashaBackgroundPickup) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaBackgroundPickup.ProtoReflect.Descriptor instead.
func (*GashaBackgroundPickup) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{20}
}

func (x *GashaBackgroundPickup) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

func (x *GashaBackgroundPickup) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *GashaBackgroundPickup) GetMovieAssetId() string {
	if x != nil {
		return x.MovieAssetId
	}
	return ""
}

func (x *GashaBackgroundPickup) GetScreenAssetId() string {
	if x != nil {
		return x.ScreenAssetId
	}
	return ""
}

func (x *GashaBackgroundPickup) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GashaButton struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Id                         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RemainingDrawCount         int32                  `protobuf:"varint,2,opt,name=remainingDrawCount,proto3" json:"remainingDrawCount,omitempty"`
	RemainingDiscountDrawCount int32                  `protobuf:"varint,3,opt,name=remainingDiscountDrawCount,proto3" json:"remainingDiscountDrawCount,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GashaButton) Reset() {
	*x = GashaButton{}
	mi := &file_pcommon_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GashaButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaButton) ProtoMessage() {}

func (x *GashaButton) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaButton.ProtoReflect.Descriptor instead.
func (*GashaButton) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{21}
}

func (x *GashaButton) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GashaButton) GetRemainingDrawCount() int32 {
	if x != nil {
		return x.RemainingDrawCount
	}
	return 0
}

func (x *GashaButton) GetRemainingDiscountDrawCount() int32 {
	if x != nil {
		return x.RemainingDiscountDrawCount
	}
	return 0
}

type GashaPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GashaPointId  string                 `protobuf:"bytes,1,opt,name=gashaPointId,proto3" json:"gashaPointId,omitempty"`
	Point         int32                  `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	Exchangeable  bool                   `protobuf:"varint,3,opt,name=exchangeable,proto3" json:"exchangeable,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GashaPoint) Reset() {
	*x = GashaPoint{}
	mi := &file_pcommon_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GashaPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaPoint) ProtoMessage() {}

func (x *GashaPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaPoint.ProtoReflect.Descriptor instead.
func (*GashaPoint) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{22}
}

func (x *GashaPoint) GetGashaPointId() string {
	if x != nil {
		return x.GashaPointId
	}
	return ""
}

func (x *GashaPoint) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *GashaPoint) GetExchangeable() bool {
	if x != nil {
		return x.Exchangeable
	}
	return false
}

func (x *GashaPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GashaSelectPickup struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IdolCardSkinIds []string               `protobuf:"bytes,2,rep,name=idolCardSkinIds,proto3" json:"idolCardSkinIds,omitempty"`
	SupportCardIds  []string               `protobuf:"bytes,3,rep,name=supportCardIds,proto3" json:"supportCardIds,omitempty"`
	PickupRewards   []*Reward              `protobuf:"bytes,4,rep,name=pickupRewards,proto3" json:"pickupRewards,omitempty"`
	PickupCount     int32                  `protobuf:"varint,5,opt,name=pickupCount,proto3" json:"pickupCount,omitempty"`
	DrawCount       int32                  `protobuf:"varint,6,opt,name=drawCount,proto3" json:"drawCount,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GashaSelectPickup) Reset() {
	*x = GashaSelectPickup{}
	mi := &file_pcommon_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GashaSelectPickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaSelectPickup) ProtoMessage() {}

func (x *GashaSelectPickup) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaSelectPickup.ProtoReflect.Descriptor instead.
func (*GashaSelectPickup) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{23}
}

func (x *GashaSelectPickup) GetIdolCardSkinIds() []string {
	if x != nil {
		return x.IdolCardSkinIds
	}
	return nil
}

func (x *GashaSelectPickup) GetSupportCardIds() []string {
	if x != nil {
		return x.SupportCardIds
	}
	return nil
}

func (x *GashaSelectPickup) GetPickupRewards() []*Reward {
	if x != nil {
		return x.PickupRewards
	}
	return nil
}

func (x *GashaSelectPickup) GetPickupCount() int32 {
	if x != nil {
		return x.PickupCount
	}
	return 0
}

func (x *GashaSelectPickup) GetDrawCount() int32 {
	if x != nil {
		return x.DrawCount
	}
	return 0
}

type GashaStepUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        int32                  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	IsLimited     bool                   `protobuf:"varint,2,opt,name=isLimited,proto3" json:"isLimited,omitempty"`
	Steps         []*GashaStepUpStep     `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GashaStepUp) Reset() {
	*x = GashaStepUp{}
	mi := &file_pcommon_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GashaStepUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaStepUp) ProtoMessage() {}

func (x *GashaStepUp) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaStepUp.ProtoReflect.Descriptor instead.
func (*GashaStepUp) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{24}
}

func (x *GashaStepUp) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GashaStepUp) GetIsLimited() bool {
	if x != nil {
		return x.IsLimited
	}
	return false
}

func (x *GashaStepUp) GetSteps() []*GashaStepUpStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type GashaStepUpStep struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Number         int32                  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	StepLabelColor string                 `protobuf:"bytes,2,opt,name=stepLabelColor,proto3" json:"stepLabelColor,omitempty"`
	AppealAssetId  string                 `protobuf:"bytes,3,opt,name=appealAssetId,proto3" json:"appealAssetId,omitempty"`
	IsFeature      bool                   `protobuf:"varint,4,opt,name=isFeature,proto3" json:"isFeature,omitempty"`
	BonusRewards   []*Reward              `protobuf:"bytes,5,rep,name=bonusRewards,proto3" json:"bonusRewards,omitempty"`
	GashaButtonId  string                 `protobuf:"bytes,6,opt,name=gashaButtonId,proto3" json:"gashaButtonId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GashaStepUpStep) Reset() {
	*x = GashaStepUpStep{}
	mi := &file_pcommon_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GashaStepUpStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaStepUpStep) ProtoMessage() {}

func (x *GashaStepUpStep) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaStepUpStep.ProtoReflect.Descriptor instead.
func (*GashaStepUpStep) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{25}
}

func (x *GashaStepUpStep) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GashaStepUpStep) GetStepLabelColor() string {
	if x != nil {
		return x.StepLabelColor
	}
	return ""
}

func (x *GashaStepUpStep) GetAppealAssetId() string {
	if x != nil {
		return x.AppealAssetId
	}
	return ""
}

func (x *GashaStepUpStep) GetIsFeature() bool {
	if x != nil {
		return x.IsFeature
	}
	return false
}

func (x *GashaStepUpStep) GetBonusRewards() []*Reward {
	if x != nil {
		return x.BonusRewards
	}
	return nil
}

func (x *GashaStepUpStep) GetGashaButtonId() string {
	if x != nil {
		return x.GashaButtonId
	}
	return ""
}

type GuildMission struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	Number                          int32                  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	StoryEventGuildMissionId        string                 `protobuf:"bytes,2,opt,name=storyEventGuildMissionId,proto3" json:"storyEventGuildMissionId,omitempty"`
	ProduceConditionSetDescription1 string                 `protobuf:"bytes,3,opt,name=produceConditionSetDescription1,proto3" json:"produceConditionSetDescription1,omitempty"`
	ProduceConditionSetDescription2 string                 `protobuf:"bytes,4,opt,name=produceConditionSetDescription2,proto3" json:"produceConditionSetDescription2,omitempty"`
	ProduceConditionSetDescription3 string                 `protobuf:"bytes,5,opt,name=produceConditionSetDescription3,proto3" json:"produceConditionSetDescription3,omitempty"`
	ProduceConditionSetCount        int32                  `protobuf:"varint,6,opt,name=produceConditionSetCount,proto3" json:"produceConditionSetCount,omitempty"`
	Threshold                       int32                  `protobuf:"varint,7,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Progress                        int32                  `protobuf:"varint,8,opt,name=progress,proto3" json:"progress,omitempty"`
	Reward                          *Reward                `protobuf:"bytes,9,opt,name=reward,proto3" json:"reward,omitempty"`
	Received                        bool                   `protobuf:"varint,10,opt,name=received,proto3" json:"received,omitempty"`
	MvpProfile                      *SimpleProfile         `protobuf:"bytes,11,opt,name=mvpProfile,proto3" json:"mvpProfile,omitempty"`
	Icon                            *GuildMission_Icon     `protobuf:"bytes,12,opt,name=icon,proto3" json:"icon,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *GuildMission) Reset() {
	*x = GuildMission{}
	mi := &file_pcommon_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMission) ProtoMessage() {}

func (x *GuildMission) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMission.ProtoReflect.Descriptor instead.
func (*GuildMission) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{26}
}

func (x *GuildMission) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GuildMission) GetStoryEventGuildMissionId() string {
	if x != nil {
		return x.StoryEventGuildMissionId
	}
	return ""
}

func (x *GuildMission) GetProduceConditionSetDescription1() string {
	if x != nil {
		return x.ProduceConditionSetDescription1
	}
	return ""
}

func (x *GuildMission) GetProduceConditionSetDescription2() string {
	if x != nil {
		return x.ProduceConditionSetDescription2
	}
	return ""
}

func (x *GuildMission) GetProduceConditionSetDescription3() string {
	if x != nil {
		return x.ProduceConditionSetDescription3
	}
	return ""
}

func (x *GuildMission) GetProduceConditionSetCount() int32 {
	if x != nil {
		return x.ProduceConditionSetCount
	}
	return 0
}

func (x *GuildMission) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *GuildMission) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *GuildMission) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *GuildMission) GetReceived() bool {
	if x != nil {
		return x.Received
	}
	return false
}

func (x *GuildMission) GetMvpProfile() *SimpleProfile {
	if x != nil {
		return x.MvpProfile
	}
	return nil
}

func (x *GuildMission) GetIcon() *GuildMission_Icon {
	if x != nil {
		return x.Icon
	}
	return nil
}

type GuildMissionHistory struct {
	state                    protoimpl.MessageState      `protogen:"open.v1"`
	Number                   int32                       `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	StoryEventGuildMissionId string                      `protobuf:"bytes,2,opt,name=storyEventGuildMissionId,proto3" json:"storyEventGuildMissionId,omitempty"`
	Profile                  *SimpleProfile              `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`
	PhaseType                penum.GuildMissionPhaseType `protobuf:"varint,4,opt,name=phaseType,proto3,enum=penum.GuildMissionPhaseType" json:"phaseType,omitempty"`
	ProgressedTime           int64                       `protobuf:"varint,5,opt,name=progressedTime,proto3" json:"progressedTime,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GuildMissionHistory) Reset() {
	*x = GuildMissionHistory{}
	mi := &file_pcommon_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMissionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMissionHistory) ProtoMessage() {}

func (x *GuildMissionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMissionHistory.ProtoReflect.Descriptor instead.
func (*GuildMissionHistory) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{27}
}

func (x *GuildMissionHistory) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GuildMissionHistory) GetStoryEventGuildMissionId() string {
	if x != nil {
		return x.StoryEventGuildMissionId
	}
	return ""
}

func (x *GuildMissionHistory) GetProfile() *SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *GuildMissionHistory) GetPhaseType() penum.GuildMissionPhaseType {
	if x != nil {
		return x.PhaseType
	}
	return penum.GuildMissionPhaseType(0)
}

func (x *GuildMissionHistory) GetProgressedTime() int64 {
	if x != nil {
		return x.ProgressedTime
	}
	return 0
}

type GvgRaidGuild struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Achievement   *Achievement           `protobuf:"bytes,2,opt,name=achievement,proto3" json:"achievement,omitempty"`
	Point         int32                  `protobuf:"varint,3,opt,name=point,proto3" json:"point,omitempty"`
	Rank          int32                  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GvgRaidGuild) Reset() {
	*x = GvgRaidGuild{}
	mi := &file_pcommon_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GvgRaidGuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GvgRaidGuild) ProtoMessage() {}

func (x *GvgRaidGuild) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GvgRaidGuild.ProtoReflect.Descriptor instead.
func (*GvgRaidGuild) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{28}
}

func (x *GvgRaidGuild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GvgRaidGuild) GetAchievement() *Achievement {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *GvgRaidGuild) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *GvgRaidGuild) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type GvgRaidSetUpDeck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slots         []*GvgRaidSlot         `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GvgRaidSetUpDeck) Reset() {
	*x = GvgRaidSetUpDeck{}
	mi := &file_pcommon_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GvgRaidSetUpDeck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GvgRaidSetUpDeck) ProtoMessage() {}

func (x *GvgRaidSetUpDeck) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GvgRaidSetUpDeck.ProtoReflect.Descriptor instead.
func (*GvgRaidSetUpDeck) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{29}
}

func (x *GvgRaidSetUpDeck) GetSlots() []*GvgRaidSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type GvgRaidSlot struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MainUserMemoryId string                 `protobuf:"bytes,1,opt,name=mainUserMemoryId,proto3" json:"mainUserMemoryId,omitempty"`
	SubUserMemoryIds []string               `protobuf:"bytes,2,rep,name=subUserMemoryIds,proto3" json:"subUserMemoryIds,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GvgRaidSlot) Reset() {
	*x = GvgRaidSlot{}
	mi := &file_pcommon_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GvgRaidSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GvgRaidSlot) ProtoMessage() {}

func (x *GvgRaidSlot) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GvgRaidSlot.ProtoReflect.Descriptor instead.
func (*GvgRaidSlot) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{30}
}

func (x *GvgRaidSlot) GetMainUserMemoryId() string {
	if x != nil {
		return x.MainUserMemoryId
	}
	return ""
}

func (x *GvgRaidSlot) GetSubUserMemoryIds() []string {
	if x != nil {
		return x.SubUserMemoryIds
	}
	return nil
}

type HomeBanner struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AssetId            string                 `protobuf:"bytes,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	LinkType           penum.LinkType         `protobuf:"varint,2,opt,name=linkType,proto3,enum=penum.LinkType" json:"linkType,omitempty"`
	LinkId             string                 `protobuf:"bytes,3,opt,name=linkId,proto3" json:"linkId,omitempty"`
	ViewConditionSetId string                 `protobuf:"bytes,7,opt,name=viewConditionSetId,proto3" json:"viewConditionSetId,omitempty"`
	StartTime          int64                  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime            int64                  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Priority           int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HomeBanner) Reset() {
	*x = HomeBanner{}
	mi := &file_pcommon_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomeBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBanner) ProtoMessage() {}

func (x *HomeBanner) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBanner.ProtoReflect.Descriptor instead.
func (*HomeBanner) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{31}
}

func (x *HomeBanner) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *HomeBanner) GetLinkType() penum.LinkType {
	if x != nil {
		return x.LinkType
	}
	return penum.LinkType(0)
}

func (x *HomeBanner) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *HomeBanner) GetViewConditionSetId() string {
	if x != nil {
		return x.ViewConditionSetId
	}
	return ""
}

func (x *HomeBanner) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HomeBanner) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *HomeBanner) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type HomeNavigation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	NoticeId      string                 `protobuf:"bytes,2,opt,name=noticeId,proto3" json:"noticeId,omitempty"`
	StartTime     int64                  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       int64                  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomeNavigation) Reset() {
	*x = HomeNavigation{}
	mi := &file_pcommon_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomeNavigation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeNavigation) ProtoMessage() {}

func (x *HomeNavigation) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeNavigation.ProtoReflect.Descriptor instead.
func (*HomeNavigation) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{32}
}

func (x *HomeNavigation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HomeNavigation) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *HomeNavigation) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HomeNavigation) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *HomeNavigation) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type IdolCard struct {
	state          protoimpl.MessageState       `protogen:"open.v1"`
	IdolCardId     string                       `protobuf:"bytes,2,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	LevelLimitRank penum.IdolCardLevelLimitRank `protobuf:"varint,4,opt,name=levelLimitRank,proto3,enum=penum.IdolCardLevelLimitRank" json:"levelLimitRank,omitempty"`
	PotentialRank  penum.IdolCardPotentialRank  `protobuf:"varint,5,opt,name=potentialRank,proto3,enum=penum.IdolCardPotentialRank" json:"potentialRank,omitempty"`
	IsClearTrueEnd bool                         `protobuf:"varint,6,opt,name=isClearTrueEnd,proto3" json:"isClearTrueEnd,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *IdolCard) Reset() {
	*x = IdolCard{}
	mi := &file_pcommon_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdolCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCard) ProtoMessage() {}

func (x *IdolCard) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCard.ProtoReflect.Descriptor instead.
func (*IdolCard) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{33}
}

func (x *IdolCard) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *IdolCard) GetLevelLimitRank() penum.IdolCardLevelLimitRank {
	if x != nil {
		return x.LevelLimitRank
	}
	return penum.IdolCardLevelLimitRank(0)
}

func (x *IdolCard) GetPotentialRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.PotentialRank
	}
	return penum.IdolCardPotentialRank(0)
}

func (x *IdolCard) GetIsClearTrueEnd() bool {
	if x != nil {
		return x.IsClearTrueEnd
	}
	return false
}

type Meishi struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicUserId  string                 `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	MeishiBase    *MeishiBase            `protobuf:"bytes,2,opt,name=meishiBase,proto3" json:"meishiBase,omitempty"`
	Objects       []*MeishiObject        `protobuf:"bytes,3,rep,name=objects,proto3" json:"objects,omitempty"`
	ImagePath     string                 `protobuf:"bytes,4,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	Timeline      string                 `protobuf:"bytes,5,opt,name=timeline,proto3" json:"timeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meishi) Reset() {
	*x = Meishi{}
	mi := &file_pcommon_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meishi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meishi) ProtoMessage() {}

func (x *Meishi) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meishi.ProtoReflect.Descriptor instead.
func (*Meishi) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{34}
}

func (x *Meishi) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *Meishi) GetMeishiBase() *MeishiBase {
	if x != nil {
		return x.MeishiBase
	}
	return nil
}

func (x *Meishi) GetObjects() []*MeishiObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *Meishi) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *Meishi) GetTimeline() string {
	if x != nil {
		return x.Timeline
	}
	return ""
}

type MeishiBase struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	LayoutNumber         int32                  `protobuf:"varint,1,opt,name=layoutNumber,proto3" json:"layoutNumber,omitempty"`
	Vertical             bool                   `protobuf:"varint,2,opt,name=vertical,proto3" json:"vertical,omitempty"`
	BeforeIdolCardId     string                 `protobuf:"bytes,10,opt,name=beforeIdolCardId,proto3" json:"beforeIdolCardId,omitempty"`
	AfterIdolCardId      string                 `protobuf:"bytes,11,opt,name=afterIdolCardId,proto3" json:"afterIdolCardId,omitempty"`
	SupportCardId        string                 `protobuf:"bytes,12,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	MeishiBaseAssetId    string                 `protobuf:"bytes,13,opt,name=meishiBaseAssetId,proto3" json:"meishiBaseAssetId,omitempty"`
	MemoryAssetId        string                 `protobuf:"bytes,14,opt,name=memoryAssetId,proto3" json:"memoryAssetId,omitempty"`
	ImagePath            string                 `protobuf:"bytes,15,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	MoviePath            string                 `protobuf:"bytes,16,opt,name=moviePath,proto3" json:"moviePath,omitempty"`
	UserMemoryId         string                 `protobuf:"bytes,17,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	UserPhotoId          string                 `protobuf:"bytes,18,opt,name=userPhotoId,proto3" json:"userPhotoId,omitempty"`
	UserMovieId          string                 `protobuf:"bytes,19,opt,name=userMovieId,proto3" json:"userMovieId,omitempty"`
	MeishiBaseColorId    string                 `protobuf:"bytes,20,opt,name=meishiBaseColorId,proto3" json:"meishiBaseColorId,omitempty"`
	BeforeIdolCardSkinId string                 `protobuf:"bytes,21,opt,name=beforeIdolCardSkinId,proto3" json:"beforeIdolCardSkinId,omitempty"`
	AfterIdolCardSkinId  string                 `protobuf:"bytes,22,opt,name=afterIdolCardSkinId,proto3" json:"afterIdolCardSkinId,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MeishiBase) Reset() {
	*x = MeishiBase{}
	mi := &file_pcommon_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeishiBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiBase) ProtoMessage() {}

func (x *MeishiBase) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiBase.ProtoReflect.Descriptor instead.
func (*MeishiBase) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{35}
}

func (x *MeishiBase) GetLayoutNumber() int32 {
	if x != nil {
		return x.LayoutNumber
	}
	return 0
}

func (x *MeishiBase) GetVertical() bool {
	if x != nil {
		return x.Vertical
	}
	return false
}

func (x *MeishiBase) GetBeforeIdolCardId() string {
	if x != nil {
		return x.BeforeIdolCardId
	}
	return ""
}

func (x *MeishiBase) GetAfterIdolCardId() string {
	if x != nil {
		return x.AfterIdolCardId
	}
	return ""
}

func (x *MeishiBase) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *MeishiBase) GetMeishiBaseAssetId() string {
	if x != nil {
		return x.MeishiBaseAssetId
	}
	return ""
}

func (x *MeishiBase) GetMemoryAssetId() string {
	if x != nil {
		return x.MemoryAssetId
	}
	return ""
}

func (x *MeishiBase) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *MeishiBase) GetMoviePath() string {
	if x != nil {
		return x.MoviePath
	}
	return ""
}

func (x *MeishiBase) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *MeishiBase) GetUserPhotoId() string {
	if x != nil {
		return x.UserPhotoId
	}
	return ""
}

func (x *MeishiBase) GetUserMovieId() string {
	if x != nil {
		return x.UserMovieId
	}
	return ""
}

func (x *MeishiBase) GetMeishiBaseColorId() string {
	if x != nil {
		return x.MeishiBaseColorId
	}
	return ""
}

func (x *MeishiBase) GetBeforeIdolCardSkinId() string {
	if x != nil {
		return x.BeforeIdolCardSkinId
	}
	return ""
}

func (x *MeishiBase) GetAfterIdolCardSkinId() string {
	if x != nil {
		return x.AfterIdolCardSkinId
	}
	return ""
}

type MeishiObject struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Type                      penum.MeishiObjectType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.MeishiObjectType" json:"type,omitempty"`
	UserName                  string                 `protobuf:"bytes,10,opt,name=userName,proto3" json:"userName,omitempty"`
	Vertical                  bool                   `protobuf:"varint,11,opt,name=vertical,proto3" json:"vertical,omitempty"`
	DisplayPublicUserId       bool                   `protobuf:"varint,20,opt,name=displayPublicUserId,proto3" json:"displayPublicUserId,omitempty"`
	PublicUserId              string                 `protobuf:"bytes,21,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	DisplayPvpRateGrade       bool                   `protobuf:"varint,22,opt,name=displayPvpRateGrade,proto3" json:"displayPvpRateGrade,omitempty"`
	Grade                     penum.PvpRateGrade     `protobuf:"varint,23,opt,name=grade,proto3,enum=penum.PvpRateGrade" json:"grade,omitempty"`
	DisplayProducerLevel      bool                   `protobuf:"varint,24,opt,name=displayProducerLevel,proto3" json:"displayProducerLevel,omitempty"`
	ProducerLevel             int32                  `protobuf:"varint,25,opt,name=producerLevel,proto3" json:"producerLevel,omitempty"`
	DisplayFanCount           bool                   `protobuf:"varint,26,opt,name=displayFanCount,proto3" json:"displayFanCount,omitempty"`
	FanCount                  int64                  `protobuf:"varint,27,opt,name=fanCount,proto3" json:"fanCount,omitempty"`
	DisplayComment            bool                   `protobuf:"varint,28,opt,name=displayComment,proto3" json:"displayComment,omitempty"`
	Comment                   string                 `protobuf:"bytes,29,opt,name=comment,proto3" json:"comment,omitempty"`
	AchievementId             string                 `protobuf:"bytes,40,opt,name=achievementId,proto3" json:"achievementId,omitempty"`
	Achievement               *Achievement           `protobuf:"bytes,41,opt,name=achievement,proto3" json:"achievement,omitempty"`
	MeishiIllustrationAssetId string                 `protobuf:"bytes,50,opt,name=meishiIllustrationAssetId,proto3" json:"meishiIllustrationAssetId,omitempty"`
	IdolCardSkinId            string                 `protobuf:"bytes,60,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
	SupportCardId             string                 `protobuf:"bytes,61,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	ProduceCardId             string                 `protobuf:"bytes,62,opt,name=produceCardId,proto3" json:"produceCardId,omitempty"`
	ProduceItemId             string                 `protobuf:"bytes,63,opt,name=produceItemId,proto3" json:"produceItemId,omitempty"`
	ProduceDrinkId            string                 `protobuf:"bytes,64,opt,name=produceDrinkId,proto3" json:"produceDrinkId,omitempty"`
	ImagePath                 string                 `protobuf:"bytes,65,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	MoviePath                 string                 `protobuf:"bytes,66,opt,name=moviePath,proto3" json:"moviePath,omitempty"`
	UserPhotoId               string                 `protobuf:"bytes,67,opt,name=userPhotoId,proto3" json:"userPhotoId,omitempty"`
	UserMemoryId              string                 `protobuf:"bytes,68,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	UserMovieId               string                 `protobuf:"bytes,69,opt,name=userMovieId,proto3" json:"userMovieId,omitempty"`
	MeishiBaseAssetId         string                 `protobuf:"bytes,70,opt,name=meishiBaseAssetId,proto3" json:"meishiBaseAssetId,omitempty"`
	MemoryAssetId             string                 `protobuf:"bytes,71,opt,name=memoryAssetId,proto3" json:"memoryAssetId,omitempty"`
	MeishiTextColorId         string                 `protobuf:"bytes,100,opt,name=meishiTextColorId,proto3" json:"meishiTextColorId,omitempty"`
	PositionX                 int32                  `protobuf:"varint,101,opt,name=positionX,proto3" json:"positionX,omitempty"`
	PositionY                 int32                  `protobuf:"varint,102,opt,name=positionY,proto3" json:"positionY,omitempty"`
	Size                      int32                  `protobuf:"varint,103,opt,name=size,proto3" json:"size,omitempty"`
	Lock                      bool                   `protobuf:"varint,104,opt,name=lock,proto3" json:"lock,omitempty"`
	Background                bool                   `protobuf:"varint,105,opt,name=background,proto3" json:"background,omitempty"`
	Layer                     int32                  `protobuf:"varint,106,opt,name=layer,proto3" json:"layer,omitempty"`
	Metadata                  string                 `protobuf:"bytes,999,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *MeishiObject) Reset() {
	*x = MeishiObject{}
	mi := &file_pcommon_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeishiObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiObject) ProtoMessage() {}

func (x *MeishiObject) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiObject.ProtoReflect.Descriptor instead.
func (*MeishiObject) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{36}
}

func (x *MeishiObject) GetType() penum.MeishiObjectType {
	if x != nil {
		return x.Type
	}
	return penum.MeishiObjectType(0)
}

func (x *MeishiObject) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MeishiObject) GetVertical() bool {
	if x != nil {
		return x.Vertical
	}
	return false
}

func (x *MeishiObject) GetDisplayPublicUserId() bool {
	if x != nil {
		return x.DisplayPublicUserId
	}
	return false
}

func (x *MeishiObject) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *MeishiObject) GetDisplayPvpRateGrade() bool {
	if x != nil {
		return x.DisplayPvpRateGrade
	}
	return false
}

func (x *MeishiObject) GetGrade() penum.PvpRateGrade {
	if x != nil {
		return x.Grade
	}
	return penum.PvpRateGrade(0)
}

func (x *MeishiObject) GetDisplayProducerLevel() bool {
	if x != nil {
		return x.DisplayProducerLevel
	}
	return false
}

func (x *MeishiObject) GetProducerLevel() int32 {
	if x != nil {
		return x.ProducerLevel
	}
	return 0
}

func (x *MeishiObject) GetDisplayFanCount() bool {
	if x != nil {
		return x.DisplayFanCount
	}
	return false
}

func (x *MeishiObject) GetFanCount() int64 {
	if x != nil {
		return x.FanCount
	}
	return 0
}

func (x *MeishiObject) GetDisplayComment() bool {
	if x != nil {
		return x.DisplayComment
	}
	return false
}

func (x *MeishiObject) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MeishiObject) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

func (x *MeishiObject) GetAchievement() *Achievement {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *MeishiObject) GetMeishiIllustrationAssetId() string {
	if x != nil {
		return x.MeishiIllustrationAssetId
	}
	return ""
}

func (x *MeishiObject) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

func (x *MeishiObject) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *MeishiObject) GetProduceCardId() string {
	if x != nil {
		return x.ProduceCardId
	}
	return ""
}

func (x *MeishiObject) GetProduceItemId() string {
	if x != nil {
		return x.ProduceItemId
	}
	return ""
}

func (x *MeishiObject) GetProduceDrinkId() string {
	if x != nil {
		return x.ProduceDrinkId
	}
	return ""
}

func (x *MeishiObject) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *MeishiObject) GetMoviePath() string {
	if x != nil {
		return x.MoviePath
	}
	return ""
}

func (x *MeishiObject) GetUserPhotoId() string {
	if x != nil {
		return x.UserPhotoId
	}
	return ""
}

func (x *MeishiObject) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *MeishiObject) GetUserMovieId() string {
	if x != nil {
		return x.UserMovieId
	}
	return ""
}

func (x *MeishiObject) GetMeishiBaseAssetId() string {
	if x != nil {
		return x.MeishiBaseAssetId
	}
	return ""
}

func (x *MeishiObject) GetMemoryAssetId() string {
	if x != nil {
		return x.MemoryAssetId
	}
	return ""
}

func (x *MeishiObject) GetMeishiTextColorId() string {
	if x != nil {
		return x.MeishiTextColorId
	}
	return ""
}

func (x *MeishiObject) GetPositionX() int32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *MeishiObject) GetPositionY() int32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *MeishiObject) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MeishiObject) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

func (x *MeishiObject) GetBackground() bool {
	if x != nil {
		return x.Background
	}
	return false
}

func (x *MeishiObject) GetLayer() int32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *MeishiObject) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type Memory struct {
	state                    protoimpl.MessageState                  `protogen:"open.v1"`
	UserMemoryId             string                                  `protobuf:"bytes,1,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	AssetId                  string                                  `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
	ImagePath                string                                  `protobuf:"bytes,3,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	Grade                    penum.ResultGrade                       `protobuf:"varint,4,opt,name=grade,proto3,enum=penum.ResultGrade" json:"grade,omitempty"`
	Power                    int32                                   `protobuf:"varint,5,opt,name=power,proto3" json:"power,omitempty"`
	CharacterId              string                                  `protobuf:"bytes,6,opt,name=characterId,proto3" json:"characterId,omitempty"`
	IdolCardId               string                                  `protobuf:"bytes,7,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	IdolCardSkinId           string                                  `protobuf:"bytes,8,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
	PlanType                 penum.ProducePlanType                   `protobuf:"varint,9,opt,name=planType,proto3,enum=penum.ProducePlanType" json:"planType,omitempty"`
	IdolCardLevelLimitRank   penum.IdolCardLevelLimitRank            `protobuf:"varint,10,opt,name=idolCardLevelLimitRank,proto3,enum=penum.IdolCardLevelLimitRank" json:"idolCardLevelLimitRank,omitempty"`
	IdolCardPotentialRank    penum.IdolCardPotentialRank             `protobuf:"varint,11,opt,name=idolCardPotentialRank,proto3,enum=penum.IdolCardPotentialRank" json:"idolCardPotentialRank,omitempty"`
	NoProduceHistory         bool                                    `protobuf:"varint,12,opt,name=noProduceHistory,proto3" json:"noProduceHistory,omitempty"`
	IsHighScoreRush          bool                                    `protobuf:"varint,14,opt,name=isHighScoreRush,proto3" json:"isHighScoreRush,omitempty"`
	ProduceCard              *ProduceCard                            `protobuf:"bytes,20,opt,name=produceCard,proto3" json:"produceCard,omitempty"`
	ProduceCardPhaseType     penum.ProduceMemoryProduceCardPhaseType `protobuf:"varint,21,opt,name=produceCardPhaseType,proto3,enum=penum.ProduceMemoryProduceCardPhaseType" json:"produceCardPhaseType,omitempty"`
	Abilities                []*MemoryAbility                        `protobuf:"bytes,22,rep,name=abilities,proto3" json:"abilities,omitempty"`
	Vocal                    int32                                   `protobuf:"varint,30,opt,name=vocal,proto3" json:"vocal,omitempty"`
	Dance                    int32                                   `protobuf:"varint,31,opt,name=dance,proto3" json:"dance,omitempty"`
	Visual                   int32                                   `protobuf:"varint,32,opt,name=visual,proto3" json:"visual,omitempty"`
	Stamina                  int32                                   `protobuf:"varint,33,opt,name=stamina,proto3" json:"stamina,omitempty"`
	ExamBattleProduceCards   []*ProduceCard                          `protobuf:"bytes,34,rep,name=examBattleProduceCards,proto3" json:"examBattleProduceCards,omitempty"`
	ExamBattleProduceItemIds []string                                `protobuf:"bytes,35,rep,name=examBattleProduceItemIds,proto3" json:"examBattleProduceItemIds,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Memory) Reset() {
	*x = Memory{}
	mi := &file_pcommon_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{37}
}

func (x *Memory) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *Memory) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Memory) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *Memory) GetGrade() penum.ResultGrade {
	if x != nil {
		return x.Grade
	}
	return penum.ResultGrade(0)
}

func (x *Memory) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *Memory) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *Memory) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *Memory) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

func (x *Memory) GetPlanType() penum.ProducePlanType {
	if x != nil {
		return x.PlanType
	}
	return penum.ProducePlanType(0)
}

func (x *Memory) GetIdolCardLevelLimitRank() penum.IdolCardLevelLimitRank {
	if x != nil {
		return x.IdolCardLevelLimitRank
	}
	return penum.IdolCardLevelLimitRank(0)
}

func (x *Memory) GetIdolCardPotentialRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.IdolCardPotentialRank
	}
	return penum.IdolCardPotentialRank(0)
}

func (x *Memory) GetNoProduceHistory() bool {
	if x != nil {
		return x.NoProduceHistory
	}
	return false
}

func (x *Memory) GetIsHighScoreRush() bool {
	if x != nil {
		return x.IsHighScoreRush
	}
	return false
}

func (x *Memory) GetProduceCard() *ProduceCard {
	if x != nil {
		return x.ProduceCard
	}
	return nil
}

func (x *Memory) GetProduceCardPhaseType() penum.ProduceMemoryProduceCardPhaseType {
	if x != nil {
		return x.ProduceCardPhaseType
	}
	return penum.ProduceMemoryProduceCardPhaseType(0)
}

func (x *Memory) GetAbilities() []*MemoryAbility {
	if x != nil {
		return x.Abilities
	}
	return nil
}

func (x *Memory) GetVocal() int32 {
	if x != nil {
		return x.Vocal
	}
	return 0
}

func (x *Memory) GetDance() int32 {
	if x != nil {
		return x.Dance
	}
	return 0
}

func (x *Memory) GetVisual() int32 {
	if x != nil {
		return x.Visual
	}
	return 0
}

func (x *Memory) GetStamina() int32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *Memory) GetExamBattleProduceCards() []*ProduceCard {
	if x != nil {
		return x.ExamBattleProduceCards
	}
	return nil
}

func (x *Memory) GetExamBattleProduceItemIds() []string {
	if x != nil {
		return x.ExamBattleProduceItemIds
	}
	return nil
}

type MemoryAbility struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Level         int32                  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryAbility) Reset() {
	*x = MemoryAbility{}
	mi := &file_pcommon_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryAbility) ProtoMessage() {}

func (x *MemoryAbility) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryAbility.ProtoReflect.Descriptor instead.
func (*MemoryAbility) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{38}
}

func (x *MemoryAbility) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MemoryAbility) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ProduceCampaign struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	Type              penum.ProduceCampaignType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.ProduceCampaignType" json:"type,omitempty"`
	Name              string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AssetId           string                    `protobuf:"bytes,4,opt,name=assetId,proto3" json:"assetId,omitempty"`
	ProduceGroupId    string                    `protobuf:"bytes,5,opt,name=produceGroupId,proto3" json:"produceGroupId,omitempty"`
	ProduceId         string                    `protobuf:"bytes,6,opt,name=produceId,proto3" json:"produceId,omitempty"`
	DailyCount        int32                     `protobuf:"varint,7,opt,name=dailyCount,proto3" json:"dailyCount,omitempty"`
	TermCount         int32                     `protobuf:"varint,8,opt,name=termCount,proto3" json:"termCount,omitempty"`
	RemainingCount    int32                     `protobuf:"varint,9,opt,name=remainingCount,proto3" json:"remainingCount,omitempty"`
	IsHalf            bool                      `protobuf:"varint,20,opt,name=isHalf,proto3" json:"isHalf,omitempty"`
	MemoryRentalCount int32                     `protobuf:"varint,30,opt,name=memoryRentalCount,proto3" json:"memoryRentalCount,omitempty"`
	AppealRewards     []*Reward                 `protobuf:"bytes,40,rep,name=appealRewards,proto3" json:"appealRewards,omitempty"`
	MemoryRerollCount int32                     `protobuf:"varint,60,opt,name=memoryRerollCount,proto3" json:"memoryRerollCount,omitempty"`
	StartTime         int64                     `protobuf:"varint,97,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime           int64                     `protobuf:"varint,98,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Order             int32                     `protobuf:"varint,99,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProduceCampaign) Reset() {
	*x = ProduceCampaign{}
	mi := &file_pcommon_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceCampaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceCampaign) ProtoMessage() {}

func (x *ProduceCampaign) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceCampaign.ProtoReflect.Descriptor instead.
func (*ProduceCampaign) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{39}
}

func (x *ProduceCampaign) GetType() penum.ProduceCampaignType {
	if x != nil {
		return x.Type
	}
	return penum.ProduceCampaignType(0)
}

func (x *ProduceCampaign) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProduceCampaign) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProduceCampaign) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ProduceCampaign) GetProduceGroupId() string {
	if x != nil {
		return x.ProduceGroupId
	}
	return ""
}

func (x *ProduceCampaign) GetProduceId() string {
	if x != nil {
		return x.ProduceId
	}
	return ""
}

func (x *ProduceCampaign) GetDailyCount() int32 {
	if x != nil {
		return x.DailyCount
	}
	return 0
}

func (x *ProduceCampaign) GetTermCount() int32 {
	if x != nil {
		return x.TermCount
	}
	return 0
}

func (x *ProduceCampaign) GetRemainingCount() int32 {
	if x != nil {
		return x.RemainingCount
	}
	return 0
}

func (x *ProduceCampaign) GetIsHalf() bool {
	if x != nil {
		return x.IsHalf
	}
	return false
}

func (x *ProduceCampaign) GetMemoryRentalCount() int32 {
	if x != nil {
		return x.MemoryRentalCount
	}
	return 0
}

func (x *ProduceCampaign) GetAppealRewards() []*Reward {
	if x != nil {
		return x.AppealRewards
	}
	return nil
}

func (x *ProduceCampaign) GetMemoryRerollCount() int32 {
	if x != nil {
		return x.MemoryRerollCount
	}
	return 0
}

func (x *ProduceCampaign) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProduceCampaign) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProduceCampaign) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProduceCard struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpgradeCount  int32                   `protobuf:"varint,2,opt,name=upgradeCount,proto3" json:"upgradeCount,omitempty"`
	Customizes    []*ProduceCardCustomize `protobuf:"bytes,3,rep,name=customizes,proto3" json:"customizes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceCard) Reset() {
	*x = ProduceCard{}
	mi := &file_pcommon_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceCard) ProtoMessage() {}

func (x *ProduceCard) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceCard.ProtoReflect.Descriptor instead.
func (*ProduceCard) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{40}
}

func (x *ProduceCard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProduceCard) GetUpgradeCount() int32 {
	if x != nil {
		return x.UpgradeCount
	}
	return 0
}

func (x *ProduceCard) GetCustomizes() []*ProduceCardCustomize {
	if x != nil {
		return x.Customizes
	}
	return nil
}

type ProduceCardCustomize struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomizeCount int32                  `protobuf:"varint,2,opt,name=customizeCount,proto3" json:"customizeCount,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProduceCardCustomize) Reset() {
	*x = ProduceCardCustomize{}
	mi := &file_pcommon_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceCardCustomize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceCardCustomize) ProtoMessage() {}

func (x *ProduceCardCustomize) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceCardCustomize.ProtoReflect.Descriptor instead.
func (*ProduceCardCustomize) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{41}
}

func (x *ProduceCardCustomize) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProduceCardCustomize) GetCustomizeCount() int32 {
	if x != nil {
		return x.CustomizeCount
	}
	return 0
}

type ProduceConsumptionResult struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	ResourceType   penum.ProduceResourceType `protobuf:"varint,1,opt,name=resourceType,proto3,enum=penum.ProduceResourceType" json:"resourceType,omitempty"`
	ResourceId     string                    `protobuf:"bytes,2,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Quantity       int32                     `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	BeforeQuantity int32                     `protobuf:"varint,4,opt,name=beforeQuantity,proto3" json:"beforeQuantity,omitempty"`
	AfterQuantity  int32                     `protobuf:"varint,5,opt,name=afterQuantity,proto3" json:"afterQuantity,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProduceConsumptionResult) Reset() {
	*x = ProduceConsumptionResult{}
	mi := &file_pcommon_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceConsumptionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceConsumptionResult) ProtoMessage() {}

func (x *ProduceConsumptionResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceConsumptionResult.ProtoReflect.Descriptor instead.
func (*ProduceConsumptionResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{42}
}

func (x *ProduceConsumptionResult) GetResourceType() penum.ProduceResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ProduceResourceType(0)
}

func (x *ProduceConsumptionResult) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ProduceConsumptionResult) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProduceConsumptionResult) GetBeforeQuantity() int32 {
	if x != nil {
		return x.BeforeQuantity
	}
	return 0
}

func (x *ProduceConsumptionResult) GetAfterQuantity() int32 {
	if x != nil {
		return x.AfterQuantity
	}
	return 0
}

type ProduceDescriptionSegment struct {
	state                            protoimpl.MessageState            `protogen:"open.v1"`
	ProduceDescriptionType           penum.ProduceDescriptionType      `protobuf:"varint,1,opt,name=produceDescriptionType,proto3,enum=penum.ProduceDescriptionType" json:"produceDescriptionType,omitempty"`
	ExamDescriptionType              penum.ExamDescriptionType         `protobuf:"varint,2,opt,name=examDescriptionType,proto3,enum=penum.ExamDescriptionType" json:"examDescriptionType,omitempty"`
	ExamEffectType                   penum.ProduceExamEffectType       `protobuf:"varint,3,opt,name=examEffectType,proto3,enum=penum.ProduceExamEffectType" json:"examEffectType,omitempty"`
	ProduceCardGrowEffectType        penum.ProduceCardGrowEffectType   `protobuf:"varint,4,opt,name=produceCardGrowEffectType,proto3,enum=penum.ProduceCardGrowEffectType" json:"produceCardGrowEffectType,omitempty"`
	ProduceCardCategory              penum.ProduceCardCategory         `protobuf:"varint,5,opt,name=produceCardCategory,proto3,enum=penum.ProduceCardCategory" json:"produceCardCategory,omitempty"`
	ProduceCardMovePositionType      penum.ProduceCardMovePositionType `protobuf:"varint,6,opt,name=produceCardMovePositionType,proto3,enum=penum.ProduceCardMovePositionType" json:"produceCardMovePositionType,omitempty"`
	ProduceStepType                  penum.ProduceStepType             `protobuf:"varint,7,opt,name=produceStepType,proto3,enum=penum.ProduceStepType" json:"produceStepType,omitempty"`
	Text                             string                            `protobuf:"bytes,100,opt,name=text,proto3" json:"text,omitempty"`
	TargetId                         string                            `protobuf:"bytes,101,opt,name=targetId,proto3" json:"targetId,omitempty"`
	TargetLevel                      int32                             `protobuf:"varint,102,opt,name=targetLevel,proto3" json:"targetLevel,omitempty"`
	EffectValue1                     int32                             `protobuf:"varint,103,opt,name=effectValue1,proto3" json:"effectValue1,omitempty"`
	EffectValue2                     int32                             `protobuf:"varint,104,opt,name=effectValue2,proto3" json:"effectValue2,omitempty"`
	EffectCount                      int32                             `protobuf:"varint,105,opt,name=effectCount,proto3" json:"effectCount,omitempty"`
	Turn                             int32                             `protobuf:"varint,106,opt,name=turn,proto3" json:"turn,omitempty"`
	CostValue                        int32                             `protobuf:"varint,107,opt,name=costValue,proto3" json:"costValue,omitempty"`
	ProduceDescriptionSwapId         string                            `protobuf:"bytes,200,opt,name=produceDescriptionSwapId,proto3" json:"produceDescriptionSwapId,omitempty"`
	OriginProduceExamTriggerId       string                            `protobuf:"bytes,201,opt,name=originProduceExamTriggerId,proto3" json:"originProduceExamTriggerId,omitempty"`
	OriginProduceExamEffectId        string                            `protobuf:"bytes,202,opt,name=originProduceExamEffectId,proto3" json:"originProduceExamEffectId,omitempty"`
	OriginProduceCardStatusEnchantId string                            `protobuf:"bytes,203,opt,name=originProduceCardStatusEnchantId,proto3" json:"originProduceCardStatusEnchantId,omitempty"`
	IsCost                           bool                              `protobuf:"varint,210,opt,name=isCost,proto3" json:"isCost,omitempty"`
	IsOnlyOutGame                    bool                              `protobuf:"varint,1000,opt,name=isOnlyOutGame,proto3" json:"isOnlyOutGame,omitempty"`
	ChangeColor                      bool                              `protobuf:"varint,1001,opt,name=changeColor,proto3" json:"changeColor,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ProduceDescriptionSegment) Reset() {
	*x = ProduceDescriptionSegment{}
	mi := &file_pcommon_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceDescriptionSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceDescriptionSegment) ProtoMessage() {}

func (x *ProduceDescriptionSegment) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceDescriptionSegment.ProtoReflect.Descriptor instead.
func (*ProduceDescriptionSegment) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{43}
}

func (x *ProduceDescriptionSegment) GetProduceDescriptionType() penum.ProduceDescriptionType {
	if x != nil {
		return x.ProduceDescriptionType
	}
	return penum.ProduceDescriptionType(0)
}

func (x *ProduceDescriptionSegment) GetExamDescriptionType() penum.ExamDescriptionType {
	if x != nil {
		return x.ExamDescriptionType
	}
	return penum.ExamDescriptionType(0)
}

func (x *ProduceDescriptionSegment) GetExamEffectType() penum.ProduceExamEffectType {
	if x != nil {
		return x.ExamEffectType
	}
	return penum.ProduceExamEffectType(0)
}

func (x *ProduceDescriptionSegment) GetProduceCardGrowEffectType() penum.ProduceCardGrowEffectType {
	if x != nil {
		return x.ProduceCardGrowEffectType
	}
	return penum.ProduceCardGrowEffectType(0)
}

func (x *ProduceDescriptionSegment) GetProduceCardCategory() penum.ProduceCardCategory {
	if x != nil {
		return x.ProduceCardCategory
	}
	return penum.ProduceCardCategory(0)
}

func (x *ProduceDescriptionSegment) GetProduceCardMovePositionType() penum.ProduceCardMovePositionType {
	if x != nil {
		return x.ProduceCardMovePositionType
	}
	return penum.ProduceCardMovePositionType(0)
}

func (x *ProduceDescriptionSegment) GetProduceStepType() penum.ProduceStepType {
	if x != nil {
		return x.ProduceStepType
	}
	return penum.ProduceStepType(0)
}

func (x *ProduceDescriptionSegment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ProduceDescriptionSegment) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *ProduceDescriptionSegment) GetTargetLevel() int32 {
	if x != nil {
		return x.TargetLevel
	}
	return 0
}

func (x *ProduceDescriptionSegment) GetEffectValue1() int32 {
	if x != nil {
		return x.EffectValue1
	}
	return 0
}

func (x *ProduceDescriptionSegment) GetEffectValue2() int32 {
	if x != nil {
		return x.EffectValue2
	}
	return 0
}

func (x *ProduceDescriptionSegment) GetEffectCount() int32 {
	if x != nil {
		return x.EffectCount
	}
	return 0
}

func (x *ProduceDescriptionSegment) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *ProduceDescriptionSegment) GetCostValue() int32 {
	if x != nil {
		return x.CostValue
	}
	return 0
}

func (x *ProduceDescriptionSegment) GetProduceDescriptionSwapId() string {
	if x != nil {
		return x.ProduceDescriptionSwapId
	}
	return ""
}

func (x *ProduceDescriptionSegment) GetOriginProduceExamTriggerId() string {
	if x != nil {
		return x.OriginProduceExamTriggerId
	}
	return ""
}

func (x *ProduceDescriptionSegment) GetOriginProduceExamEffectId() string {
	if x != nil {
		return x.OriginProduceExamEffectId
	}
	return ""
}

func (x *ProduceDescriptionSegment) GetOriginProduceCardStatusEnchantId() string {
	if x != nil {
		return x.OriginProduceCardStatusEnchantId
	}
	return ""
}

func (x *ProduceDescriptionSegment) GetIsCost() bool {
	if x != nil {
		return x.IsCost
	}
	return false
}

func (x *ProduceDescriptionSegment) GetIsOnlyOutGame() bool {
	if x != nil {
		return x.IsOnlyOutGame
	}
	return false
}

func (x *ProduceDescriptionSegment) GetChangeColor() bool {
	if x != nil {
		return x.ChangeColor
	}
	return false
}

type ProduceEffectResult struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	EffectType          penum.ProduceEffectType `protobuf:"varint,1,opt,name=effectType,proto3,enum=penum.ProduceEffectType" json:"effectType,omitempty"`
	ProduceEffectId     string                  `protobuf:"bytes,2,opt,name=produceEffectId,proto3" json:"produceEffectId,omitempty"`
	Origin              *ProduceTriggerOrigin   `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	EffectValue         int32                   `protobuf:"varint,4,opt,name=effectValue,proto3" json:"effectValue,omitempty"`
	EffectTargetId      string                  `protobuf:"bytes,5,opt,name=effectTargetId,proto3" json:"effectTargetId,omitempty"`
	BeforeMaxStamina    int32                   `protobuf:"varint,6,opt,name=beforeMaxStamina,proto3" json:"beforeMaxStamina,omitempty"`
	AfterMaxStamina     int32                   `protobuf:"varint,7,opt,name=afterMaxStamina,proto3" json:"afterMaxStamina,omitempty"`
	BeforeStamina       int32                   `protobuf:"varint,8,opt,name=beforeStamina,proto3" json:"beforeStamina,omitempty"`
	AfterStamina        int32                   `protobuf:"varint,9,opt,name=afterStamina,proto3" json:"afterStamina,omitempty"`
	BeforeProducePoint  int32                   `protobuf:"varint,10,opt,name=beforeProducePoint,proto3" json:"beforeProducePoint,omitempty"`
	AfterProducePoint   int32                   `protobuf:"varint,11,opt,name=afterProducePoint,proto3" json:"afterProducePoint,omitempty"`
	BeforeVoteCount     int32                   `protobuf:"varint,21,opt,name=beforeVoteCount,proto3" json:"beforeVoteCount,omitempty"`
	AfterVoteCount      int32                   `protobuf:"varint,22,opt,name=afterVoteCount,proto3" json:"afterVoteCount,omitempty"`
	BeforeVocal         int32                   `protobuf:"varint,12,opt,name=beforeVocal,proto3" json:"beforeVocal,omitempty"`
	AfterVocal          int32                   `protobuf:"varint,13,opt,name=afterVocal,proto3" json:"afterVocal,omitempty"`
	BeforeDance         int32                   `protobuf:"varint,14,opt,name=beforeDance,proto3" json:"beforeDance,omitempty"`
	AfterDance          int32                   `protobuf:"varint,15,opt,name=afterDance,proto3" json:"afterDance,omitempty"`
	BeforeVisual        int32                   `protobuf:"varint,16,opt,name=beforeVisual,proto3" json:"beforeVisual,omitempty"`
	AfterVisual         int32                   `protobuf:"varint,17,opt,name=afterVisual,proto3" json:"afterVisual,omitempty"`
	BeforeProduceCards  []*ProduceCard          `protobuf:"bytes,18,rep,name=beforeProduceCards,proto3" json:"beforeProduceCards,omitempty"`
	AfterProduceCards   []*ProduceCard          `protobuf:"bytes,19,rep,name=afterProduceCards,proto3" json:"afterProduceCards,omitempty"`
	ProvidedRewards     []*ProduceRewardResult  `protobuf:"bytes,20,rep,name=providedRewards,proto3" json:"providedRewards,omitempty"`
	BeforeHighScoreGold int32                   `protobuf:"varint,80,opt,name=beforeHighScoreGold,proto3" json:"beforeHighScoreGold,omitempty"`
	AfterHighScoreGold  int32                   `protobuf:"varint,81,opt,name=afterHighScoreGold,proto3" json:"afterHighScoreGold,omitempty"`
	EffectNumbers       []int32                 `protobuf:"varint,99,rep,packed,name=effectNumbers,proto3" json:"effectNumbers,omitempty"`
	Ineffective         bool                    `protobuf:"varint,100,opt,name=ineffective,proto3" json:"ineffective,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ProduceEffectResult) Reset() {
	*x = ProduceEffectResult{}
	mi := &file_pcommon_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceEffectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceEffectResult) ProtoMessage() {}

func (x *ProduceEffectResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceEffectResult.ProtoReflect.Descriptor instead.
func (*ProduceEffectResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{44}
}

func (x *ProduceEffectResult) GetEffectType() penum.ProduceEffectType {
	if x != nil {
		return x.EffectType
	}
	return penum.ProduceEffectType(0)
}

func (x *ProduceEffectResult) GetProduceEffectId() string {
	if x != nil {
		return x.ProduceEffectId
	}
	return ""
}

func (x *ProduceEffectResult) GetOrigin() *ProduceTriggerOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *ProduceEffectResult) GetEffectValue() int32 {
	if x != nil {
		return x.EffectValue
	}
	return 0
}

func (x *ProduceEffectResult) GetEffectTargetId() string {
	if x != nil {
		return x.EffectTargetId
	}
	return ""
}

func (x *ProduceEffectResult) GetBeforeMaxStamina() int32 {
	if x != nil {
		return x.BeforeMaxStamina
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterMaxStamina() int32 {
	if x != nil {
		return x.AfterMaxStamina
	}
	return 0
}

func (x *ProduceEffectResult) GetBeforeStamina() int32 {
	if x != nil {
		return x.BeforeStamina
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterStamina() int32 {
	if x != nil {
		return x.AfterStamina
	}
	return 0
}

func (x *ProduceEffectResult) GetBeforeProducePoint() int32 {
	if x != nil {
		return x.BeforeProducePoint
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterProducePoint() int32 {
	if x != nil {
		return x.AfterProducePoint
	}
	return 0
}

func (x *ProduceEffectResult) GetBeforeVoteCount() int32 {
	if x != nil {
		return x.BeforeVoteCount
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterVoteCount() int32 {
	if x != nil {
		return x.AfterVoteCount
	}
	return 0
}

func (x *ProduceEffectResult) GetBeforeVocal() int32 {
	if x != nil {
		return x.BeforeVocal
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterVocal() int32 {
	if x != nil {
		return x.AfterVocal
	}
	return 0
}

func (x *ProduceEffectResult) GetBeforeDance() int32 {
	if x != nil {
		return x.BeforeDance
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterDance() int32 {
	if x != nil {
		return x.AfterDance
	}
	return 0
}

func (x *ProduceEffectResult) GetBeforeVisual() int32 {
	if x != nil {
		return x.BeforeVisual
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterVisual() int32 {
	if x != nil {
		return x.AfterVisual
	}
	return 0
}

func (x *ProduceEffectResult) GetBeforeProduceCards() []*ProduceCard {
	if x != nil {
		return x.BeforeProduceCards
	}
	return nil
}

func (x *ProduceEffectResult) GetAfterProduceCards() []*ProduceCard {
	if x != nil {
		return x.AfterProduceCards
	}
	return nil
}

func (x *ProduceEffectResult) GetProvidedRewards() []*ProduceRewardResult {
	if x != nil {
		return x.ProvidedRewards
	}
	return nil
}

func (x *ProduceEffectResult) GetBeforeHighScoreGold() int32 {
	if x != nil {
		return x.BeforeHighScoreGold
	}
	return 0
}

func (x *ProduceEffectResult) GetAfterHighScoreGold() int32 {
	if x != nil {
		return x.AfterHighScoreGold
	}
	return 0
}

func (x *ProduceEffectResult) GetEffectNumbers() []int32 {
	if x != nil {
		return x.EffectNumbers
	}
	return nil
}

func (x *ProduceEffectResult) GetIneffective() bool {
	if x != nil {
		return x.Ineffective
	}
	return false
}

type ProduceExamEndResult struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	StepType               penum.ProduceStepType  `protobuf:"varint,1,opt,name=stepType,proto3,enum=penum.ProduceStepType" json:"stepType,omitempty"`
	ProduceDrinkIds        []string               `protobuf:"bytes,2,rep,name=produceDrinkIds,proto3" json:"produceDrinkIds,omitempty"`
	ProduceItems           []*ProduceItem         `protobuf:"bytes,3,rep,name=produceItems,proto3" json:"produceItems,omitempty"`
	ProducePoint           int32                  `protobuf:"varint,4,opt,name=producePoint,proto3" json:"producePoint,omitempty"`
	Stamina                int32                  `protobuf:"varint,5,opt,name=stamina,proto3" json:"stamina,omitempty"`
	MaxStamina             int32                  `protobuf:"varint,6,opt,name=maxStamina,proto3" json:"maxStamina,omitempty"`
	ResultTargetValue      int32                  `protobuf:"varint,7,opt,name=resultTargetValue,proto3" json:"resultTargetValue,omitempty"`
	SuccessThreshold       int32                  `protobuf:"varint,8,opt,name=successThreshold,proto3" json:"successThreshold,omitempty"`
	ResultTargetValueLimit int32                  `protobuf:"varint,9,opt,name=resultTargetValueLimit,proto3" json:"resultTargetValueLimit,omitempty"`
	ExamTriggerCounts      []*ExamTriggerCount    `protobuf:"bytes,10,rep,name=examTriggerCounts,proto3" json:"examTriggerCounts,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProduceExamEndResult) Reset() {
	*x = ProduceExamEndResult{}
	mi := &file_pcommon_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceExamEndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceExamEndResult) ProtoMessage() {}

func (x *ProduceExamEndResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceExamEndResult.ProtoReflect.Descriptor instead.
func (*ProduceExamEndResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{45}
}

func (x *ProduceExamEndResult) GetStepType() penum.ProduceStepType {
	if x != nil {
		return x.StepType
	}
	return penum.ProduceStepType(0)
}

func (x *ProduceExamEndResult) GetProduceDrinkIds() []string {
	if x != nil {
		return x.ProduceDrinkIds
	}
	return nil
}

func (x *ProduceExamEndResult) GetProduceItems() []*ProduceItem {
	if x != nil {
		return x.ProduceItems
	}
	return nil
}

func (x *ProduceExamEndResult) GetProducePoint() int32 {
	if x != nil {
		return x.ProducePoint
	}
	return 0
}

func (x *ProduceExamEndResult) GetStamina() int32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *ProduceExamEndResult) GetMaxStamina() int32 {
	if x != nil {
		return x.MaxStamina
	}
	return 0
}

func (x *ProduceExamEndResult) GetResultTargetValue() int32 {
	if x != nil {
		return x.ResultTargetValue
	}
	return 0
}

func (x *ProduceExamEndResult) GetSuccessThreshold() int32 {
	if x != nil {
		return x.SuccessThreshold
	}
	return 0
}

func (x *ProduceExamEndResult) GetResultTargetValueLimit() int32 {
	if x != nil {
		return x.ResultTargetValueLimit
	}
	return 0
}

func (x *ProduceExamEndResult) GetExamTriggerCounts() []*ExamTriggerCount {
	if x != nil {
		return x.ExamTriggerCounts
	}
	return nil
}

type ProduceHistory struct {
	state                  protoimpl.MessageState            `protogen:"open.v1"`
	ProduceId              string                            `protobuf:"bytes,1,opt,name=produceId,proto3" json:"produceId,omitempty"`
	Score                  int32                             `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Grade                  penum.ResultGrade                 `protobuf:"varint,3,opt,name=grade,proto3,enum=penum.ResultGrade" json:"grade,omitempty"`
	UserName               string                            `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	ProducerLevel          int32                             `protobuf:"varint,5,opt,name=producerLevel,proto3" json:"producerLevel,omitempty"`
	ClearedTime            int64                             `protobuf:"varint,6,opt,name=clearedTime,proto3" json:"clearedTime,omitempty"`
	IdolCardId             string                            `protobuf:"bytes,7,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	IdolCardSkinId         string                            `protobuf:"bytes,8,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
	LevelLimitRank         penum.IdolCardLevelLimitRank      `protobuf:"varint,9,opt,name=levelLimitRank,proto3,enum=penum.IdolCardLevelLimitRank" json:"levelLimitRank,omitempty"`
	PotentialRank          penum.IdolCardPotentialRank       `protobuf:"varint,10,opt,name=potentialRank,proto3,enum=penum.IdolCardPotentialRank" json:"potentialRank,omitempty"`
	TrueEndProduceTypes    []penum.ProduceType               `protobuf:"varint,11,rep,packed,name=trueEndProduceTypes,proto3,enum=penum.ProduceType" json:"trueEndProduceTypes,omitempty"`
	Auditions              []*ProduceHistory_Audition        `protobuf:"bytes,12,rep,name=auditions,proto3" json:"auditions,omitempty"`
	DeckSupportCards       []*ProduceHistory_DeckSupportCard `protobuf:"bytes,20,rep,name=deckSupportCards,proto3" json:"deckSupportCards,omitempty"`
	DeckMemories           []*ProduceHistory_DeckMemory      `protobuf:"bytes,21,rep,name=deckMemories,proto3" json:"deckMemories,omitempty"`
	ProduceCards           []*ProduceHistory_DeckProduceCard `protobuf:"bytes,22,rep,name=produceCards,proto3" json:"produceCards,omitempty"`
	ProduceItemIds         []string                          `protobuf:"bytes,23,rep,name=produceItemIds,proto3" json:"produceItemIds,omitempty"`
	Memory                 *Memory                           `protobuf:"bytes,24,opt,name=memory,proto3" json:"memory,omitempty"`
	Vocal                  int32                             `protobuf:"varint,30,opt,name=vocal,proto3" json:"vocal,omitempty"`
	Dance                  int32                             `protobuf:"varint,31,opt,name=dance,proto3" json:"dance,omitempty"`
	Visual                 int32                             `protobuf:"varint,32,opt,name=visual,proto3" json:"visual,omitempty"`
	VocalGrowthRatePermil  int32                             `protobuf:"varint,33,opt,name=vocalGrowthRatePermil,proto3" json:"vocalGrowthRatePermil,omitempty"`
	DanceGrowthRatePermil  int32                             `protobuf:"varint,34,opt,name=danceGrowthRatePermil,proto3" json:"danceGrowthRatePermil,omitempty"`
	VisualGrowthRatePermil int32                             `protobuf:"varint,35,opt,name=visualGrowthRatePermil,proto3" json:"visualGrowthRatePermil,omitempty"`
	MaxStamina             int32                             `protobuf:"varint,36,opt,name=maxStamina,proto3" json:"maxStamina,omitempty"`
	VoteCount              int32                             `protobuf:"varint,37,opt,name=voteCount,proto3" json:"voteCount,omitempty"`
	IsHighScoreRush        bool                              `protobuf:"varint,100,opt,name=isHighScoreRush,proto3" json:"isHighScoreRush,omitempty"`
	HighScoreGold          int32                             `protobuf:"varint,101,opt,name=highScoreGold,proto3" json:"highScoreGold,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProduceHistory) Reset() {
	*x = ProduceHistory{}
	mi := &file_pcommon_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHistory) ProtoMessage() {}

func (x *ProduceHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHistory.ProtoReflect.Descriptor instead.
func (*ProduceHistory) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{46}
}

func (x *ProduceHistory) GetProduceId() string {
	if x != nil {
		return x.ProduceId
	}
	return ""
}

func (x *ProduceHistory) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProduceHistory) GetGrade() penum.ResultGrade {
	if x != nil {
		return x.Grade
	}
	return penum.ResultGrade(0)
}

func (x *ProduceHistory) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ProduceHistory) GetProducerLevel() int32 {
	if x != nil {
		return x.ProducerLevel
	}
	return 0
}

func (x *ProduceHistory) GetClearedTime() int64 {
	if x != nil {
		return x.ClearedTime
	}
	return 0
}

func (x *ProduceHistory) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *ProduceHistory) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

func (x *ProduceHistory) GetLevelLimitRank() penum.IdolCardLevelLimitRank {
	if x != nil {
		return x.LevelLimitRank
	}
	return penum.IdolCardLevelLimitRank(0)
}

func (x *ProduceHistory) GetPotentialRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.PotentialRank
	}
	return penum.IdolCardPotentialRank(0)
}

func (x *ProduceHistory) GetTrueEndProduceTypes() []penum.ProduceType {
	if x != nil {
		return x.TrueEndProduceTypes
	}
	return nil
}

func (x *ProduceHistory) GetAuditions() []*ProduceHistory_Audition {
	if x != nil {
		return x.Auditions
	}
	return nil
}

func (x *ProduceHistory) GetDeckSupportCards() []*ProduceHistory_DeckSupportCard {
	if x != nil {
		return x.DeckSupportCards
	}
	return nil
}

func (x *ProduceHistory) GetDeckMemories() []*ProduceHistory_DeckMemory {
	if x != nil {
		return x.DeckMemories
	}
	return nil
}

func (x *ProduceHistory) GetProduceCards() []*ProduceHistory_DeckProduceCard {
	if x != nil {
		return x.ProduceCards
	}
	return nil
}

func (x *ProduceHistory) GetProduceItemIds() []string {
	if x != nil {
		return x.ProduceItemIds
	}
	return nil
}

func (x *ProduceHistory) GetMemory() *Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ProduceHistory) GetVocal() int32 {
	if x != nil {
		return x.Vocal
	}
	return 0
}

func (x *ProduceHistory) GetDance() int32 {
	if x != nil {
		return x.Dance
	}
	return 0
}

func (x *ProduceHistory) GetVisual() int32 {
	if x != nil {
		return x.Visual
	}
	return 0
}

func (x *ProduceHistory) GetVocalGrowthRatePermil() int32 {
	if x != nil {
		return x.VocalGrowthRatePermil
	}
	return 0
}

func (x *ProduceHistory) GetDanceGrowthRatePermil() int32 {
	if x != nil {
		return x.DanceGrowthRatePermil
	}
	return 0
}

func (x *ProduceHistory) GetVisualGrowthRatePermil() int32 {
	if x != nil {
		return x.VisualGrowthRatePermil
	}
	return 0
}

func (x *ProduceHistory) GetMaxStamina() int32 {
	if x != nil {
		return x.MaxStamina
	}
	return 0
}

func (x *ProduceHistory) GetVoteCount() int32 {
	if x != nil {
		return x.VoteCount
	}
	return 0
}

func (x *ProduceHistory) GetIsHighScoreRush() bool {
	if x != nil {
		return x.IsHighScoreRush
	}
	return false
}

func (x *ProduceHistory) GetHighScoreGold() int32 {
	if x != nil {
		return x.HighScoreGold
	}
	return 0
}

type ProduceItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProduceItemId string                 `protobuf:"bytes,1,opt,name=produceItemId,proto3" json:"produceItemId,omitempty"`
	FireCount     int32                  `protobuf:"varint,2,opt,name=fireCount,proto3" json:"fireCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceItem) Reset() {
	*x = ProduceItem{}
	mi := &file_pcommon_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceItem) ProtoMessage() {}

func (x *ProduceItem) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceItem.ProtoReflect.Descriptor instead.
func (*ProduceItem) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{47}
}

func (x *ProduceItem) GetProduceItemId() string {
	if x != nil {
		return x.ProduceItemId
	}
	return ""
}

func (x *ProduceItem) GetFireCount() int32 {
	if x != nil {
		return x.FireCount
	}
	return 0
}

type ProduceLessonGrowthResult struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	Vocal                             int32                  `protobuf:"varint,1,opt,name=vocal,proto3" json:"vocal,omitempty"`
	Dance                             int32                  `protobuf:"varint,2,opt,name=dance,proto3" json:"dance,omitempty"`
	Visual                            int32                  `protobuf:"varint,3,opt,name=visual,proto3" json:"visual,omitempty"`
	HardBonusVocal                    int32                  `protobuf:"varint,4,opt,name=hardBonusVocal,proto3" json:"hardBonusVocal,omitempty"`
	HardBonusDance                    int32                  `protobuf:"varint,5,opt,name=hardBonusDance,proto3" json:"hardBonusDance,omitempty"`
	HardBonusVisual                   int32                  `protobuf:"varint,6,opt,name=hardBonusVisual,proto3" json:"hardBonusVisual,omitempty"`
	GrowthRateBonusVocal              int32                  `protobuf:"varint,7,opt,name=growthRateBonusVocal,proto3" json:"growthRateBonusVocal,omitempty"`
	GrowthRateBonusDance              int32                  `protobuf:"varint,8,opt,name=growthRateBonusDance,proto3" json:"growthRateBonusDance,omitempty"`
	GrowthRateBonusVisual             int32                  `protobuf:"varint,9,opt,name=growthRateBonusVisual,proto3" json:"growthRateBonusVisual,omitempty"`
	AuditionParameterGrowthRateVocal  int32                  `protobuf:"varint,10,opt,name=auditionParameterGrowthRateVocal,proto3" json:"auditionParameterGrowthRateVocal,omitempty"`
	AuditionParameterGrowthRateDance  int32                  `protobuf:"varint,11,opt,name=auditionParameterGrowthRateDance,proto3" json:"auditionParameterGrowthRateDance,omitempty"`
	AuditionParameterGrowthRateVisual int32                  `protobuf:"varint,12,opt,name=auditionParameterGrowthRateVisual,proto3" json:"auditionParameterGrowthRateVisual,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ProduceLessonGrowthResult) Reset() {
	*x = ProduceLessonGrowthResult{}
	mi := &file_pcommon_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceLessonGrowthResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceLessonGrowthResult) ProtoMessage() {}

func (x *ProduceLessonGrowthResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceLessonGrowthResult.ProtoReflect.Descriptor instead.
func (*ProduceLessonGrowthResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{48}
}

func (x *ProduceLessonGrowthResult) GetVocal() int32 {
	if x != nil {
		return x.Vocal
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetDance() int32 {
	if x != nil {
		return x.Dance
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetVisual() int32 {
	if x != nil {
		return x.Visual
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetHardBonusVocal() int32 {
	if x != nil {
		return x.HardBonusVocal
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetHardBonusDance() int32 {
	if x != nil {
		return x.HardBonusDance
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetHardBonusVisual() int32 {
	if x != nil {
		return x.HardBonusVisual
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetGrowthRateBonusVocal() int32 {
	if x != nil {
		return x.GrowthRateBonusVocal
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetGrowthRateBonusDance() int32 {
	if x != nil {
		return x.GrowthRateBonusDance
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetGrowthRateBonusVisual() int32 {
	if x != nil {
		return x.GrowthRateBonusVisual
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetAuditionParameterGrowthRateVocal() int32 {
	if x != nil {
		return x.AuditionParameterGrowthRateVocal
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetAuditionParameterGrowthRateDance() int32 {
	if x != nil {
		return x.AuditionParameterGrowthRateDance
	}
	return 0
}

func (x *ProduceLessonGrowthResult) GetAuditionParameterGrowthRateVisual() int32 {
	if x != nil {
		return x.AuditionParameterGrowthRateVisual
	}
	return 0
}

type ProduceMemoryRewardResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProvidedRewards []*ProduceRewardResult `protobuf:"bytes,1,rep,name=providedRewards,proto3" json:"providedRewards,omitempty"`
	Origin          *ProduceTriggerOrigin  `protobuf:"bytes,100,opt,name=origin,proto3" json:"origin,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProduceMemoryRewardResult) Reset() {
	*x = ProduceMemoryRewardResult{}
	mi := &file_pcommon_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceMemoryRewardResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceMemoryRewardResult) ProtoMessage() {}

func (x *ProduceMemoryRewardResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceMemoryRewardResult.ProtoReflect.Descriptor instead.
func (*ProduceMemoryRewardResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{49}
}

func (x *ProduceMemoryRewardResult) GetProvidedRewards() []*ProduceRewardResult {
	if x != nil {
		return x.ProvidedRewards
	}
	return nil
}

func (x *ProduceMemoryRewardResult) GetOrigin() *ProduceTriggerOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type ProduceRewardResult struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	ResourceType  penum.ProduceResourceType `protobuf:"varint,1,opt,name=resourceType,proto3,enum=penum.ProduceResourceType" json:"resourceType,omitempty"`
	ResourceId    string                    `protobuf:"bytes,2,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	ResourceLevel int32                     `protobuf:"varint,3,opt,name=resourceLevel,proto3" json:"resourceLevel,omitempty"`
	Quantity      int32                     `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Customizes    []*ProduceCardCustomize   `protobuf:"bytes,5,rep,name=customizes,proto3" json:"customizes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceRewardResult) Reset() {
	*x = ProduceRewardResult{}
	mi := &file_pcommon_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceRewardResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRewardResult) ProtoMessage() {}

func (x *ProduceRewardResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRewardResult.ProtoReflect.Descriptor instead.
func (*ProduceRewardResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{50}
}

func (x *ProduceRewardResult) GetResourceType() penum.ProduceResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ProduceResourceType(0)
}

func (x *ProduceRewardResult) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ProduceRewardResult) GetResourceLevel() int32 {
	if x != nil {
		return x.ResourceLevel
	}
	return 0
}

func (x *ProduceRewardResult) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProduceRewardResult) GetCustomizes() []*ProduceCardCustomize {
	if x != nil {
		return x.Customizes
	}
	return nil
}

type ProduceTriggerOrigin struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	OriginType    penum.ProduceTriggerOriginType `protobuf:"varint,1,opt,name=originType,proto3,enum=penum.ProduceTriggerOriginType" json:"originType,omitempty"`
	OriginOwnerId string                         `protobuf:"bytes,2,opt,name=originOwnerId,proto3" json:"originOwnerId,omitempty"`
	OriginId      string                         `protobuf:"bytes,3,opt,name=originId,proto3" json:"originId,omitempty"`
	OriginLevel   int32                          `protobuf:"varint,4,opt,name=originLevel,proto3" json:"originLevel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceTriggerOrigin) Reset() {
	*x = ProduceTriggerOrigin{}
	mi := &file_pcommon_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceTriggerOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceTriggerOrigin) ProtoMessage() {}

func (x *ProduceTriggerOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceTriggerOrigin.ProtoReflect.Descriptor instead.
func (*ProduceTriggerOrigin) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{51}
}

func (x *ProduceTriggerOrigin) GetOriginType() penum.ProduceTriggerOriginType {
	if x != nil {
		return x.OriginType
	}
	return penum.ProduceTriggerOriginType(0)
}

func (x *ProduceTriggerOrigin) GetOriginOwnerId() string {
	if x != nil {
		return x.OriginOwnerId
	}
	return ""
}

func (x *ProduceTriggerOrigin) GetOriginId() string {
	if x != nil {
		return x.OriginId
	}
	return ""
}

func (x *ProduceTriggerOrigin) GetOriginLevel() int32 {
	if x != nil {
		return x.OriginLevel
	}
	return 0
}

type ProducerLevelUnlock struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Level         int32                        `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Targets       []*ProducerLevelUnlockTarget `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	Reward        *Reward                      `protobuf:"bytes,3,opt,name=reward,proto3" json:"reward,omitempty"`
	BonusRewards  []*Reward                    `protobuf:"bytes,4,rep,name=bonusRewards,proto3" json:"bonusRewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProducerLevelUnlock) Reset() {
	*x = ProducerLevelUnlock{}
	mi := &file_pcommon_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProducerLevelUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerLevelUnlock) ProtoMessage() {}

func (x *ProducerLevelUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerLevelUnlock.ProtoReflect.Descriptor instead.
func (*ProducerLevelUnlock) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{52}
}

func (x *ProducerLevelUnlock) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ProducerLevelUnlock) GetTargets() []*ProducerLevelUnlockTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ProducerLevelUnlock) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *ProducerLevelUnlock) GetBonusRewards() []*Reward {
	if x != nil {
		return x.BonusRewards
	}
	return nil
}

type ProducerLevelUnlockTarget struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Type          penum.ProducerLevelUnlockType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.ProducerLevelUnlockType" json:"type,omitempty"`
	Id            string                        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Quantity      int32                         `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProducerLevelUnlockTarget) Reset() {
	*x = ProducerLevelUnlockTarget{}
	mi := &file_pcommon_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProducerLevelUnlockTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerLevelUnlockTarget) ProtoMessage() {}

func (x *ProducerLevelUnlockTarget) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerLevelUnlockTarget.ProtoReflect.Descriptor instead.
func (*ProducerLevelUnlockTarget) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{53}
}

func (x *ProducerLevelUnlockTarget) GetType() penum.ProducerLevelUnlockType {
	if x != nil {
		return x.Type
	}
	return penum.ProducerLevelUnlockType(0)
}

func (x *ProducerLevelUnlockTarget) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProducerLevelUnlockTarget) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type PvpRateExamBattleResult struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	ExamBattleAutoRequest     *ExamBattleAutoRequest `protobuf:"bytes,1,opt,name=examBattleAutoRequest,proto3" json:"examBattleAutoRequest,omitempty"`
	SelfStageResultScoreList  []int32                `protobuf:"varint,2,rep,packed,name=selfStageResultScoreList,proto3" json:"selfStageResultScoreList,omitempty"`
	RivalStageResultScoreList []int32                `protobuf:"varint,3,rep,packed,name=rivalStageResultScoreList,proto3" json:"rivalStageResultScoreList,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *PvpRateExamBattleResult) Reset() {
	*x = PvpRateExamBattleResult{}
	mi := &file_pcommon_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PvpRateExamBattleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateExamBattleResult) ProtoMessage() {}

func (x *PvpRateExamBattleResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateExamBattleResult.ProtoReflect.Descriptor instead.
func (*PvpRateExamBattleResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{54}
}

func (x *PvpRateExamBattleResult) GetExamBattleAutoRequest() *ExamBattleAutoRequest {
	if x != nil {
		return x.ExamBattleAutoRequest
	}
	return nil
}

func (x *PvpRateExamBattleResult) GetSelfStageResultScoreList() []int32 {
	if x != nil {
		return x.SelfStageResultScoreList
	}
	return nil
}

func (x *PvpRateExamBattleResult) GetRivalStageResultScoreList() []int32 {
	if x != nil {
		return x.RivalStageResultScoreList
	}
	return nil
}

type PvpRateSetupUnitStageFormation struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Stage         penum.PvpRateStageType                 `protobuf:"varint,1,opt,name=stage,proto3,enum=penum.PvpRateStageType" json:"stage,omitempty"`
	Slots         []*PvpRateSetupUnitStageFormation_Slot `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PvpRateSetupUnitStageFormation) Reset() {
	*x = PvpRateSetupUnitStageFormation{}
	mi := &file_pcommon_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PvpRateSetupUnitStageFormation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateSetupUnitStageFormation) ProtoMessage() {}

func (x *PvpRateSetupUnitStageFormation) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateSetupUnitStageFormation.ProtoReflect.Descriptor instead.
func (*PvpRateSetupUnitStageFormation) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{55}
}

func (x *PvpRateSetupUnitStageFormation) GetStage() penum.PvpRateStageType {
	if x != nil {
		return x.Stage
	}
	return penum.PvpRateStageType(0)
}

func (x *PvpRateSetupUnitStageFormation) GetSlots() []*PvpRateSetupUnitStageFormation_Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type Reward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceType  penum.ResourceType     `protobuf:"varint,1,opt,name=resourceType,proto3,enum=penum.ResourceType" json:"resourceType,omitempty"`
	ResourceId    string                 `protobuf:"bytes,2,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reward) Reset() {
	*x = Reward{}
	mi := &file_pcommon_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{56}
}

func (x *Reward) GetResourceType() penum.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ResourceType(0)
}

func (x *Reward) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Reward) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type RewardResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResourceType   penum.ResourceType     `protobuf:"varint,1,opt,name=resourceType,proto3,enum=penum.ResourceType" json:"resourceType,omitempty"`
	ResourceId     string                 `protobuf:"bytes,2,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Quantity       int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	BeforeQuantity int64                  `protobuf:"varint,4,opt,name=beforeQuantity,proto3" json:"beforeQuantity,omitempty"`
	AfterQuantity  int64                  `protobuf:"varint,5,opt,name=afterQuantity,proto3" json:"afterQuantity,omitempty"`
	IsNew          bool                   `protobuf:"varint,6,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsTruncate     bool                   `protobuf:"varint,7,opt,name=isTruncate,proto3" json:"isTruncate,omitempty"`
	IsGift         bool                   `protobuf:"varint,8,opt,name=isGift,proto3" json:"isGift,omitempty"`
	IsCampaign     bool                   `protobuf:"varint,9,opt,name=isCampaign,proto3" json:"isCampaign,omitempty"`
	IsItemEffect   bool                   `protobuf:"varint,10,opt,name=isItemEffect,proto3" json:"isItemEffect,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RewardResult) Reset() {
	*x = RewardResult{}
	mi := &file_pcommon_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RewardResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardResult) ProtoMessage() {}

func (x *RewardResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardResult.ProtoReflect.Descriptor instead.
func (*RewardResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{57}
}

func (x *RewardResult) GetResourceType() penum.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ResourceType(0)
}

func (x *RewardResult) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *RewardResult) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *RewardResult) GetBeforeQuantity() int64 {
	if x != nil {
		return x.BeforeQuantity
	}
	return 0
}

func (x *RewardResult) GetAfterQuantity() int64 {
	if x != nil {
		return x.AfterQuantity
	}
	return 0
}

func (x *RewardResult) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *RewardResult) GetIsTruncate() bool {
	if x != nil {
		return x.IsTruncate
	}
	return false
}

func (x *RewardResult) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *RewardResult) GetIsCampaign() bool {
	if x != nil {
		return x.IsCampaign
	}
	return false
}

func (x *RewardResult) GetIsItemEffect() bool {
	if x != nil {
		return x.IsItemEffect
	}
	return false
}

type SimpleProfile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicUserId  string                 `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level         int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	LastLoginTime int64                  `protobuf:"varint,4,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	Comment       string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Meishi        *Meishi                `protobuf:"bytes,7,opt,name=meishi,proto3" json:"meishi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleProfile) Reset() {
	*x = SimpleProfile{}
	mi := &file_pcommon_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleProfile) ProtoMessage() {}

func (x *SimpleProfile) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleProfile.ProtoReflect.Descriptor instead.
func (*SimpleProfile) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{58}
}

func (x *SimpleProfile) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *SimpleProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SimpleProfile) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SimpleProfile) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *SimpleProfile) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SimpleProfile) GetMeishi() *Meishi {
	if x != nil {
		return x.Meishi
	}
	return nil
}

type StartupNotification struct {
	state                  protoimpl.MessageState              `protogen:"open.v1"`
	Id                     string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                   penum.StartupNotificationType       `protobuf:"varint,2,opt,name=type,proto3,enum=penum.StartupNotificationType" json:"type,omitempty"`
	EffectType             penum.StartupNotificationEffectType `protobuf:"varint,14,opt,name=effectType,proto3,enum=penum.StartupNotificationEffectType" json:"effectType,omitempty"`
	HorizontalMovieAssetId string                              `protobuf:"bytes,3,opt,name=horizontalMovieAssetId,proto3" json:"horizontalMovieAssetId,omitempty"`
	VerticalMovieAssetId   string                              `protobuf:"bytes,4,opt,name=verticalMovieAssetId,proto3" json:"verticalMovieAssetId,omitempty"`
	LinkTitle              string                              `protobuf:"bytes,5,opt,name=linkTitle,proto3" json:"linkTitle,omitempty"`
	LinkType               penum.LinkType                      `protobuf:"varint,6,opt,name=linkType,proto3,enum=penum.LinkType" json:"linkType,omitempty"`
	LinkId                 string                              `protobuf:"bytes,7,opt,name=linkId,proto3" json:"linkId,omitempty"`
	StoryId                string                              `protobuf:"bytes,8,opt,name=storyId,proto3" json:"storyId,omitempty"`
	ImageAssetId           string                              `protobuf:"bytes,9,opt,name=imageAssetId,proto3" json:"imageAssetId,omitempty"`
	NoticeId               string                              `protobuf:"bytes,10,opt,name=noticeId,proto3" json:"noticeId,omitempty"`
	ShopItemId             string                              `protobuf:"bytes,11,opt,name=shopItemId,proto3" json:"shopItemId,omitempty"`
	ShopItemPurchasedCount int32                               `protobuf:"varint,12,opt,name=shopItemPurchasedCount,proto3" json:"shopItemPurchasedCount,omitempty"`
	ShopItemNextResetTime  int64                               `protobuf:"varint,13,opt,name=shopItemNextResetTime,proto3" json:"shopItemNextResetTime,omitempty"`
	Priority               int32                               `protobuf:"varint,99,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StartupNotification) Reset() {
	*x = StartupNotification{}
	mi := &file_pcommon_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartupNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartupNotification) ProtoMessage() {}

func (x *StartupNotification) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartupNotification.ProtoReflect.Descriptor instead.
func (*StartupNotification) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{59}
}

func (x *StartupNotification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartupNotification) GetType() penum.StartupNotificationType {
	if x != nil {
		return x.Type
	}
	return penum.StartupNotificationType(0)
}

func (x *StartupNotification) GetEffectType() penum.StartupNotificationEffectType {
	if x != nil {
		return x.EffectType
	}
	return penum.StartupNotificationEffectType(0)
}

func (x *StartupNotification) GetHorizontalMovieAssetId() string {
	if x != nil {
		return x.HorizontalMovieAssetId
	}
	return ""
}

func (x *StartupNotification) GetVerticalMovieAssetId() string {
	if x != nil {
		return x.VerticalMovieAssetId
	}
	return ""
}

func (x *StartupNotification) GetLinkTitle() string {
	if x != nil {
		return x.LinkTitle
	}
	return ""
}

func (x *StartupNotification) GetLinkType() penum.LinkType {
	if x != nil {
		return x.LinkType
	}
	return penum.LinkType(0)
}

func (x *StartupNotification) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *StartupNotification) GetStoryId() string {
	if x != nil {
		return x.StoryId
	}
	return ""
}

func (x *StartupNotification) GetImageAssetId() string {
	if x != nil {
		return x.ImageAssetId
	}
	return ""
}

func (x *StartupNotification) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

func (x *StartupNotification) GetShopItemId() string {
	if x != nil {
		return x.ShopItemId
	}
	return ""
}

func (x *StartupNotification) GetShopItemPurchasedCount() int32 {
	if x != nil {
		return x.ShopItemPurchasedCount
	}
	return 0
}

func (x *StartupNotification) GetShopItemNextResetTime() int64 {
	if x != nil {
		return x.ShopItemNextResetTime
	}
	return 0
}

func (x *StartupNotification) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type StoryEventBonus struct {
	state              protoimpl.MessageState              `protogen:"open.v1"`
	CharacterBonuses   []*StoryEventBonus_CharacterBonus   `protobuf:"bytes,1,rep,name=characterBonuses,proto3" json:"characterBonuses,omitempty"`
	IdolCardBonuses    []*StoryEventBonus_IdolCardBonus    `protobuf:"bytes,2,rep,name=idolCardBonuses,proto3" json:"idolCardBonuses,omitempty"`
	SupportCardBonuses []*StoryEventBonus_SupportCardBonus `protobuf:"bytes,3,rep,name=supportCardBonuses,proto3" json:"supportCardBonuses,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StoryEventBonus) Reset() {
	*x = StoryEventBonus{}
	mi := &file_pcommon_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventBonus) ProtoMessage() {}

func (x *StoryEventBonus) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventBonus.ProtoReflect.Descriptor instead.
func (*StoryEventBonus) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{60}
}

func (x *StoryEventBonus) GetCharacterBonuses() []*StoryEventBonus_CharacterBonus {
	if x != nil {
		return x.CharacterBonuses
	}
	return nil
}

func (x *StoryEventBonus) GetIdolCardBonuses() []*StoryEventBonus_IdolCardBonus {
	if x != nil {
		return x.IdolCardBonuses
	}
	return nil
}

func (x *StoryEventBonus) GetSupportCardBonuses() []*StoryEventBonus_SupportCardBonus {
	if x != nil {
		return x.SupportCardBonuses
	}
	return nil
}

type StoryEventPointReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Point         int32                  `protobuf:"varint,1,opt,name=point,proto3" json:"point,omitempty"`
	Reward        *Reward                `protobuf:"bytes,3,opt,name=reward,proto3" json:"reward,omitempty"`
	Feature       bool                   `protobuf:"varint,4,opt,name=feature,proto3" json:"feature,omitempty"`
	Repeat        bool                   `protobuf:"varint,5,opt,name=repeat,proto3" json:"repeat,omitempty"`
	RepeatPoint   int32                  `protobuf:"varint,6,opt,name=repeatPoint,proto3" json:"repeatPoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryEventPointReward) Reset() {
	*x = StoryEventPointReward{}
	mi := &file_pcommon_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventPointReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventPointReward) ProtoMessage() {}

func (x *StoryEventPointReward) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventPointReward.ProtoReflect.Descriptor instead.
func (*StoryEventPointReward) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{61}
}

func (x *StoryEventPointReward) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *StoryEventPointReward) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *StoryEventPointReward) GetFeature() bool {
	if x != nil {
		return x.Feature
	}
	return false
}

func (x *StoryEventPointReward) GetRepeat() bool {
	if x != nil {
		return x.Repeat
	}
	return false
}

func (x *StoryEventPointReward) GetRepeatPoint() int32 {
	if x != nil {
		return x.RepeatPoint
	}
	return 0
}

type StoryEventProduceResult struct {
	state                   protoimpl.MessageState               `protogen:"open.v1"`
	PointResult             *StoryEventProduceResult_PointResult `protobuf:"bytes,1,opt,name=pointResult,proto3" json:"pointResult,omitempty"`
	CoinResult              *StoryEventProduceResult_CoinResult  `protobuf:"bytes,2,opt,name=coinResult,proto3" json:"coinResult,omitempty"`
	RewardResults           []*RewardResult                      `protobuf:"bytes,3,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	StoryEventType          penum.StoryEventType                 `protobuf:"varint,10,opt,name=storyEventType,proto3,enum=penum.StoryEventType" json:"storyEventType,omitempty"`
	TitleAssetId            string                               `protobuf:"bytes,11,opt,name=titleAssetId,proto3" json:"titleAssetId,omitempty"`
	StoryGroupId            string                               `protobuf:"bytes,12,opt,name=storyGroupId,proto3" json:"storyGroupId,omitempty"`
	GradationColor1         string                               `protobuf:"bytes,13,opt,name=gradationColor1,proto3" json:"gradationColor1,omitempty"`
	GradationColor2         string                               `protobuf:"bytes,14,opt,name=gradationColor2,proto3" json:"gradationColor2,omitempty"`
	BackgroundAssetId       string                               `protobuf:"bytes,15,opt,name=backgroundAssetId,proto3" json:"backgroundAssetId,omitempty"`
	BgmAssetId              string                               `protobuf:"bytes,16,opt,name=bgmAssetId,proto3" json:"bgmAssetId,omitempty"`
	SceneLayoutId           string                               `protobuf:"bytes,17,opt,name=sceneLayoutId,proto3" json:"sceneLayoutId,omitempty"`
	SceneLayoutCollectionId string                               `protobuf:"bytes,18,opt,name=sceneLayoutCollectionId,proto3" json:"sceneLayoutCollectionId,omitempty"`
	ConsumptionItemId       string                               `protobuf:"bytes,19,opt,name=consumptionItemId,proto3" json:"consumptionItemId,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *StoryEventProduceResult) Reset() {
	*x = StoryEventProduceResult{}
	mi := &file_pcommon_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventProduceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventProduceResult) ProtoMessage() {}

func (x *StoryEventProduceResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventProduceResult.ProtoReflect.Descriptor instead.
func (*StoryEventProduceResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{62}
}

func (x *StoryEventProduceResult) GetPointResult() *StoryEventProduceResult_PointResult {
	if x != nil {
		return x.PointResult
	}
	return nil
}

func (x *StoryEventProduceResult) GetCoinResult() *StoryEventProduceResult_CoinResult {
	if x != nil {
		return x.CoinResult
	}
	return nil
}

func (x *StoryEventProduceResult) GetRewardResults() []*RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *StoryEventProduceResult) GetStoryEventType() penum.StoryEventType {
	if x != nil {
		return x.StoryEventType
	}
	return penum.StoryEventType(0)
}

func (x *StoryEventProduceResult) GetTitleAssetId() string {
	if x != nil {
		return x.TitleAssetId
	}
	return ""
}

func (x *StoryEventProduceResult) GetStoryGroupId() string {
	if x != nil {
		return x.StoryGroupId
	}
	return ""
}

func (x *StoryEventProduceResult) GetGradationColor1() string {
	if x != nil {
		return x.GradationColor1
	}
	return ""
}

func (x *StoryEventProduceResult) GetGradationColor2() string {
	if x != nil {
		return x.GradationColor2
	}
	return ""
}

func (x *StoryEventProduceResult) GetBackgroundAssetId() string {
	if x != nil {
		return x.BackgroundAssetId
	}
	return ""
}

func (x *StoryEventProduceResult) GetBgmAssetId() string {
	if x != nil {
		return x.BgmAssetId
	}
	return ""
}

func (x *StoryEventProduceResult) GetSceneLayoutId() string {
	if x != nil {
		return x.SceneLayoutId
	}
	return ""
}

func (x *StoryEventProduceResult) GetSceneLayoutCollectionId() string {
	if x != nil {
		return x.SceneLayoutCollectionId
	}
	return ""
}

func (x *StoryEventProduceResult) GetConsumptionItemId() string {
	if x != nil {
		return x.ConsumptionItemId
	}
	return ""
}

type SupportCard struct {
	state          protoimpl.MessageState          `protogen:"open.v1"`
	Id             string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Level          int32                           `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	LevelLimitRank penum.SupportCardLevelLimitRank `protobuf:"varint,3,opt,name=levelLimitRank,proto3,enum=penum.SupportCardLevelLimitRank" json:"levelLimitRank,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SupportCard) Reset() {
	*x = SupportCard{}
	mi := &file_pcommon_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCard) ProtoMessage() {}

func (x *SupportCard) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCard.ProtoReflect.Descriptor instead.
func (*SupportCard) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{63}
}

func (x *SupportCard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SupportCard) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SupportCard) GetLevelLimitRank() penum.SupportCardLevelLimitRank {
	if x != nil {
		return x.LevelLimitRank
	}
	return penum.SupportCardLevelLimitRank(0)
}

type TowerLayerHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PublicUserId  string                 `protobuf:"bytes,2,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	UserName      string                 `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	ProducerLevel int32                  `protobuf:"varint,4,opt,name=producerLevel,proto3" json:"producerLevel,omitempty"`
	ClearRank     int32                  `protobuf:"varint,5,opt,name=clearRank,proto3" json:"clearRank,omitempty"`
	Score         int32                  `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	Memories      []*Memory              `protobuf:"bytes,7,rep,name=memories,proto3" json:"memories,omitempty"`
	IsDefault     bool                   `protobuf:"varint,8,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	PlayTime      int64                  `protobuf:"varint,9,opt,name=playTime,proto3" json:"playTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TowerLayerHistory) Reset() {
	*x = TowerLayerHistory{}
	mi := &file_pcommon_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TowerLayerHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerLayerHistory) ProtoMessage() {}

func (x *TowerLayerHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerLayerHistory.ProtoReflect.Descriptor instead.
func (*TowerLayerHistory) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{64}
}

func (x *TowerLayerHistory) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TowerLayerHistory) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *TowerLayerHistory) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *TowerLayerHistory) GetProducerLevel() int32 {
	if x != nil {
		return x.ProducerLevel
	}
	return 0
}

func (x *TowerLayerHistory) GetClearRank() int32 {
	if x != nil {
		return x.ClearRank
	}
	return 0
}

func (x *TowerLayerHistory) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TowerLayerHistory) GetMemories() []*Memory {
	if x != nil {
		return x.Memories
	}
	return nil
}

func (x *TowerLayerHistory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TowerLayerHistory) GetPlayTime() int64 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

type AntiCheatCriticalResult_Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lines         []string               `protobuf:"bytes,10,rep,name=lines,proto3" json:"lines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AntiCheatCriticalResult_Log) Reset() {
	*x = AntiCheatCriticalResult_Log{}
	mi := &file_pcommon_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntiCheatCriticalResult_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiCheatCriticalResult_Log) ProtoMessage() {}

func (x *AntiCheatCriticalResult_Log) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiCheatCriticalResult_Log.ProtoReflect.Descriptor instead.
func (*AntiCheatCriticalResult_Log) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AntiCheatCriticalResult_Log) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AntiCheatCriticalResult_Log) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

type AntiCheatCriticalResult_Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           string                 `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Expected      string                 `protobuf:"bytes,3,opt,name=expected,proto3" json:"expected,omitempty"`
	Actual        string                 `protobuf:"bytes,4,opt,name=actual,proto3" json:"actual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AntiCheatCriticalResult_Record) Reset() {
	*x = AntiCheatCriticalResult_Record{}
	mi := &file_pcommon_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntiCheatCriticalResult_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiCheatCriticalResult_Record) ProtoMessage() {}

func (x *AntiCheatCriticalResult_Record) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiCheatCriticalResult_Record.ProtoReflect.Descriptor instead.
func (*AntiCheatCriticalResult_Record) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AntiCheatCriticalResult_Record) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AntiCheatCriticalResult_Record) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AntiCheatCriticalResult_Record) GetExpected() string {
	if x != nil {
		return x.Expected
	}
	return ""
}

func (x *AntiCheatCriticalResult_Record) GetActual() string {
	if x != nil {
		return x.Actual
	}
	return ""
}

type AntiCheatSummaryResult_Score struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CalculatedScore int32                  `protobuf:"varint,2,opt,name=calculatedScore,proto3" json:"calculatedScore,omitempty"`
	LoggedScore     int32                  `protobuf:"varint,3,opt,name=loggedScore,proto3" json:"loggedScore,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AntiCheatSummaryResult_Score) Reset() {
	*x = AntiCheatSummaryResult_Score{}
	mi := &file_pcommon_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntiCheatSummaryResult_Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntiCheatSummaryResult_Score) ProtoMessage() {}

func (x *AntiCheatSummaryResult_Score) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntiCheatSummaryResult_Score.ProtoReflect.Descriptor instead.
func (*AntiCheatSummaryResult_Score) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AntiCheatSummaryResult_Score) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AntiCheatSummaryResult_Score) GetCalculatedScore() int32 {
	if x != nil {
		return x.CalculatedScore
	}
	return 0
}

func (x *AntiCheatSummaryResult_Score) GetLoggedScore() int32 {
	if x != nil {
		return x.LoggedScore
	}
	return 0
}

type ExamBattleAutoStageResult_Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Score         int32                  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	VocalScore    int32                  `protobuf:"varint,2,opt,name=vocalScore,proto3" json:"vocalScore,omitempty"`
	DanceScore    int32                  `protobuf:"varint,3,opt,name=danceScore,proto3" json:"danceScore,omitempty"`
	VisualScore   int32                  `protobuf:"varint,4,opt,name=visualScore,proto3" json:"visualScore,omitempty"`
	List          []int32                `protobuf:"varint,5,rep,packed,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamBattleAutoStageResult_Player) Reset() {
	*x = ExamBattleAutoStageResult_Player{}
	mi := &file_pcommon_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamBattleAutoStageResult_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamBattleAutoStageResult_Player) ProtoMessage() {}

func (x *ExamBattleAutoStageResult_Player) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamBattleAutoStageResult_Player.ProtoReflect.Descriptor instead.
func (*ExamBattleAutoStageResult_Player) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ExamBattleAutoStageResult_Player) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ExamBattleAutoStageResult_Player) GetVocalScore() int32 {
	if x != nil {
		return x.VocalScore
	}
	return 0
}

func (x *ExamBattleAutoStageResult_Player) GetDanceScore() int32 {
	if x != nil {
		return x.DanceScore
	}
	return 0
}

func (x *ExamBattleAutoStageResult_Player) GetVisualScore() int32 {
	if x != nil {
		return x.VisualScore
	}
	return 0
}

func (x *ExamBattleAutoStageResult_Player) GetList() []int32 {
	if x != nil {
		return x.List
	}
	return nil
}

type GuildMission_Icon struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Type          penum.ProduceConditionType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.ProduceConditionType" json:"type,omitempty"`
	ResourceId1   string                     `protobuf:"bytes,2,opt,name=resourceId1,proto3" json:"resourceId1,omitempty"`
	ResourceId2   string                     `protobuf:"bytes,3,opt,name=resourceId2,proto3" json:"resourceId2,omitempty"`
	Grade         penum.ResultGrade          `protobuf:"varint,4,opt,name=grade,proto3,enum=penum.ResultGrade" json:"grade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMission_Icon) Reset() {
	*x = GuildMission_Icon{}
	mi := &file_pcommon_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMission_Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMission_Icon) ProtoMessage() {}

func (x *GuildMission_Icon) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMission_Icon.ProtoReflect.Descriptor instead.
func (*GuildMission_Icon) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{26, 0}
}

func (x *GuildMission_Icon) GetType() penum.ProduceConditionType {
	if x != nil {
		return x.Type
	}
	return penum.ProduceConditionType(0)
}

func (x *GuildMission_Icon) GetResourceId1() string {
	if x != nil {
		return x.ResourceId1
	}
	return ""
}

func (x *GuildMission_Icon) GetResourceId2() string {
	if x != nil {
		return x.ResourceId2
	}
	return ""
}

func (x *GuildMission_Icon) GetGrade() penum.ResultGrade {
	if x != nil {
		return x.Grade
	}
	return penum.ResultGrade(0)
}

type ProduceHistory_Audition struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	StepType         penum.ProduceStepType  `protobuf:"varint,1,opt,name=stepType,proto3,enum=penum.ProduceStepType" json:"stepType,omitempty"`
	StepSelectNumber int32                  `protobuf:"varint,2,opt,name=stepSelectNumber,proto3" json:"stepSelectNumber,omitempty"`
	Rank             int32                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProduceHistory_Audition) Reset() {
	*x = ProduceHistory_Audition{}
	mi := &file_pcommon_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceHistory_Audition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHistory_Audition) ProtoMessage() {}

func (x *ProduceHistory_Audition) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHistory_Audition.ProtoReflect.Descriptor instead.
func (*ProduceHistory_Audition) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{46, 0}
}

func (x *ProduceHistory_Audition) GetStepType() penum.ProduceStepType {
	if x != nil {
		return x.StepType
	}
	return penum.ProduceStepType(0)
}

func (x *ProduceHistory_Audition) GetStepSelectNumber() int32 {
	if x != nil {
		return x.StepSelectNumber
	}
	return 0
}

func (x *ProduceHistory_Audition) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type ProduceHistory_DeckMemory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Memory        *Memory                `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	IsRental      bool                   `protobuf:"varint,2,opt,name=isRental,proto3" json:"isRental,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceHistory_DeckMemory) Reset() {
	*x = ProduceHistory_DeckMemory{}
	mi := &file_pcommon_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceHistory_DeckMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHistory_DeckMemory) ProtoMessage() {}

func (x *ProduceHistory_DeckMemory) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHistory_DeckMemory.ProtoReflect.Descriptor instead.
func (*ProduceHistory_DeckMemory) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{46, 1}
}

func (x *ProduceHistory_DeckMemory) GetMemory() *Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ProduceHistory_DeckMemory) GetIsRental() bool {
	if x != nil {
		return x.IsRental
	}
	return false
}

type ProduceHistory_DeckProduceCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProduceCard   *ProduceCard           `protobuf:"bytes,1,opt,name=produceCard,proto3" json:"produceCard,omitempty"`
	FromMemory    bool                   `protobuf:"varint,2,opt,name=fromMemory,proto3" json:"fromMemory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProduceHistory_DeckProduceCard) Reset() {
	*x = ProduceHistory_DeckProduceCard{}
	mi := &file_pcommon_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceHistory_DeckProduceCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHistory_DeckProduceCard) ProtoMessage() {}

func (x *ProduceHistory_DeckProduceCard) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHistory_DeckProduceCard.ProtoReflect.Descriptor instead.
func (*ProduceHistory_DeckProduceCard) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{46, 2}
}

func (x *ProduceHistory_DeckProduceCard) GetProduceCard() *ProduceCard {
	if x != nil {
		return x.ProduceCard
	}
	return nil
}

func (x *ProduceHistory_DeckProduceCard) GetFromMemory() bool {
	if x != nil {
		return x.FromMemory
	}
	return false
}

type ProduceHistory_DeckSupportCard struct {
	state          protoimpl.MessageState          `protogen:"open.v1"`
	Id             string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Level          int32                           `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	LevelLimitRank penum.SupportCardLevelLimitRank `protobuf:"varint,3,opt,name=levelLimitRank,proto3,enum=penum.SupportCardLevelLimitRank" json:"levelLimitRank,omitempty"`
	IsRental       bool                            `protobuf:"varint,4,opt,name=isRental,proto3" json:"isRental,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProduceHistory_DeckSupportCard) Reset() {
	*x = ProduceHistory_DeckSupportCard{}
	mi := &file_pcommon_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProduceHistory_DeckSupportCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHistory_DeckSupportCard) ProtoMessage() {}

func (x *ProduceHistory_DeckSupportCard) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHistory_DeckSupportCard.ProtoReflect.Descriptor instead.
func (*ProduceHistory_DeckSupportCard) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{46, 3}
}

func (x *ProduceHistory_DeckSupportCard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProduceHistory_DeckSupportCard) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ProduceHistory_DeckSupportCard) GetLevelLimitRank() penum.SupportCardLevelLimitRank {
	if x != nil {
		return x.LevelLimitRank
	}
	return penum.SupportCardLevelLimitRank(0)
}

func (x *ProduceHistory_DeckSupportCard) GetIsRental() bool {
	if x != nil {
		return x.IsRental
	}
	return false
}

type PvpRateSetupUnitStageFormation_Slot struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MainUserMemoryId string                 `protobuf:"bytes,1,opt,name=mainUserMemoryId,proto3" json:"mainUserMemoryId,omitempty"`
	SubUserMemoryId  string                 `protobuf:"bytes,2,opt,name=subUserMemoryId,proto3" json:"subUserMemoryId,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PvpRateSetupUnitStageFormation_Slot) Reset() {
	*x = PvpRateSetupUnitStageFormation_Slot{}
	mi := &file_pcommon_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PvpRateSetupUnitStageFormation_Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateSetupUnitStageFormation_Slot) ProtoMessage() {}

func (x *PvpRateSetupUnitStageFormation_Slot) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateSetupUnitStageFormation_Slot.ProtoReflect.Descriptor instead.
func (*PvpRateSetupUnitStageFormation_Slot) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{55, 0}
}

func (x *PvpRateSetupUnitStageFormation_Slot) GetMainUserMemoryId() string {
	if x != nil {
		return x.MainUserMemoryId
	}
	return ""
}

func (x *PvpRateSetupUnitStageFormation_Slot) GetSubUserMemoryId() string {
	if x != nil {
		return x.SubUserMemoryId
	}
	return ""
}

type StoryEventBonus_CharacterBonus struct {
	state                     protoimpl.MessageState                                     `protogen:"open.v1"`
	CharacterIds              []string                                                   `protobuf:"bytes,1,rep,name=characterIds,proto3" json:"characterIds,omitempty"`
	Permil                    int32                                                      `protobuf:"varint,2,opt,name=permil,proto3" json:"permil,omitempty"`
	IdolCardRarities          []penum.IdolCardRarity                                     `protobuf:"varint,3,rep,packed,name=idolCardRarities,proto3,enum=penum.IdolCardRarity" json:"idolCardRarities,omitempty"`
	PotentialRankBonusPermils []*StoryEventBonus_CharacterBonus_PotentialRankBonusPermil `protobuf:"bytes,4,rep,name=potentialRankBonusPermils,proto3" json:"potentialRankBonusPermils,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *StoryEventBonus_CharacterBonus) Reset() {
	*x = StoryEventBonus_CharacterBonus{}
	mi := &file_pcommon_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventBonus_CharacterBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventBonus_CharacterBonus) ProtoMessage() {}

func (x *StoryEventBonus_CharacterBonus) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventBonus_CharacterBonus.ProtoReflect.Descriptor instead.
func (*StoryEventBonus_CharacterBonus) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{60, 0}
}

func (x *StoryEventBonus_CharacterBonus) GetCharacterIds() []string {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *StoryEventBonus_CharacterBonus) GetPermil() int32 {
	if x != nil {
		return x.Permil
	}
	return 0
}

func (x *StoryEventBonus_CharacterBonus) GetIdolCardRarities() []penum.IdolCardRarity {
	if x != nil {
		return x.IdolCardRarities
	}
	return nil
}

func (x *StoryEventBonus_CharacterBonus) GetPotentialRankBonusPermils() []*StoryEventBonus_CharacterBonus_PotentialRankBonusPermil {
	if x != nil {
		return x.PotentialRankBonusPermils
	}
	return nil
}

type StoryEventBonus_IdolCardBonus struct {
	state                     protoimpl.MessageState                                    `protogen:"open.v1"`
	IdolCardIds               []string                                                  `protobuf:"bytes,1,rep,name=idolCardIds,proto3" json:"idolCardIds,omitempty"`
	PotentialRankBonusPermils []*StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil `protobuf:"bytes,2,rep,name=potentialRankBonusPermils,proto3" json:"potentialRankBonusPermils,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *StoryEventBonus_IdolCardBonus) Reset() {
	*x = StoryEventBonus_IdolCardBonus{}
	mi := &file_pcommon_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventBonus_IdolCardBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventBonus_IdolCardBonus) ProtoMessage() {}

func (x *StoryEventBonus_IdolCardBonus) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventBonus_IdolCardBonus.ProtoReflect.Descriptor instead.
func (*StoryEventBonus_IdolCardBonus) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{60, 1}
}

func (x *StoryEventBonus_IdolCardBonus) GetIdolCardIds() []string {
	if x != nil {
		return x.IdolCardIds
	}
	return nil
}

func (x *StoryEventBonus_IdolCardBonus) GetPotentialRankBonusPermils() []*StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil {
	if x != nil {
		return x.PotentialRankBonusPermils
	}
	return nil
}

type StoryEventBonus_SupportCardBonus struct {
	state                      protoimpl.MessageState                                        `protogen:"open.v1"`
	SupportCardIds             []string                                                      `protobuf:"bytes,1,rep,name=supportCardIds,proto3" json:"supportCardIds,omitempty"`
	LevelLimitRankBonusPermils []*StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil `protobuf:"bytes,2,rep,name=levelLimitRankBonusPermils,proto3" json:"levelLimitRankBonusPermils,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *StoryEventBonus_SupportCardBonus) Reset() {
	*x = StoryEventBonus_SupportCardBonus{}
	mi := &file_pcommon_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventBonus_SupportCardBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventBonus_SupportCardBonus) ProtoMessage() {}

func (x *StoryEventBonus_SupportCardBonus) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventBonus_SupportCardBonus.ProtoReflect.Descriptor instead.
func (*StoryEventBonus_SupportCardBonus) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{60, 2}
}

func (x *StoryEventBonus_SupportCardBonus) GetSupportCardIds() []string {
	if x != nil {
		return x.SupportCardIds
	}
	return nil
}

func (x *StoryEventBonus_SupportCardBonus) GetLevelLimitRankBonusPermils() []*StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil {
	if x != nil {
		return x.LevelLimitRankBonusPermils
	}
	return nil
}

type StoryEventBonus_CharacterBonus_PotentialRankBonusPermil struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	PotentialRank penum.IdolCardPotentialRank `protobuf:"varint,1,opt,name=potentialRank,proto3,enum=penum.IdolCardPotentialRank" json:"potentialRank,omitempty"`
	Permil        int32                       `protobuf:"varint,2,opt,name=permil,proto3" json:"permil,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryEventBonus_CharacterBonus_PotentialRankBonusPermil) Reset() {
	*x = StoryEventBonus_CharacterBonus_PotentialRankBonusPermil{}
	mi := &file_pcommon_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventBonus_CharacterBonus_PotentialRankBonusPermil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventBonus_CharacterBonus_PotentialRankBonusPermil) ProtoMessage() {}

func (x *StoryEventBonus_CharacterBonus_PotentialRankBonusPermil) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventBonus_CharacterBonus_PotentialRankBonusPermil.ProtoReflect.Descriptor instead.
func (*StoryEventBonus_CharacterBonus_PotentialRankBonusPermil) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{60, 0, 0}
}

func (x *StoryEventBonus_CharacterBonus_PotentialRankBonusPermil) GetPotentialRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.PotentialRank
	}
	return penum.IdolCardPotentialRank(0)
}

func (x *StoryEventBonus_CharacterBonus_PotentialRankBonusPermil) GetPermil() int32 {
	if x != nil {
		return x.Permil
	}
	return 0
}

type StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	PotentialRank penum.IdolCardPotentialRank `protobuf:"varint,1,opt,name=potentialRank,proto3,enum=penum.IdolCardPotentialRank" json:"potentialRank,omitempty"`
	Permil        int32                       `protobuf:"varint,2,opt,name=permil,proto3" json:"permil,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil) Reset() {
	*x = StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil{}
	mi := &file_pcommon_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil) ProtoMessage() {}

func (x *StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil.ProtoReflect.Descriptor instead.
func (*StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{60, 1, 0}
}

func (x *StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil) GetPotentialRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.PotentialRank
	}
	return penum.IdolCardPotentialRank(0)
}

func (x *StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil) GetPermil() int32 {
	if x != nil {
		return x.Permil
	}
	return 0
}

type StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil struct {
	state          protoimpl.MessageState          `protogen:"open.v1"`
	LevelLimitRank penum.SupportCardLevelLimitRank `protobuf:"varint,1,opt,name=levelLimitRank,proto3,enum=penum.SupportCardLevelLimitRank" json:"levelLimitRank,omitempty"`
	Permil         int32                           `protobuf:"varint,2,opt,name=permil,proto3" json:"permil,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil) Reset() {
	*x = StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil{}
	mi := &file_pcommon_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil) ProtoMessage() {}

func (x *StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil.ProtoReflect.Descriptor instead.
func (*StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{60, 2, 0}
}

func (x *StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil) GetLevelLimitRank() penum.SupportCardLevelLimitRank {
	if x != nil {
		return x.LevelLimitRank
	}
	return penum.SupportCardLevelLimitRank(0)
}

func (x *StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil) GetPermil() int32 {
	if x != nil {
		return x.Permil
	}
	return 0
}

type StoryEventProduceResult_CoinResult struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StoryEventId      string                 `protobuf:"bytes,1,opt,name=storyEventId,proto3" json:"storyEventId,omitempty"`
	ResourceType      penum.ResourceType     `protobuf:"varint,2,opt,name=resourceType,proto3,enum=penum.ResourceType" json:"resourceType,omitempty"`
	ResourceId        string                 `protobuf:"bytes,3,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	BaseCoinQuantity  int32                  `protobuf:"varint,4,opt,name=baseCoinQuantity,proto3" json:"baseCoinQuantity,omitempty"`
	BonusCoinQuantity int32                  `protobuf:"varint,5,opt,name=bonusCoinQuantity,proto3" json:"bonusCoinQuantity,omitempty"`
	BonusPermil       int32                  `protobuf:"varint,6,opt,name=bonusPermil,proto3" json:"bonusPermil,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StoryEventProduceResult_CoinResult) Reset() {
	*x = StoryEventProduceResult_CoinResult{}
	mi := &file_pcommon_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventProduceResult_CoinResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventProduceResult_CoinResult) ProtoMessage() {}

func (x *StoryEventProduceResult_CoinResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventProduceResult_CoinResult.ProtoReflect.Descriptor instead.
func (*StoryEventProduceResult_CoinResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{62, 0}
}

func (x *StoryEventProduceResult_CoinResult) GetStoryEventId() string {
	if x != nil {
		return x.StoryEventId
	}
	return ""
}

func (x *StoryEventProduceResult_CoinResult) GetResourceType() penum.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ResourceType(0)
}

func (x *StoryEventProduceResult_CoinResult) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *StoryEventProduceResult_CoinResult) GetBaseCoinQuantity() int32 {
	if x != nil {
		return x.BaseCoinQuantity
	}
	return 0
}

func (x *StoryEventProduceResult_CoinResult) GetBonusCoinQuantity() int32 {
	if x != nil {
		return x.BonusCoinQuantity
	}
	return 0
}

func (x *StoryEventProduceResult_CoinResult) GetBonusPermil() int32 {
	if x != nil {
		return x.BonusPermil
	}
	return 0
}

type StoryEventProduceResult_PointResult struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	StoryEventId   string                   `protobuf:"bytes,1,opt,name=storyEventId,proto3" json:"storyEventId,omitempty"`
	BonusPermil    int32                    `protobuf:"varint,2,opt,name=bonusPermil,proto3" json:"bonusPermil,omitempty"`
	BeforePoint    int32                    `protobuf:"varint,3,opt,name=beforePoint,proto3" json:"beforePoint,omitempty"`
	AfterPoint     int32                    `protobuf:"varint,4,opt,name=afterPoint,proto3" json:"afterPoint,omitempty"`
	AllRewards     []*StoryEventPointReward `protobuf:"bytes,5,rep,name=allRewards,proto3" json:"allRewards,omitempty"`
	ProvideRewards []*StoryEventPointReward `protobuf:"bytes,6,rep,name=provideRewards,proto3" json:"provideRewards,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StoryEventProduceResult_PointResult) Reset() {
	*x = StoryEventProduceResult_PointResult{}
	mi := &file_pcommon_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEventProduceResult_PointResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventProduceResult_PointResult) ProtoMessage() {}

func (x *StoryEventProduceResult_PointResult) ProtoReflect() protoreflect.Message {
	mi := &file_pcommon_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventProduceResult_PointResult.ProtoReflect.Descriptor instead.
func (*StoryEventProduceResult_PointResult) Descriptor() ([]byte, []int) {
	return file_pcommon_proto_rawDescGZIP(), []int{62, 1}
}

func (x *StoryEventProduceResult_PointResult) GetStoryEventId() string {
	if x != nil {
		return x.StoryEventId
	}
	return ""
}

func (x *StoryEventProduceResult_PointResult) GetBonusPermil() int32 {
	if x != nil {
		return x.BonusPermil
	}
	return 0
}

func (x *StoryEventProduceResult_PointResult) GetBeforePoint() int32 {
	if x != nil {
		return x.BeforePoint
	}
	return 0
}

func (x *StoryEventProduceResult_PointResult) GetAfterPoint() int32 {
	if x != nil {
		return x.AfterPoint
	}
	return 0
}

func (x *StoryEventProduceResult_PointResult) GetAllRewards() []*StoryEventPointReward {
	if x != nil {
		return x.AllRewards
	}
	return nil
}

func (x *StoryEventProduceResult_PointResult) GetProvideRewards() []*StoryEventPointReward {
	if x != nil {
		return x.ProvideRewards
	}
	return nil
}

var File_pcommon_proto protoreflect.FileDescriptor

const file_pcommon_proto_rawDesc = "" +
	"\n" +
	"\rpcommon.proto\x12\apcommon\x1a\vpenum.proto\"Q\n" +
	"\vAchievement\x12$\n" +
	"\rachievementId\x18\x01 \x01(\tR\rachievementId\x12\x1c\n" +
	"\tthreshold\x18\x02 \x01(\x05R\tthreshold\"\xa3\x02\n" +
	"\x17AntiCheatCriticalResult\x12A\n" +
	"\arecords\x18\x01 \x03(\v2'.pcommon.AntiCheatCriticalResult.RecordR\arecords\x128\n" +
	"\x04logs\x18\x02 \x03(\v2$.pcommon.AntiCheatCriticalResult.LogR\x04logs\x1a+\n" +
	"\x03Log\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05lines\x18\n" +
	" \x03(\tR\x05lines\x1a^\n" +
	"\x06Record\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\tR\x03tag\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1a\n" +
	"\bexpected\x18\x03 \x01(\tR\bexpected\x12\x16\n" +
	"\x06actual\x18\x04 \x01(\tR\x06actual\"\xbc\x01\n" +
	"\x16AntiCheatSummaryResult\x12=\n" +
	"\x06scores\x18\x01 \x03(\v2%.pcommon.AntiCheatSummaryResult.ScoreR\x06scores\x1ac\n" +
	"\x05Score\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12(\n" +
	"\x0fcalculatedScore\x18\x02 \x01(\x05R\x0fcalculatedScore\x12 \n" +
	"\vloggedScore\x18\x03 \x01(\x05R\vloggedScore\"\xcc\a\n" +
	"\tCoinGasha\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12(\n" +
	"\x04type\x18\x02 \x01(\x0e2\x14.penum.CoinGashaTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\aassetId\x18\x05 \x01(\tR\aassetId\x12,\n" +
	"\x11coinGashaButtonId\x18\x06 \x01(\tR\x11coinGashaButtonId\x124\n" +
	"\x15featureRewardResetDay\x18\a \x01(\x05R\x15featureRewardResetDay\x12J\n" +
	"\x13featureGashaRewards\x18\b \x03(\v2\x18.pcommon.CoinGashaRewardR\x13featureGashaRewards\x12H\n" +
	"\x12commonGashaRewards\x18\t \x03(\v2\x18.pcommon.CoinGashaRewardR\x12commonGashaRewards\x127\n" +
	"\vprevBoxList\x18\n" +
	" \x03(\v2\x15.pcommon.CoinGashaBoxR\vprevBoxList\x127\n" +
	"\vnextBoxList\x18\v \x03(\v2\x15.pcommon.CoinGashaBoxR\vnextBoxList\x12D\n" +
	"\fboxResetType\x18\f \x01(\x0e2 .penum.CoinGashaBoxResetTypeTypeR\fboxResetType\x12\x1e\n" +
	"\n" +
	"resetCount\x18\r \x01(\x05R\n" +
	"resetCount\x12\"\n" +
	"\fisResettable\x18\x0e \x01(\bR\fisResettable\x12&\n" +
	"\x0etotalDrawCount\x18\x0f \x01(\x05R\x0etotalDrawCount\x12M\n" +
	"\x10drawCountRewards\x18\x10 \x03(\v2!.pcommon.CoinGashaDrawCountRewardR\x10drawCountRewards\x12\x16\n" +
	"\x06unlock\x182 \x01(\bR\x06unlock\x12.\n" +
	"\x12viewConditionSetId\x183 \x01(\tR\x12viewConditionSetId\x122\n" +
	"\x14unlockConditionSetId\x184 \x01(\tR\x14unlockConditionSetId\x12\x1c\n" +
	"\tstartTime\x18d \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18e \x01(\x03R\aendTime\x12\x14\n" +
	"\x05order\x18f \x01(\x05R\x05order\"\xa4\x01\n" +
	"\fCoinGashaBox\x12J\n" +
	"\x13featureGashaRewards\x18\x01 \x03(\v2\x18.pcommon.CoinGashaRewardR\x13featureGashaRewards\x12H\n" +
	"\x12commonGashaRewards\x18\x02 \x03(\v2\x18.pcommon.CoinGashaRewardR\x12commonGashaRewards\"a\n" +
	"\x18CoinGashaDrawCountReward\x12\x1c\n" +
	"\tdrawCount\x18\x01 \x01(\x05R\tdrawCount\x12'\n" +
	"\x06reward\x18\x02 \x01(\v2\x0f.pcommon.RewardR\x06reward\"\xb2\x01\n" +
	"\x0fCoinGashaReward\x12'\n" +
	"\x06reward\x18\x01 \x01(\v2\x0f.pcommon.RewardR\x06reward\x12.\n" +
	"\x12remainingDrawCount\x18\x02 \x01(\x05R\x12remainingDrawCount\x12*\n" +
	"\x10maxEmissionCount\x18\x03 \x01(\x05R\x10maxEmissionCount\x12\x1a\n" +
	"\bisPickup\x18\x04 \x01(\bR\bisPickup\"\xd6\x01\n" +
	"\x11ConsumptionResult\x127\n" +
	"\fresourceType\x18\x01 \x01(\x0e2\x13.penum.ResourceTypeR\fresourceType\x12\x1e\n" +
	"\n" +
	"resourceId\x18\x02 \x01(\tR\n" +
	"resourceId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x03R\bquantity\x12&\n" +
	"\x0ebeforeQuantity\x18\x04 \x01(\x03R\x0ebeforeQuantity\x12$\n" +
	"\rafterQuantity\x18\x05 \x01(\x03R\rafterQuantity\"\xcd\x05\n" +
	"\x05Event\x12.\n" +
	"\teventType\x18\x01 \x01(\x0e2\x10.penum.EventTypeR\teventType\x12\x18\n" +
	"\aeventId\x18\x02 \x01(\tR\aeventId\x12(\n" +
	"\x0fhomeIconAssetId\x18\x03 \x01(\tR\x0fhomeIconAssetId\x12$\n" +
	"\rbannerAssetId\x18\x04 \x01(\tR\rbannerAssetId\x12\x12\n" +
	"\x04noti\x18\x05 \x01(\bR\x04noti\x120\n" +
	"\x13dailyMissionGroupId\x18\x06 \x01(\tR\x13dailyMissionGroupId\x12&\n" +
	"\x0emissionGroupId\x18\a \x01(\tR\x0emissionGroupId\x12>\n" +
	"\x1amissionDailyReleaseGroupId\x18\b \x01(\tR\x1amissionDailyReleaseGroupId\x12:\n" +
	"\x18missionPanelSheetGroupId\x18\t \x01(\tR\x18missionPanelSheetGroupId\x12\"\n" +
	"\fstoryGroupId\x18\n" +
	" \x01(\tR\fstoryGroupId\x12\x16\n" +
	"\x06itemId\x18\v \x01(\tR\x06itemId\x12\"\n" +
	"\fcharacterIds\x18\f \x03(\tR\fcharacterIds\x12L\n" +
	"!dearnessMissionPanelSheetGroupIds\x18\r \x03(\tR!dearnessMissionPanelSheetGroupIds\x12\x1c\n" +
	"\tstartTime\x18d \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18e \x01(\x03R\aendTime\x12 \n" +
	"\vfixRankTime\x18c \x01(\x03R\vfixRankTime\x12\x1c\n" +
	"\tcloseTime\x18f \x01(\x03R\tcloseTime\x12\x1a\n" +
	"\bpriority\x18g \x01(\x05R\bpriority\"\x83\x06\n" +
	"\x0fExamAiBaseModel\x12\"\n" +
	"\fmodelVersion\x18\x01 \x01(\tR\fmodelVersion\x12\x10\n" +
	"\x03env\x18\x03 \x01(\tR\x03env\x12\x10\n" +
	"\x03tag\x18\x04 \x01(\tR\x03tag\x12$\n" +
	"\rmasterVersion\x18\x05 \x01(\tR\rmasterVersion\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x122\n" +
	"\bplanType\x182 \x01(\x0e2\x16.penum.ProducePlanTypeR\bplanType\x12\x1e\n" +
	"\n" +
	"staminaMin\x183 \x01(\x05R\n" +
	"staminaMin\x12\x1e\n" +
	"\n" +
	"staminaMax\x184 \x01(\x05R\n" +
	"staminaMax\x12$\n" +
	"\rmaxStaminaMin\x185 \x01(\x05R\rmaxStaminaMin\x12$\n" +
	"\rmaxStaminaMax\x186 \x01(\x05R\rmaxStaminaMax\x12\"\n" +
	"\flimitTurnMin\x187 \x01(\x05R\flimitTurnMin\x12\"\n" +
	"\flimitTurnMax\x188 \x01(\x05R\flimitTurnMax\x12&\n" +
	"\x0elimitBorderMin\x189 \x01(\x05R\x0elimitBorderMin\x12&\n" +
	"\x0elimitBorderMax\x18: \x01(\x05R\x0elimitBorderMax\x12&\n" +
	"\x0eclearBorderMin\x18; \x01(\x05R\x0eclearBorderMin\x12&\n" +
	"\x0eclearBorderMax\x18< \x01(\x05R\x0eclearBorderMax\x120\n" +
	"\x13produceCardCountMin\x18= \x01(\x05R\x13produceCardCountMin\x120\n" +
	"\x13produceCardCountMax\x18> \x01(\x05R\x13produceCardCountMax\x120\n" +
	"\x13produceItemCountMin\x18? \x01(\x05R\x13produceItemCountMin\x120\n" +
	"\x13produceItemCountMax\x18@ \x01(\x05R\x13produceItemCountMax\"\x8e\x01\n" +
	"\x13ExamAntiCheatTarget\x12/\n" +
	"\bfeatures\x18\x01 \x03(\x0e2\x13.penum.ExamGameTypeR\bfeatures\x12\x14\n" +
	"\x05dates\x18\x02 \x03(\tR\x05dates\x12\x18\n" +
	"\auserIds\x18\x03 \x03(\tR\auserIds\x12\x16\n" +
	"\x06logIds\x18\x04 \x03(\tR\x06logIds\"\xa9\a\n" +
	"\x14ExamBattleAutoPlayer\x12 \n" +
	"\vcharacterId\x18\x01 \x01(\tR\vcharacterId\x12\x1e\n" +
	"\n" +
	"idolCardId\x18\x02 \x01(\tR\n" +
	"idolCardId\x122\n" +
	"\bplanType\x18\x03 \x01(\x0e2\x16.penum.ProducePlanTypeR\bplanType\x12D\n" +
	"\x0eexamEffectType\x18\x04 \x01(\x0e2\x1c.penum.ProduceExamEffectTypeR\x0eexamEffectType\x12U\n" +
	"\x16idolCardLevelLimitRank\x18\x05 \x01(\x0e2\x1d.penum.IdolCardLevelLimitRankR\x16idolCardLevelLimitRank\x12R\n" +
	"\x15idolCardPotentialRank\x18\x06 \x01(\x0e2\x1c.penum.IdolCardPotentialRankR\x15idolCardPotentialRank\x12\x14\n" +
	"\x05power\x18\a \x01(\x05R\x05power\x12\x12\n" +
	"\x04seed\x182 \x01(\x03R\x04seed\x12\x14\n" +
	"\x05vocal\x183 \x01(\x05R\x05vocal\x12\x14\n" +
	"\x05dance\x184 \x01(\x05R\x05dance\x12\x16\n" +
	"\x06visual\x185 \x01(\x05R\x06visual\x12*\n" +
	"\x10vocalBonusPermil\x186 \x01(\x05R\x10vocalBonusPermil\x12*\n" +
	"\x10danceBonusPermil\x187 \x01(\x05R\x10danceBonusPermil\x12,\n" +
	"\x11visualBonusPermil\x188 \x01(\x05R\x11visualBonusPermil\x12\x1e\n" +
	"\n" +
	"maxStamina\x189 \x01(\x05R\n" +
	"maxStamina\x128\n" +
	"\fproduceCards\x18: \x03(\v2\x14.pcommon.ProduceCardR\fproduceCards\x12&\n" +
	"\x0eproduceItemIds\x18; \x03(\tR\x0eproduceItemIds\x12\x12\n" +
	"\x04rank\x18d \x01(\x05R\x04rank\x12\x14\n" +
	"\x05score\x18e \x01(\x05R\x05score\x12\x1e\n" +
	"\n" +
	"vocalScore\x18f \x01(\x05R\n" +
	"vocalScore\x12\x1e\n" +
	"\n" +
	"danceScore\x18g \x01(\x05R\n" +
	"danceScore\x12 \n" +
	"\vvisualScore\x18h \x01(\x05R\vvisualScore\x12(\n" +
	"\x0fselectIndexList\x18i \x03(\x05R\x0fselectIndexList\"\x9d\x02\n" +
	"\x15ExamBattleAutoRequest\x12\x1e\n" +
	"\n" +
	"appVersion\x18\x01 \x01(\tR\n" +
	"appVersion\x12$\n" +
	"\rmasterVersion\x18\x02 \x01(\tR\rmasterVersion\x12\x1e\n" +
	"\n" +
	"masterHash\x18\x03 \x01(\tR\n" +
	"masterHash\x12\x14\n" +
	"\x05vocal\x18\x04 \x01(\x05R\x05vocal\x12\x14\n" +
	"\x05dance\x18\x05 \x01(\x05R\x05dance\x12\x16\n" +
	"\x06visual\x18\x06 \x01(\x05R\x06visual\x12$\n" +
	"\rexamSettingId\x18\a \x01(\tR\rexamSettingId\x124\n" +
	"\x06stages\x18\b \x03(\v2\x1c.pcommon.ExamBattleAutoStageR\x06stages\"\x81\x02\n" +
	"\x13ExamBattleAutoStage\x12\x1c\n" +
	"\tlimitTurn\x18\x01 \x01(\x05R\tlimitTurn\x12H\n" +
	"\x1fproduceExamGimmickEffectGroupId\x18\x02 \x01(\tR\x1fproduceExamGimmickEffectGroupId\x12?\n" +
	"\vselfPlayers\x18\x03 \x03(\v2\x1d.pcommon.ExamBattleAutoPlayerR\vselfPlayers\x12A\n" +
	"\frivalPlayers\x18\x04 \x03(\v2\x1d.pcommon.ExamBattleAutoPlayerR\frivalPlayers\"\xce\x02\n" +
	"\x19ExamBattleAutoStageResult\x12K\n" +
	"\vselfPlayers\x18\x03 \x03(\v2).pcommon.ExamBattleAutoStageResult.PlayerR\vselfPlayers\x12M\n" +
	"\frivalPlayers\x18\x04 \x03(\v2).pcommon.ExamBattleAutoStageResult.PlayerR\frivalPlayers\x1a\x94\x01\n" +
	"\x06Player\x12\x14\n" +
	"\x05score\x18\x01 \x01(\x05R\x05score\x12\x1e\n" +
	"\n" +
	"vocalScore\x18\x02 \x01(\x05R\n" +
	"vocalScore\x12\x1e\n" +
	"\n" +
	"danceScore\x18\x03 \x01(\x05R\n" +
	"danceScore\x12 \n" +
	"\vvisualScore\x18\x04 \x01(\x05R\vvisualScore\x12\x12\n" +
	"\x04list\x18\x05 \x03(\x05R\x04list\"\xe5\x02\n" +
	"\x10ExamBattleResult\x12\x12\n" +
	"\x04rank\x18\x01 \x01(\x05R\x04rank\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x05R\x05score\x12\x18\n" +
	"\astamina\x18\x03 \x01(\x05R\astamina\x12(\n" +
	"\x0fproduceDrinkIds\x18\x05 \x03(\tR\x0fproduceDrinkIds\x128\n" +
	"\fproduceItems\x18\x06 \x03(\v2\x14.pcommon.ProduceItemR\fproduceItems\x12G\n" +
	"\x11examTriggerCounts\x18\a \x03(\v2\x19.pcommon.ExamTriggerCountR\x11examTriggerCounts\x12\x1e\n" +
	"\n" +
	"vocalScore\x18\b \x01(\x05R\n" +
	"vocalScore\x12\x1e\n" +
	"\n" +
	"danceScore\x18\t \x01(\x05R\n" +
	"danceScore\x12 \n" +
	"\vvisualScore\x18\n" +
	" \x01(\x05R\vvisualScore\"\xac\x02\n" +
	"\x0eExamCommandLog\x128\n" +
	"\vcommandType\x18\x01 \x01(\x0e2\x16.penum.ExamCommandTypeR\vcommandType\x122\n" +
	"\tphaseType\x18\x02 \x01(\x0e2\x14.penum.ExamPhaseTypeR\tphaseType\x12$\n" +
	"\rselectIndexes\x18\x03 \x03(\x05R\rselectIndexes\x12\x1a\n" +
	"\buseIndex\x18\x04 \x01(\x05R\buseIndex\x12<\n" +
	"\x0euseProduceCard\x18\x05 \x01(\v2\x14.pcommon.ProduceCardR\x0euseProduceCard\x12,\n" +
	"\x11useProduceDrinkId\x18\x06 \x01(\tR\x11useProduceDrinkId\"\\\n" +
	"\x10ExamTriggerCount\x122\n" +
	"\x14produceExamTriggerId\x18\x01 \x01(\tR\x14produceExamTriggerId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"\xfd\x04\n" +
	"\x0eExamTurnEndLog\x12\x12\n" +
	"\x04turn\x18\x01 \x01(\x05R\x04turn\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x05R\x05score\x12\x18\n" +
	"\astamina\x18\x03 \x01(\x05R\astamina\x12(\n" +
	"\x0fconsumedStamina\x18\x04 \x01(\x05R\x0fconsumedStamina\x12\x14\n" +
	"\x05block\x18\x05 \x01(\x05R\x05block\x12$\n" +
	"\radditionBlock\x18\x06 \x01(\x05R\radditionBlock\x12A\n" +
	"\rparameterType\x18\a \x01(\x0e2\x1b.penum.ProduceParameterTypeR\rparameterType\x12A\n" +
	"\x0eidolStatusType\x18\b \x01(\x0e2\x19.penum.ExamIdolStatusTypeR\x0eidolStatusType\x120\n" +
	"\x13idolStatusStepCount\x18\t \x01(\x05R\x13idolStatusStepCount\x12R\n" +
	"\x19startPlayHandProduceCards\x182 \x03(\v2\x14.pcommon.ProduceCardR\x19startPlayHandProduceCards\x12,\n" +
	"\x11startPlayStatuses\x183 \x03(\tR\x11startPlayStatuses\x12R\n" +
	"\x19startPlayHoldProduceCards\x184 \x03(\v2\x14.pcommon.ProduceCardR\x19startPlayHoldProduceCards\x123\n" +
	"\bcommands\x18d \x03(\v2\x17.pcommon.ExamCommandLogR\bcommands\"\xf7\t\n" +
	"\x05Gasha\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x04type\x18\x02 \x01(\x0e2\x10.penum.GashaTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x128\n" +
	"\fgashaButtons\x18\x05 \x03(\v2\x14.pcommon.GashaButtonR\fgashaButtons\x126\n" +
	"\vgashaStepUp\x18\x06 \x01(\v2\x14.pcommon.GashaStepUpR\vgashaStepUp\x12H\n" +
	"\x11gashaSelectPickup\x18\a \x01(\v2\x1a.pcommon.GashaSelectPickupR\x11gashaSelectPickup\x12*\n" +
	"\x10gashaCardBonusId\x18\x14 \x01(\tR\x10gashaCardBonusId\x123\n" +
	"\n" +
	"gashaPoint\x18\x15 \x01(\v2\x13.pcommon.GashaPointR\n" +
	"gashaPoint\x123\n" +
	"\fbonusRewards\x18\x16 \x03(\v2\x0f.pcommon.RewardR\fbonusRewards\x12$\n" +
	"\rbannerAssetId\x18\x18 \x01(\tR\rbannerAssetId\x12.\n" +
	"\x12bannerLabelAssetId\x18\x19 \x01(\tR\x12bannerLabelAssetId\x12\"\n" +
	"\fmovieAssetId\x18\x1a \x01(\tR\fmovieAssetId\x12$\n" +
	"\rscreenAssetId\x18\x1b \x01(\tR\rscreenAssetId\x12,\n" +
	"\x11appealTextAssetId\x18\x1c \x01(\tR\x11appealTextAssetId\x12\x1a\n" +
	"\bnoticeId\x18\x1d \x01(\tR\bnoticeId\x12.\n" +
	"\x12viewConditionSetId\x18\x1e \x01(\tR\x12viewConditionSetId\x122\n" +
	"\x14unlockConditionSetId\x18\x1f \x01(\tR\x14unlockConditionSetId\x12 \n" +
	"\vhasIdolCard\x18  \x01(\bR\vhasIdolCard\x124\n" +
	"\x15pickupIdolCardSkinIds\x18( \x03(\tR\x15pickupIdolCardSkinIds\x122\n" +
	"\x14pickupSupportCardIds\x18) \x03(\tR\x14pickupSupportCardIds\x12d\n" +
	"\x1dbackgroundPickupIdolCardSkins\x18* \x03(\v2\x1e.pcommon.GashaBackgroundPickupR\x1dbackgroundPickupIdolCardSkins\x12b\n" +
	"\x1cbackgroundPickupSupportCards\x18+ \x03(\v2\x1e.pcommon.GashaBackgroundPickupR\x1cbackgroundPickupSupportCards\x12>\n" +
	"\x1aanimationBackgroundAssetId\x18, \x01(\tR\x1aanimationBackgroundAssetId\x12\x1c\n" +
	"\tstartTime\x18d \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18e \x01(\x03R\aendTime\x12\x14\n" +
	"\x05order\x18f \x01(\x05R\x05order\"\xda\x01\n" +
	"\x15GashaBackgroundPickup\x12&\n" +
	"\x0eidolCardSkinId\x18\x01 \x01(\tR\x0eidolCardSkinId\x12$\n" +
	"\rsupportCardId\x18\x02 \x01(\tR\rsupportCardId\x12\"\n" +
	"\fmovieAssetId\x18\x03 \x01(\tR\fmovieAssetId\x12$\n" +
	"\rscreenAssetId\x18\x04 \x01(\tR\rscreenAssetId\x12)\n" +
	"\arewards\x18\x05 \x03(\v2\x0f.pcommon.RewardR\arewards\"\x8d\x01\n" +
	"\vGashaButton\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x12remainingDrawCount\x18\x02 \x01(\x05R\x12remainingDrawCount\x12>\n" +
	"\x1aremainingDiscountDrawCount\x18\x03 \x01(\x05R\x1aremainingDiscountDrawCount\"~\n" +
	"\n" +
	"GashaPoint\x12\"\n" +
	"\fgashaPointId\x18\x01 \x01(\tR\fgashaPointId\x12\x14\n" +
	"\x05point\x18\x02 \x01(\x05R\x05point\x12\"\n" +
	"\fexchangeable\x18\x03 \x01(\bR\fexchangeable\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xdc\x01\n" +
	"\x11GashaSelectPickup\x12(\n" +
	"\x0fidolCardSkinIds\x18\x02 \x03(\tR\x0fidolCardSkinIds\x12&\n" +
	"\x0esupportCardIds\x18\x03 \x03(\tR\x0esupportCardIds\x125\n" +
	"\rpickupRewards\x18\x04 \x03(\v2\x0f.pcommon.RewardR\rpickupRewards\x12 \n" +
	"\vpickupCount\x18\x05 \x01(\x05R\vpickupCount\x12\x1c\n" +
	"\tdrawCount\x18\x06 \x01(\x05R\tdrawCount\"s\n" +
	"\vGashaStepUp\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x05R\x06number\x12\x1c\n" +
	"\tisLimited\x18\x02 \x01(\bR\tisLimited\x12.\n" +
	"\x05steps\x18\x03 \x03(\v2\x18.pcommon.GashaStepUpStepR\x05steps\"\xf0\x01\n" +
	"\x0fGashaStepUpStep\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x05R\x06number\x12&\n" +
	"\x0estepLabelColor\x18\x02 \x01(\tR\x0estepLabelColor\x12$\n" +
	"\rappealAssetId\x18\x03 \x01(\tR\rappealAssetId\x12\x1c\n" +
	"\tisFeature\x18\x04 \x01(\bR\tisFeature\x123\n" +
	"\fbonusRewards\x18\x05 \x03(\v2\x0f.pcommon.RewardR\fbonusRewards\x12$\n" +
	"\rgashaButtonId\x18\x06 \x01(\tR\rgashaButtonId\"\x8b\x06\n" +
	"\fGuildMission\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x05R\x06number\x12:\n" +
	"\x18storyEventGuildMissionId\x18\x02 \x01(\tR\x18storyEventGuildMissionId\x12H\n" +
	"\x1fproduceConditionSetDescription1\x18\x03 \x01(\tR\x1fproduceConditionSetDescription1\x12H\n" +
	"\x1fproduceConditionSetDescription2\x18\x04 \x01(\tR\x1fproduceConditionSetDescription2\x12H\n" +
	"\x1fproduceConditionSetDescription3\x18\x05 \x01(\tR\x1fproduceConditionSetDescription3\x12:\n" +
	"\x18produceConditionSetCount\x18\x06 \x01(\x05R\x18produceConditionSetCount\x12\x1c\n" +
	"\tthreshold\x18\a \x01(\x05R\tthreshold\x12\x1a\n" +
	"\bprogress\x18\b \x01(\x05R\bprogress\x12'\n" +
	"\x06reward\x18\t \x01(\v2\x0f.pcommon.RewardR\x06reward\x12\x1a\n" +
	"\breceived\x18\n" +
	" \x01(\bR\breceived\x126\n" +
	"\n" +
	"mvpProfile\x18\v \x01(\v2\x16.pcommon.SimpleProfileR\n" +
	"mvpProfile\x12.\n" +
	"\x04icon\x18\f \x01(\v2\x1a.pcommon.GuildMission.IconR\x04icon\x1a\xa5\x01\n" +
	"\x04Icon\x12/\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.penum.ProduceConditionTypeR\x04type\x12 \n" +
	"\vresourceId1\x18\x02 \x01(\tR\vresourceId1\x12 \n" +
	"\vresourceId2\x18\x03 \x01(\tR\vresourceId2\x12(\n" +
	"\x05grade\x18\x04 \x01(\x0e2\x12.penum.ResultGradeR\x05grade\"\xff\x01\n" +
	"\x13GuildMissionHistory\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x05R\x06number\x12:\n" +
	"\x18storyEventGuildMissionId\x18\x02 \x01(\tR\x18storyEventGuildMissionId\x120\n" +
	"\aprofile\x18\x03 \x01(\v2\x16.pcommon.SimpleProfileR\aprofile\x12:\n" +
	"\tphaseType\x18\x04 \x01(\x0e2\x1c.penum.GuildMissionPhaseTypeR\tphaseType\x12&\n" +
	"\x0eprogressedTime\x18\x05 \x01(\x03R\x0eprogressedTime\"\x84\x01\n" +
	"\fGvgRaidGuild\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\vachievement\x18\x02 \x01(\v2\x14.pcommon.AchievementR\vachievement\x12\x14\n" +
	"\x05point\x18\x03 \x01(\x05R\x05point\x12\x12\n" +
	"\x04rank\x18\x04 \x01(\x05R\x04rank\">\n" +
	"\x10GvgRaidSetUpDeck\x12*\n" +
	"\x05slots\x18\x01 \x03(\v2\x14.pcommon.GvgRaidSlotR\x05slots\"e\n" +
	"\vGvgRaidSlot\x12*\n" +
	"\x10mainUserMemoryId\x18\x01 \x01(\tR\x10mainUserMemoryId\x12*\n" +
	"\x10subUserMemoryIds\x18\x02 \x03(\tR\x10subUserMemoryIds\"\xef\x01\n" +
	"\n" +
	"HomeBanner\x12\x18\n" +
	"\aassetId\x18\x01 \x01(\tR\aassetId\x12+\n" +
	"\blinkType\x18\x02 \x01(\x0e2\x0f.penum.LinkTypeR\blinkType\x12\x16\n" +
	"\x06linkId\x18\x03 \x01(\tR\x06linkId\x12.\n" +
	"\x12viewConditionSetId\x18\a \x01(\tR\x12viewConditionSetId\x12\x1c\n" +
	"\tstartTime\x18\x04 \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x05 \x01(\x03R\aendTime\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\"\xa2\x01\n" +
	"\x0eHomeNavigation\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x1a\n" +
	"\bnoticeId\x18\x02 \x01(\tR\bnoticeId\x12\x1c\n" +
	"\tstartTime\x18\x03 \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x04 \x01(\x03R\aendTime\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\"\xdd\x01\n" +
	"\bIdolCard\x12\x1e\n" +
	"\n" +
	"idolCardId\x18\x02 \x01(\tR\n" +
	"idolCardId\x12E\n" +
	"\x0elevelLimitRank\x18\x04 \x01(\x0e2\x1d.penum.IdolCardLevelLimitRankR\x0elevelLimitRank\x12B\n" +
	"\rpotentialRank\x18\x05 \x01(\x0e2\x1c.penum.IdolCardPotentialRankR\rpotentialRank\x12&\n" +
	"\x0eisClearTrueEnd\x18\x06 \x01(\bR\x0eisClearTrueEnd\"\xcc\x01\n" +
	"\x06Meishi\x12\"\n" +
	"\fpublicUserId\x18\x01 \x01(\tR\fpublicUserId\x123\n" +
	"\n" +
	"meishiBase\x18\x02 \x01(\v2\x13.pcommon.MeishiBaseR\n" +
	"meishiBase\x12/\n" +
	"\aobjects\x18\x03 \x03(\v2\x15.pcommon.MeishiObjectR\aobjects\x12\x1c\n" +
	"\timagePath\x18\x04 \x01(\tR\timagePath\x12\x1a\n" +
	"\btimeline\x18\x05 \x01(\tR\btimeline\"\xd4\x04\n" +
	"\n" +
	"MeishiBase\x12\"\n" +
	"\flayoutNumber\x18\x01 \x01(\x05R\flayoutNumber\x12\x1a\n" +
	"\bvertical\x18\x02 \x01(\bR\bvertical\x12*\n" +
	"\x10beforeIdolCardId\x18\n" +
	" \x01(\tR\x10beforeIdolCardId\x12(\n" +
	"\x0fafterIdolCardId\x18\v \x01(\tR\x0fafterIdolCardId\x12$\n" +
	"\rsupportCardId\x18\f \x01(\tR\rsupportCardId\x12,\n" +
	"\x11meishiBaseAssetId\x18\r \x01(\tR\x11meishiBaseAssetId\x12$\n" +
	"\rmemoryAssetId\x18\x0e \x01(\tR\rmemoryAssetId\x12\x1c\n" +
	"\timagePath\x18\x0f \x01(\tR\timagePath\x12\x1c\n" +
	"\tmoviePath\x18\x10 \x01(\tR\tmoviePath\x12\"\n" +
	"\fuserMemoryId\x18\x11 \x01(\tR\fuserMemoryId\x12 \n" +
	"\vuserPhotoId\x18\x12 \x01(\tR\vuserPhotoId\x12 \n" +
	"\vuserMovieId\x18\x13 \x01(\tR\vuserMovieId\x12,\n" +
	"\x11meishiBaseColorId\x18\x14 \x01(\tR\x11meishiBaseColorId\x122\n" +
	"\x14beforeIdolCardSkinId\x18\x15 \x01(\tR\x14beforeIdolCardSkinId\x120\n" +
	"\x13afterIdolCardSkinId\x18\x16 \x01(\tR\x13afterIdolCardSkinId\"\xc3\n" +
	"\n" +
	"\fMeishiObject\x12+\n" +
	"\x04type\x18\x01 \x01(\x0e2\x17.penum.MeishiObjectTypeR\x04type\x12\x1a\n" +
	"\buserName\x18\n" +
	" \x01(\tR\buserName\x12\x1a\n" +
	"\bvertical\x18\v \x01(\bR\bvertical\x120\n" +
	"\x13displayPublicUserId\x18\x14 \x01(\bR\x13displayPublicUserId\x12\"\n" +
	"\fpublicUserId\x18\x15 \x01(\tR\fpublicUserId\x120\n" +
	"\x13displayPvpRateGrade\x18\x16 \x01(\bR\x13displayPvpRateGrade\x12)\n" +
	"\x05grade\x18\x17 \x01(\x0e2\x13.penum.PvpRateGradeR\x05grade\x122\n" +
	"\x14displayProducerLevel\x18\x18 \x01(\bR\x14displayProducerLevel\x12$\n" +
	"\rproducerLevel\x18\x19 \x01(\x05R\rproducerLevel\x12(\n" +
	"\x0fdisplayFanCount\x18\x1a \x01(\bR\x0fdisplayFanCount\x12\x1a\n" +
	"\bfanCount\x18\x1b \x01(\x03R\bfanCount\x12&\n" +
	"\x0edisplayComment\x18\x1c \x01(\bR\x0edisplayComment\x12\x18\n" +
	"\acomment\x18\x1d \x01(\tR\acomment\x12$\n" +
	"\rachievementId\x18( \x01(\tR\rachievementId\x126\n" +
	"\vachievement\x18) \x01(\v2\x14.pcommon.AchievementR\vachievement\x12<\n" +
	"\x19meishiIllustrationAssetId\x182 \x01(\tR\x19meishiIllustrationAssetId\x12&\n" +
	"\x0eidolCardSkinId\x18< \x01(\tR\x0eidolCardSkinId\x12$\n" +
	"\rsupportCardId\x18= \x01(\tR\rsupportCardId\x12$\n" +
	"\rproduceCardId\x18> \x01(\tR\rproduceCardId\x12$\n" +
	"\rproduceItemId\x18? \x01(\tR\rproduceItemId\x12&\n" +
	"\x0eproduceDrinkId\x18@ \x01(\tR\x0eproduceDrinkId\x12\x1c\n" +
	"\timagePath\x18A \x01(\tR\timagePath\x12\x1c\n" +
	"\tmoviePath\x18B \x01(\tR\tmoviePath\x12 \n" +
	"\vuserPhotoId\x18C \x01(\tR\vuserPhotoId\x12\"\n" +
	"\fuserMemoryId\x18D \x01(\tR\fuserMemoryId\x12 \n" +
	"\vuserMovieId\x18E \x01(\tR\vuserMovieId\x12,\n" +
	"\x11meishiBaseAssetId\x18F \x01(\tR\x11meishiBaseAssetId\x12$\n" +
	"\rmemoryAssetId\x18G \x01(\tR\rmemoryAssetId\x12,\n" +
	"\x11meishiTextColorId\x18d \x01(\tR\x11meishiTextColorId\x12\x1c\n" +
	"\tpositionX\x18e \x01(\x05R\tpositionX\x12\x1c\n" +
	"\tpositionY\x18f \x01(\x05R\tpositionY\x12\x12\n" +
	"\x04size\x18g \x01(\x05R\x04size\x12\x12\n" +
	"\x04lock\x18h \x01(\bR\x04lock\x12\x1e\n" +
	"\n" +
	"background\x18i \x01(\bR\n" +
	"background\x12\x14\n" +
	"\x05layer\x18j \x01(\x05R\x05layer\x12\x1b\n" +
	"\bmetadata\x18\xe7\a \x01(\tR\bmetadata\"\xf7\a\n" +
	"\x06Memory\x12\"\n" +
	"\fuserMemoryId\x18\x01 \x01(\tR\fuserMemoryId\x12\x18\n" +
	"\aassetId\x18\x02 \x01(\tR\aassetId\x12\x1c\n" +
	"\timagePath\x18\x03 \x01(\tR\timagePath\x12(\n" +
	"\x05grade\x18\x04 \x01(\x0e2\x12.penum.ResultGradeR\x05grade\x12\x14\n" +
	"\x05power\x18\x05 \x01(\x05R\x05power\x12 \n" +
	"\vcharacterId\x18\x06 \x01(\tR\vcharacterId\x12\x1e\n" +
	"\n" +
	"idolCardId\x18\a \x01(\tR\n" +
	"idolCardId\x12&\n" +
	"\x0eidolCardSkinId\x18\b \x01(\tR\x0eidolCardSkinId\x122\n" +
	"\bplanType\x18\t \x01(\x0e2\x16.penum.ProducePlanTypeR\bplanType\x12U\n" +
	"\x16idolCardLevelLimitRank\x18\n" +
	" \x01(\x0e2\x1d.penum.IdolCardLevelLimitRankR\x16idolCardLevelLimitRank\x12R\n" +
	"\x15idolCardPotentialRank\x18\v \x01(\x0e2\x1c.penum.IdolCardPotentialRankR\x15idolCardPotentialRank\x12*\n" +
	"\x10noProduceHistory\x18\f \x01(\bR\x10noProduceHistory\x12(\n" +
	"\x0fisHighScoreRush\x18\x0e \x01(\bR\x0fisHighScoreRush\x126\n" +
	"\vproduceCard\x18\x14 \x01(\v2\x14.pcommon.ProduceCardR\vproduceCard\x12\\\n" +
	"\x14produceCardPhaseType\x18\x15 \x01(\x0e2(.penum.ProduceMemoryProduceCardPhaseTypeR\x14produceCardPhaseType\x124\n" +
	"\tabilities\x18\x16 \x03(\v2\x16.pcommon.MemoryAbilityR\tabilities\x12\x14\n" +
	"\x05vocal\x18\x1e \x01(\x05R\x05vocal\x12\x14\n" +
	"\x05dance\x18\x1f \x01(\x05R\x05dance\x12\x16\n" +
	"\x06visual\x18  \x01(\x05R\x06visual\x12\x18\n" +
	"\astamina\x18! \x01(\x05R\astamina\x12L\n" +
	"\x16examBattleProduceCards\x18\" \x03(\v2\x14.pcommon.ProduceCardR\x16examBattleProduceCards\x12:\n" +
	"\x18examBattleProduceItemIds\x18# \x03(\tR\x18examBattleProduceItemIds\"5\n" +
	"\rMemoryAbility\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\"\xb6\x04\n" +
	"\x0fProduceCampaign\x12.\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1a.penum.ProduceCampaignTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aassetId\x18\x04 \x01(\tR\aassetId\x12&\n" +
	"\x0eproduceGroupId\x18\x05 \x01(\tR\x0eproduceGroupId\x12\x1c\n" +
	"\tproduceId\x18\x06 \x01(\tR\tproduceId\x12\x1e\n" +
	"\n" +
	"dailyCount\x18\a \x01(\x05R\n" +
	"dailyCount\x12\x1c\n" +
	"\ttermCount\x18\b \x01(\x05R\ttermCount\x12&\n" +
	"\x0eremainingCount\x18\t \x01(\x05R\x0eremainingCount\x12\x16\n" +
	"\x06isHalf\x18\x14 \x01(\bR\x06isHalf\x12,\n" +
	"\x11memoryRentalCount\x18\x1e \x01(\x05R\x11memoryRentalCount\x125\n" +
	"\rappealRewards\x18( \x03(\v2\x0f.pcommon.RewardR\rappealRewards\x12,\n" +
	"\x11memoryRerollCount\x18< \x01(\x05R\x11memoryRerollCount\x12\x1c\n" +
	"\tstartTime\x18a \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18b \x01(\x03R\aendTime\x12\x14\n" +
	"\x05order\x18c \x01(\x05R\x05order\"\x80\x01\n" +
	"\vProduceCard\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\fupgradeCount\x18\x02 \x01(\x05R\fupgradeCount\x12=\n" +
	"\n" +
	"customizes\x18\x03 \x03(\v2\x1d.pcommon.ProduceCardCustomizeR\n" +
	"customizes\"N\n" +
	"\x14ProduceCardCustomize\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12&\n" +
	"\x0ecustomizeCount\x18\x02 \x01(\x05R\x0ecustomizeCount\"\xe4\x01\n" +
	"\x18ProduceConsumptionResult\x12>\n" +
	"\fresourceType\x18\x01 \x01(\x0e2\x1a.penum.ProduceResourceTypeR\fresourceType\x12\x1e\n" +
	"\n" +
	"resourceId\x18\x02 \x01(\tR\n" +
	"resourceId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x12&\n" +
	"\x0ebeforeQuantity\x18\x04 \x01(\x05R\x0ebeforeQuantity\x12$\n" +
	"\rafterQuantity\x18\x05 \x01(\x05R\rafterQuantity\"\xb7\t\n" +
	"\x19ProduceDescriptionSegment\x12U\n" +
	"\x16produceDescriptionType\x18\x01 \x01(\x0e2\x1d.penum.ProduceDescriptionTypeR\x16produceDescriptionType\x12L\n" +
	"\x13examDescriptionType\x18\x02 \x01(\x0e2\x1a.penum.ExamDescriptionTypeR\x13examDescriptionType\x12D\n" +
	"\x0eexamEffectType\x18\x03 \x01(\x0e2\x1c.penum.ProduceExamEffectTypeR\x0eexamEffectType\x12^\n" +
	"\x19produceCardGrowEffectType\x18\x04 \x01(\x0e2 .penum.ProduceCardGrowEffectTypeR\x19produceCardGrowEffectType\x12L\n" +
	"\x13produceCardCategory\x18\x05 \x01(\x0e2\x1a.penum.ProduceCardCategoryR\x13produceCardCategory\x12d\n" +
	"\x1bproduceCardMovePositionType\x18\x06 \x01(\x0e2\".penum.ProduceCardMovePositionTypeR\x1bproduceCardMovePositionType\x12@\n" +
	"\x0fproduceStepType\x18\a \x01(\x0e2\x16.penum.ProduceStepTypeR\x0fproduceStepType\x12\x12\n" +
	"\x04text\x18d \x01(\tR\x04text\x12\x1a\n" +
	"\btargetId\x18e \x01(\tR\btargetId\x12 \n" +
	"\vtargetLevel\x18f \x01(\x05R\vtargetLevel\x12\"\n" +
	"\feffectValue1\x18g \x01(\x05R\feffectValue1\x12\"\n" +
	"\feffectValue2\x18h \x01(\x05R\feffectValue2\x12 \n" +
	"\veffectCount\x18i \x01(\x05R\veffectCount\x12\x12\n" +
	"\x04turn\x18j \x01(\x05R\x04turn\x12\x1c\n" +
	"\tcostValue\x18k \x01(\x05R\tcostValue\x12;\n" +
	"\x18produceDescriptionSwapId\x18\xc8\x01 \x01(\tR\x18produceDescriptionSwapId\x12?\n" +
	"\x1aoriginProduceExamTriggerId\x18\xc9\x01 \x01(\tR\x1aoriginProduceExamTriggerId\x12=\n" +
	"\x19originProduceExamEffectId\x18\xca\x01 \x01(\tR\x19originProduceExamEffectId\x12K\n" +
	" originProduceCardStatusEnchantId\x18\xcb\x01 \x01(\tR originProduceCardStatusEnchantId\x12\x17\n" +
	"\x06isCost\x18\xd2\x01 \x01(\bR\x06isCost\x12%\n" +
	"\risOnlyOutGame\x18\xe8\a \x01(\bR\risOnlyOutGame\x12!\n" +
	"\vchangeColor\x18\xe9\a \x01(\bR\vchangeColor\"\x90\t\n" +
	"\x13ProduceEffectResult\x128\n" +
	"\n" +
	"effectType\x18\x01 \x01(\x0e2\x18.penum.ProduceEffectTypeR\n" +
	"effectType\x12(\n" +
	"\x0fproduceEffectId\x18\x02 \x01(\tR\x0fproduceEffectId\x125\n" +
	"\x06origin\x18\x03 \x01(\v2\x1d.pcommon.ProduceTriggerOriginR\x06origin\x12 \n" +
	"\veffectValue\x18\x04 \x01(\x05R\veffectValue\x12&\n" +
	"\x0eeffectTargetId\x18\x05 \x01(\tR\x0eeffectTargetId\x12*\n" +
	"\x10beforeMaxStamina\x18\x06 \x01(\x05R\x10beforeMaxStamina\x12(\n" +
	"\x0fafterMaxStamina\x18\a \x01(\x05R\x0fafterMaxStamina\x12$\n" +
	"\rbeforeStamina\x18\b \x01(\x05R\rbeforeStamina\x12\"\n" +
	"\fafterStamina\x18\t \x01(\x05R\fafterStamina\x12.\n" +
	"\x12beforeProducePoint\x18\n" +
	" \x01(\x05R\x12beforeProducePoint\x12,\n" +
	"\x11afterProducePoint\x18\v \x01(\x05R\x11afterProducePoint\x12(\n" +
	"\x0fbeforeVoteCount\x18\x15 \x01(\x05R\x0fbeforeVoteCount\x12&\n" +
	"\x0eafterVoteCount\x18\x16 \x01(\x05R\x0eafterVoteCount\x12 \n" +
	"\vbeforeVocal\x18\f \x01(\x05R\vbeforeVocal\x12\x1e\n" +
	"\n" +
	"afterVocal\x18\r \x01(\x05R\n" +
	"afterVocal\x12 \n" +
	"\vbeforeDance\x18\x0e \x01(\x05R\vbeforeDance\x12\x1e\n" +
	"\n" +
	"afterDance\x18\x0f \x01(\x05R\n" +
	"afterDance\x12\"\n" +
	"\fbeforeVisual\x18\x10 \x01(\x05R\fbeforeVisual\x12 \n" +
	"\vafterVisual\x18\x11 \x01(\x05R\vafterVisual\x12D\n" +
	"\x12beforeProduceCards\x18\x12 \x03(\v2\x14.pcommon.ProduceCardR\x12beforeProduceCards\x12B\n" +
	"\x11afterProduceCards\x18\x13 \x03(\v2\x14.pcommon.ProduceCardR\x11afterProduceCards\x12F\n" +
	"\x0fprovidedRewards\x18\x14 \x03(\v2\x1c.pcommon.ProduceRewardResultR\x0fprovidedRewards\x120\n" +
	"\x13beforeHighScoreGold\x18P \x01(\x05R\x13beforeHighScoreGold\x12.\n" +
	"\x12afterHighScoreGold\x18Q \x01(\x05R\x12afterHighScoreGold\x12$\n" +
	"\reffectNumbers\x18c \x03(\x05R\reffectNumbers\x12 \n" +
	"\vineffective\x18d \x01(\bR\vineffective\"\xe7\x03\n" +
	"\x14ProduceExamEndResult\x122\n" +
	"\bstepType\x18\x01 \x01(\x0e2\x16.penum.ProduceStepTypeR\bstepType\x12(\n" +
	"\x0fproduceDrinkIds\x18\x02 \x03(\tR\x0fproduceDrinkIds\x128\n" +
	"\fproduceItems\x18\x03 \x03(\v2\x14.pcommon.ProduceItemR\fproduceItems\x12\"\n" +
	"\fproducePoint\x18\x04 \x01(\x05R\fproducePoint\x12\x18\n" +
	"\astamina\x18\x05 \x01(\x05R\astamina\x12\x1e\n" +
	"\n" +
	"maxStamina\x18\x06 \x01(\x05R\n" +
	"maxStamina\x12,\n" +
	"\x11resultTargetValue\x18\a \x01(\x05R\x11resultTargetValue\x12*\n" +
	"\x10successThreshold\x18\b \x01(\x05R\x10successThreshold\x126\n" +
	"\x16resultTargetValueLimit\x18\t \x01(\x05R\x16resultTargetValueLimit\x12G\n" +
	"\x11examTriggerCounts\x18\n" +
	" \x03(\v2\x19.pcommon.ExamTriggerCountR\x11examTriggerCounts\"\xba\r\n" +
	"\x0eProduceHistory\x12\x1c\n" +
	"\tproduceId\x18\x01 \x01(\tR\tproduceId\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x05R\x05score\x12(\n" +
	"\x05grade\x18\x03 \x01(\x0e2\x12.penum.ResultGradeR\x05grade\x12\x1a\n" +
	"\buserName\x18\x04 \x01(\tR\buserName\x12$\n" +
	"\rproducerLevel\x18\x05 \x01(\x05R\rproducerLevel\x12 \n" +
	"\vclearedTime\x18\x06 \x01(\x03R\vclearedTime\x12\x1e\n" +
	"\n" +
	"idolCardId\x18\a \x01(\tR\n" +
	"idolCardId\x12&\n" +
	"\x0eidolCardSkinId\x18\b \x01(\tR\x0eidolCardSkinId\x12E\n" +
	"\x0elevelLimitRank\x18\t \x01(\x0e2\x1d.penum.IdolCardLevelLimitRankR\x0elevelLimitRank\x12B\n" +
	"\rpotentialRank\x18\n" +
	" \x01(\x0e2\x1c.penum.IdolCardPotentialRankR\rpotentialRank\x12D\n" +
	"\x13trueEndProduceTypes\x18\v \x03(\x0e2\x12.penum.ProduceTypeR\x13trueEndProduceTypes\x12>\n" +
	"\tauditions\x18\f \x03(\v2 .pcommon.ProduceHistory.AuditionR\tauditions\x12S\n" +
	"\x10deckSupportCards\x18\x14 \x03(\v2'.pcommon.ProduceHistory.DeckSupportCardR\x10deckSupportCards\x12F\n" +
	"\fdeckMemories\x18\x15 \x03(\v2\".pcommon.ProduceHistory.DeckMemoryR\fdeckMemories\x12K\n" +
	"\fproduceCards\x18\x16 \x03(\v2'.pcommon.ProduceHistory.DeckProduceCardR\fproduceCards\x12&\n" +
	"\x0eproduceItemIds\x18\x17 \x03(\tR\x0eproduceItemIds\x12'\n" +
	"\x06memory\x18\x18 \x01(\v2\x0f.pcommon.MemoryR\x06memory\x12\x14\n" +
	"\x05vocal\x18\x1e \x01(\x05R\x05vocal\x12\x14\n" +
	"\x05dance\x18\x1f \x01(\x05R\x05dance\x12\x16\n" +
	"\x06visual\x18  \x01(\x05R\x06visual\x124\n" +
	"\x15vocalGrowthRatePermil\x18! \x01(\x05R\x15vocalGrowthRatePermil\x124\n" +
	"\x15danceGrowthRatePermil\x18\" \x01(\x05R\x15danceGrowthRatePermil\x126\n" +
	"\x16visualGrowthRatePermil\x18# \x01(\x05R\x16visualGrowthRatePermil\x12\x1e\n" +
	"\n" +
	"maxStamina\x18$ \x01(\x05R\n" +
	"maxStamina\x12\x1c\n" +
	"\tvoteCount\x18% \x01(\x05R\tvoteCount\x12(\n" +
	"\x0fisHighScoreRush\x18d \x01(\bR\x0fisHighScoreRush\x12$\n" +
	"\rhighScoreGold\x18e \x01(\x05R\rhighScoreGold\x1a~\n" +
	"\bAudition\x122\n" +
	"\bstepType\x18\x01 \x01(\x0e2\x16.penum.ProduceStepTypeR\bstepType\x12*\n" +
	"\x10stepSelectNumber\x18\x02 \x01(\x05R\x10stepSelectNumber\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x05R\x04rank\x1aQ\n" +
	"\n" +
	"DeckMemory\x12'\n" +
	"\x06memory\x18\x01 \x01(\v2\x0f.pcommon.MemoryR\x06memory\x12\x1a\n" +
	"\bisRental\x18\x02 \x01(\bR\bisRental\x1ai\n" +
	"\x0fDeckProduceCard\x126\n" +
	"\vproduceCard\x18\x01 \x01(\v2\x14.pcommon.ProduceCardR\vproduceCard\x12\x1e\n" +
	"\n" +
	"fromMemory\x18\x02 \x01(\bR\n" +
	"fromMemory\x1a\x9d\x01\n" +
	"\x0fDeckSupportCard\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\x12H\n" +
	"\x0elevelLimitRank\x18\x03 \x01(\x0e2 .penum.SupportCardLevelLimitRankR\x0elevelLimitRank\x12\x1a\n" +
	"\bisRental\x18\x04 \x01(\bR\bisRental\"Q\n" +
	"\vProduceItem\x12$\n" +
	"\rproduceItemId\x18\x01 \x01(\tR\rproduceItemId\x12\x1c\n" +
	"\tfireCount\x18\x02 \x01(\x05R\tfireCount\"\xdd\x04\n" +
	"\x19ProduceLessonGrowthResult\x12\x14\n" +
	"\x05vocal\x18\x01 \x01(\x05R\x05vocal\x12\x14\n" +
	"\x05dance\x18\x02 \x01(\x05R\x05dance\x12\x16\n" +
	"\x06visual\x18\x03 \x01(\x05R\x06visual\x12&\n" +
	"\x0ehardBonusVocal\x18\x04 \x01(\x05R\x0ehardBonusVocal\x12&\n" +
	"\x0ehardBonusDance\x18\x05 \x01(\x05R\x0ehardBonusDance\x12(\n" +
	"\x0fhardBonusVisual\x18\x06 \x01(\x05R\x0fhardBonusVisual\x122\n" +
	"\x14growthRateBonusVocal\x18\a \x01(\x05R\x14growthRateBonusVocal\x122\n" +
	"\x14growthRateBonusDance\x18\b \x01(\x05R\x14growthRateBonusDance\x124\n" +
	"\x15growthRateBonusVisual\x18\t \x01(\x05R\x15growthRateBonusVisual\x12J\n" +
	" auditionParameterGrowthRateVocal\x18\n" +
	" \x01(\x05R auditionParameterGrowthRateVocal\x12J\n" +
	" auditionParameterGrowthRateDance\x18\v \x01(\x05R auditionParameterGrowthRateDance\x12L\n" +
	"!auditionParameterGrowthRateVisual\x18\f \x01(\x05R!auditionParameterGrowthRateVisual\"\x9a\x01\n" +
	"\x19ProduceMemoryRewardResult\x12F\n" +
	"\x0fprovidedRewards\x18\x01 \x03(\v2\x1c.pcommon.ProduceRewardResultR\x0fprovidedRewards\x125\n" +
	"\x06origin\x18d \x01(\v2\x1d.pcommon.ProduceTriggerOriginR\x06origin\"\xf6\x01\n" +
	"\x13ProduceRewardResult\x12>\n" +
	"\fresourceType\x18\x01 \x01(\x0e2\x1a.penum.ProduceResourceTypeR\fresourceType\x12\x1e\n" +
	"\n" +
	"resourceId\x18\x02 \x01(\tR\n" +
	"resourceId\x12$\n" +
	"\rresourceLevel\x18\x03 \x01(\x05R\rresourceLevel\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12=\n" +
	"\n" +
	"customizes\x18\x05 \x03(\v2\x1d.pcommon.ProduceCardCustomizeR\n" +
	"customizes\"\xbb\x01\n" +
	"\x14ProduceTriggerOrigin\x12?\n" +
	"\n" +
	"originType\x18\x01 \x01(\x0e2\x1f.penum.ProduceTriggerOriginTypeR\n" +
	"originType\x12$\n" +
	"\roriginOwnerId\x18\x02 \x01(\tR\roriginOwnerId\x12\x1a\n" +
	"\boriginId\x18\x03 \x01(\tR\boriginId\x12 \n" +
	"\voriginLevel\x18\x04 \x01(\x05R\voriginLevel\"\xc7\x01\n" +
	"\x13ProducerLevelUnlock\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12<\n" +
	"\atargets\x18\x02 \x03(\v2\".pcommon.ProducerLevelUnlockTargetR\atargets\x12'\n" +
	"\x06reward\x18\x03 \x01(\v2\x0f.pcommon.RewardR\x06reward\x123\n" +
	"\fbonusRewards\x18\x04 \x03(\v2\x0f.pcommon.RewardR\fbonusRewards\"{\n" +
	"\x19ProducerLevelUnlockTarget\x122\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1e.penum.ProducerLevelUnlockTypeR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\"\xe9\x01\n" +
	"\x17PvpRateExamBattleResult\x12T\n" +
	"\x15examBattleAutoRequest\x18\x01 \x01(\v2\x1e.pcommon.ExamBattleAutoRequestR\x15examBattleAutoRequest\x12:\n" +
	"\x18selfStageResultScoreList\x18\x02 \x03(\x05R\x18selfStageResultScoreList\x12<\n" +
	"\x19rivalStageResultScoreList\x18\x03 \x03(\x05R\x19rivalStageResultScoreList\"\xf1\x01\n" +
	"\x1ePvpRateSetupUnitStageFormation\x12-\n" +
	"\x05stage\x18\x01 \x01(\x0e2\x17.penum.PvpRateStageTypeR\x05stage\x12B\n" +
	"\x05slots\x18\x02 \x03(\v2,.pcommon.PvpRateSetupUnitStageFormation.SlotR\x05slots\x1a\\\n" +
	"\x04Slot\x12*\n" +
	"\x10mainUserMemoryId\x18\x01 \x01(\tR\x10mainUserMemoryId\x12(\n" +
	"\x0fsubUserMemoryId\x18\x02 \x01(\tR\x0fsubUserMemoryId\"}\n" +
	"\x06Reward\x127\n" +
	"\fresourceType\x18\x01 \x01(\x0e2\x13.penum.ResourceTypeR\fresourceType\x12\x1e\n" +
	"\n" +
	"resourceId\x18\x02 \x01(\tR\n" +
	"resourceId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\"\xe3\x02\n" +
	"\fRewardResult\x127\n" +
	"\fresourceType\x18\x01 \x01(\x0e2\x13.penum.ResourceTypeR\fresourceType\x12\x1e\n" +
	"\n" +
	"resourceId\x18\x02 \x01(\tR\n" +
	"resourceId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x12&\n" +
	"\x0ebeforeQuantity\x18\x04 \x01(\x03R\x0ebeforeQuantity\x12$\n" +
	"\rafterQuantity\x18\x05 \x01(\x03R\rafterQuantity\x12\x14\n" +
	"\x05isNew\x18\x06 \x01(\bR\x05isNew\x12\x1e\n" +
	"\n" +
	"isTruncate\x18\a \x01(\bR\n" +
	"isTruncate\x12\x16\n" +
	"\x06isGift\x18\b \x01(\bR\x06isGift\x12\x1e\n" +
	"\n" +
	"isCampaign\x18\t \x01(\bR\n" +
	"isCampaign\x12\"\n" +
	"\fisItemEffect\x18\n" +
	" \x01(\bR\fisItemEffect\"\xc6\x01\n" +
	"\rSimpleProfile\x12\"\n" +
	"\fpublicUserId\x18\x01 \x01(\tR\fpublicUserId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12$\n" +
	"\rlastLoginTime\x18\x04 \x01(\x03R\rlastLoginTime\x12\x18\n" +
	"\acomment\x18\x06 \x01(\tR\acomment\x12'\n" +
	"\x06meishi\x18\a \x01(\v2\x0f.pcommon.MeishiR\x06meishi\"\xf2\x04\n" +
	"\x13StartupNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.penum.StartupNotificationTypeR\x04type\x12D\n" +
	"\n" +
	"effectType\x18\x0e \x01(\x0e2$.penum.StartupNotificationEffectTypeR\n" +
	"effectType\x126\n" +
	"\x16horizontalMovieAssetId\x18\x03 \x01(\tR\x16horizontalMovieAssetId\x122\n" +
	"\x14verticalMovieAssetId\x18\x04 \x01(\tR\x14verticalMovieAssetId\x12\x1c\n" +
	"\tlinkTitle\x18\x05 \x01(\tR\tlinkTitle\x12+\n" +
	"\blinkType\x18\x06 \x01(\x0e2\x0f.penum.LinkTypeR\blinkType\x12\x16\n" +
	"\x06linkId\x18\a \x01(\tR\x06linkId\x12\x18\n" +
	"\astoryId\x18\b \x01(\tR\astoryId\x12\"\n" +
	"\fimageAssetId\x18\t \x01(\tR\fimageAssetId\x12\x1a\n" +
	"\bnoticeId\x18\n" +
	" \x01(\tR\bnoticeId\x12\x1e\n" +
	"\n" +
	"shopItemId\x18\v \x01(\tR\n" +
	"shopItemId\x126\n" +
	"\x16shopItemPurchasedCount\x18\f \x01(\x05R\x16shopItemPurchasedCount\x124\n" +
	"\x15shopItemNextResetTime\x18\r \x01(\x03R\x15shopItemNextResetTime\x12\x1a\n" +
	"\bpriority\x18c \x01(\x05R\bpriority\"\x8a\n" +
	"\n" +
	"\x0fStoryEventBonus\x12S\n" +
	"\x10characterBonuses\x18\x01 \x03(\v2'.pcommon.StoryEventBonus.CharacterBonusR\x10characterBonuses\x12P\n" +
	"\x0fidolCardBonuses\x18\x02 \x03(\v2&.pcommon.StoryEventBonus.IdolCardBonusR\x0fidolCardBonuses\x12Y\n" +
	"\x12supportCardBonuses\x18\x03 \x03(\v2).pcommon.StoryEventBonus.SupportCardBonusR\x12supportCardBonuses\x1a\x87\x03\n" +
	"\x0eCharacterBonus\x12\"\n" +
	"\fcharacterIds\x18\x01 \x03(\tR\fcharacterIds\x12\x16\n" +
	"\x06permil\x18\x02 \x01(\x05R\x06permil\x12A\n" +
	"\x10idolCardRarities\x18\x03 \x03(\x0e2\x15.penum.IdolCardRarityR\x10idolCardRarities\x12~\n" +
	"\x19potentialRankBonusPermils\x18\x04 \x03(\v2@.pcommon.StoryEventBonus.CharacterBonus.PotentialRankBonusPermilR\x19potentialRankBonusPermils\x1av\n" +
	"\x18PotentialRankBonusPermil\x12B\n" +
	"\rpotentialRank\x18\x01 \x01(\x0e2\x1c.penum.IdolCardPotentialRankR\rpotentialRank\x12\x16\n" +
	"\x06permil\x18\x02 \x01(\x05R\x06permil\x1a\xa8\x02\n" +
	"\rIdolCardBonus\x12 \n" +
	"\vidolCardIds\x18\x01 \x03(\tR\vidolCardIds\x12}\n" +
	"\x19potentialRankBonusPermils\x18\x02 \x03(\v2?.pcommon.StoryEventBonus.IdolCardBonus.PotentialRankBonusPermilR\x19potentialRankBonusPermils\x1av\n" +
	"\x18PotentialRankBonusPermil\x12B\n" +
	"\rpotentialRank\x18\x01 \x01(\x0e2\x1c.penum.IdolCardPotentialRankR\rpotentialRank\x12\x16\n" +
	"\x06permil\x18\x02 \x01(\x05R\x06permil\x1a\xbf\x02\n" +
	"\x10SupportCardBonus\x12&\n" +
	"\x0esupportCardIds\x18\x01 \x03(\tR\x0esupportCardIds\x12\x83\x01\n" +
	"\x1alevelLimitRankBonusPermils\x18\x02 \x03(\v2C.pcommon.StoryEventBonus.SupportCardBonus.LevelLimitRankBonusPermilR\x1alevelLimitRankBonusPermils\x1a}\n" +
	"\x19LevelLimitRankBonusPermil\x12H\n" +
	"\x0elevelLimitRank\x18\x01 \x01(\x0e2 .penum.SupportCardLevelLimitRankR\x0elevelLimitRank\x12\x16\n" +
	"\x06permil\x18\x02 \x01(\x05R\x06permil\"\xaa\x01\n" +
	"\x15StoryEventPointReward\x12\x14\n" +
	"\x05point\x18\x01 \x01(\x05R\x05point\x12'\n" +
	"\x06reward\x18\x03 \x01(\v2\x0f.pcommon.RewardR\x06reward\x12\x18\n" +
	"\afeature\x18\x04 \x01(\bR\afeature\x12\x16\n" +
	"\x06repeat\x18\x05 \x01(\bR\x06repeat\x12 \n" +
	"\vrepeatPoint\x18\x06 \x01(\x05R\vrepeatPoint\"\xd2\t\n" +
	"\x17StoryEventProduceResult\x12N\n" +
	"\vpointResult\x18\x01 \x01(\v2,.pcommon.StoryEventProduceResult.PointResultR\vpointResult\x12K\n" +
	"\n" +
	"coinResult\x18\x02 \x01(\v2+.pcommon.StoryEventProduceResult.CoinResultR\n" +
	"coinResult\x12;\n" +
	"\rrewardResults\x18\x03 \x03(\v2\x15.pcommon.RewardResultR\rrewardResults\x12=\n" +
	"\x0estoryEventType\x18\n" +
	" \x01(\x0e2\x15.penum.StoryEventTypeR\x0estoryEventType\x12\"\n" +
	"\ftitleAssetId\x18\v \x01(\tR\ftitleAssetId\x12\"\n" +
	"\fstoryGroupId\x18\f \x01(\tR\fstoryGroupId\x12(\n" +
	"\x0fgradationColor1\x18\r \x01(\tR\x0fgradationColor1\x12(\n" +
	"\x0fgradationColor2\x18\x0e \x01(\tR\x0fgradationColor2\x12,\n" +
	"\x11backgroundAssetId\x18\x0f \x01(\tR\x11backgroundAssetId\x12\x1e\n" +
	"\n" +
	"bgmAssetId\x18\x10 \x01(\tR\n" +
	"bgmAssetId\x12$\n" +
	"\rsceneLayoutId\x18\x11 \x01(\tR\rsceneLayoutId\x128\n" +
	"\x17sceneLayoutCollectionId\x18\x12 \x01(\tR\x17sceneLayoutCollectionId\x12,\n" +
	"\x11consumptionItemId\x18\x13 \x01(\tR\x11consumptionItemId\x1a\x85\x02\n" +
	"\n" +
	"CoinResult\x12\"\n" +
	"\fstoryEventId\x18\x01 \x01(\tR\fstoryEventId\x127\n" +
	"\fresourceType\x18\x02 \x01(\x0e2\x13.penum.ResourceTypeR\fresourceType\x12\x1e\n" +
	"\n" +
	"resourceId\x18\x03 \x01(\tR\n" +
	"resourceId\x12*\n" +
	"\x10baseCoinQuantity\x18\x04 \x01(\x05R\x10baseCoinQuantity\x12,\n" +
	"\x11bonusCoinQuantity\x18\x05 \x01(\x05R\x11bonusCoinQuantity\x12 \n" +
	"\vbonusPermil\x18\x06 \x01(\x05R\vbonusPermil\x1a\x9d\x02\n" +
	"\vPointResult\x12\"\n" +
	"\fstoryEventId\x18\x01 \x01(\tR\fstoryEventId\x12 \n" +
	"\vbonusPermil\x18\x02 \x01(\x05R\vbonusPermil\x12 \n" +
	"\vbeforePoint\x18\x03 \x01(\x05R\vbeforePoint\x12\x1e\n" +
	"\n" +
	"afterPoint\x18\x04 \x01(\x05R\n" +
	"afterPoint\x12>\n" +
	"\n" +
	"allRewards\x18\x05 \x03(\v2\x1e.pcommon.StoryEventPointRewardR\n" +
	"allRewards\x12F\n" +
	"\x0eprovideRewards\x18\x06 \x03(\v2\x1e.pcommon.StoryEventPointRewardR\x0eprovideRewards\"}\n" +
	"\vSupportCard\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\x12H\n" +
	"\x0elevelLimitRank\x18\x03 \x01(\x0e2 .penum.SupportCardLevelLimitRankR\x0elevelLimitRank\"\xac\x02\n" +
	"\x11TowerLayerHistory\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\"\n" +
	"\fpublicUserId\x18\x02 \x01(\tR\fpublicUserId\x12\x1a\n" +
	"\buserName\x18\x03 \x01(\tR\buserName\x12$\n" +
	"\rproducerLevel\x18\x04 \x01(\x05R\rproducerLevel\x12\x1c\n" +
	"\tclearRank\x18\x05 \x01(\x05R\tclearRank\x12\x14\n" +
	"\x05score\x18\x06 \x01(\x05R\x05score\x12+\n" +
	"\bmemories\x18\a \x03(\v2\x0f.pcommon.MemoryR\bmemories\x12\x1c\n" +
	"\tisDefault\x18\b \x01(\bR\tisDefault\x12\x1a\n" +
	"\bplayTime\x18\t \x01(\x03R\bplayTimeB\x1fZ\x1dvertesan/campus/proto/pcommonb\x06proto3"

var (
	file_pcommon_proto_rawDescOnce sync.Once
	file_pcommon_proto_rawDescData []byte
)

func file_pcommon_proto_rawDescGZIP() []byte {
	file_pcommon_proto_rawDescOnce.Do(func() {
		file_pcommon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pcommon_proto_rawDesc), len(file_pcommon_proto_rawDesc)))
	})
	return file_pcommon_proto_rawDescData
}

var file_pcommon_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_pcommon_proto_goTypes = []any{
	(*Achievement)(nil),                         // 0: pcommon.Achievement
	(*AntiCheatCriticalResult)(nil),             // 1: pcommon.AntiCheatCriticalResult
	(*AntiCheatSummaryResult)(nil),              // 2: pcommon.AntiCheatSummaryResult
	(*CoinGasha)(nil),                           // 3: pcommon.CoinGasha
	(*CoinGashaBox)(nil),                        // 4: pcommon.CoinGashaBox
	(*CoinGashaDrawCountReward)(nil),            // 5: pcommon.CoinGashaDrawCountReward
	(*CoinGashaReward)(nil),                     // 6: pcommon.CoinGashaReward
	(*ConsumptionResult)(nil),                   // 7: pcommon.ConsumptionResult
	(*Event)(nil),                               // 8: pcommon.Event
	(*ExamAiBaseModel)(nil),                     // 9: pcommon.ExamAiBaseModel
	(*ExamAntiCheatTarget)(nil),                 // 10: pcommon.ExamAntiCheatTarget
	(*ExamBattleAutoPlayer)(nil),                // 11: pcommon.ExamBattleAutoPlayer
	(*ExamBattleAutoRequest)(nil),               // 12: pcommon.ExamBattleAutoRequest
	(*ExamBattleAutoStage)(nil),                 // 13: pcommon.ExamBattleAutoStage
	(*ExamBattleAutoStageResult)(nil),           // 14: pcommon.ExamBattleAutoStageResult
	(*ExamBattleResult)(nil),                    // 15: pcommon.ExamBattleResult
	(*ExamCommandLog)(nil),                      // 16: pcommon.ExamCommandLog
	(*ExamTriggerCount)(nil),                    // 17: pcommon.ExamTriggerCount
	(*ExamTurnEndLog)(nil),                      // 18: pcommon.ExamTurnEndLog
	(*Gasha)(nil),                               // 19: pcommon.Gasha
	(*GashaBackgroundPickup)(nil),               // 20: pcommon.GashaBackgroundPickup
	(*GashaButton)(nil),                         // 21: pcommon.GashaButton
	(*GashaPoint)(nil),                          // 22: pcommon.GashaPoint
	(*GashaSelectPickup)(nil),                   // 23: pcommon.GashaSelectPickup
	(*GashaStepUp)(nil),                         // 24: pcommon.GashaStepUp
	(*GashaStepUpStep)(nil),                     // 25: pcommon.GashaStepUpStep
	(*GuildMission)(nil),                        // 26: pcommon.GuildMission
	(*GuildMissionHistory)(nil),                 // 27: pcommon.GuildMissionHistory
	(*GvgRaidGuild)(nil),                        // 28: pcommon.GvgRaidGuild
	(*GvgRaidSetUpDeck)(nil),                    // 29: pcommon.GvgRaidSetUpDeck
	(*GvgRaidSlot)(nil),                         // 30: pcommon.GvgRaidSlot
	(*HomeBanner)(nil),                          // 31: pcommon.HomeBanner
	(*HomeNavigation)(nil),                      // 32: pcommon.HomeNavigation
	(*IdolCard)(nil),                            // 33: pcommon.IdolCard
	(*Meishi)(nil),                              // 34: pcommon.Meishi
	(*MeishiBase)(nil),                          // 35: pcommon.MeishiBase
	(*MeishiObject)(nil),                        // 36: pcommon.MeishiObject
	(*Memory)(nil),                              // 37: pcommon.Memory
	(*MemoryAbility)(nil),                       // 38: pcommon.MemoryAbility
	(*ProduceCampaign)(nil),                     // 39: pcommon.ProduceCampaign
	(*ProduceCard)(nil),                         // 40: pcommon.ProduceCard
	(*ProduceCardCustomize)(nil),                // 41: pcommon.ProduceCardCustomize
	(*ProduceConsumptionResult)(nil),            // 42: pcommon.ProduceConsumptionResult
	(*ProduceDescriptionSegment)(nil),           // 43: pcommon.ProduceDescriptionSegment
	(*ProduceEffectResult)(nil),                 // 44: pcommon.ProduceEffectResult
	(*ProduceExamEndResult)(nil),                // 45: pcommon.ProduceExamEndResult
	(*ProduceHistory)(nil),                      // 46: pcommon.ProduceHistory
	(*ProduceItem)(nil),                         // 47: pcommon.ProduceItem
	(*ProduceLessonGrowthResult)(nil),           // 48: pcommon.ProduceLessonGrowthResult
	(*ProduceMemoryRewardResult)(nil),           // 49: pcommon.ProduceMemoryRewardResult
	(*ProduceRewardResult)(nil),                 // 50: pcommon.ProduceRewardResult
	(*ProduceTriggerOrigin)(nil),                // 51: pcommon.ProduceTriggerOrigin
	(*ProducerLevelUnlock)(nil),                 // 52: pcommon.ProducerLevelUnlock
	(*ProducerLevelUnlockTarget)(nil),           // 53: pcommon.ProducerLevelUnlockTarget
	(*PvpRateExamBattleResult)(nil),             // 54: pcommon.PvpRateExamBattleResult
	(*PvpRateSetupUnitStageFormation)(nil),      // 55: pcommon.PvpRateSetupUnitStageFormation
	(*Reward)(nil),                              // 56: pcommon.Reward
	(*RewardResult)(nil),                        // 57: pcommon.RewardResult
	(*SimpleProfile)(nil),                       // 58: pcommon.SimpleProfile
	(*StartupNotification)(nil),                 // 59: pcommon.StartupNotification
	(*StoryEventBonus)(nil),                     // 60: pcommon.StoryEventBonus
	(*StoryEventPointReward)(nil),               // 61: pcommon.StoryEventPointReward
	(*StoryEventProduceResult)(nil),             // 62: pcommon.StoryEventProduceResult
	(*SupportCard)(nil),                         // 63: pcommon.SupportCard
	(*TowerLayerHistory)(nil),                   // 64: pcommon.TowerLayerHistory
	(*AntiCheatCriticalResult_Log)(nil),         // 65: pcommon.AntiCheatCriticalResult.Log
	(*AntiCheatCriticalResult_Record)(nil),      // 66: pcommon.AntiCheatCriticalResult.Record
	(*AntiCheatSummaryResult_Score)(nil),        // 67: pcommon.AntiCheatSummaryResult.Score
	(*ExamBattleAutoStageResult_Player)(nil),    // 68: pcommon.ExamBattleAutoStageResult.Player
	(*GuildMission_Icon)(nil),                   // 69: pcommon.GuildMission.Icon
	(*ProduceHistory_Audition)(nil),             // 70: pcommon.ProduceHistory.Audition
	(*ProduceHistory_DeckMemory)(nil),           // 71: pcommon.ProduceHistory.DeckMemory
	(*ProduceHistory_DeckProduceCard)(nil),      // 72: pcommon.ProduceHistory.DeckProduceCard
	(*ProduceHistory_DeckSupportCard)(nil),      // 73: pcommon.ProduceHistory.DeckSupportCard
	(*PvpRateSetupUnitStageFormation_Slot)(nil), // 74: pcommon.PvpRateSetupUnitStageFormation.Slot
	(*StoryEventBonus_CharacterBonus)(nil),      // 75: pcommon.StoryEventBonus.CharacterBonus
	(*StoryEventBonus_IdolCardBonus)(nil),       // 76: pcommon.StoryEventBonus.IdolCardBonus
	(*StoryEventBonus_SupportCardBonus)(nil),    // 77: pcommon.StoryEventBonus.SupportCardBonus
	(*StoryEventBonus_CharacterBonus_PotentialRankBonusPermil)(nil),    // 78: pcommon.StoryEventBonus.CharacterBonus.PotentialRankBonusPermil
	(*StoryEventBonus_IdolCardBonus_PotentialRankBonusPermil)(nil),     // 79: pcommon.StoryEventBonus.IdolCardBonus.PotentialRankBonusPermil
	(*StoryEventBonus_SupportCardBonus_LevelLimitRankBonusPermil)(nil), // 80: pcommon.StoryEventBonus.SupportCardBonus.LevelLimitRankBonusPermil
	(*StoryEventProduceResult_CoinResult)(nil),                         // 81: pcommon.StoryEventProduceResult.CoinResult
	(*StoryEventProduceResult_PointResult)(nil),                        // 82: pcommon.StoryEventProduceResult.PointResult
	(penum.CoinGashaType)(0),                                           // 83: penum.CoinGashaType
	(penum.CoinGashaBoxResetTypeType)(0),                               // 84: penum.CoinGashaBoxResetTypeType
	(penum.ResourceType)(0),                                            // 85: penum.ResourceType
	(penum.EventType)(0),                                               // 86: penum.EventType
	(penum.ProducePlanType)(0),                                         // 87: penum.ProducePlanType
	(penum.ExamGameType)(0),                                            // 88: penum.ExamGameType
	(penum.ProduceExamEffectType)(0),                                   // 89: penum.ProduceExamEffectType
	(penum.IdolCardLevelLimitRank)(0),                                  // 90: penum.IdolCardLevelLimitRank
	(penum.IdolCardPotentialRank)(0),                                   // 91: penum.IdolCardPotentialRank
	(penum.ExamCommandType)(0),                                         // 92: penum.ExamCommandType
	(penum.ExamPhaseType)(0),                                           // 93: penum.ExamPhaseType
	(penum.ProduceParameterType)(0),                                    // 94: penum.ProduceParameterType
	(penum.ExamIdolStatusType)(0),                                      // 95: penum.ExamIdolStatusType
	(penum.GashaType)(0),                                               // 96: penum.GashaType
	(penum.GuildMissionPhaseType)(0),                                   // 97: penum.GuildMissionPhaseType
	(penum.LinkType)(0),                                                // 98: penum.LinkType
	(penum.MeishiObjectType)(0),                                        // 99: penum.MeishiObjectType
	(penum.PvpRateGrade)(0),                                            // 100: penum.PvpRateGrade
	(penum.ResultGrade)(0),                                             // 101: penum.ResultGrade
	(penum.ProduceMemoryProduceCardPhaseType)(0),                       // 102: penum.ProduceMemoryProduceCardPhaseType
	(penum.ProduceCampaignType)(0),                                     // 103: penum.ProduceCampaignType
	(penum.ProduceResourceType)(0),                                     // 104: penum.ProduceResourceType
	(penum.ProduceDescriptionType)(0),                                  // 105: penum.ProduceDescriptionType
	(penum.ExamDescriptionType)(0),                                     // 106: penum.ExamDescriptionType
	(penum.ProduceCardGrowEffectType)(0),                               // 107: penum.ProduceCardGrowEffectType
	(penum.ProduceCardCategory)(0),                                     // 108: penum.ProduceCardCategory
	(penum.ProduceCardMovePositionType)(0),                             // 109: penum.ProduceCardMovePositionType
	(penum.ProduceStepType)(0),                                         // 110: penum.ProduceStepType
	(penum.ProduceEffectType)(0),                                       // 111: penum.ProduceEffectType
	(penum.ProduceType)(0),                                             // 112: penum.ProduceType
	(penum.ProduceTriggerOriginType)(0),                                // 113: penum.ProduceTriggerOriginType
	(penum.ProducerLevelUnlockType)(0),                                 // 114: penum.ProducerLevelUnlockType
	(penum.PvpRateStageType)(0),                                        // 115: penum.PvpRateStageType
	(penum.StartupNotificationType)(0),                                 // 116: penum.StartupNotificationType
	(penum.StartupNotificationEffectType)(0),                           // 117: penum.StartupNotificationEffectType
	(penum.StoryEventType)(0),                                          // 118: penum.StoryEventType
	(penum.SupportCardLevelLimitRank)(0),                               // 119: penum.SupportCardLevelLimitRank
	(penum.ProduceConditionType)(0),                                    // 120: penum.ProduceConditionType
	(penum.IdolCardRarity)(0),                                          // 121: penum.IdolCardRarity
}
var file_pcommon_proto_depIdxs = []int32{
	66,  // 0: pcommon.AntiCheatCriticalResult.records:type_name -> pcommon.AntiCheatCriticalResult.Record
	65,  // 1: pcommon.AntiCheatCriticalResult.logs:type_name -> pcommon.AntiCheatCriticalResult.Log
	67,  // 2: pcommon.AntiCheatSummaryResult.scores:type_name -> pcommon.AntiCheatSummaryResult.Score
	83,  // 3: pcommon.CoinGasha.type:type_name -> penum.CoinGashaType
	6,   // 4: pcommon.CoinGasha.featureGashaRewards:type_name -> pcommon.CoinGashaReward
	6,   // 5: pcommon.CoinGasha.commonGashaRewards:type_name -> pcommon.CoinGashaReward
	4,   // 6: pcommon.CoinGasha.prevBoxList:type_name -> pcommon.CoinGashaBox
	4,   // 7: pcommon.CoinGasha.nextBoxList:type_name -> pcommon.CoinGashaBox
	84,  // 8: pcommon.CoinGasha.boxResetType:type_name -> penum.CoinGashaBoxResetTypeType
	5,   // 9: pcommon.CoinGasha.drawCountRewards:type_name -> pcommon.CoinGashaDrawCountReward
	6,   // 10: pcommon.CoinGashaBox.featureGashaRewards:type_name -> pcommon.CoinGashaReward
	6,   // 11: pcommon.CoinGashaBox.commonGashaRewards:type_name -> pcommon.CoinGashaReward
	56,  // 12: pcommon.CoinGashaDrawCountReward.reward:type_name -> pcommon.Reward
	56,  // 13: pcommon.CoinGashaReward.reward:type_name -> pcommon.Reward
	85,  // 14: pcommon.ConsumptionResult.resourceType:type_name -> penum.ResourceType
	86,  // 15: pcommon.Event.eventType:type_name -> penum.EventType
	87,  // 16: pcommon.ExamAiBaseModel.planType:type_name -> penum.ProducePlanType
	88,  // 17: pcommon.ExamAntiCheatTarget.features:type_name -> penum.ExamGameType
	87,  // 18: pcommon.ExamBattleAutoPlayer.planType:type_name -> penum.ProducePlanType
	89,  // 19: pcommon.ExamBattleAutoPlayer.examEffectType:type_name -> penum.ProduceExamEffectType
	90,  // 20: pcommon.ExamBattleAutoPlayer.idolCardLevelLimitRank:type_name -> penum.IdolCardLevelLimitRank
	91,  // 21: pcommon.ExamBattleAutoPlayer.idolCardPotentialRank:type_name -> penum.IdolCardPotentialRank
	40,  // 22: pcommon.ExamBattleAutoPlayer.produceCards:type_name -> pcommon.ProduceCard
	13,  // 23: pcommon.ExamBattleAutoRequest.stages:type_name -> pcommon.ExamBattleAutoStage
	11,  // 24: pcommon.ExamBattleAutoStage.selfPlayers:type_name -> pcommon.ExamBattleAutoPlayer
	11,  // 25: pcommon.ExamBattleAutoStage.rivalPlayers:type_name -> pcommon.ExamBattleAutoPlayer
	68,  // 26: pcommon.ExamBattleAutoStageResult.selfPlayers:type_name -> pcommon.ExamBattleAutoStageResult.Player
	68,  // 27: pcommon.ExamBattleAutoStageResult.rivalPlayers:type_name -> pcommon.ExamBattleAutoStageResult.Player
	47,  // 28: pcommon.ExamBattleResult.produceItems:type_name -> pcommon.ProduceItem
	17,  // 29: pcommon.ExamBattleResult.examTriggerCounts:type_name -> pcommon.ExamTriggerCount
	92,  // 30: pcommon.ExamCommandLog.commandType:type_name -> penum.ExamCommandType
	93,  // 31: pcommon.ExamCommandLog.phaseType:type_name -> penum.ExamPhaseType
	40,  // 32: pcommon.ExamCommandLog.useProduceCard:type_name -> pcommon.ProduceCard
	94,  // 33: pcommon.ExamTurnEndLog.parameterType:type_name -> penum.ProduceParameterType
	95,  // 34: pcommon.ExamTurnEndLog.idolStatusType:type_name -> penum.ExamIdolStatusType
	40,  // 35: pcommon.ExamTurnEndLog.startPlayHandProduceCards:type_name -> pcommon.ProduceCard
	40,  // 36: pcommon.ExamTurnEndLog.startPlayHoldProduceCards:type_name -> pcommon.ProduceCard
	16,  // 37: pcommon.ExamTurnEndLog.commands:type_name -> pcommon.ExamCommandLog
	96,  // 38: pcommon.Gasha.type:type_name -> penum.GashaType
	21,  // 39: pcommon.Gasha.gashaButtons:type_name -> pcommon.GashaButton
	24,  // 40: pcommon.Gasha.gashaStepUp:type_name -> pcommon.GashaStepUp
	23,  // 41: pcommon.Gasha.gashaSelectPickup:type_name -> pcommon.GashaSelectPickup
	22,  // 42: pcommon.Gasha.gashaPoint:type_name -> pcommon.GashaPoint
	56,  // 43: pcommon.Gasha.bonusRewards:type_name -> pcommon.Reward
	20,  // 44: pcommon.Gasha.backgroundPickupIdolCardSkins:type_name -> pcommon.GashaBackgroundPickup
	20,  // 45: pcommon.Gasha.backgroundPickupSupportCards:type_name -> pcommon.GashaBackgroundPickup
	56,  // 46: pcommon.GashaBackgroundPickup.rewards:type_name -> pcommon.Reward
	56,  // 47: pcommon.GashaSelectPickup.pickupRewards:type_name -> pcommon.Reward
	25,  // 48: pcommon.GashaStepUp.steps:type_name -> pcommon.GashaStepUpStep
	56,  // 49: pcommon.GashaStepUpStep.bonusRewards:type_name -> pcommon.Reward
	56,  // 50: pcommon.GuildMission.reward:type_name -> pcommon.Reward
	58,  // 51: pcommon.GuildMission.mvpProfile:type_name -> pcommon.SimpleProfile
	69,  // 52: pcommon.GuildMission.icon:type_name -> pcommon.GuildMission.Icon
	58,  // 53: pcommon.GuildMissionHistory.profile:type_name -> pcommon.SimpleProfile
	97,  // 54: pcommon.GuildMissionHistory.phaseType:type_name -> penum.GuildMissionPhaseType
	0,   // 55: pcommon.GvgRaidGuild.achievement:type_name -> pcommon.Achievement
	30,  // 56: pcommon.GvgRaidSetUpDeck.slots:type_name -> pcommon.GvgRaidSlot
	98,  // 57: pcommon.HomeBanner.linkType:type_name -> penum.LinkType
	90,  // 58: pcommon.IdolCard.levelLimitRank:type_name -> penum.IdolCardLevelLimitRank
	91,  // 59: pcommon.IdolCard.potentialRank:type_name -> penum.IdolCardPotentialRank
	35,  // 60: pcommon.Meishi.meishiBase:type_name -> pcommon.MeishiBase
	36,  // 61: pcommon.Meishi.objects:type_name -> pcommon.MeishiObject
	99,  // 62: pcommon.MeishiObject.type:type_name -> penum.MeishiObjectType
	100, // 63: pcommon.MeishiObject.grade:type_name -> penum.PvpRateGrade
	0,   // 64: pcommon.MeishiObject.achievement:type_name -> pcommon.Achievement
	101, // 65: pcommon.Memory.grade:type_name -> penum.ResultGrade
	87,  // 66: pcommon.Memory.planType:type_name -> penum.ProducePlanType
	90,  // 67: pcommon.Memory.idolCardLevelLimitRank:type_name -> penum.IdolCardLevelLimitRank
	91,  // 68: pcommon.Memory.idolCardPotentialRank:type_name -> penum.IdolCardPotentialRank
	40,  // 69: pcommon.Memory.produceCard:type_name -> pcommon.ProduceCard
	102, // 70: pcommon.Memory.produceCardPhaseType:type_name -> penum.ProduceMemoryProduceCardPhaseType
	38,  // 71: pcommon.Memory.abilities:type_name -> pcommon.MemoryAbility
	40,  // 72: pcommon.Memory.examBattleProduceCards:type_name -> pcommon.ProduceCard
	103, // 73: pcommon.ProduceCampaign.type:type_name -> penum.ProduceCampaignType
	56,  // 74: pcommon.ProduceCampaign.appealRewards:type_name -> pcommon.Reward
	41,  // 75: pcommon.ProduceCard.customizes:type_name -> pcommon.ProduceCardCustomize
	104, // 76: pcommon.ProduceConsumptionResult.resourceType:type_name -> penum.ProduceResourceType
	105, // 77: pcommon.ProduceDescriptionSegment.produceDescriptionType:type_name -> penum.ProduceDescriptionType
	106, // 78: pcommon.ProduceDescriptionSegment.examDescriptionType:type_name -> penum.ExamDescriptionType
	89,  // 79: pcommon.ProduceDescriptionSegment.examEffectType:type_name -> penum.ProduceExamEffectType
	107, // 80: pcommon.ProduceDescriptionSegment.produceCardGrowEffectType:type_name -> penum.ProduceCardGrowEffectType
	108, // 81: pcommon.ProduceDescriptionSegment.produceCardCategory:type_name -> penum.ProduceCardCategory
	109, // 82: pcommon.ProduceDescriptionSegment.produceCardMovePositionType:type_name -> penum.ProduceCardMovePositionType
	110, // 83: pcommon.ProduceDescriptionSegment.produceStepType:type_name -> penum.ProduceStepType
	111, // 84: pcommon.ProduceEffectResult.effectType:type_name -> penum.ProduceEffectType
	51,  // 85: pcommon.ProduceEffectResult.origin:type_name -> pcommon.ProduceTriggerOrigin
	40,  // 86: pcommon.ProduceEffectResult.beforeProduceCards:type_name -> pcommon.ProduceCard
	40,  // 87: pcommon.ProduceEffectResult.afterProduceCards:type_name -> pcommon.ProduceCard
	50,  // 88: pcommon.ProduceEffectResult.providedRewards:type_name -> pcommon.ProduceRewardResult
	110, // 89: pcommon.ProduceExamEndResult.stepType:type_name -> penum.ProduceStepType
	47,  // 90: pcommon.ProduceExamEndResult.produceItems:type_name -> pcommon.ProduceItem
	17,  // 91: pcommon.ProduceExamEndResult.examTriggerCounts:type_name -> pcommon.ExamTriggerCount
	101, // 92: pcommon.ProduceHistory.grade:type_name -> penum.ResultGrade
	90,  // 93: pcommon.ProduceHistory.levelLimitRank:type_name -> penum.IdolCardLevelLimitRank
	91,  // 94: pcommon.ProduceHistory.potentialRank:type_name -> penum.IdolCardPotentialRank
	112, // 95: pcommon.ProduceHistory.trueEndProduceTypes:type_name -> penum.ProduceType
	70,  // 96: pcommon.ProduceHistory.auditions:type_name -> pcommon.ProduceHistory.Audition
	73,  // 97: pcommon.ProduceHistory.deckSupportCards:type_name -> pcommon.ProduceHistory.DeckSupportCard
	71,  // 98: pcommon.ProduceHistory.deckMemories:type_name -> pcommon.ProduceHistory.DeckMemory
	72,  // 99: pcommon.ProduceHistory.produceCards:type_name -> pcommon.ProduceHistory.DeckProduceCard
	37,  // 100: pcommon.ProduceHistory.memory:type_name -> pcommon.Memory
	50,  // 101: pcommon.ProduceMemoryRewardResult.providedRewards:type_name -> pcommon.ProduceRewardResult
	51,  // 102: pcommon.ProduceMemoryRewardResult.origin:type_name -> pcommon.ProduceTriggerOrigin
	104, // 103: pcommon.ProduceRewardResult.resourceType:type_name -> penum.ProduceResourceType
	41,  // 104: pcommon.ProduceRewardResult.customizes:type_name -> pcommon.ProduceCardCustomize
	113, // 105: pcommon.ProduceTriggerOrigin.originType:type_name -> penum.ProduceTriggerOriginType
	53,  // 106: pcommon.ProducerLevelUnlock.targets:type_name -> pcommon.ProducerLevelUnlockTarget
	56,  // 107: pcommon.ProducerLevelUnlock.reward:type_name -> pcommon.Reward
	56,  // 108: pcommon.ProducerLevelUnlock.bonusRewards:type_name -> pcommon.Reward
	114, // 109: pcommon.ProducerLevelUnlockTarget.type:type_name -> penum.ProducerLevelUnlockType
	12,  // 110: pcommon.PvpRateExamBattleResult.examBattleAutoRequest:type_name -> pcommon.ExamBattleAutoRequest
	115, // 111: pcommon.PvpRateSetupUnitStageFormation.stage:type_name -> penum.PvpRateStageType
	74,  // 112: pcommon.PvpRateSetupUnitStageFormation.slots:type_name -> pcommon.PvpRateSetupUnitStageFormation.Slot
	85,  // 113: pcommon.Reward.resourceType:type_name -> penum.ResourceType
	85,  // 114: pcommon.RewardResult.resourceType:type_name -> penum.ResourceType
	34,  // 115: pcommon.SimpleProfile.meishi:type_name -> pcommon.Meishi
	116, // 116: pcommon.StartupNotification.type:type_name -> penum.StartupNotificationType
	117, // 117: pcommon.StartupNotification.effectType:type_name -> penum.StartupNotificationEffectType
	98,  // 118: pcommon.StartupNotification.linkType:type_name -> penum.LinkType
	75,  // 119: pcommon.StoryEventBonus.characterBonuses:type_name -> pcommon.StoryEventBonus.CharacterBonus
	76,  // 120: pcommon.StoryEventBonus.idolCardBonuses:type_name -> pcommon.StoryEventBonus.IdolCardBonus
	77,  // 121: pcommon.StoryEventBonus.supportCardBonuses:type_name -> pcommon.StoryEventBonus.SupportCardBonus
	56,  // 122: pcommon.StoryEventPointReward.reward:type_name -> pcommon.Reward
	82,  // 123: pcommon.StoryEventProduceResult.pointResult:type_name -> pcommon.StoryEventProduceResult.PointResult
	81,  // 124: pcommon.StoryEventProduceResult.coinResult:type_name -> pcommon.StoryEventProduceResult.CoinResult
	57,  // 125: pcommon.StoryEventProduceResult.rewardResults:type_name -> pcommon.RewardResult
	118, // 126: pcommon.StoryEventProduceResult.storyEventType:type_name -> penum.StoryEventType
	119, // 127: pcommon.SupportCard.levelLimitRank:type_name -> penum.SupportCardLevelLimitRank
	37,  // 128: pcommon.TowerLayerHistory.memories:type_name -> pcommon.Memory
	120, // 129: pcommon.GuildMission.Icon.type:type_name -> penum.ProduceConditionType
	101, // 130: pcommon.GuildMission.Icon.grade:type_name -> penum.ResultGrade
	110, // 131: pcommon.ProduceHistory.Audition.stepType:type_name -> penum.ProduceStepType
	37,  // 132: pcommon.ProduceHistory.DeckMemory.memory:type_name -> pcommon.Memory
	40,  // 133: pcommon.ProduceHistory.DeckProduceCard.produceCard:type_name -> pcommon.ProduceCard
	119, // 134: pcommon.ProduceHistory.DeckSupportCard.levelLimitRank:type_name -> penum.SupportCardLevelLimitRank
	121, // 135: pcommon.StoryEventBonus.CharacterBonus.idolCardRarities:type_name -> penum.IdolCardRarity
	78,  // 136: pcommon.StoryEventBonus.CharacterBonus.potentialRankBonusPermils:type_name -> pcommon.StoryEventBonus.CharacterBonus.PotentialRankBonusPermil
	79,  // 137: pcommon.StoryEventBonus.IdolCardBonus.potentialRankBonusPermils:type_name -> pcommon.StoryEventBonus.IdolCardBonus.PotentialRankBonusPermil
	80,  // 138: pcommon.StoryEventBonus.SupportCardBonus.levelLimitRankBonusPermils:type_name -> pcommon.StoryEventBonus.SupportCardBonus.LevelLimitRankBonusPermil
	91,  // 139: pcommon.StoryEventBonus.CharacterBonus.PotentialRankBonusPermil.potentialRank:type_name -> penum.IdolCardPotentialRank
	91,  // 140: pcommon.StoryEventBonus.IdolCardBonus.PotentialRankBonusPermil.potentialRank:type_name -> penum.IdolCardPotentialRank
	119, // 141: pcommon.StoryEventBonus.SupportCardBonus.LevelLimitRankBonusPermil.levelLimitRank:type_name -> penum.SupportCardLevelLimitRank
	85,  // 142: pcommon.StoryEventProduceResult.CoinResult.resourceType:type_name -> penum.ResourceType
	61,  // 143: pcommon.StoryEventProduceResult.PointResult.allRewards:type_name -> pcommon.StoryEventPointReward
	61,  // 144: pcommon.StoryEventProduceResult.PointResult.provideRewards:type_name -> pcommon.StoryEventPointReward
	145, // [145:145] is the sub-list for method output_type
	145, // [145:145] is the sub-list for method input_type
	145, // [145:145] is the sub-list for extension type_name
	145, // [145:145] is the sub-list for extension extendee
	0,   // [0:145] is the sub-list for field type_name
}

func init() { file_pcommon_proto_init() }
func file_pcommon_proto_init() {
	if File_pcommon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pcommon_proto_rawDesc), len(file_pcommon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pcommon_proto_goTypes,
		DependencyIndexes: file_pcommon_proto_depIdxs,
		MessageInfos:      file_pcommon_proto_msgTypes,
	}.Build()
	File_pcommon_proto = out.File
	file_pcommon_proto_goTypes = nil
	file_pcommon_proto_depIdxs = nil
}

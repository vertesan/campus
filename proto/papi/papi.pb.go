// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: papi.proto

package papi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	papicommon "vertesan/campus/proto/papicommon"
	pcommon "vertesan/campus/proto/pcommon"
	penum "vertesan/campus/proto/penum"
	pmaster "vertesan/campus/proto/pmaster"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{0}
}

type GiftListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GiftListRequest) Reset() {
	*x = GiftListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftListRequest) ProtoMessage() {}

func (x *GiftListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftListRequest.ProtoReflect.Descriptor instead.
func (*GiftListRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{1}
}

func (x *GiftListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TicketExchangeExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketExchangeItemId string `protobuf:"bytes,1,opt,name=ticketExchangeItemId,proto3" json:"ticketExchangeItemId,omitempty"`
}

func (x *TicketExchangeExecuteRequest) Reset() {
	*x = TicketExchangeExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketExchangeExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketExchangeExecuteRequest) ProtoMessage() {}

func (x *TicketExchangeExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketExchangeExecuteRequest.ProtoReflect.Descriptor instead.
func (*TicketExchangeExecuteRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{2}
}

func (x *TicketExchangeExecuteRequest) GetTicketExchangeItemId() string {
	if x != nil {
		return x.TicketExchangeItemId
	}
	return ""
}

type GashaGetPrecautionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
}

func (x *GashaGetPrecautionRequest) Reset() {
	*x = GashaGetPrecautionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetPrecautionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetPrecautionRequest) ProtoMessage() {}

func (x *GashaGetPrecautionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetPrecautionRequest.ProtoReflect.Descriptor instead.
func (*GashaGetPrecautionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{3}
}

func (x *GashaGetPrecautionRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

type GuildDonateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildDonateResponse) Reset() {
	*x = GuildDonateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDonateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDonateResponse) ProtoMessage() {}

func (x *GuildDonateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDonateResponse.ProtoReflect.Descriptor instead.
func (*GuildDonateResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{4}
}

func (x *GuildDonateResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *GuildDonateResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TowerId string `protobuf:"bytes,1,opt,name=towerId,proto3" json:"towerId,omitempty"`
	Number  int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *TowerStartRequest) Reset() {
	*x = TowerStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerStartRequest) ProtoMessage() {}

func (x *TowerStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerStartRequest.ProtoReflect.Descriptor instead.
func (*TowerStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{5}
}

func (x *TowerStartRequest) GetTowerId() string {
	if x != nil {
		return x.TowerId
	}
	return ""
}

func (x *TowerStartRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type CostumeCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *CostumeCheckResponse) Reset() {
	*x = CostumeCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostumeCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostumeCheckResponse) ProtoMessage() {}

func (x *CostumeCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostumeCheckResponse.ProtoReflect.Descriptor instead.
func (*CostumeCheckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{6}
}

func (x *CostumeCheckResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type IdolCardRarityProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rarity                  penum.IdolCardRarity   `protobuf:"varint,1,opt,name=rarity,proto3,enum=penum.IdolCardRarity" json:"rarity,omitempty"`
	TenPermyriadProbability int32                  `protobuf:"varint,2,opt,name=tenPermyriadProbability,proto3" json:"tenPermyriadProbability,omitempty"`
	Probabilities           []*IdolCardProbability `protobuf:"bytes,3,rep,name=probabilities,proto3" json:"probabilities,omitempty"`
}

func (x *IdolCardRarityProbability) Reset() {
	*x = IdolCardRarityProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardRarityProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardRarityProbability) ProtoMessage() {}

func (x *IdolCardRarityProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardRarityProbability.ProtoReflect.Descriptor instead.
func (*IdolCardRarityProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{7}
}

func (x *IdolCardRarityProbability) GetRarity() penum.IdolCardRarity {
	if x != nil {
		return x.Rarity
	}
	return penum.IdolCardRarity(0)
}

func (x *IdolCardRarityProbability) GetTenPermyriadProbability() int32 {
	if x != nil {
		return x.TenPermyriadProbability
	}
	return 0
}

func (x *IdolCardRarityProbability) GetProbabilities() []*IdolCardProbability {
	if x != nil {
		return x.Probabilities
	}
	return nil
}

type ProfileUpdateNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProfileUpdateNameResponse) Reset() {
	*x = ProfileUpdateNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateNameResponse) ProtoMessage() {}

func (x *ProfileUpdateNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateNameResponse.ProtoReflect.Descriptor instead.
func (*ProfileUpdateNameResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{8}
}

func (x *ProfileUpdateNameResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed int64 `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *TowerCheckRequest) Reset() {
	*x = TowerCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerCheckRequest) ProtoMessage() {}

func (x *TowerCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerCheckRequest.ProtoReflect.Descriptor instead.
func (*TowerCheckRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{9}
}

func (x *TowerCheckRequest) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

type ProduceEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory         *pcommon.Memory      `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceEndResponse) Reset() {
	*x = ProduceEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceEndResponse) ProtoMessage() {}

func (x *ProduceEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceEndResponse.ProtoReflect.Descriptor instead.
func (*ProduceEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{10}
}

func (x *ProduceEndResponse) GetMemory() *pcommon.Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ProduceEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialProduceStepAuditionExamEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank           int32    `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Score          int32    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Stamina        int32    `protobuf:"varint,3,opt,name=stamina,proto3" json:"stamina,omitempty"`
	ProduceCardIds []string `protobuf:"bytes,4,rep,name=produceCardIds,proto3" json:"produceCardIds,omitempty"`
}

func (x *TutorialProduceStepAuditionExamEndRequest) Reset() {
	*x = TutorialProduceStepAuditionExamEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStepAuditionExamEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStepAuditionExamEndRequest) ProtoMessage() {}

func (x *TutorialProduceStepAuditionExamEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStepAuditionExamEndRequest.ProtoReflect.Descriptor instead.
func (*TutorialProduceStepAuditionExamEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{11}
}

func (x *TutorialProduceStepAuditionExamEndRequest) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *TutorialProduceStepAuditionExamEndRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TutorialProduceStepAuditionExamEndRequest) GetStamina() int32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *TutorialProduceStepAuditionExamEndRequest) GetProduceCardIds() []string {
	if x != nil {
		return x.ProduceCardIds
	}
	return nil
}

type SeminarListExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups         []*SeminarListExamResponse_ExamGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	CommonResponse *papicommon.Response                 `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *SeminarListExamResponse) Reset() {
	*x = SeminarListExamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarListExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarListExamResponse) ProtoMessage() {}

func (x *SeminarListExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarListExamResponse.ProtoReflect.Descriptor instead.
func (*SeminarListExamResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{12}
}

func (x *SeminarListExamResponse) GetGroups() []*SeminarListExamResponse_ExamGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SeminarListExamResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildReceiveDonationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildDonationItemId string               `protobuf:"bytes,1,opt,name=guildDonationItemId,proto3" json:"guildDonationItemId,omitempty"`
	List                []*GuildDonationInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	TotalDonationCount  int32                `protobuf:"varint,3,opt,name=totalDonationCount,proto3" json:"totalDonationCount,omitempty"`
	CommonResponse      *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildReceiveDonationResponse) Reset() {
	*x = GuildReceiveDonationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildReceiveDonationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildReceiveDonationResponse) ProtoMessage() {}

func (x *GuildReceiveDonationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildReceiveDonationResponse.ProtoReflect.Descriptor instead.
func (*GuildReceiveDonationResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{13}
}

func (x *GuildReceiveDonationResponse) GetGuildDonationItemId() string {
	if x != nil {
		return x.GuildDonationItemId
	}
	return ""
}

func (x *GuildReceiveDonationResponse) GetList() []*GuildDonationInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GuildReceiveDonationResponse) GetTotalDonationCount() int32 {
	if x != nil {
		return x.TotalDonationCount
	}
	return 0
}

func (x *GuildReceiveDonationResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type NoticeListAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList       []*NoticeInfo        `protobuf:"bytes,1,rep,name=infoList,proto3" json:"infoList,omitempty"`
	BugList        []*NoticeInfo        `protobuf:"bytes,2,rep,name=bugList,proto3" json:"bugList,omitempty"`
	PrList         []*NoticeInfo        `protobuf:"bytes,3,rep,name=prList,proto3" json:"prList,omitempty"`
	InfoHasNext    bool                 `protobuf:"varint,4,opt,name=infoHasNext,proto3" json:"infoHasNext,omitempty"`
	BugHasNext     bool                 `protobuf:"varint,5,opt,name=bugHasNext,proto3" json:"bugHasNext,omitempty"`
	PrHasNext      bool                 `protobuf:"varint,6,opt,name=prHasNext,proto3" json:"prHasNext,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *NoticeListAllResponse) Reset() {
	*x = NoticeListAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeListAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeListAllResponse) ProtoMessage() {}

func (x *NoticeListAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeListAllResponse.ProtoReflect.Descriptor instead.
func (*NoticeListAllResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{14}
}

func (x *NoticeListAllResponse) GetInfoList() []*NoticeInfo {
	if x != nil {
		return x.InfoList
	}
	return nil
}

func (x *NoticeListAllResponse) GetBugList() []*NoticeInfo {
	if x != nil {
		return x.BugList
	}
	return nil
}

func (x *NoticeListAllResponse) GetPrList() []*NoticeInfo {
	if x != nil {
		return x.PrList
	}
	return nil
}

func (x *NoticeListAllResponse) GetInfoHasNext() bool {
	if x != nil {
		return x.InfoHasNext
	}
	return false
}

func (x *NoticeListAllResponse) GetBugHasNext() bool {
	if x != nil {
		return x.BugHasNext
	}
	return false
}

func (x *NoticeListAllResponse) GetPrHasNext() bool {
	if x != nil {
		return x.PrHasNext
	}
	return false
}

func (x *NoticeListAllResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepShopStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepShopStartResponse) Reset() {
	*x = ProduceStepShopStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepShopStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepShopStartResponse) ProtoMessage() {}

func (x *ProduceStepShopStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepShopStartResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepShopStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{15}
}

func (x *ProduceStepShopStartResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepShopStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerListLayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TowerId string `protobuf:"bytes,1,opt,name=towerId,proto3" json:"towerId,omitempty"`
}

func (x *TowerListLayersRequest) Reset() {
	*x = TowerListLayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerListLayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerListLayersRequest) ProtoMessage() {}

func (x *TowerListLayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerListLayersRequest.ProtoReflect.Descriptor instead.
func (*TowerListLayersRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{16}
}

func (x *TowerListLayersRequest) GetTowerId() string {
	if x != nil {
		return x.TowerId
	}
	return ""
}

type GashaGetProbabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
}

func (x *GashaGetProbabilityRequest) Reset() {
	*x = GashaGetProbabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetProbabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetProbabilityRequest) ProtoMessage() {}

func (x *GashaGetProbabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetProbabilityRequest.ProtoReflect.Descriptor instead.
func (*GashaGetProbabilityRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{17}
}

func (x *GashaGetProbabilityRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

type GashaGetStepUpProbabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Probabilities  []*StepUpGashaProbability `protobuf:"bytes,1,rep,name=probabilities,proto3" json:"probabilities,omitempty"`
	CommonResponse *papicommon.Response      `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaGetStepUpProbabilityResponse) Reset() {
	*x = GashaGetStepUpProbabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetStepUpProbabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetStepUpProbabilityResponse) ProtoMessage() {}

func (x *GashaGetStepUpProbabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetStepUpProbabilityResponse.ProtoReflect.Descriptor instead.
func (*GashaGetStepUpProbabilityResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{18}
}

func (x *GashaGetStepUpProbabilityResponse) GetProbabilities() []*StepUpGashaProbability {
	if x != nil {
		return x.Probabilities
	}
	return nil
}

func (x *GashaGetStepUpProbabilityResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialProduceStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProduceStartResponse) Reset() {
	*x = TutorialProduceStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStartResponse) ProtoMessage() {}

func (x *TutorialProduceStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStartResponse.ProtoReflect.Descriptor instead.
func (*TutorialProduceStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{19}
}

func (x *TutorialProduceStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type Consent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsentType   penum.ConsentType          `protobuf:"varint,1,opt,name=consentType,proto3,enum=penum.ConsentType" json:"consentType,omitempty"`
	AgreementType penum.ConsentAgreementType `protobuf:"varint,2,opt,name=agreementType,proto3,enum=penum.ConsentAgreementType" json:"agreementType,omitempty"`
	Url           string                     `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Consent) Reset() {
	*x = Consent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consent) ProtoMessage() {}

func (x *Consent) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consent.ProtoReflect.Descriptor instead.
func (*Consent) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{20}
}

func (x *Consent) GetConsentType() penum.ConsentType {
	if x != nil {
		return x.ConsentType
	}
	return penum.ConsentType(0)
}

func (x *Consent) GetAgreementType() penum.ConsentAgreementType {
	if x != nil {
		return x.AgreementType
	}
	return penum.ConsentAgreementType(0)
}

func (x *Consent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ProduceStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid    string                         `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStartResponse) Reset() {
	*x = ProduceStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStartResponse) ProtoMessage() {}

func (x *ProduceStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStartResponse.ProtoReflect.Descriptor instead.
func (*ProduceStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{21}
}

func (x *ProduceStartResponse) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceStartResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile      *pcommon.SimpleProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Rank         int32                  `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Score        int32                  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Grade        penum.ResultGrade      `protobuf:"varint,4,opt,name=grade,proto3,enum=penum.ResultGrade" json:"grade,omitempty"`
	UserMemoryId string                 `protobuf:"bytes,5,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
}

func (x *ProduceRank) Reset() {
	*x = ProduceRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRank) ProtoMessage() {}

func (x *ProduceRank) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRank.ProtoReflect.Descriptor instead.
func (*ProduceRank) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{22}
}

func (x *ProduceRank) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ProduceRank) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProduceRank) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProduceRank) GetGrade() penum.ResultGrade {
	if x != nil {
		return x.Grade
	}
	return penum.ResultGrade(0)
}

func (x *ProduceRank) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

type TutorialProduceResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMemoryId         string `protobuf:"bytes,1,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	IsDefaultImageMemory bool   `protobuf:"varint,2,opt,name=isDefaultImageMemory,proto3" json:"isDefaultImageMemory,omitempty"`
}

func (x *TutorialProduceResultRequest) Reset() {
	*x = TutorialProduceResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceResultRequest) ProtoMessage() {}

func (x *TutorialProduceResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceResultRequest.ProtoReflect.Descriptor instead.
func (*TutorialProduceResultRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{23}
}

func (x *TutorialProduceResultRequest) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *TutorialProduceResultRequest) GetIsDefaultImageMemory() bool {
	if x != nil {
		return x.IsDefaultImageMemory
	}
	return false
}

type LoginBonusCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List                 []*LoginBonusCheckResponse_Info    `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	TotalInfo            *LoginBonusCheckResponse_TotalInfo `protobuf:"bytes,2,opt,name=totalInfo,proto3" json:"totalInfo,omitempty"`
	StartupNotifications []*pcommon.StartupNotification     `protobuf:"bytes,3,rep,name=startupNotifications,proto3" json:"startupNotifications,omitempty"`
	CommonResponse       *papicommon.Response               `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *LoginBonusCheckResponse) Reset() {
	*x = LoginBonusCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBonusCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBonusCheckResponse) ProtoMessage() {}

func (x *LoginBonusCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBonusCheckResponse.ProtoReflect.Descriptor instead.
func (*LoginBonusCheckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{24}
}

func (x *LoginBonusCheckResponse) GetList() []*LoginBonusCheckResponse_Info {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *LoginBonusCheckResponse) GetTotalInfo() *LoginBonusCheckResponse_TotalInfo {
	if x != nil {
		return x.TotalInfo
	}
	return nil
}

func (x *LoginBonusCheckResponse) GetStartupNotifications() []*pcommon.StartupNotification {
	if x != nil {
		return x.StartupNotifications
	}
	return nil
}

func (x *LoginBonusCheckResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type FriendUnFollowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserIds []string `protobuf:"bytes,1,rep,name=publicUserIds,proto3" json:"publicUserIds,omitempty"`
}

func (x *FriendUnFollowRequest) Reset() {
	*x = FriendUnFollowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendUnFollowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendUnFollowRequest) ProtoMessage() {}

func (x *FriendUnFollowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendUnFollowRequest.ProtoReflect.Descriptor instead.
func (*FriendUnFollowRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{25}
}

func (x *FriendUnFollowRequest) GetPublicUserIds() []string {
	if x != nil {
		return x.PublicUserIds
	}
	return nil
}

type HomeLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendResult         *HomeLoginResponse_FriendResult `protobuf:"bytes,1,opt,name=friendResult,proto3" json:"friendResult,omitempty"`
	ProducerLevelUnlocks []*pcommon.ProducerLevelUnlock  `protobuf:"bytes,2,rep,name=producerLevelUnlocks,proto3" json:"producerLevelUnlocks,omitempty"`
	CommonResponse       *papicommon.Response            `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *HomeLoginResponse) Reset() {
	*x = HomeLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeLoginResponse) ProtoMessage() {}

func (x *HomeLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeLoginResponse.ProtoReflect.Descriptor instead.
func (*HomeLoginResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{26}
}

func (x *HomeLoginResponse) GetFriendResult() *HomeLoginResponse_FriendResult {
	if x != nil {
		return x.FriendResult
	}
	return nil
}

func (x *HomeLoginResponse) GetProducerLevelUnlocks() []*pcommon.ProducerLevelUnlock {
	if x != nil {
		return x.ProducerLevelUnlocks
	}
	return nil
}

func (x *HomeLoginResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type InvitationReceiveInvitationPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List            []*InviteUser           `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	RewardResults   []*pcommon.RewardResult `protobuf:"bytes,2,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	BeforeThreshold int32                   `protobuf:"varint,3,opt,name=beforeThreshold,proto3" json:"beforeThreshold,omitempty"`
	CommonResponse  *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *InvitationReceiveInvitationPointResponse) Reset() {
	*x = InvitationReceiveInvitationPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationReceiveInvitationPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationReceiveInvitationPointResponse) ProtoMessage() {}

func (x *InvitationReceiveInvitationPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationReceiveInvitationPointResponse.ProtoReflect.Descriptor instead.
func (*InvitationReceiveInvitationPointResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{27}
}

func (x *InvitationReceiveInvitationPointResponse) GetList() []*InviteUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *InvitationReceiveInvitationPointResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *InvitationReceiveInvitationPointResponse) GetBeforeThreshold() int32 {
	if x != nil {
		return x.BeforeThreshold
	}
	return 0
}

func (x *InvitationReceiveInvitationPointResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PhotoUpdateNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PhotoUpdateNameResponse) Reset() {
	*x = PhotoUpdateNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoUpdateNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoUpdateNameResponse) ProtoMessage() {}

func (x *PhotoUpdateNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoUpdateNameResponse.ProtoReflect.Descriptor instead.
func (*PhotoUpdateNameResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{28}
}

func (x *PhotoUpdateNameResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepPresentEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepPresentEndResponse) Reset() {
	*x = ProduceStepPresentEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepPresentEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepPresentEndResponse) ProtoMessage() {}

func (x *ProduceStepPresentEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepPresentEndResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepPresentEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{29}
}

func (x *ProduceStepPresentEndResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepPresentEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	UserMemoryId string `protobuf:"bytes,2,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	IsSelf       bool   `protobuf:"varint,3,opt,name=isSelf,proto3" json:"isSelf,omitempty"`
}

func (x *ProduceHistoryRequest) Reset() {
	*x = ProduceHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHistoryRequest) ProtoMessage() {}

func (x *ProduceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHistoryRequest.ProtoReflect.Descriptor instead.
func (*ProduceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{30}
}

func (x *ProduceHistoryRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *ProduceHistoryRequest) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *ProduceHistoryRequest) GetIsSelf() bool {
	if x != nil {
		return x.IsSelf
	}
	return false
}

type PvpRateGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamBattleResult *pcommon.PvpRateExamBattleResult `protobuf:"bytes,1,opt,name=examBattleResult,proto3" json:"examBattleResult,omitempty"`
	CommonResponse   *papicommon.Response             `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateGetHistoryResponse) Reset() {
	*x = PvpRateGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateGetHistoryResponse) ProtoMessage() {}

func (x *PvpRateGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*PvpRateGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{31}
}

func (x *PvpRateGetHistoryResponse) GetExamBattleResult() *pcommon.PvpRateExamBattleResult {
	if x != nil {
		return x.ExamBattleResult
	}
	return nil
}

func (x *PvpRateGetHistoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CostumeSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId   string               `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
	SetType       penum.CostumeSetType `protobuf:"varint,2,opt,name=setType,proto3,enum=penum.CostumeSetType" json:"setType,omitempty"`
	CostumeHeadId string               `protobuf:"bytes,3,opt,name=costumeHeadId,proto3" json:"costumeHeadId,omitempty"`
	CostumeId     string               `protobuf:"bytes,4,opt,name=costumeId,proto3" json:"costumeId,omitempty"`
}

func (x *CostumeSetRequest) Reset() {
	*x = CostumeSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostumeSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostumeSetRequest) ProtoMessage() {}

func (x *CostumeSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostumeSetRequest.ProtoReflect.Descriptor instead.
func (*CostumeSetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{32}
}

func (x *CostumeSetRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *CostumeSetRequest) GetSetType() penum.CostumeSetType {
	if x != nil {
		return x.SetType
	}
	return penum.CostumeSetType(0)
}

func (x *CostumeSetRequest) GetCostumeHeadId() string {
	if x != nil {
		return x.CostumeHeadId
	}
	return ""
}

func (x *CostumeSetRequest) GetCostumeId() string {
	if x != nil {
		return x.CostumeId
	}
	return ""
}

type GashaDrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawResults    []*GashaDrawResult   `protobuf:"bytes,1,rep,name=drawResults,proto3" json:"drawResults,omitempty"`
	GashaButton    *pcommon.GashaButton `protobuf:"bytes,2,opt,name=gashaButton,proto3" json:"gashaButton,omitempty"`
	BonusRewards   []*pcommon.Reward    `protobuf:"bytes,3,rep,name=bonusRewards,proto3" json:"bonusRewards,omitempty"`
	GashaPoint     *pcommon.GashaPoint  `protobuf:"bytes,4,opt,name=gashaPoint,proto3" json:"gashaPoint,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaDrawResponse) Reset() {
	*x = GashaDrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaDrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaDrawResponse) ProtoMessage() {}

func (x *GashaDrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaDrawResponse.ProtoReflect.Descriptor instead.
func (*GashaDrawResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{33}
}

func (x *GashaDrawResponse) GetDrawResults() []*GashaDrawResult {
	if x != nil {
		return x.DrawResults
	}
	return nil
}

func (x *GashaDrawResponse) GetGashaButton() *pcommon.GashaButton {
	if x != nil {
		return x.GashaButton
	}
	return nil
}

func (x *GashaDrawResponse) GetBonusRewards() []*pcommon.Reward {
	if x != nil {
		return x.BonusRewards
	}
	return nil
}

func (x *GashaDrawResponse) GetGashaPoint() *pcommon.GashaPoint {
	if x != nil {
		return x.GashaPoint
	}
	return nil
}

func (x *GashaDrawResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type IdolCardUpgradeLevelLimitRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *IdolCardUpgradeLevelLimitRankResponse) Reset() {
	*x = IdolCardUpgradeLevelLimitRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardUpgradeLevelLimitRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardUpgradeLevelLimitRankResponse) ProtoMessage() {}

func (x *IdolCardUpgradeLevelLimitRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardUpgradeLevelLimitRankResponse.ProtoReflect.Descriptor instead.
func (*IdolCardUpgradeLevelLimitRankResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{34}
}

func (x *IdolCardUpgradeLevelLimitRankResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStartBeforeLiveEvaluationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStartBeforeLiveEvaluationResponse) Reset() {
	*x = ProduceStartBeforeLiveEvaluationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStartBeforeLiveEvaluationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStartBeforeLiveEvaluationResponse) ProtoMessage() {}

func (x *ProduceStartBeforeLiveEvaluationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStartBeforeLiveEvaluationResponse.ProtoReflect.Descriptor instead.
func (*ProduceStartBeforeLiveEvaluationResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{35}
}

func (x *ProduceStartBeforeLiveEvaluationResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthGetConsentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consents       []*Consent           `protobuf:"bytes,1,rep,name=consents,proto3" json:"consents,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *AuthGetConsentResponse) Reset() {
	*x = AuthGetConsentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthGetConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthGetConsentResponse) ProtoMessage() {}

func (x *AuthGetConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthGetConsentResponse.ProtoReflect.Descriptor instead.
func (*AuthGetConsentResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{36}
}

func (x *AuthGetConsentResponse) GetConsents() []*Consent {
	if x != nil {
		return x.Consents
	}
	return nil
}

func (x *AuthGetConsentResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ExchangeExecuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeItem   *ExchangeItem           `protobuf:"bytes,1,opt,name=exchangeItem,proto3" json:"exchangeItem,omitempty"`
	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,2,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ExchangeExecuteResponse) Reset() {
	*x = ExchangeExecuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeExecuteResponse) ProtoMessage() {}

func (x *ExchangeExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExchangeExecuteResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{37}
}

func (x *ExchangeExecuteResponse) GetExchangeItem() *ExchangeItem {
	if x != nil {
		return x.ExchangeItem
	}
	return nil
}

func (x *ExchangeExecuteResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *ExchangeExecuteResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerReceiveLayerCountRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerReceiveLayerCountRewardResponse) Reset() {
	*x = TowerReceiveLayerCountRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerReceiveLayerCountRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerReceiveLayerCountRewardResponse) ProtoMessage() {}

func (x *TowerReceiveLayerCountRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerReceiveLayerCountRewardResponse.ProtoReflect.Descriptor instead.
func (*TowerReceiveLayerCountRewardResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{38}
}

func (x *TowerReceiveLayerCountRewardResponse) GetResult() []*pcommon.RewardResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TowerReceiveLayerCountRewardResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceReadAdvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	AssetId     string `protobuf:"bytes,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *ProduceReadAdvRequest) Reset() {
	*x = ProduceReadAdvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceReadAdvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceReadAdvRequest) ProtoMessage() {}

func (x *ProduceReadAdvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceReadAdvRequest.ProtoReflect.Descriptor instead.
func (*ProduceReadAdvRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{39}
}

func (x *ProduceReadAdvRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceReadAdvRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type TutorialProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProgressResponse) Reset() {
	*x = TutorialProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProgressResponse) ProtoMessage() {}

func (x *TutorialProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProgressResponse.ProtoReflect.Descriptor instead.
func (*TutorialProgressResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{40}
}

func (x *TutorialProgressResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type WorkStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *WorkStartResponse) Reset() {
	*x = WorkStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStartResponse) ProtoMessage() {}

func (x *WorkStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStartResponse.ProtoReflect.Descriptor instead.
func (*WorkStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{41}
}

func (x *WorkStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildEstablishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildEstablishResponse) Reset() {
	*x = GuildEstablishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEstablishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEstablishResponse) ProtoMessage() {}

func (x *GuildEstablishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEstablishResponse.ProtoReflect.Descriptor instead.
func (*GuildEstablishResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{42}
}

func (x *GuildEstablishResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceUpdateSupportCardDeck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceType    penum.ProduceType       `protobuf:"varint,1,opt,name=produceType,proto3,enum=penum.ProduceType" json:"produceType,omitempty"`
	Number         int32                   `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	SupportCardIds []string                `protobuf:"bytes,3,rep,name=supportCardIds,proto3" json:"supportCardIds,omitempty"`
	RecommendType  penum.DeckRecommendType `protobuf:"varint,4,opt,name=recommendType,proto3,enum=penum.DeckRecommendType" json:"recommendType,omitempty"`
}

func (x *ProduceUpdateSupportCardDeck) Reset() {
	*x = ProduceUpdateSupportCardDeck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceUpdateSupportCardDeck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceUpdateSupportCardDeck) ProtoMessage() {}

func (x *ProduceUpdateSupportCardDeck) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceUpdateSupportCardDeck.ProtoReflect.Descriptor instead.
func (*ProduceUpdateSupportCardDeck) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{43}
}

func (x *ProduceUpdateSupportCardDeck) GetProduceType() penum.ProduceType {
	if x != nil {
		return x.ProduceType
	}
	return penum.ProduceType(0)
}

func (x *ProduceUpdateSupportCardDeck) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ProduceUpdateSupportCardDeck) GetSupportCardIds() []string {
	if x != nil {
		return x.SupportCardIds
	}
	return nil
}

func (x *ProduceUpdateSupportCardDeck) GetRecommendType() penum.DeckRecommendType {
	if x != nil {
		return x.RecommendType
	}
	return penum.DeckRecommendType(0)
}

type ProduceStepAuditionEndExamBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string                    `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	Result      *pcommon.ExamBattleResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	TurnEndLogs []*pcommon.ExamTurnEndLog `protobuf:"bytes,3,rep,name=turnEndLogs,proto3" json:"turnEndLogs,omitempty"`
}

func (x *ProduceStepAuditionEndExamBattleRequest) Reset() {
	*x = ProduceStepAuditionEndExamBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionEndExamBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionEndExamBattleRequest) ProtoMessage() {}

func (x *ProduceStepAuditionEndExamBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionEndExamBattleRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionEndExamBattleRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{44}
}

func (x *ProduceStepAuditionEndExamBattleRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceStepAuditionEndExamBattleRequest) GetResult() *pcommon.ExamBattleResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ProduceStepAuditionEndExamBattleRequest) GetTurnEndLogs() []*pcommon.ExamTurnEndLog {
	if x != nil {
		return x.TurnEndLogs
	}
	return nil
}

type ProduceRetireResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceRetireResponse) Reset() {
	*x = ProduceRetireResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRetireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRetireResponse) ProtoMessage() {}

func (x *ProduceRetireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRetireResponse.ProtoReflect.Descriptor instead.
func (*ProduceRetireResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{45}
}

func (x *ProduceRetireResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type DefaultGashaProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Probability    *GashaProbability `protobuf:"bytes,1,opt,name=probability,proto3" json:"probability,omitempty"`
	FixProbability *GashaProbability `protobuf:"bytes,2,opt,name=fixProbability,proto3" json:"fixProbability,omitempty"`
}

func (x *DefaultGashaProbability) Reset() {
	*x = DefaultGashaProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultGashaProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultGashaProbability) ProtoMessage() {}

func (x *DefaultGashaProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultGashaProbability.ProtoReflect.Descriptor instead.
func (*DefaultGashaProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{46}
}

func (x *DefaultGashaProbability) GetProbability() *GashaProbability {
	if x != nil {
		return x.Probability
	}
	return nil
}

func (x *DefaultGashaProbability) GetFixProbability() *GashaProbability {
	if x != nil {
		return x.FixProbability
	}
	return nil
}

type ProfileUpdateCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment string `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ProfileUpdateCommentRequest) Reset() {
	*x = ProfileUpdateCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateCommentRequest) ProtoMessage() {}

func (x *ProfileUpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*ProfileUpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{47}
}

func (x *ProfileUpdateCommentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ProduceResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid       string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	IsSkipLive        bool   `protobuf:"varint,2,opt,name=isSkipLive,proto3" json:"isSkipLive,omitempty"`
	ManualPhotoCount  int32  `protobuf:"varint,3,opt,name=manualPhotoCount,proto3" json:"manualPhotoCount,omitempty"`
	IsMemoryProtected bool   `protobuf:"varint,4,opt,name=isMemoryProtected,proto3" json:"isMemoryProtected,omitempty"`
	MemoryTagId       string `protobuf:"bytes,5,opt,name=memoryTagId,proto3" json:"memoryTagId,omitempty"`
}

func (x *ProduceResultRequest) Reset() {
	*x = ProduceResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceResultRequest) ProtoMessage() {}

func (x *ProduceResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceResultRequest.ProtoReflect.Descriptor instead.
func (*ProduceResultRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{48}
}

func (x *ProduceResultRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceResultRequest) GetIsSkipLive() bool {
	if x != nil {
		return x.IsSkipLive
	}
	return false
}

func (x *ProduceResultRequest) GetManualPhotoCount() int32 {
	if x != nil {
		return x.ManualPhotoCount
	}
	return 0
}

func (x *ProduceResultRequest) GetIsMemoryProtected() bool {
	if x != nil {
		return x.IsMemoryProtected
	}
	return false
}

func (x *ProduceResultRequest) GetMemoryTagId() string {
	if x != nil {
		return x.MemoryTagId
	}
	return ""
}

type FriendFollowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *FriendFollowRequest) Reset() {
	*x = FriendFollowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendFollowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendFollowRequest) ProtoMessage() {}

func (x *FriendFollowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendFollowRequest.ProtoReflect.Descriptor instead.
func (*FriendFollowRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{49}
}

func (x *FriendFollowRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type NoticeUpdateDetailTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *NoticeUpdateDetailTimeResponse) Reset() {
	*x = NoticeUpdateDetailTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeUpdateDetailTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeUpdateDetailTimeResponse) ProtoMessage() {}

func (x *NoticeUpdateDetailTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeUpdateDetailTimeResponse.ProtoReflect.Descriptor instead.
func (*NoticeUpdateDetailTimeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{50}
}

func (x *NoticeUpdateDetailTimeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PvpRateListHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histories      []*PvpRateListHistoryResponse_PvpRateHistory `protobuf:"bytes,1,rep,name=histories,proto3" json:"histories,omitempty"`
	CommonResponse *papicommon.Response                         `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateListHistoryResponse) Reset() {
	*x = PvpRateListHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateListHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateListHistoryResponse) ProtoMessage() {}

func (x *PvpRateListHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateListHistoryResponse.ProtoReflect.Descriptor instead.
func (*PvpRateListHistoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{51}
}

func (x *PvpRateListHistoryResponse) GetHistories() []*PvpRateListHistoryResponse_PvpRateHistory {
	if x != nil {
		return x.Histories
	}
	return nil
}

func (x *PvpRateListHistoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialSetNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialSetNameResponse) Reset() {
	*x = TutorialSetNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialSetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialSetNameResponse) ProtoMessage() {}

func (x *TutorialSetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialSetNameResponse.ProtoReflect.Descriptor instead.
func (*TutorialSetNameResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{52}
}

func (x *TutorialSetNameResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ExchangeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchanges      []*ExchangeInfo      `protobuf:"bytes,1,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ExchangeListResponse) Reset() {
	*x = ExchangeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeListResponse) ProtoMessage() {}

func (x *ExchangeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeListResponse.ProtoReflect.Descriptor instead.
func (*ExchangeListResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{53}
}

func (x *ExchangeListResponse) GetExchanges() []*ExchangeInfo {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

func (x *ExchangeListResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaDrawResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                 *pcommon.RewardResult   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ProvidedResult         *pcommon.RewardResult   `protobuf:"bytes,2,opt,name=providedResult,proto3" json:"providedResult,omitempty"`
	CardBonusRewardResults []*pcommon.RewardResult `protobuf:"bytes,3,rep,name=cardBonusRewardResults,proto3" json:"cardBonusRewardResults,omitempty"`
	IsPickup               bool                    `protobuf:"varint,4,opt,name=isPickup,proto3" json:"isPickup,omitempty"`
}

func (x *GashaDrawResult) Reset() {
	*x = GashaDrawResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaDrawResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaDrawResult) ProtoMessage() {}

func (x *GashaDrawResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaDrawResult.ProtoReflect.Descriptor instead.
func (*GashaDrawResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{54}
}

func (x *GashaDrawResult) GetResult() *pcommon.RewardResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GashaDrawResult) GetProvidedResult() *pcommon.RewardResult {
	if x != nil {
		return x.ProvidedResult
	}
	return nil
}

func (x *GashaDrawResult) GetCardBonusRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.CardBonusRewardResults
	}
	return nil
}

func (x *GashaDrawResult) GetIsPickup() bool {
	if x != nil {
		return x.IsPickup
	}
	return false
}

type InviteUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile                *pcommon.SimpleProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	FriendStatusType       penum.FriendStatusType `protobuf:"varint,2,opt,name=friendStatusType,proto3,enum=penum.FriendStatusType" json:"friendStatusType,omitempty"`
	ThresholdProducerLevel int32                  `protobuf:"varint,3,opt,name=thresholdProducerLevel,proto3" json:"thresholdProducerLevel,omitempty"`
	IsReceivedAll          bool                   `protobuf:"varint,4,opt,name=isReceivedAll,proto3" json:"isReceivedAll,omitempty"`
}

func (x *InviteUser) Reset() {
	*x = InviteUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUser) ProtoMessage() {}

func (x *InviteUser) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUser.ProtoReflect.Descriptor instead.
func (*InviteUser) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{55}
}

func (x *InviteUser) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *InviteUser) GetFriendStatusType() penum.FriendStatusType {
	if x != nil {
		return x.FriendStatusType
	}
	return penum.FriendStatusType(0)
}

func (x *InviteUser) GetThresholdProducerLevel() int32 {
	if x != nil {
		return x.ThresholdProducerLevel
	}
	return 0
}

func (x *InviteUser) GetIsReceivedAll() bool {
	if x != nil {
		return x.IsReceivedAll
	}
	return false
}

type TicketExchangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rewards        []*pcommon.Reward `protobuf:"bytes,2,rep,name=rewards,proto3" json:"rewards,omitempty"`
	ExchangedCount int32             `protobuf:"varint,3,opt,name=exchangedCount,proto3" json:"exchangedCount,omitempty"`
	Order          int32             `protobuf:"varint,99,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *TicketExchangeItem) Reset() {
	*x = TicketExchangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketExchangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketExchangeItem) ProtoMessage() {}

func (x *TicketExchangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketExchangeItem.ProtoReflect.Descriptor instead.
func (*TicketExchangeItem) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{56}
}

func (x *TicketExchangeItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TicketExchangeItem) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *TicketExchangeItem) GetExchangedCount() int32 {
	if x != nil {
		return x.ExchangedCount
	}
	return 0
}

func (x *TicketExchangeItem) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProduceHighScoreReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score  int32           `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Reward *pcommon.Reward `protobuf:"bytes,2,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *ProduceHighScoreReward) Reset() {
	*x = ProduceHighScoreReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreReward) ProtoMessage() {}

func (x *ProduceHighScoreReward) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreReward.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreReward) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{57}
}

func (x *ProduceHighScoreReward) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProduceHighScoreReward) GetReward() *pcommon.Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type GuildEditDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description              string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsAutoApproveJoinRequest bool                          `protobuf:"varint,3,opt,name=isAutoApproveJoinRequest,proto3" json:"isAutoApproveJoinRequest,omitempty"`
	ActivityPolicyType       penum.GuildActivityPolicyType `protobuf:"varint,4,opt,name=activityPolicyType,proto3,enum=penum.GuildActivityPolicyType" json:"activityPolicyType,omitempty"`
	AchievementId            string                        `protobuf:"bytes,5,opt,name=achievementId,proto3" json:"achievementId,omitempty"`
}

func (x *GuildEditDetailRequest) Reset() {
	*x = GuildEditDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEditDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEditDetailRequest) ProtoMessage() {}

func (x *GuildEditDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEditDetailRequest.ProtoReflect.Descriptor instead.
func (*GuildEditDetailRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{58}
}

func (x *GuildEditDetailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildEditDetailRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildEditDetailRequest) GetIsAutoApproveJoinRequest() bool {
	if x != nil {
		return x.IsAutoApproveJoinRequest
	}
	return false
}

func (x *GuildEditDetailRequest) GetActivityPolicyType() penum.GuildActivityPolicyType {
	if x != nil {
		return x.ActivityPolicyType
	}
	return penum.GuildActivityPolicyType(0)
}

func (x *GuildEditDetailRequest) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

type PvpRateRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpperRank int32             `protobuf:"varint,1,opt,name=upperRank,proto3" json:"upperRank,omitempty"`
	LowerRank int32             `protobuf:"varint,2,opt,name=lowerRank,proto3" json:"lowerRank,omitempty"`
	Rewards   []*pcommon.Reward `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *PvpRateRankReward) Reset() {
	*x = PvpRateRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateRankReward) ProtoMessage() {}

func (x *PvpRateRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateRankReward.ProtoReflect.Descriptor instead.
func (*PvpRateRankReward) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{59}
}

func (x *PvpRateRankReward) GetUpperRank() int32 {
	if x != nil {
		return x.UpperRank
	}
	return 0
}

func (x *PvpRateRankReward) GetLowerRank() int32 {
	if x != nil {
		return x.LowerRank
	}
	return 0
}

func (x *PvpRateRankReward) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type GuildEstablishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description              string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsAutoApproveJoinRequest bool                          `protobuf:"varint,3,opt,name=isAutoApproveJoinRequest,proto3" json:"isAutoApproveJoinRequest,omitempty"`
	ActivityPolicyType       penum.GuildActivityPolicyType `protobuf:"varint,4,opt,name=activityPolicyType,proto3,enum=penum.GuildActivityPolicyType" json:"activityPolicyType,omitempty"`
	AchievementId            string                        `protobuf:"bytes,5,opt,name=achievementId,proto3" json:"achievementId,omitempty"`
}

func (x *GuildEstablishRequest) Reset() {
	*x = GuildEstablishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEstablishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEstablishRequest) ProtoMessage() {}

func (x *GuildEstablishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEstablishRequest.ProtoReflect.Descriptor instead.
func (*GuildEstablishRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{60}
}

func (x *GuildEstablishRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildEstablishRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildEstablishRequest) GetIsAutoApproveJoinRequest() bool {
	if x != nil {
		return x.IsAutoApproveJoinRequest
	}
	return false
}

func (x *GuildEstablishRequest) GetActivityPolicyType() penum.GuildActivityPolicyType {
	if x != nil {
		return x.ActivityPolicyType
	}
	return penum.GuildActivityPolicyType(0)
}

func (x *GuildEstablishRequest) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

type TowerReceiveTotalClearRankRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerReceiveTotalClearRankRewardResponse) Reset() {
	*x = TowerReceiveTotalClearRankRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerReceiveTotalClearRankRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerReceiveTotalClearRankRewardResponse) ProtoMessage() {}

func (x *TowerReceiveTotalClearRankRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerReceiveTotalClearRankRewardResponse.ProtoReflect.Descriptor instead.
func (*TowerReceiveTotalClearRankRewardResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{61}
}

func (x *TowerReceiveTotalClearRankRewardResponse) GetResult() []*pcommon.RewardResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TowerReceiveTotalClearRankRewardResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile     *pcommon.SimpleProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	RoleType    penum.GuildRoleType    `protobuf:"varint,2,opt,name=roleType,proto3,enum=penum.GuildRoleType" json:"roleType,omitempty"`
	IsFollowing bool                   `protobuf:"varint,3,opt,name=isFollowing,proto3" json:"isFollowing,omitempty"`
	IsFollower  bool                   `protobuf:"varint,4,opt,name=isFollower,proto3" json:"isFollower,omitempty"`
}

func (x *GuildMemberInfo) Reset() {
	*x = GuildMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberInfo) ProtoMessage() {}

func (x *GuildMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberInfo.ProtoReflect.Descriptor instead.
func (*GuildMemberInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{62}
}

func (x *GuildMemberInfo) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *GuildMemberInfo) GetRoleType() penum.GuildRoleType {
	if x != nil {
		return x.RoleType
	}
	return penum.GuildRoleType(0)
}

func (x *GuildMemberInfo) GetIsFollowing() bool {
	if x != nil {
		return x.IsFollowing
	}
	return false
}

func (x *GuildMemberInfo) GetIsFollower() bool {
	if x != nil {
		return x.IsFollower
	}
	return false
}

type ProduceActivateEffectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,1,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceActivateEffectResponse) Reset() {
	*x = ProduceActivateEffectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceActivateEffectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceActivateEffectResponse) ProtoMessage() {}

func (x *ProduceActivateEffectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceActivateEffectResponse.ProtoReflect.Descriptor instead.
func (*ProduceActivateEffectResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{63}
}

func (x *ProduceActivateEffectResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceActivateEffectResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepPresentEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepPresentEndRequest) Reset() {
	*x = ProduceStepPresentEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepPresentEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepPresentEndRequest) ProtoMessage() {}

func (x *ProduceStepPresentEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepPresentEndRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepPresentEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{64}
}

func (x *ProduceStepPresentEndRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type ShopPurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopPurchaseResponse) Reset() {
	*x = ShopPurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchaseResponse) ProtoMessage() {}

func (x *ShopPurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchaseResponse.ProtoReflect.Descriptor instead.
func (*ShopPurchaseResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{65}
}

func (x *ShopPurchaseResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *ShopPurchaseResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopCancelPurchaseTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
}

func (x *ShopCancelPurchaseTransactionRequest) Reset() {
	*x = ShopCancelPurchaseTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchaseTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchaseTransactionRequest) ProtoMessage() {}

func (x *ShopCancelPurchaseTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchaseTransactionRequest.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchaseTransactionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{66}
}

func (x *ShopCancelPurchaseTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type TutorialSkipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IdolCardId string `protobuf:"bytes,2,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
}

func (x *TutorialSkipRequest) Reset() {
	*x = TutorialSkipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialSkipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialSkipRequest) ProtoMessage() {}

func (x *TutorialSkipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialSkipRequest.ProtoReflect.Descriptor instead.
func (*TutorialSkipRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{67}
}

func (x *TutorialSkipRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TutorialSkipRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

type ProfileUpdateNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProfileUpdateNameRequest) Reset() {
	*x = ProfileUpdateNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateNameRequest) ProtoMessage() {}

func (x *ProfileUpdateNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateNameRequest.ProtoReflect.Descriptor instead.
func (*ProfileUpdateNameRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{68}
}

func (x *ProfileUpdateNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ExchangeResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeId string `protobuf:"bytes,1,opt,name=exchangeId,proto3" json:"exchangeId,omitempty"`
}

func (x *ExchangeResetRequest) Reset() {
	*x = ExchangeResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResetRequest) ProtoMessage() {}

func (x *ExchangeResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResetRequest.ProtoReflect.Descriptor instead.
func (*ExchangeResetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{69}
}

func (x *ExchangeResetRequest) GetExchangeId() string {
	if x != nil {
		return x.ExchangeId
	}
	return ""
}

type GiftListHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGiftHistories []*GiftListHistoryResponse_UserGiftHistory `protobuf:"bytes,1,rep,name=userGiftHistories,proto3" json:"userGiftHistories,omitempty"`
	CommonResponse    *papicommon.Response                       `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GiftListHistoryResponse) Reset() {
	*x = GiftListHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftListHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftListHistoryResponse) ProtoMessage() {}

func (x *GiftListHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftListHistoryResponse.ProtoReflect.Descriptor instead.
func (*GiftListHistoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{70}
}

func (x *GiftListHistoryResponse) GetUserGiftHistories() []*GiftListHistoryResponse_UserGiftHistory {
	if x != nil {
		return x.UserGiftHistories
	}
	return nil
}

func (x *GiftListHistoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeishiList     []*MeishiListResponse_MeishiInfo `protobuf:"bytes,1,rep,name=meishiList,proto3" json:"meishiList,omitempty"`
	CommonResponse *papicommon.Response             `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiListResponse) Reset() {
	*x = MeishiListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiListResponse) ProtoMessage() {}

func (x *MeishiListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiListResponse.ProtoReflect.Descriptor instead.
func (*MeishiListResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{71}
}

func (x *MeishiListResponse) GetMeishiList() []*MeishiListResponse_MeishiInfo {
	if x != nil {
		return x.MeishiList
	}
	return nil
}

func (x *MeishiListResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGuildId            string                                `protobuf:"bytes,1,opt,name=publicGuildId,proto3" json:"publicGuildId,omitempty"`
	Name                     string                                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Achievement              *pcommon.Achievement                  `protobuf:"bytes,3,opt,name=achievement,proto3" json:"achievement,omitempty"`
	MemberCount              int32                                 `protobuf:"varint,4,opt,name=memberCount,proto3" json:"memberCount,omitempty"`
	JoinRequestCount         int32                                 `protobuf:"varint,5,opt,name=joinRequestCount,proto3" json:"joinRequestCount,omitempty"`
	IsAutoApproveJoinRequest bool                                  `protobuf:"varint,6,opt,name=isAutoApproveJoinRequest,proto3" json:"isAutoApproveJoinRequest,omitempty"`
	ActivityPolicyType       penum.GuildActivityPolicyType         `protobuf:"varint,7,opt,name=activityPolicyType,proto3,enum=penum.GuildActivityPolicyType" json:"activityPolicyType,omitempty"`
	Description              string                                `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	MemberCountRangeType     penum.GuildSearchMemberCountRangeType `protobuf:"varint,9,opt,name=memberCountRangeType,proto3,enum=penum.GuildSearchMemberCountRangeType" json:"memberCountRangeType,omitempty"`
}

func (x *GuildInfo) Reset() {
	*x = GuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildInfo) ProtoMessage() {}

func (x *GuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildInfo.ProtoReflect.Descriptor instead.
func (*GuildInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{72}
}

func (x *GuildInfo) GetPublicGuildId() string {
	if x != nil {
		return x.PublicGuildId
	}
	return ""
}

func (x *GuildInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildInfo) GetAchievement() *pcommon.Achievement {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *GuildInfo) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *GuildInfo) GetJoinRequestCount() int32 {
	if x != nil {
		return x.JoinRequestCount
	}
	return 0
}

func (x *GuildInfo) GetIsAutoApproveJoinRequest() bool {
	if x != nil {
		return x.IsAutoApproveJoinRequest
	}
	return false
}

func (x *GuildInfo) GetActivityPolicyType() penum.GuildActivityPolicyType {
	if x != nil {
		return x.ActivityPolicyType
	}
	return penum.GuildActivityPolicyType(0)
}

func (x *GuildInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildInfo) GetMemberCountRangeType() penum.GuildSearchMemberCountRangeType {
	if x != nil {
		return x.MemberCountRangeType
	}
	return penum.GuildSearchMemberCountRangeType(0)
}

type MemoryUpdateTagSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MemoryUpdateTagSettingResponse) Reset() {
	*x = MemoryUpdateTagSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryUpdateTagSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUpdateTagSettingResponse) ProtoMessage() {}

func (x *MemoryUpdateTagSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUpdateTagSettingResponse.ProtoReflect.Descriptor instead.
func (*MemoryUpdateTagSettingResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{73}
}

func (x *MemoryUpdateTagSettingResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceHighScoreRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfRank       *ProduceHighScoreRankingResponse_Rank   `protobuf:"bytes,1,opt,name=selfRank,proto3" json:"selfRank,omitempty"`
	Ranks          []*ProduceHighScoreRankingResponse_Rank `protobuf:"bytes,2,rep,name=ranks,proto3" json:"ranks,omitempty"`
	CommonResponse *papicommon.Response                    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceHighScoreRankingResponse) Reset() {
	*x = ProduceHighScoreRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreRankingResponse) ProtoMessage() {}

func (x *ProduceHighScoreRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreRankingResponse.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreRankingResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{74}
}

func (x *ProduceHighScoreRankingResponse) GetSelfRank() *ProduceHighScoreRankingResponse_Rank {
	if x != nil {
		return x.SelfRank
	}
	return nil
}

func (x *ProduceHighScoreRankingResponse) GetRanks() []*ProduceHighScoreRankingResponse_Rank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *ProduceHighScoreRankingResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthSendConsentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Consents []*AuthSendConsentRequest_Consent `protobuf:"bytes,1,rep,name=consents,proto3" json:"consents,omitempty"`
	IsOptout bool                              `protobuf:"varint,2,opt,name=isOptout,proto3" json:"isOptout,omitempty"`
}

func (x *AuthSendConsentRequest) Reset() {
	*x = AuthSendConsentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSendConsentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSendConsentRequest) ProtoMessage() {}

func (x *AuthSendConsentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSendConsentRequest.ProtoReflect.Descriptor instead.
func (*AuthSendConsentRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{75}
}

func (x *AuthSendConsentRequest) GetConsents() []*AuthSendConsentRequest_Consent {
	if x != nil {
		return x.Consents
	}
	return nil
}

func (x *AuthSendConsentRequest) GetIsOptout() bool {
	if x != nil {
		return x.IsOptout
	}
	return false
}

type CoinGashaResetBoxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinGasha      *pcommon.CoinGasha   `protobuf:"bytes,1,opt,name=coinGasha,proto3" json:"coinGasha,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *CoinGashaResetBoxResponse) Reset() {
	*x = CoinGashaResetBoxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaResetBoxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaResetBoxResponse) ProtoMessage() {}

func (x *CoinGashaResetBoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaResetBoxResponse.ProtoReflect.Descriptor instead.
func (*CoinGashaResetBoxResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{76}
}

func (x *CoinGashaResetBoxResponse) GetCoinGasha() *pcommon.CoinGasha {
	if x != nil {
		return x.CoinGasha
	}
	return nil
}

func (x *CoinGashaResetBoxResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranks            []*ProduceRank       `protobuf:"bytes,1,rep,name=ranks,proto3" json:"ranks,omitempty"`
	SelfRank         int32                `protobuf:"varint,2,opt,name=selfRank,proto3" json:"selfRank,omitempty"`
	SelfScore        int32                `protobuf:"varint,3,opt,name=selfScore,proto3" json:"selfScore,omitempty"`
	SelfGrade        penum.ResultGrade    `protobuf:"varint,4,opt,name=selfGrade,proto3,enum=penum.ResultGrade" json:"selfGrade,omitempty"`
	SelfUserMemoryId string               `protobuf:"bytes,5,opt,name=selfUserMemoryId,proto3" json:"selfUserMemoryId,omitempty"`
	CommonResponse   *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceRankingResponse) Reset() {
	*x = ProduceRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRankingResponse) ProtoMessage() {}

func (x *ProduceRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRankingResponse.ProtoReflect.Descriptor instead.
func (*ProduceRankingResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{77}
}

func (x *ProduceRankingResponse) GetRanks() []*ProduceRank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *ProduceRankingResponse) GetSelfRank() int32 {
	if x != nil {
		return x.SelfRank
	}
	return 0
}

func (x *ProduceRankingResponse) GetSelfScore() int32 {
	if x != nil {
		return x.SelfScore
	}
	return 0
}

func (x *ProduceRankingResponse) GetSelfGrade() penum.ResultGrade {
	if x != nil {
		return x.SelfGrade
	}
	return penum.ResultGrade(0)
}

func (x *ProduceRankingResponse) GetSelfUserMemoryId() string {
	if x != nil {
		return x.SelfUserMemoryId
	}
	return ""
}

func (x *ProduceRankingResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MovieDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMovieIds []string `protobuf:"bytes,1,rep,name=userMovieIds,proto3" json:"userMovieIds,omitempty"`
}

func (x *MovieDeleteRequest) Reset() {
	*x = MovieDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDeleteRequest) ProtoMessage() {}

func (x *MovieDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDeleteRequest.ProtoReflect.Descriptor instead.
func (*MovieDeleteRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{78}
}

func (x *MovieDeleteRequest) GetUserMovieIds() []string {
	if x != nil {
		return x.UserMovieIds
	}
	return nil
}

type ProduceEndBeforeLiveEvaluationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceEndBeforeLiveEvaluationRequest) Reset() {
	*x = ProduceEndBeforeLiveEvaluationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceEndBeforeLiveEvaluationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceEndBeforeLiveEvaluationRequest) ProtoMessage() {}

func (x *ProduceEndBeforeLiveEvaluationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceEndBeforeLiveEvaluationRequest.ProtoReflect.Descriptor instead.
func (*ProduceEndBeforeLiveEvaluationRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{79}
}

func (x *ProduceEndBeforeLiveEvaluationRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type ProfileUpdateSupportCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCardId string `protobuf:"bytes,1,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
}

func (x *ProfileUpdateSupportCardRequest) Reset() {
	*x = ProfileUpdateSupportCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateSupportCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateSupportCardRequest) ProtoMessage() {}

func (x *ProfileUpdateSupportCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateSupportCardRequest.ProtoReflect.Descriptor instead.
func (*ProfileUpdateSupportCardRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{80}
}

func (x *ProfileUpdateSupportCardRequest) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

type PvpRateEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stages []*pcommon.ExamBattleAutoStageResult `protobuf:"bytes,1,rep,name=stages,proto3" json:"stages,omitempty"`
}

func (x *PvpRateEndRequest) Reset() {
	*x = PvpRateEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateEndRequest) ProtoMessage() {}

func (x *PvpRateEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateEndRequest.ProtoReflect.Descriptor instead.
func (*PvpRateEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{81}
}

func (x *PvpRateEndRequest) GetStages() []*pcommon.ExamBattleAutoStageResult {
	if x != nil {
		return x.Stages
	}
	return nil
}

type ProduceStepLessonEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid   string                        `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	ExamEndResult *pcommon.ProduceExamEndResult `protobuf:"bytes,1001,opt,name=examEndResult,proto3" json:"examEndResult,omitempty"`
	TurnEndLogs   []*pcommon.ExamTurnEndLog     `protobuf:"bytes,1002,rep,name=turnEndLogs,proto3" json:"turnEndLogs,omitempty"`
}

func (x *ProduceStepLessonEndRequest) Reset() {
	*x = ProduceStepLessonEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepLessonEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepLessonEndRequest) ProtoMessage() {}

func (x *ProduceStepLessonEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepLessonEndRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepLessonEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{82}
}

func (x *ProduceStepLessonEndRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceStepLessonEndRequest) GetExamEndResult() *pcommon.ProduceExamEndResult {
	if x != nil {
		return x.ExamEndResult
	}
	return nil
}

func (x *ProduceStepLessonEndRequest) GetTurnEndLogs() []*pcommon.ExamTurnEndLog {
	if x != nil {
		return x.TurnEndLogs
	}
	return nil
}

type PvpRateStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RivalType penum.PvpRateRivalType `protobuf:"varint,1,opt,name=rivalType,proto3,enum=penum.PvpRateRivalType" json:"rivalType,omitempty"`
}

func (x *PvpRateStartRequest) Reset() {
	*x = PvpRateStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateStartRequest) ProtoMessage() {}

func (x *PvpRateStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateStartRequest.ProtoReflect.Descriptor instead.
func (*PvpRateStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{83}
}

func (x *PvpRateStartRequest) GetRivalType() penum.PvpRateRivalType {
	if x != nil {
		return x.RivalType
	}
	return penum.PvpRateRivalType(0)
}

type UserGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserData *papicommon.UserData `protobuf:"bytes,1,opt,name=userData,proto3" json:"userData,omitempty"`
}

func (x *UserGetResponse) Reset() {
	*x = UserGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGetResponse) ProtoMessage() {}

func (x *UserGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGetResponse.ProtoReflect.Descriptor instead.
func (*UserGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{84}
}

func (x *UserGetResponse) GetUserData() *papicommon.UserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type IdolCardChangeSkinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardSkinId string `protobuf:"bytes,1,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
}

func (x *IdolCardChangeSkinRequest) Reset() {
	*x = IdolCardChangeSkinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardChangeSkinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardChangeSkinRequest) ProtoMessage() {}

func (x *IdolCardChangeSkinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardChangeSkinRequest.ProtoReflect.Descriptor instead.
func (*IdolCardChangeSkinRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{85}
}

func (x *IdolCardChangeSkinRequest) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

type ShopPurchaseJewelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId               string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	TransactionId           string `protobuf:"bytes,2,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	Receipt                 string `protobuf:"bytes,3,opt,name=receipt,proto3" json:"receipt,omitempty"`
	Signature               string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	CurrencyCode            string `protobuf:"bytes,5,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	LocalizedPricePermyriad int64  `protobuf:"varint,6,opt,name=localizedPricePermyriad,proto3" json:"localizedPricePermyriad,omitempty"`
	StoreTransactionId      string `protobuf:"bytes,7,opt,name=storeTransactionId,proto3" json:"storeTransactionId,omitempty"`
}

func (x *ShopPurchaseJewelRequest) Reset() {
	*x = ShopPurchaseJewelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchaseJewelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchaseJewelRequest) ProtoMessage() {}

func (x *ShopPurchaseJewelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchaseJewelRequest.ProtoReflect.Descriptor instead.
func (*ShopPurchaseJewelRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{86}
}

func (x *ShopPurchaseJewelRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ShopPurchaseJewelRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ShopPurchaseJewelRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

func (x *ShopPurchaseJewelRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShopPurchaseJewelRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *ShopPurchaseJewelRequest) GetLocalizedPricePermyriad() int64 {
	if x != nil {
		return x.LocalizedPricePermyriad
	}
	return 0
}

func (x *ShopPurchaseJewelRequest) GetStoreTransactionId() string {
	if x != nil {
		return x.StoreTransactionId
	}
	return ""
}

type TowerUpdateMemoryDeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TowerId       string                  `protobuf:"bytes,1,opt,name=towerId,proto3" json:"towerId,omitempty"`
	MemoryIds     []string                `protobuf:"bytes,2,rep,name=memoryIds,proto3" json:"memoryIds,omitempty"`
	RecommendType penum.DeckRecommendType `protobuf:"varint,3,opt,name=recommendType,proto3,enum=penum.DeckRecommendType" json:"recommendType,omitempty"`
}

func (x *TowerUpdateMemoryDeckRequest) Reset() {
	*x = TowerUpdateMemoryDeckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerUpdateMemoryDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerUpdateMemoryDeckRequest) ProtoMessage() {}

func (x *TowerUpdateMemoryDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerUpdateMemoryDeckRequest.ProtoReflect.Descriptor instead.
func (*TowerUpdateMemoryDeckRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{87}
}

func (x *TowerUpdateMemoryDeckRequest) GetTowerId() string {
	if x != nil {
		return x.TowerId
	}
	return ""
}

func (x *TowerUpdateMemoryDeckRequest) GetMemoryIds() []string {
	if x != nil {
		return x.MemoryIds
	}
	return nil
}

func (x *TowerUpdateMemoryDeckRequest) GetRecommendType() penum.DeckRecommendType {
	if x != nil {
		return x.RecommendType
	}
	return penum.DeckRecommendType(0)
}

type ItemUseActionPointRecoveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ItemUseActionPointRecoveryResponse) Reset() {
	*x = ItemUseActionPointRecoveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseActionPointRecoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseActionPointRecoveryResponse) ProtoMessage() {}

func (x *ItemUseActionPointRecoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseActionPointRecoveryResponse.ProtoReflect.Descriptor instead.
func (*ItemUseActionPointRecoveryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{88}
}

func (x *ItemUseActionPointRecoveryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaSelectPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaSelectPickupResponse) Reset() {
	*x = GashaSelectPickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaSelectPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaSelectPickupResponse) ProtoMessage() {}

func (x *GashaSelectPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaSelectPickupResponse.ProtoReflect.Descriptor instead.
func (*GashaSelectPickupResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{89}
}

func (x *GashaSelectPickupResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     int32                           `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	MeishiBase *MeishiUpdateRequest_MeishiBase `protobuf:"bytes,2,opt,name=meishiBase,proto3" json:"meishiBase,omitempty"`
	Objects    []*MeishiUpdateRequest_Object   `protobuf:"bytes,3,rep,name=objects,proto3" json:"objects,omitempty"`
	Order      int32                           `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *MeishiUpdateRequest) Reset() {
	*x = MeishiUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiUpdateRequest) ProtoMessage() {}

func (x *MeishiUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiUpdateRequest.ProtoReflect.Descriptor instead.
func (*MeishiUpdateRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{90}
}

func (x *MeishiUpdateRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *MeishiUpdateRequest) GetMeishiBase() *MeishiUpdateRequest_MeishiBase {
	if x != nil {
		return x.MeishiBase
	}
	return nil
}

func (x *MeishiUpdateRequest) GetObjects() []*MeishiUpdateRequest_Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *MeishiUpdateRequest) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type StoryEventTopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryEventId string `protobuf:"bytes,1,opt,name=storyEventId,proto3" json:"storyEventId,omitempty"`
}

func (x *StoryEventTopRequest) Reset() {
	*x = StoryEventTopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryEventTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventTopRequest) ProtoMessage() {}

func (x *StoryEventTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventTopRequest.ProtoReflect.Descriptor instead.
func (*StoryEventTopRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{91}
}

func (x *StoryEventTopRequest) GetStoryEventId() string {
	if x != nil {
		return x.StoryEventId
	}
	return ""
}

type ProduceRankingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceGroupId string `protobuf:"bytes,1,opt,name=produceGroupId,proto3" json:"produceGroupId,omitempty"`
	IdolCardId     string `protobuf:"bytes,2,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
}

func (x *ProduceRankingRequest) Reset() {
	*x = ProduceRankingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRankingRequest) ProtoMessage() {}

func (x *ProduceRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRankingRequest.ProtoReflect.Descriptor instead.
func (*ProduceRankingRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{92}
}

func (x *ProduceRankingRequest) GetProduceGroupId() string {
	if x != nil {
		return x.ProduceGroupId
	}
	return ""
}

func (x *ProduceRankingRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

type ProfileBirthday struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month int32 `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *ProfileBirthday) Reset() {
	*x = ProfileBirthday{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileBirthday) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileBirthday) ProtoMessage() {}

func (x *ProfileBirthday) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileBirthday.ProtoReflect.Descriptor instead.
func (*ProfileBirthday) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{93}
}

func (x *ProfileBirthday) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *ProfileBirthday) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type GuildDonateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *GuildDonateRequest) Reset() {
	*x = GuildDonateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDonateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDonateRequest) ProtoMessage() {}

func (x *GuildDonateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDonateRequest.ProtoReflect.Descriptor instead.
func (*GuildDonateRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{94}
}

func (x *GuildDonateRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type GuildRequestDonationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildRequestDonationResponse) Reset() {
	*x = GuildRequestDonationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRequestDonationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRequestDonationResponse) ProtoMessage() {}

func (x *GuildRequestDonationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRequestDonationResponse.ProtoReflect.Descriptor instead.
func (*GuildRequestDonationResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{95}
}

func (x *GuildRequestDonationResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type HomeSetCharactersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *HomeSetCharactersResponse) Reset() {
	*x = HomeSetCharactersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSetCharactersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSetCharactersResponse) ProtoMessage() {}

func (x *HomeSetCharactersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSetCharactersResponse.ProtoReflect.Descriptor instead.
func (*HomeSetCharactersResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{96}
}

func (x *HomeSetCharactersResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PhotoCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PhotoCreateResponse) Reset() {
	*x = PhotoCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoCreateResponse) ProtoMessage() {}

func (x *PhotoCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoCreateResponse.ProtoReflect.Descriptor instead.
func (*PhotoCreateResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{97}
}

func (x *PhotoCreateResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeInfo         *GuildTopResponse_HomeInfo  `protobuf:"bytes,1,opt,name=homeInfo,proto3" json:"homeInfo,omitempty"`
	List             []*GuildInfo                `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	JoinRequestList  []*GuildInfo                `protobuf:"bytes,3,rep,name=joinRequestList,proto3" json:"joinRequestList,omitempty"`
	NotificationType penum.GuildNotificationType `protobuf:"varint,100,opt,name=notificationType,proto3,enum=penum.GuildNotificationType" json:"notificationType,omitempty"`
	CommonResponse   *papicommon.Response        `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildTopResponse) Reset() {
	*x = GuildTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTopResponse) ProtoMessage() {}

func (x *GuildTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTopResponse.ProtoReflect.Descriptor instead.
func (*GuildTopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{98}
}

func (x *GuildTopResponse) GetHomeInfo() *GuildTopResponse_HomeInfo {
	if x != nil {
		return x.HomeInfo
	}
	return nil
}

func (x *GuildTopResponse) GetList() []*GuildInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GuildTopResponse) GetJoinRequestList() []*GuildInfo {
	if x != nil {
		return x.JoinRequestList
	}
	return nil
}

func (x *GuildTopResponse) GetNotificationType() penum.GuildNotificationType {
	if x != nil {
		return x.NotificationType
	}
	return penum.GuildNotificationType(0)
}

func (x *GuildTopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SystemCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaintenanceInfo      *SystemCheckResponse_MaintenanceInfo `protobuf:"bytes,1,opt,name=maintenanceInfo,proto3" json:"maintenanceInfo,omitempty"`
	ReviewInfo           *SystemCheckResponse_ReviewInfo      `protobuf:"bytes,2,opt,name=reviewInfo,proto3" json:"reviewInfo,omitempty"`
	OctoHost             string                               `protobuf:"bytes,3,opt,name=octoHost,proto3" json:"octoHost,omitempty"`
	OctoVersion          int32                                `protobuf:"varint,4,opt,name=octoVersion,proto3" json:"octoVersion,omitempty"`
	OfficialXUrl         string                               `protobuf:"bytes,5,opt,name=officialXUrl,proto3" json:"officialXUrl,omitempty"`
	FaqUrl               string                               `protobuf:"bytes,6,opt,name=faqUrl,proto3" json:"faqUrl,omitempty"`
	InquiryUrl           string                               `protobuf:"bytes,7,opt,name=inquiryUrl,proto3" json:"inquiryUrl,omitempty"`
	UserDeleteInquiryUrl string                               `protobuf:"bytes,8,opt,name=userDeleteInquiryUrl,proto3" json:"userDeleteInquiryUrl,omitempty"`
	PlayIntegrityEnabled bool                                 `protobuf:"varint,9,opt,name=playIntegrityEnabled,proto3" json:"playIntegrityEnabled,omitempty"`
}

func (x *SystemCheckResponse) Reset() {
	*x = SystemCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckResponse) ProtoMessage() {}

func (x *SystemCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckResponse.ProtoReflect.Descriptor instead.
func (*SystemCheckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{99}
}

func (x *SystemCheckResponse) GetMaintenanceInfo() *SystemCheckResponse_MaintenanceInfo {
	if x != nil {
		return x.MaintenanceInfo
	}
	return nil
}

func (x *SystemCheckResponse) GetReviewInfo() *SystemCheckResponse_ReviewInfo {
	if x != nil {
		return x.ReviewInfo
	}
	return nil
}

func (x *SystemCheckResponse) GetOctoHost() string {
	if x != nil {
		return x.OctoHost
	}
	return ""
}

func (x *SystemCheckResponse) GetOctoVersion() int32 {
	if x != nil {
		return x.OctoVersion
	}
	return 0
}

func (x *SystemCheckResponse) GetOfficialXUrl() string {
	if x != nil {
		return x.OfficialXUrl
	}
	return ""
}

func (x *SystemCheckResponse) GetFaqUrl() string {
	if x != nil {
		return x.FaqUrl
	}
	return ""
}

func (x *SystemCheckResponse) GetInquiryUrl() string {
	if x != nil {
		return x.InquiryUrl
	}
	return ""
}

func (x *SystemCheckResponse) GetUserDeleteInquiryUrl() string {
	if x != nil {
		return x.UserDeleteInquiryUrl
	}
	return ""
}

func (x *SystemCheckResponse) GetPlayIntegrityEnabled() bool {
	if x != nil {
		return x.PlayIntegrityEnabled
	}
	return false
}

type GuildEditLeaderMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildEditLeaderMessageResponse) Reset() {
	*x = GuildEditLeaderMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEditLeaderMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEditLeaderMessageResponse) ProtoMessage() {}

func (x *GuildEditLeaderMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEditLeaderMessageResponse.ProtoReflect.Descriptor instead.
func (*GuildEditLeaderMessageResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{100}
}

func (x *GuildEditLeaderMessageResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MediaPlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MediaPlayResponse) Reset() {
	*x = MediaPlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaPlayResponse) ProtoMessage() {}

func (x *MediaPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaPlayResponse.ProtoReflect.Descriptor instead.
func (*MediaPlayResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{101}
}

func (x *MediaPlayResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiReportXPostMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiReportXPostMissionResponse) Reset() {
	*x = MeishiReportXPostMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiReportXPostMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiReportXPostMissionResponse) ProtoMessage() {}

func (x *MeishiReportXPostMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiReportXPostMissionResponse.ProtoReflect.Descriptor instead.
func (*MeishiReportXPostMissionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{102}
}

func (x *MeishiReportXPostMissionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProfileGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *ProfileGetRequest) Reset() {
	*x = ProfileGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileGetRequest) ProtoMessage() {}

func (x *ProfileGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileGetRequest.ProtoReflect.Descriptor instead.
func (*ProfileGetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{103}
}

func (x *ProfileGetRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type ProduceViewPictureBookLiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicId string `protobuf:"bytes,1,opt,name=musicId,proto3" json:"musicId,omitempty"`
}

func (x *ProduceViewPictureBookLiveRequest) Reset() {
	*x = ProduceViewPictureBookLiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceViewPictureBookLiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceViewPictureBookLiveRequest) ProtoMessage() {}

func (x *ProduceViewPictureBookLiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceViewPictureBookLiveRequest.ProtoReflect.Descriptor instead.
func (*ProduceViewPictureBookLiveRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{104}
}

func (x *ProduceViewPictureBookLiveRequest) GetMusicId() string {
	if x != nil {
		return x.MusicId
	}
	return ""
}

type AuthUnlinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *AuthUnlinkResponse) Reset() {
	*x = AuthUnlinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUnlinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUnlinkResponse) ProtoMessage() {}

func (x *AuthUnlinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUnlinkResponse.ProtoReflect.Descriptor instead.
func (*AuthUnlinkResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{105}
}

func (x *AuthUnlinkResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaGetPrecautionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Precaution     string               `protobuf:"bytes,2,opt,name=precaution,proto3" json:"precaution,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaGetPrecautionResponse) Reset() {
	*x = GashaGetPrecautionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetPrecautionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetPrecautionResponse) ProtoMessage() {}

func (x *GashaGetPrecautionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetPrecautionResponse.ProtoReflect.Descriptor instead.
func (*GashaGetPrecautionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{106}
}

func (x *GashaGetPrecautionResponse) GetPrecaution() string {
	if x != nil {
		return x.Precaution
	}
	return ""
}

func (x *GashaGetPrecautionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepPresentReceiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid    string  `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	PositionNumber int32   `protobuf:"varint,2,opt,name=positionNumber,proto3" json:"positionNumber,omitempty"`
	RewardIndexes  []int32 `protobuf:"varint,3,rep,packed,name=rewardIndexes,proto3" json:"rewardIndexes,omitempty"`
}

func (x *ProduceStepPresentReceiveRequest) Reset() {
	*x = ProduceStepPresentReceiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepPresentReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepPresentReceiveRequest) ProtoMessage() {}

func (x *ProduceStepPresentReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepPresentReceiveRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepPresentReceiveRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{107}
}

func (x *ProduceStepPresentReceiveRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceStepPresentReceiveRequest) GetPositionNumber() int32 {
	if x != nil {
		return x.PositionNumber
	}
	return 0
}

func (x *ProduceStepPresentReceiveRequest) GetRewardIndexes() []int32 {
	if x != nil {
		return x.RewardIndexes
	}
	return nil
}

type GuildGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info           *GuildInfo           `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildGetResponse) Reset() {
	*x = GuildGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildGetResponse) ProtoMessage() {}

func (x *GuildGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildGetResponse.ProtoReflect.Descriptor instead.
func (*GuildGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{108}
}

func (x *GuildGetResponse) GetInfo() *GuildInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GuildGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildChangeLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildChangeLeaderResponse) Reset() {
	*x = GuildChangeLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChangeLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChangeLeaderResponse) ProtoMessage() {}

func (x *GuildChangeLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChangeLeaderResponse.ProtoReflect.Descriptor instead.
func (*GuildChangeLeaderResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{109}
}

func (x *GuildChangeLeaderResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceUpdateMemoryDeckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceUpdateMemoryDeckResponse) Reset() {
	*x = ProduceUpdateMemoryDeckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceUpdateMemoryDeckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceUpdateMemoryDeckResponse) ProtoMessage() {}

func (x *ProduceUpdateMemoryDeckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceUpdateMemoryDeckResponse.ProtoReflect.Descriptor instead.
func (*ProduceUpdateMemoryDeckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{110}
}

func (x *ProduceUpdateMemoryDeckResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopList             []*ShopTopResponse_Shop        `protobuf:"bytes,1,rep,name=shopList,proto3" json:"shopList,omitempty"`
	ShopItemList         []*pmaster.ShopItem            `protobuf:"bytes,2,rep,name=shopItemList,proto3" json:"shopItemList,omitempty"`
	ItemExchangeNoti     bool                           `protobuf:"varint,3,opt,name=itemExchangeNoti,proto3" json:"itemExchangeNoti,omitempty"`
	DailyExchangeNoti    bool                           `protobuf:"varint,4,opt,name=dailyExchangeNoti,proto3" json:"dailyExchangeNoti,omitempty"`
	CoinGashaNoti        bool                           `protobuf:"varint,5,opt,name=coinGashaNoti,proto3" json:"coinGashaNoti,omitempty"`
	StartupNotifications []*pcommon.StartupNotification `protobuf:"bytes,6,rep,name=startupNotifications,proto3" json:"startupNotifications,omitempty"`
	CommonResponse       *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopTopResponse) Reset() {
	*x = ShopTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopTopResponse) ProtoMessage() {}

func (x *ShopTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopTopResponse.ProtoReflect.Descriptor instead.
func (*ShopTopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{111}
}

func (x *ShopTopResponse) GetShopList() []*ShopTopResponse_Shop {
	if x != nil {
		return x.ShopList
	}
	return nil
}

func (x *ShopTopResponse) GetShopItemList() []*pmaster.ShopItem {
	if x != nil {
		return x.ShopItemList
	}
	return nil
}

func (x *ShopTopResponse) GetItemExchangeNoti() bool {
	if x != nil {
		return x.ItemExchangeNoti
	}
	return false
}

func (x *ShopTopResponse) GetDailyExchangeNoti() bool {
	if x != nil {
		return x.DailyExchangeNoti
	}
	return false
}

func (x *ShopTopResponse) GetCoinGashaNoti() bool {
	if x != nil {
		return x.CoinGashaNoti
	}
	return false
}

func (x *ShopTopResponse) GetStartupNotifications() []*pcommon.StartupNotification {
	if x != nil {
		return x.StartupNotifications
	}
	return nil
}

func (x *ShopTopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type StoryUnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId string `protobuf:"bytes,1,opt,name=storyId,proto3" json:"storyId,omitempty"`
}

func (x *StoryUnlockRequest) Reset() {
	*x = StoryUnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryUnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryUnlockRequest) ProtoMessage() {}

func (x *StoryUnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryUnlockRequest.ProtoReflect.Descriptor instead.
func (*StoryUnlockRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{112}
}

func (x *StoryUnlockRequest) GetStoryId() string {
	if x != nil {
		return x.StoryId
	}
	return ""
}

type WorkFinishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishResults  []*WorkFinishResult  `protobuf:"bytes,1,rep,name=finishResults,proto3" json:"finishResults,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *WorkFinishResponse) Reset() {
	*x = WorkFinishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFinishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFinishResponse) ProtoMessage() {}

func (x *WorkFinishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFinishResponse.ProtoReflect.Descriptor instead.
func (*WorkFinishResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{113}
}

func (x *WorkFinishResponse) GetFinishResults() []*WorkFinishResult {
	if x != nil {
		return x.FinishResults
	}
	return nil
}

func (x *WorkFinishResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GiftOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults       []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	OpenedUserGiftIds   []string                `protobuf:"bytes,2,rep,name=openedUserGiftIds,proto3" json:"openedUserGiftIds,omitempty"`
	UnopenedUserGiftIds []string                `protobuf:"bytes,3,rep,name=unopenedUserGiftIds,proto3" json:"unopenedUserGiftIds,omitempty"`
	CommonResponse      *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GiftOpenResponse) Reset() {
	*x = GiftOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftOpenResponse) ProtoMessage() {}

func (x *GiftOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftOpenResponse.ProtoReflect.Descriptor instead.
func (*GiftOpenResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{114}
}

func (x *GiftOpenResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *GiftOpenResponse) GetOpenedUserGiftIds() []string {
	if x != nil {
		return x.OpenedUserGiftIds
	}
	return nil
}

func (x *GiftOpenResponse) GetUnopenedUserGiftIds() []string {
	if x != nil {
		return x.UnopenedUserGiftIds
	}
	return nil
}

func (x *GiftOpenResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed        int64                     `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Result      *pcommon.ExamBattleResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	TurnEndLogs []*pcommon.ExamTurnEndLog `protobuf:"bytes,3,rep,name=turnEndLogs,proto3" json:"turnEndLogs,omitempty"`
}

func (x *TowerEndRequest) Reset() {
	*x = TowerEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerEndRequest) ProtoMessage() {}

func (x *TowerEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerEndRequest.ProtoReflect.Descriptor instead.
func (*TowerEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{115}
}

func (x *TowerEndRequest) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *TowerEndRequest) GetResult() *pcommon.ExamBattleResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TowerEndRequest) GetTurnEndLogs() []*pcommon.ExamTurnEndLog {
	if x != nil {
		return x.TurnEndLogs
	}
	return nil
}

type IdolCardProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardSkinId          string            `protobuf:"bytes,1,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
	TenPermyriadProbability int32             `protobuf:"varint,2,opt,name=tenPermyriadProbability,proto3" json:"tenPermyriadProbability,omitempty"`
	Rewards                 []*pcommon.Reward `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"`
	IsPickup                bool              `protobuf:"varint,4,opt,name=isPickup,proto3" json:"isPickup,omitempty"`
}

func (x *IdolCardProbability) Reset() {
	*x = IdolCardProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardProbability) ProtoMessage() {}

func (x *IdolCardProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardProbability.ProtoReflect.Descriptor instead.
func (*IdolCardProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{116}
}

func (x *IdolCardProbability) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

func (x *IdolCardProbability) GetTenPermyriadProbability() int32 {
	if x != nil {
		return x.TenPermyriadProbability
	}
	return 0
}

func (x *IdolCardProbability) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *IdolCardProbability) GetIsPickup() bool {
	if x != nil {
		return x.IsPickup
	}
	return false
}

type StoryReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId string `protobuf:"bytes,1,opt,name=storyId,proto3" json:"storyId,omitempty"`
	IsAuto  bool   `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	IsSkip  bool   `protobuf:"varint,3,opt,name=isSkip,proto3" json:"isSkip,omitempty"`
}

func (x *StoryReadRequest) Reset() {
	*x = StoryReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryReadRequest) ProtoMessage() {}

func (x *StoryReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryReadRequest.ProtoReflect.Descriptor instead.
func (*StoryReadRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{117}
}

func (x *StoryReadRequest) GetStoryId() string {
	if x != nil {
		return x.StoryId
	}
	return ""
}

func (x *StoryReadRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

func (x *StoryReadRequest) GetIsSkip() bool {
	if x != nil {
		return x.IsSkip
	}
	return false
}

type ExchangeResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange       *ExchangeInfo        `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ExchangeResetResponse) Reset() {
	*x = ExchangeResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResetResponse) ProtoMessage() {}

func (x *ExchangeResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResetResponse.ProtoReflect.Descriptor instead.
func (*ExchangeResetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{118}
}

func (x *ExchangeResetResponse) GetExchange() *ExchangeInfo {
	if x != nil {
		return x.Exchange
	}
	return nil
}

func (x *ExchangeResetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaGetStepUpProbabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
}

func (x *GashaGetStepUpProbabilityRequest) Reset() {
	*x = GashaGetStepUpProbabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetStepUpProbabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetStepUpProbabilityRequest) ProtoMessage() {}

func (x *GashaGetStepUpProbabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetStepUpProbabilityRequest.ProtoReflect.Descriptor instead.
func (*GashaGetStepUpProbabilityRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{119}
}

func (x *GashaGetStepUpProbabilityRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

type ShopRegisterPurchaseTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopItemId string `protobuf:"bytes,1,opt,name=shopItemId,proto3" json:"shopItemId,omitempty"`
}

func (x *ShopRegisterPurchaseTransactionRequest) Reset() {
	*x = ShopRegisterPurchaseTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRegisterPurchaseTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRegisterPurchaseTransactionRequest) ProtoMessage() {}

func (x *ShopRegisterPurchaseTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRegisterPurchaseTransactionRequest.ProtoReflect.Descriptor instead.
func (*ShopRegisterPurchaseTransactionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{120}
}

func (x *ShopRegisterPurchaseTransactionRequest) GetShopItemId() string {
	if x != nil {
		return x.ShopItemId
	}
	return ""
}

type GashaGetPointExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaPointId      string                                            `protobuf:"bytes,1,opt,name=gashaPointId,proto3" json:"gashaPointId,omitempty"`
	Name              string                                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ConditionSetId    string                                            `protobuf:"bytes,3,opt,name=conditionSetId,proto3" json:"conditionSetId,omitempty"`
	ExpireReward      *pcommon.Reward                                   `protobuf:"bytes,4,opt,name=expireReward,proto3" json:"expireReward,omitempty"`
	ExchangeResources []*GashaGetPointExchangeResponse_ExchangeResource `protobuf:"bytes,5,rep,name=exchangeResources,proto3" json:"exchangeResources,omitempty"`
	Point             int32                                             `protobuf:"varint,6,opt,name=point,proto3" json:"point,omitempty"`
	StartTime         int64                                             `protobuf:"varint,100,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime           int64                                             `protobuf:"varint,101,opt,name=endTime,proto3" json:"endTime,omitempty"`
	CommonResponse    *papicommon.Response                              `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaGetPointExchangeResponse) Reset() {
	*x = GashaGetPointExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetPointExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetPointExchangeResponse) ProtoMessage() {}

func (x *GashaGetPointExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetPointExchangeResponse.ProtoReflect.Descriptor instead.
func (*GashaGetPointExchangeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{121}
}

func (x *GashaGetPointExchangeResponse) GetGashaPointId() string {
	if x != nil {
		return x.GashaPointId
	}
	return ""
}

func (x *GashaGetPointExchangeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GashaGetPointExchangeResponse) GetConditionSetId() string {
	if x != nil {
		return x.ConditionSetId
	}
	return ""
}

func (x *GashaGetPointExchangeResponse) GetExpireReward() *pcommon.Reward {
	if x != nil {
		return x.ExpireReward
	}
	return nil
}

func (x *GashaGetPointExchangeResponse) GetExchangeResources() []*GashaGetPointExchangeResponse_ExchangeResource {
	if x != nil {
		return x.ExchangeResources
	}
	return nil
}

func (x *GashaGetPointExchangeResponse) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *GashaGetPointExchangeResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GashaGetPointExchangeResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GashaGetPointExchangeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *MeishiSetRequest) Reset() {
	*x = MeishiSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiSetRequest) ProtoMessage() {}

func (x *MeishiSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiSetRequest.ProtoReflect.Descriptor instead.
func (*MeishiSetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{122}
}

func (x *MeishiSetRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ProduceUpdateMemoryDeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decks []*ProduceUpdateMemoryDeck `protobuf:"bytes,1,rep,name=decks,proto3" json:"decks,omitempty"`
}

func (x *ProduceUpdateMemoryDeckRequest) Reset() {
	*x = ProduceUpdateMemoryDeckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceUpdateMemoryDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceUpdateMemoryDeckRequest) ProtoMessage() {}

func (x *ProduceUpdateMemoryDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceUpdateMemoryDeckRequest.ProtoReflect.Descriptor instead.
func (*ProduceUpdateMemoryDeckRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{123}
}

func (x *ProduceUpdateMemoryDeckRequest) GetDecks() []*ProduceUpdateMemoryDeck {
	if x != nil {
		return x.Decks
	}
	return nil
}

type ProduceUpdateMemoryDeck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceType   penum.ProduceType       `protobuf:"varint,1,opt,name=produceType,proto3,enum=penum.ProduceType" json:"produceType,omitempty"`
	Number        int32                   `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	UserMemoryIds []string                `protobuf:"bytes,3,rep,name=userMemoryIds,proto3" json:"userMemoryIds,omitempty"`
	RecommendType penum.DeckRecommendType `protobuf:"varint,4,opt,name=recommendType,proto3,enum=penum.DeckRecommendType" json:"recommendType,omitempty"`
}

func (x *ProduceUpdateMemoryDeck) Reset() {
	*x = ProduceUpdateMemoryDeck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceUpdateMemoryDeck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceUpdateMemoryDeck) ProtoMessage() {}

func (x *ProduceUpdateMemoryDeck) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceUpdateMemoryDeck.ProtoReflect.Descriptor instead.
func (*ProduceUpdateMemoryDeck) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{124}
}

func (x *ProduceUpdateMemoryDeck) GetProduceType() penum.ProduceType {
	if x != nil {
		return x.ProduceType
	}
	return penum.ProduceType(0)
}

func (x *ProduceUpdateMemoryDeck) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ProduceUpdateMemoryDeck) GetUserMemoryIds() []string {
	if x != nil {
		return x.UserMemoryIds
	}
	return nil
}

func (x *ProduceUpdateMemoryDeck) GetRecommendType() penum.DeckRecommendType {
	if x != nil {
		return x.RecommendType
	}
	return penum.DeckRecommendType(0)
}

type MissionReceiveGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionGroupId string `protobuf:"bytes,1,opt,name=missionGroupId,proto3" json:"missionGroupId,omitempty"`
}

func (x *MissionReceiveGroupRequest) Reset() {
	*x = MissionReceiveGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveGroupRequest) ProtoMessage() {}

func (x *MissionReceiveGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveGroupRequest.ProtoReflect.Descriptor instead.
func (*MissionReceiveGroupRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{125}
}

func (x *MissionReceiveGroupRequest) GetMissionGroupId() string {
	if x != nil {
		return x.MissionGroupId
	}
	return ""
}

type MovieCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MovieCreateResponse) Reset() {
	*x = MovieCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCreateResponse) ProtoMessage() {}

func (x *MovieCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCreateResponse.ProtoReflect.Descriptor instead.
func (*MovieCreateResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{126}
}

func (x *MovieCreateResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type NoticeGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info           *NoticeInfo          `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *NoticeGetResponse) Reset() {
	*x = NoticeGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeGetResponse) ProtoMessage() {}

func (x *NoticeGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeGetResponse.ProtoReflect.Descriptor instead.
func (*NoticeGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{127}
}

func (x *NoticeGetResponse) GetInfo() *NoticeInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *NoticeGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceListRentalMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memories       []*ProduceListRentalMemoryResponse_RentalMemory `protobuf:"bytes,1,rep,name=memories,proto3" json:"memories,omitempty"`
	CommonResponse *papicommon.Response                            `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceListRentalMemoryResponse) Reset() {
	*x = ProduceListRentalMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceListRentalMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceListRentalMemoryResponse) ProtoMessage() {}

func (x *ProduceListRentalMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceListRentalMemoryResponse.ProtoReflect.Descriptor instead.
func (*ProduceListRentalMemoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{128}
}

func (x *ProduceListRentalMemoryResponse) GetMemories() []*ProduceListRentalMemoryResponse_RentalMemory {
	if x != nil {
		return x.Memories
	}
	return nil
}

func (x *ProduceListRentalMemoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialReadDearnessStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId   string `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
	DearnessLevel int32  `protobuf:"varint,2,opt,name=dearnessLevel,proto3" json:"dearnessLevel,omitempty"`
	IsAuto        bool   `protobuf:"varint,3,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	IsSkip        bool   `protobuf:"varint,4,opt,name=isSkip,proto3" json:"isSkip,omitempty"`
}

func (x *TutorialReadDearnessStoryRequest) Reset() {
	*x = TutorialReadDearnessStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialReadDearnessStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialReadDearnessStoryRequest) ProtoMessage() {}

func (x *TutorialReadDearnessStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialReadDearnessStoryRequest.ProtoReflect.Descriptor instead.
func (*TutorialReadDearnessStoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{129}
}

func (x *TutorialReadDearnessStoryRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *TutorialReadDearnessStoryRequest) GetDearnessLevel() int32 {
	if x != nil {
		return x.DearnessLevel
	}
	return 0
}

func (x *TutorialReadDearnessStoryRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

func (x *TutorialReadDearnessStoryRequest) GetIsSkip() bool {
	if x != nil {
		return x.IsSkip
	}
	return false
}

type StepUpGashaProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step                    int32                    `protobuf:"varint,1,opt,name=step,proto3" json:"step,omitempty"`
	DefaultGashaProbability *DefaultGashaProbability `protobuf:"bytes,2,opt,name=defaultGashaProbability,proto3" json:"defaultGashaProbability,omitempty"`
}

func (x *StepUpGashaProbability) Reset() {
	*x = StepUpGashaProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepUpGashaProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepUpGashaProbability) ProtoMessage() {}

func (x *StepUpGashaProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepUpGashaProbability.ProtoReflect.Descriptor instead.
func (*StepUpGashaProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{130}
}

func (x *StepUpGashaProbability) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *StepUpGashaProbability) GetDefaultGashaProbability() *DefaultGashaProbability {
	if x != nil {
		return x.DefaultGashaProbability
	}
	return nil
}

type GuildRequestDonationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildDonationItemId string `protobuf:"bytes,1,opt,name=guildDonationItemId,proto3" json:"guildDonationItemId,omitempty"`
}

func (x *GuildRequestDonationRequest) Reset() {
	*x = GuildRequestDonationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRequestDonationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRequestDonationRequest) ProtoMessage() {}

func (x *GuildRequestDonationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRequestDonationRequest.ProtoReflect.Descriptor instead.
func (*GuildRequestDonationRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{131}
}

func (x *GuildRequestDonationRequest) GetGuildDonationItemId() string {
	if x != nil {
		return x.GuildDonationItemId
	}
	return ""
}

type HomeEnterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeBanners         []*pcommon.HomeBanner                   `protobuf:"bytes,1,rep,name=homeBanners,proto3" json:"homeBanners,omitempty"`
	HomeNavigations     []*pcommon.HomeNavigation               `protobuf:"bytes,2,rep,name=homeNavigations,proto3" json:"homeNavigations,omitempty"`
	FeatureMaintenances []*HomeEnterResponse_FeatureMaintenance `protobuf:"bytes,3,rep,name=featureMaintenances,proto3" json:"featureMaintenances,omitempty"`
	Gashas              []*pcommon.Gasha                        `protobuf:"bytes,4,rep,name=gashas,proto3" json:"gashas,omitempty"`
	PvpRateSeasonTop    *papicommon.PvpRateSeasonTop            `protobuf:"bytes,5,opt,name=pvpRateSeasonTop,proto3" json:"pvpRateSeasonTop,omitempty"`
	Events              []*pcommon.Event                        `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty"`
	GiftCount           int32                                   `protobuf:"varint,100,opt,name=giftCount,proto3" json:"giftCount,omitempty"`
	ShopItemLabelType   penum.ShopItemLabelType                 `protobuf:"varint,101,opt,name=shopItemLabelType,proto3,enum=penum.ShopItemLabelType" json:"shopItemLabelType,omitempty"`
	HomeShopNoti        bool                                    `protobuf:"varint,102,opt,name=homeShopNoti,proto3" json:"homeShopNoti,omitempty"`
	ShopNoti            bool                                    `protobuf:"varint,103,opt,name=shopNoti,proto3" json:"shopNoti,omitempty"`
	GuildNoti           bool                                    `protobuf:"varint,104,opt,name=guildNoti,proto3" json:"guildNoti,omitempty"`
	NoticeNoti          bool                                    `protobuf:"varint,105,opt,name=noticeNoti,proto3" json:"noticeNoti,omitempty"`
	InvitationNoti      bool                                    `protobuf:"varint,106,opt,name=invitationNoti,proto3" json:"invitationNoti,omitempty"`
	HasProduceCampaign  bool                                    `protobuf:"varint,107,opt,name=hasProduceCampaign,proto3" json:"hasProduceCampaign,omitempty"`
	HasExpireGashaPoint bool                                    `protobuf:"varint,108,opt,name=hasExpireGashaPoint,proto3" json:"hasExpireGashaPoint,omitempty"`
	TowerNoti           bool                                    `protobuf:"varint,109,opt,name=towerNoti,proto3" json:"towerNoti,omitempty"`
	CommonResponse      *papicommon.Response                    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *HomeEnterResponse) Reset() {
	*x = HomeEnterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeEnterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeEnterResponse) ProtoMessage() {}

func (x *HomeEnterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeEnterResponse.ProtoReflect.Descriptor instead.
func (*HomeEnterResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{132}
}

func (x *HomeEnterResponse) GetHomeBanners() []*pcommon.HomeBanner {
	if x != nil {
		return x.HomeBanners
	}
	return nil
}

func (x *HomeEnterResponse) GetHomeNavigations() []*pcommon.HomeNavigation {
	if x != nil {
		return x.HomeNavigations
	}
	return nil
}

func (x *HomeEnterResponse) GetFeatureMaintenances() []*HomeEnterResponse_FeatureMaintenance {
	if x != nil {
		return x.FeatureMaintenances
	}
	return nil
}

func (x *HomeEnterResponse) GetGashas() []*pcommon.Gasha {
	if x != nil {
		return x.Gashas
	}
	return nil
}

func (x *HomeEnterResponse) GetPvpRateSeasonTop() *papicommon.PvpRateSeasonTop {
	if x != nil {
		return x.PvpRateSeasonTop
	}
	return nil
}

func (x *HomeEnterResponse) GetEvents() []*pcommon.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *HomeEnterResponse) GetGiftCount() int32 {
	if x != nil {
		return x.GiftCount
	}
	return 0
}

func (x *HomeEnterResponse) GetShopItemLabelType() penum.ShopItemLabelType {
	if x != nil {
		return x.ShopItemLabelType
	}
	return penum.ShopItemLabelType(0)
}

func (x *HomeEnterResponse) GetHomeShopNoti() bool {
	if x != nil {
		return x.HomeShopNoti
	}
	return false
}

func (x *HomeEnterResponse) GetShopNoti() bool {
	if x != nil {
		return x.ShopNoti
	}
	return false
}

func (x *HomeEnterResponse) GetGuildNoti() bool {
	if x != nil {
		return x.GuildNoti
	}
	return false
}

func (x *HomeEnterResponse) GetNoticeNoti() bool {
	if x != nil {
		return x.NoticeNoti
	}
	return false
}

func (x *HomeEnterResponse) GetInvitationNoti() bool {
	if x != nil {
		return x.InvitationNoti
	}
	return false
}

func (x *HomeEnterResponse) GetHasProduceCampaign() bool {
	if x != nil {
		return x.HasProduceCampaign
	}
	return false
}

func (x *HomeEnterResponse) GetHasExpireGashaPoint() bool {
	if x != nil {
		return x.HasExpireGashaPoint
	}
	return false
}

func (x *HomeEnterResponse) GetTowerNoti() bool {
	if x != nil {
		return x.TowerNoti
	}
	return false
}

func (x *HomeEnterResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerReceiveTotalClearRankRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetRank int32 `protobuf:"varint,1,opt,name=targetRank,proto3" json:"targetRank,omitempty"`
}

func (x *TowerReceiveTotalClearRankRewardRequest) Reset() {
	*x = TowerReceiveTotalClearRankRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerReceiveTotalClearRankRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerReceiveTotalClearRankRewardRequest) ProtoMessage() {}

func (x *TowerReceiveTotalClearRankRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerReceiveTotalClearRankRewardRequest.ProtoReflect.Descriptor instead.
func (*TowerReceiveTotalClearRankRewardRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{133}
}

func (x *TowerReceiveTotalClearRankRewardRequest) GetTargetRank() int32 {
	if x != nil {
		return x.TargetRank
	}
	return 0
}

type MeishiFollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiFollowResponse) Reset() {
	*x = MeishiFollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiFollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiFollowResponse) ProtoMessage() {}

func (x *MeishiFollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiFollowResponse.ProtoReflect.Descriptor instead.
func (*MeishiFollowResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{134}
}

func (x *MeishiFollowResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MissionExchangePassPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionPassId string `protobuf:"bytes,1,opt,name=missionPassId,proto3" json:"missionPassId,omitempty"`
	Threshold     int32  `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *MissionExchangePassPointRequest) Reset() {
	*x = MissionExchangePassPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionExchangePassPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionExchangePassPointRequest) ProtoMessage() {}

func (x *MissionExchangePassPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionExchangePassPointRequest.ProtoReflect.Descriptor instead.
func (*MissionExchangePassPointRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{135}
}

func (x *MissionExchangePassPointRequest) GetMissionPassId() string {
	if x != nil {
		return x.MissionPassId
	}
	return ""
}

func (x *MissionExchangePassPointRequest) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type ProduceStartBeforeLiveEvaluationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStartBeforeLiveEvaluationRequest) Reset() {
	*x = ProduceStartBeforeLiveEvaluationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStartBeforeLiveEvaluationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStartBeforeLiveEvaluationRequest) ProtoMessage() {}

func (x *ProduceStartBeforeLiveEvaluationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStartBeforeLiveEvaluationRequest.ProtoReflect.Descriptor instead.
func (*ProduceStartBeforeLiveEvaluationRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{136}
}

func (x *ProduceStartBeforeLiveEvaluationRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type GuildReactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReactionId    string   `protobuf:"bytes,1,opt,name=reactionId,proto3" json:"reactionId,omitempty"`
	PublicUserIds []string `protobuf:"bytes,2,rep,name=publicUserIds,proto3" json:"publicUserIds,omitempty"`
	IsReacted     bool     `protobuf:"varint,3,opt,name=isReacted,proto3" json:"isReacted,omitempty"`
}

func (x *GuildReactionInfo) Reset() {
	*x = GuildReactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildReactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildReactionInfo) ProtoMessage() {}

func (x *GuildReactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildReactionInfo.ProtoReflect.Descriptor instead.
func (*GuildReactionInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{137}
}

func (x *GuildReactionInfo) GetReactionId() string {
	if x != nil {
		return x.ReactionId
	}
	return ""
}

func (x *GuildReactionInfo) GetPublicUserIds() []string {
	if x != nil {
		return x.PublicUserIds
	}
	return nil
}

func (x *GuildReactionInfo) GetIsReacted() bool {
	if x != nil {
		return x.IsReacted
	}
	return false
}

type ProduceRankingTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rankings       []*ProduceRankingTopResponse_Ranking `protobuf:"bytes,1,rep,name=rankings,proto3" json:"rankings,omitempty"`
	CommonResponse *papicommon.Response                 `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceRankingTopResponse) Reset() {
	*x = ProduceRankingTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRankingTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRankingTopResponse) ProtoMessage() {}

func (x *ProduceRankingTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRankingTopResponse.ProtoReflect.Descriptor instead.
func (*ProduceRankingTopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{138}
}

func (x *ProduceRankingTopResponse) GetRankings() []*ProduceRankingTopResponse_Ranking {
	if x != nil {
		return x.Rankings
	}
	return nil
}

func (x *ProduceRankingTopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildDonationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	DonatedTime  int64  `protobuf:"varint,2,opt,name=donatedTime,proto3" json:"donatedTime,omitempty"`
	UserName     string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *GuildDonationInfo) Reset() {
	*x = GuildDonationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDonationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDonationInfo) ProtoMessage() {}

func (x *GuildDonationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDonationInfo.ProtoReflect.Descriptor instead.
func (*GuildDonationInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{139}
}

func (x *GuildDonationInfo) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *GuildDonationInfo) GetDonatedTime() int64 {
	if x != nil {
		return x.DonatedTime
	}
	return 0
}

func (x *GuildDonationInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type LoginBonusConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *LoginBonusConfirmResponse) Reset() {
	*x = LoginBonusConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBonusConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBonusConfirmResponse) ProtoMessage() {}

func (x *LoginBonusConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBonusConfirmResponse.ProtoReflect.Descriptor instead.
func (*LoginBonusConfirmResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{140}
}

func (x *LoginBonusConfirmResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerReceiveLayerCountRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetTowerId string `protobuf:"bytes,1,opt,name=targetTowerId,proto3" json:"targetTowerId,omitempty"`
	TargetNumber  int32  `protobuf:"varint,2,opt,name=targetNumber,proto3" json:"targetNumber,omitempty"`
}

func (x *TowerReceiveLayerCountRewardRequest) Reset() {
	*x = TowerReceiveLayerCountRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerReceiveLayerCountRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerReceiveLayerCountRewardRequest) ProtoMessage() {}

func (x *TowerReceiveLayerCountRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerReceiveLayerCountRewardRequest.ProtoReflect.Descriptor instead.
func (*TowerReceiveLayerCountRewardRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{141}
}

func (x *TowerReceiveLayerCountRewardRequest) GetTargetTowerId() string {
	if x != nil {
		return x.TargetTowerId
	}
	return ""
}

func (x *TowerReceiveLayerCountRewardRequest) GetTargetNumber() int32 {
	if x != nil {
		return x.TargetNumber
	}
	return 0
}

type GashaRarityProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rarity                  int32 `protobuf:"varint,1,opt,name=rarity,proto3" json:"rarity,omitempty"`
	TenPermyriadProbability int32 `protobuf:"varint,2,opt,name=tenPermyriadProbability,proto3" json:"tenPermyriadProbability,omitempty"`
}

func (x *GashaRarityProbability) Reset() {
	*x = GashaRarityProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaRarityProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaRarityProbability) ProtoMessage() {}

func (x *GashaRarityProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaRarityProbability.ProtoReflect.Descriptor instead.
func (*GashaRarityProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{142}
}

func (x *GashaRarityProbability) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *GashaRarityProbability) GetTenPermyriadProbability() int32 {
	if x != nil {
		return x.TenPermyriadProbability
	}
	return 0
}

type ProfileGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId                string                              `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	ProducerLevel               int32                               `protobuf:"varint,2,opt,name=producerLevel,proto3" json:"producerLevel,omitempty"`
	Name                        string                              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Comment                     string                              `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Birthday                    *ProfileBirthday                    `protobuf:"bytes,5,opt,name=birthday,proto3" json:"birthday,omitempty"`
	FriendStatus                penum.FriendStatusType              `protobuf:"varint,6,opt,name=friendStatus,proto3,enum=penum.FriendStatusType" json:"friendStatus,omitempty"`
	Followable                  bool                                `protobuf:"varint,7,opt,name=followable,proto3" json:"followable,omitempty"`
	JoinedGuildName             string                              `protobuf:"bytes,8,opt,name=joinedGuildName,proto3" json:"joinedGuildName,omitempty"`
	TotalFanCount               int64                               `protobuf:"varint,100,opt,name=totalFanCount,proto3" json:"totalFanCount,omitempty"`
	AchievementCount            int32                               `protobuf:"varint,101,opt,name=achievementCount,proto3" json:"achievementCount,omitempty"`
	MainTaskMainStoryClearCount int32                               `protobuf:"varint,102,opt,name=mainTaskMainStoryClearCount,proto3" json:"mainTaskMainStoryClearCount,omitempty"`
	MainTaskProducerClearCount  int32                               `protobuf:"varint,103,opt,name=mainTaskProducerClearCount,proto3" json:"mainTaskProducerClearCount,omitempty"`
	ProduceRecords              []*ProfileGetResponse_ProduceRecord `protobuf:"bytes,120,rep,name=produceRecords,proto3" json:"produceRecords,omitempty"`
	MaxPvpRateUnitPower         int32                               `protobuf:"varint,130,opt,name=maxPvpRateUnitPower,proto3" json:"maxPvpRateUnitPower,omitempty"`
	PvpRateGrade                penum.PvpRateGrade                  `protobuf:"varint,131,opt,name=pvpRateGrade,proto3,enum=penum.PvpRateGrade" json:"pvpRateGrade,omitempty"`
	SupportCard                 *pcommon.SupportCard                `protobuf:"bytes,201,opt,name=supportCard,proto3" json:"supportCard,omitempty"`
	Memory                      *pcommon.Memory                     `protobuf:"bytes,202,opt,name=memory,proto3" json:"memory,omitempty"`
	Meishi                      *pcommon.Meishi                     `protobuf:"bytes,204,opt,name=meishi,proto3" json:"meishi,omitempty"`
	CommonResponse              *papicommon.Response                `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProfileGetResponse) Reset() {
	*x = ProfileGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileGetResponse) ProtoMessage() {}

func (x *ProfileGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileGetResponse.ProtoReflect.Descriptor instead.
func (*ProfileGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{143}
}

func (x *ProfileGetResponse) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *ProfileGetResponse) GetProducerLevel() int32 {
	if x != nil {
		return x.ProducerLevel
	}
	return 0
}

func (x *ProfileGetResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProfileGetResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ProfileGetResponse) GetBirthday() *ProfileBirthday {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *ProfileGetResponse) GetFriendStatus() penum.FriendStatusType {
	if x != nil {
		return x.FriendStatus
	}
	return penum.FriendStatusType(0)
}

func (x *ProfileGetResponse) GetFollowable() bool {
	if x != nil {
		return x.Followable
	}
	return false
}

func (x *ProfileGetResponse) GetJoinedGuildName() string {
	if x != nil {
		return x.JoinedGuildName
	}
	return ""
}

func (x *ProfileGetResponse) GetTotalFanCount() int64 {
	if x != nil {
		return x.TotalFanCount
	}
	return 0
}

func (x *ProfileGetResponse) GetAchievementCount() int32 {
	if x != nil {
		return x.AchievementCount
	}
	return 0
}

func (x *ProfileGetResponse) GetMainTaskMainStoryClearCount() int32 {
	if x != nil {
		return x.MainTaskMainStoryClearCount
	}
	return 0
}

func (x *ProfileGetResponse) GetMainTaskProducerClearCount() int32 {
	if x != nil {
		return x.MainTaskProducerClearCount
	}
	return 0
}

func (x *ProfileGetResponse) GetProduceRecords() []*ProfileGetResponse_ProduceRecord {
	if x != nil {
		return x.ProduceRecords
	}
	return nil
}

func (x *ProfileGetResponse) GetMaxPvpRateUnitPower() int32 {
	if x != nil {
		return x.MaxPvpRateUnitPower
	}
	return 0
}

func (x *ProfileGetResponse) GetPvpRateGrade() penum.PvpRateGrade {
	if x != nil {
		return x.PvpRateGrade
	}
	return penum.PvpRateGrade(0)
}

func (x *ProfileGetResponse) GetSupportCard() *pcommon.SupportCard {
	if x != nil {
		return x.SupportCard
	}
	return nil
}

func (x *ProfileGetResponse) GetMemory() *pcommon.Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ProfileGetResponse) GetMeishi() *pcommon.Meishi {
	if x != nil {
		return x.Meishi
	}
	return nil
}

func (x *ProfileGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchByAutoApprove   bool                                    `protobuf:"varint,1,opt,name=searchByAutoApprove,proto3" json:"searchByAutoApprove,omitempty"`
	SearchByManualApprove bool                                    `protobuf:"varint,2,opt,name=searchByManualApprove,proto3" json:"searchByManualApprove,omitempty"`
	ActivityPolicyTypes   []penum.GuildActivityPolicyType         `protobuf:"varint,3,rep,packed,name=activityPolicyTypes,proto3,enum=penum.GuildActivityPolicyType" json:"activityPolicyTypes,omitempty"`
	MemberCountRangeTypes []penum.GuildSearchMemberCountRangeType `protobuf:"varint,4,rep,packed,name=memberCountRangeTypes,proto3,enum=penum.GuildSearchMemberCountRangeType" json:"memberCountRangeTypes,omitempty"`
}

func (x *GuildSearchRequest) Reset() {
	*x = GuildSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildSearchRequest) ProtoMessage() {}

func (x *GuildSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildSearchRequest.ProtoReflect.Descriptor instead.
func (*GuildSearchRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{144}
}

func (x *GuildSearchRequest) GetSearchByAutoApprove() bool {
	if x != nil {
		return x.SearchByAutoApprove
	}
	return false
}

func (x *GuildSearchRequest) GetSearchByManualApprove() bool {
	if x != nil {
		return x.SearchByManualApprove
	}
	return false
}

func (x *GuildSearchRequest) GetActivityPolicyTypes() []penum.GuildActivityPolicyType {
	if x != nil {
		return x.ActivityPolicyTypes
	}
	return nil
}

func (x *GuildSearchRequest) GetMemberCountRangeTypes() []penum.GuildSearchMemberCountRangeType {
	if x != nil {
		return x.MemberCountRangeTypes
	}
	return nil
}

type ProduceStepLessonEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShouldTransitionSeminar bool                           `protobuf:"varint,1,opt,name=shouldTransitionSeminar,proto3" json:"shouldTransitionSeminar,omitempty"`
	EffectResults           []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse          *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepLessonEndResponse) Reset() {
	*x = ProduceStepLessonEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepLessonEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepLessonEndResponse) ProtoMessage() {}

func (x *ProduceStepLessonEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepLessonEndResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepLessonEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{145}
}

func (x *ProduceStepLessonEndResponse) GetShouldTransitionSeminar() bool {
	if x != nil {
		return x.ShouldTransitionSeminar
	}
	return false
}

func (x *ProduceStepLessonEndResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepLessonEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProfileUpdateCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProfileUpdateCommentResponse) Reset() {
	*x = ProfileUpdateCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateCommentResponse) ProtoMessage() {}

func (x *ProfileUpdateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateCommentResponse.ProtoReflect.Descriptor instead.
func (*ProfileUpdateCommentResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{146}
}

func (x *ProfileUpdateCommentResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialProduceResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory         *pcommon.Memory      `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProduceResultResponse) Reset() {
	*x = TutorialProduceResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceResultResponse) ProtoMessage() {}

func (x *TutorialProduceResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceResultResponse.ProtoReflect.Descriptor instead.
func (*TutorialProduceResultResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{147}
}

func (x *TutorialProduceResultResponse) GetMemory() *pcommon.Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *TutorialProduceResultResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type StoryReadDearnessStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId   string `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
	DearnessLevel int32  `protobuf:"varint,2,opt,name=dearnessLevel,proto3" json:"dearnessLevel,omitempty"`
	IsAuto        bool   `protobuf:"varint,3,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	IsSkip        bool   `protobuf:"varint,4,opt,name=isSkip,proto3" json:"isSkip,omitempty"`
}

func (x *StoryReadDearnessStoryRequest) Reset() {
	*x = StoryReadDearnessStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryReadDearnessStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryReadDearnessStoryRequest) ProtoMessage() {}

func (x *StoryReadDearnessStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryReadDearnessStoryRequest.ProtoReflect.Descriptor instead.
func (*StoryReadDearnessStoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{148}
}

func (x *StoryReadDearnessStoryRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *StoryReadDearnessStoryRequest) GetDearnessLevel() int32 {
	if x != nil {
		return x.DearnessLevel
	}
	return 0
}

func (x *StoryReadDearnessStoryRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

func (x *StoryReadDearnessStoryRequest) GetIsSkip() bool {
	if x != nil {
		return x.IsSkip
	}
	return false
}

type TutorialProduceStepPresentReceiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionNumber int32   `protobuf:"varint,1,opt,name=positionNumber,proto3" json:"positionNumber,omitempty"`
	RewardIndexes  []int32 `protobuf:"varint,2,rep,packed,name=rewardIndexes,proto3" json:"rewardIndexes,omitempty"`
}

func (x *TutorialProduceStepPresentReceiveRequest) Reset() {
	*x = TutorialProduceStepPresentReceiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStepPresentReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStepPresentReceiveRequest) ProtoMessage() {}

func (x *TutorialProduceStepPresentReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStepPresentReceiveRequest.ProtoReflect.Descriptor instead.
func (*TutorialProduceStepPresentReceiveRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{149}
}

func (x *TutorialProduceStepPresentReceiveRequest) GetPositionNumber() int32 {
	if x != nil {
		return x.PositionNumber
	}
	return 0
}

func (x *TutorialProduceStepPresentReceiveRequest) GetRewardIndexes() []int32 {
	if x != nil {
		return x.RewardIndexes
	}
	return nil
}

type GiftCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count          int32                `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GiftCountResponse) Reset() {
	*x = GiftCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftCountResponse) ProtoMessage() {}

func (x *GiftCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftCountResponse.ProtoReflect.Descriptor instead.
func (*GiftCountResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{150}
}

func (x *GiftCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GiftCountResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceDiscardDrinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid  string  `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	DrinkIndexes []int32 `protobuf:"varint,2,rep,packed,name=drinkIndexes,proto3" json:"drinkIndexes,omitempty"`
}

func (x *ProduceDiscardDrinkRequest) Reset() {
	*x = ProduceDiscardDrinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceDiscardDrinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceDiscardDrinkRequest) ProtoMessage() {}

func (x *ProduceDiscardDrinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceDiscardDrinkRequest.ProtoReflect.Descriptor instead.
func (*ProduceDiscardDrinkRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{151}
}

func (x *ProduceDiscardDrinkRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceDiscardDrinkRequest) GetDrinkIndexes() []int32 {
	if x != nil {
		return x.DrinkIndexes
	}
	return nil
}

type StoryUnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *StoryUnlockResponse) Reset() {
	*x = StoryUnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryUnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryUnlockResponse) ProtoMessage() {}

func (x *StoryUnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryUnlockResponse.ProtoReflect.Descriptor instead.
func (*StoryUnlockResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{152}
}

func (x *StoryUnlockResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildCancelJoinRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGuildId string `protobuf:"bytes,1,opt,name=publicGuildId,proto3" json:"publicGuildId,omitempty"`
}

func (x *GuildCancelJoinRequestRequest) Reset() {
	*x = GuildCancelJoinRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCancelJoinRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCancelJoinRequestRequest) ProtoMessage() {}

func (x *GuildCancelJoinRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCancelJoinRequestRequest.ProtoReflect.Descriptor instead.
func (*GuildCancelJoinRequestRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{153}
}

func (x *GuildCancelJoinRequestRequest) GetPublicGuildId() string {
	if x != nil {
		return x.PublicGuildId
	}
	return ""
}

type NoticeGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NoticeGetRequest) Reset() {
	*x = NoticeGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeGetRequest) ProtoMessage() {}

func (x *NoticeGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeGetRequest.ProtoReflect.Descriptor instead.
func (*NoticeGetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{154}
}

func (x *NoticeGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ProduceStepAuditionEndExamBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShouldTransitionSeminar bool                 `protobuf:"varint,1,opt,name=shouldTransitionSeminar,proto3" json:"shouldTransitionSeminar,omitempty"`
	CommonResponse          *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepAuditionEndExamBattleResponse) Reset() {
	*x = ProduceStepAuditionEndExamBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionEndExamBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionEndExamBattleResponse) ProtoMessage() {}

func (x *ProduceStepAuditionEndExamBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionEndExamBattleResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionEndExamBattleResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{155}
}

func (x *ProduceStepAuditionEndExamBattleResponse) GetShouldTransitionSeminar() bool {
	if x != nil {
		return x.ShouldTransitionSeminar
	}
	return false
}

func (x *ProduceStepAuditionEndExamBattleResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceHighScoreResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank        int32                         `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	HighScore   int32                         `protobuf:"varint,2,opt,name=highScore,proto3" json:"highScore,omitempty"`
	RankRewards []*ProduceHighScoreRankReward `protobuf:"bytes,3,rep,name=rankRewards,proto3" json:"rankRewards,omitempty"`
	Characters  []*ProduceHighScoreCharacter  `protobuf:"bytes,4,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *ProduceHighScoreResult) Reset() {
	*x = ProduceHighScoreResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreResult) ProtoMessage() {}

func (x *ProduceHighScoreResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreResult.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{156}
}

func (x *ProduceHighScoreResult) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProduceHighScoreResult) GetHighScore() int32 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

func (x *ProduceHighScoreResult) GetRankRewards() []*ProduceHighScoreRankReward {
	if x != nil {
		return x.RankRewards
	}
	return nil
}

func (x *ProduceHighScoreResult) GetCharacters() []*ProduceHighScoreCharacter {
	if x != nil {
		return x.Characters
	}
	return nil
}

type PvpRateRankingUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile    *pcommon.SimpleProfile       `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Rank       int32                        `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Rate       int32                        `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Formations []*PvpRateUnitStageFormation `protobuf:"bytes,4,rep,name=formations,proto3" json:"formations,omitempty"`
}

func (x *PvpRateRankingUser) Reset() {
	*x = PvpRateRankingUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateRankingUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateRankingUser) ProtoMessage() {}

func (x *PvpRateRankingUser) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateRankingUser.ProtoReflect.Descriptor instead.
func (*PvpRateRankingUser) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{157}
}

func (x *PvpRateRankingUser) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *PvpRateRankingUser) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PvpRateRankingUser) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PvpRateRankingUser) GetFormations() []*PvpRateUnitStageFormation {
	if x != nil {
		return x.Formations
	}
	return nil
}

type MemoryExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMemoryIds []string `protobuf:"bytes,1,rep,name=userMemoryIds,proto3" json:"userMemoryIds,omitempty"`
}

func (x *MemoryExchangeRequest) Reset() {
	*x = MemoryExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryExchangeRequest) ProtoMessage() {}

func (x *MemoryExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryExchangeRequest.ProtoReflect.Descriptor instead.
func (*MemoryExchangeRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{158}
}

func (x *MemoryExchangeRequest) GetUserMemoryIds() []string {
	if x != nil {
		return x.UserMemoryIds
	}
	return nil
}

type PhotoDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PhotoDeleteResponse) Reset() {
	*x = PhotoDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoDeleteResponse) ProtoMessage() {}

func (x *PhotoDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoDeleteResponse.ProtoReflect.Descriptor instead.
func (*PhotoDeleteResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{159}
}

func (x *PhotoDeleteResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGuildId string `protobuf:"bytes,1,opt,name=publicGuildId,proto3" json:"publicGuildId,omitempty"`
}

func (x *GuildGetRequest) Reset() {
	*x = GuildGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildGetRequest) ProtoMessage() {}

func (x *GuildGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildGetRequest.ProtoReflect.Descriptor instead.
func (*GuildGetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{160}
}

func (x *GuildGetRequest) GetPublicGuildId() string {
	if x != nil {
		return x.PublicGuildId
	}
	return ""
}

type SupportCardUpgradeLevelLimitRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCardId string                          `protobuf:"bytes,1,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	AfterRank     penum.SupportCardLevelLimitRank `protobuf:"varint,2,opt,name=afterRank,proto3,enum=penum.SupportCardLevelLimitRank" json:"afterRank,omitempty"`
}

func (x *SupportCardUpgradeLevelLimitRankRequest) Reset() {
	*x = SupportCardUpgradeLevelLimitRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardUpgradeLevelLimitRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardUpgradeLevelLimitRankRequest) ProtoMessage() {}

func (x *SupportCardUpgradeLevelLimitRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardUpgradeLevelLimitRankRequest.ProtoReflect.Descriptor instead.
func (*SupportCardUpgradeLevelLimitRankRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{161}
}

func (x *SupportCardUpgradeLevelLimitRankRequest) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *SupportCardUpgradeLevelLimitRankRequest) GetAfterRank() penum.SupportCardLevelLimitRank {
	if x != nil {
		return x.AfterRank
	}
	return penum.SupportCardLevelLimitRank(0)
}

type InvitationReceiveInvitationPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserIds []string `protobuf:"bytes,1,rep,name=publicUserIds,proto3" json:"publicUserIds,omitempty"`
}

func (x *InvitationReceiveInvitationPointRequest) Reset() {
	*x = InvitationReceiveInvitationPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationReceiveInvitationPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationReceiveInvitationPointRequest) ProtoMessage() {}

func (x *InvitationReceiveInvitationPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationReceiveInvitationPointRequest.ProtoReflect.Descriptor instead.
func (*InvitationReceiveInvitationPointRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{162}
}

func (x *InvitationReceiveInvitationPointRequest) GetPublicUserIds() []string {
	if x != nil {
		return x.PublicUserIds
	}
	return nil
}

type WorkSkipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type penum.WorkType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.WorkType" json:"type,omitempty"`
}

func (x *WorkSkipRequest) Reset() {
	*x = WorkSkipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkSkipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSkipRequest) ProtoMessage() {}

func (x *WorkSkipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSkipRequest.ProtoReflect.Descriptor instead.
func (*WorkSkipRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{163}
}

func (x *WorkSkipRequest) GetType() penum.WorkType {
	if x != nil {
		return x.Type
	}
	return penum.WorkType(0)
}

type SeminarEndExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string                        `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	ExamId  string                        `protobuf:"bytes,2,opt,name=examId,proto3" json:"examId,omitempty"`
	Clear   bool                          `protobuf:"varint,3,opt,name=clear,proto3" json:"clear,omitempty"`
	Turns   []*SeminarEndExamRequest_Turn `protobuf:"bytes,4,rep,name=turns,proto3" json:"turns,omitempty"`
}

func (x *SeminarEndExamRequest) Reset() {
	*x = SeminarEndExamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarEndExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarEndExamRequest) ProtoMessage() {}

func (x *SeminarEndExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarEndExamRequest.ProtoReflect.Descriptor instead.
func (*SeminarEndExamRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{164}
}

func (x *SeminarEndExamRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SeminarEndExamRequest) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *SeminarEndExamRequest) GetClear() bool {
	if x != nil {
		return x.Clear
	}
	return false
}

func (x *SeminarEndExamRequest) GetTurns() []*SeminarEndExamRequest_Turn {
	if x != nil {
		return x.Turns
	}
	return nil
}

type StoryReadProduceStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *StoryReadProduceStoryResponse) Reset() {
	*x = StoryReadProduceStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryReadProduceStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryReadProduceStoryResponse) ProtoMessage() {}

func (x *StoryReadProduceStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryReadProduceStoryResponse.ProtoReflect.Descriptor instead.
func (*StoryReadProduceStoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{165}
}

func (x *StoryReadProduceStoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildCancelJoinRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildCancelJoinRequestResponse) Reset() {
	*x = GuildCancelJoinRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCancelJoinRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCancelJoinRequestResponse) ProtoMessage() {}

func (x *GuildCancelJoinRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCancelJoinRequestResponse.ProtoReflect.Descriptor instead.
func (*GuildCancelJoinRequestResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{166}
}

func (x *GuildCancelJoinRequestResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MissionUrlTransitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MissionUrlTransitionRequest) Reset() {
	*x = MissionUrlTransitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionUrlTransitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionUrlTransitionRequest) ProtoMessage() {}

func (x *MissionUrlTransitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionUrlTransitionRequest.ProtoReflect.Descriptor instead.
func (*MissionUrlTransitionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{167}
}

func (x *MissionUrlTransitionRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ProduceStepLessonStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepLessonStartResponse) Reset() {
	*x = ProduceStepLessonStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepLessonStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepLessonStartResponse) ProtoMessage() {}

func (x *ProduceStepLessonStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepLessonStartResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepLessonStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{168}
}

func (x *ProduceStepLessonStartResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepLessonStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepAuditionStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,100,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepAuditionStartResponse) Reset() {
	*x = ProduceStepAuditionStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionStartResponse) ProtoMessage() {}

func (x *ProduceStepAuditionStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionStartResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{169}
}

func (x *ProduceStepAuditionStartResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepAuditionStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerGetLayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSubMemoryCount   int32                         `protobuf:"varint,1,opt,name=maxSubMemoryCount,proto3" json:"maxSubMemoryCount,omitempty"`
	Exams               []*TowerGetLayerResponse_Exam `protobuf:"bytes,2,rep,name=exams,proto3" json:"exams,omitempty"`
	BgmAssetId          string                        `protobuf:"bytes,3,opt,name=bgmAssetId,proto3" json:"bgmAssetId,omitempty"`
	WinTimelineAssetId  string                        `protobuf:"bytes,4,opt,name=winTimelineAssetId,proto3" json:"winTimelineAssetId,omitempty"`
	LoseTimelineAssetId string                        `protobuf:"bytes,5,opt,name=loseTimelineAssetId,proto3" json:"loseTimelineAssetId,omitempty"`
	ExamTimelineAssetId string                        `protobuf:"bytes,6,opt,name=examTimelineAssetId,proto3" json:"examTimelineAssetId,omitempty"`
	CommonResponse      *papicommon.Response          `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerGetLayerResponse) Reset() {
	*x = TowerGetLayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerGetLayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerGetLayerResponse) ProtoMessage() {}

func (x *TowerGetLayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerGetLayerResponse.ProtoReflect.Descriptor instead.
func (*TowerGetLayerResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{170}
}

func (x *TowerGetLayerResponse) GetMaxSubMemoryCount() int32 {
	if x != nil {
		return x.MaxSubMemoryCount
	}
	return 0
}

func (x *TowerGetLayerResponse) GetExams() []*TowerGetLayerResponse_Exam {
	if x != nil {
		return x.Exams
	}
	return nil
}

func (x *TowerGetLayerResponse) GetBgmAssetId() string {
	if x != nil {
		return x.BgmAssetId
	}
	return ""
}

func (x *TowerGetLayerResponse) GetWinTimelineAssetId() string {
	if x != nil {
		return x.WinTimelineAssetId
	}
	return ""
}

func (x *TowerGetLayerResponse) GetLoseTimelineAssetId() string {
	if x != nil {
		return x.LoseTimelineAssetId
	}
	return ""
}

func (x *TowerGetLayerResponse) GetExamTimelineAssetId() string {
	if x != nil {
		return x.ExamTimelineAssetId
	}
	return ""
}

func (x *TowerGetLayerResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerListLayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layers         []*TowerListLayersResponse_TowerLayer `protobuf:"bytes,1,rep,name=layers,proto3" json:"layers,omitempty"`
	CommonResponse *papicommon.Response                  `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerListLayersResponse) Reset() {
	*x = TowerListLayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerListLayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerListLayersResponse) ProtoMessage() {}

func (x *TowerListLayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerListLayersResponse.ProtoReflect.Descriptor instead.
func (*TowerListLayersResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{171}
}

func (x *TowerListLayersResponse) GetLayers() []*TowerListLayersResponse_TowerLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *TowerListLayersResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildUpdateLeaderMessageReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReactionList   []*GuildReactionInfo `protobuf:"bytes,1,rep,name=reactionList,proto3" json:"reactionList,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildUpdateLeaderMessageReactionResponse) Reset() {
	*x = GuildUpdateLeaderMessageReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildUpdateLeaderMessageReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildUpdateLeaderMessageReactionResponse) ProtoMessage() {}

func (x *GuildUpdateLeaderMessageReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildUpdateLeaderMessageReactionResponse.ProtoReflect.Descriptor instead.
func (*GuildUpdateLeaderMessageReactionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{172}
}

func (x *GuildUpdateLeaderMessageReactionResponse) GetReactionList() []*GuildReactionInfo {
	if x != nil {
		return x.ReactionList
	}
	return nil
}

func (x *GuildUpdateLeaderMessageReactionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PhotoCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardId   string   `protobuf:"bytes,1,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	UserPhotoIds []string `protobuf:"bytes,2,rep,name=userPhotoIds,proto3" json:"userPhotoIds,omitempty"`
}

func (x *PhotoCreateRequest) Reset() {
	*x = PhotoCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoCreateRequest) ProtoMessage() {}

func (x *PhotoCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoCreateRequest.ProtoReflect.Descriptor instead.
func (*PhotoCreateRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{173}
}

func (x *PhotoCreateRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *PhotoCreateRequest) GetUserPhotoIds() []string {
	if x != nil {
		return x.UserPhotoIds
	}
	return nil
}

type MemoryUpdateProtectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMemoryId string `protobuf:"bytes,1,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	IsProtected  bool   `protobuf:"varint,2,opt,name=isProtected,proto3" json:"isProtected,omitempty"`
}

func (x *MemoryUpdateProtectionRequest) Reset() {
	*x = MemoryUpdateProtectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryUpdateProtectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUpdateProtectionRequest) ProtoMessage() {}

func (x *MemoryUpdateProtectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUpdateProtectionRequest.ProtoReflect.Descriptor instead.
func (*MemoryUpdateProtectionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{174}
}

func (x *MemoryUpdateProtectionRequest) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *MemoryUpdateProtectionRequest) GetIsProtected() bool {
	if x != nil {
		return x.IsProtected
	}
	return false
}

type ProduceStepEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid     string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	SuggestionIndex int32  `protobuf:"varint,2,opt,name=suggestionIndex,proto3" json:"suggestionIndex,omitempty"`
	IsSkip          bool   `protobuf:"varint,3,opt,name=isSkip,proto3" json:"isSkip,omitempty"`
	IsFastForward   bool   `protobuf:"varint,4,opt,name=isFastForward,proto3" json:"isFastForward,omitempty"`
}

func (x *ProduceStepEventRequest) Reset() {
	*x = ProduceStepEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepEventRequest) ProtoMessage() {}

func (x *ProduceStepEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepEventRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepEventRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{175}
}

func (x *ProduceStepEventRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceStepEventRequest) GetSuggestionIndex() int32 {
	if x != nil {
		return x.SuggestionIndex
	}
	return 0
}

func (x *ProduceStepEventRequest) GetIsSkip() bool {
	if x != nil {
		return x.IsSkip
	}
	return false
}

func (x *ProduceStepEventRequest) GetIsFastForward() bool {
	if x != nil {
		return x.IsFastForward
	}
	return false
}

type TutorialCheckBeforeLiveProduceEvaluationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialCheckBeforeLiveProduceEvaluationResponse) Reset() {
	*x = TutorialCheckBeforeLiveProduceEvaluationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialCheckBeforeLiveProduceEvaluationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialCheckBeforeLiveProduceEvaluationResponse) ProtoMessage() {}

func (x *TutorialCheckBeforeLiveProduceEvaluationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialCheckBeforeLiveProduceEvaluationResponse.ProtoReflect.Descriptor instead.
func (*TutorialCheckBeforeLiveProduceEvaluationResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{176}
}

func (x *TutorialCheckBeforeLiveProduceEvaluationResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MemoryExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MemoryExchangeResponse) Reset() {
	*x = MemoryExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryExchangeResponse) ProtoMessage() {}

func (x *MemoryExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryExchangeResponse.ProtoReflect.Descriptor instead.
func (*MemoryExchangeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{177}
}

func (x *MemoryExchangeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepShopEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepShopEndRequest) Reset() {
	*x = ProduceStepShopEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepShopEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepShopEndRequest) ProtoMessage() {}

func (x *ProduceStepShopEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepShopEndRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepShopEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{178}
}

func (x *ProduceStepShopEndRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type ProfileUpdateBirthdayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProfileUpdateBirthdayResponse) Reset() {
	*x = ProfileUpdateBirthdayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateBirthdayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateBirthdayResponse) ProtoMessage() {}

func (x *ProfileUpdateBirthdayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateBirthdayResponse.ProtoReflect.Descriptor instead.
func (*ProfileUpdateBirthdayResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{179}
}

func (x *ProfileUpdateBirthdayResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CostumeCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostumeHeadId string `protobuf:"bytes,1,opt,name=costumeHeadId,proto3" json:"costumeHeadId,omitempty"`
	CostumeId     string `protobuf:"bytes,2,opt,name=costumeId,proto3" json:"costumeId,omitempty"`
}

func (x *CostumeCheckRequest) Reset() {
	*x = CostumeCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostumeCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostumeCheckRequest) ProtoMessage() {}

func (x *CostumeCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostumeCheckRequest.ProtoReflect.Descriptor instead.
func (*CostumeCheckRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{180}
}

func (x *CostumeCheckRequest) GetCostumeHeadId() string {
	if x != nil {
		return x.CostumeHeadId
	}
	return ""
}

func (x *CostumeCheckRequest) GetCostumeId() string {
	if x != nil {
		return x.CostumeId
	}
	return ""
}

type MusicSendActionLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayedMusicIds   []string `protobuf:"bytes,1,rep,name=playedMusicIds,proto3" json:"playedMusicIds,omitempty"`
	IsPlaylistPlayed bool     `protobuf:"varint,2,opt,name=isPlaylistPlayed,proto3" json:"isPlaylistPlayed,omitempty"`
	PlaylistMusicIds []string `protobuf:"bytes,3,rep,name=playlistMusicIds,proto3" json:"playlistMusicIds,omitempty"`
}

func (x *MusicSendActionLogRequest) Reset() {
	*x = MusicSendActionLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSendActionLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSendActionLogRequest) ProtoMessage() {}

func (x *MusicSendActionLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSendActionLogRequest.ProtoReflect.Descriptor instead.
func (*MusicSendActionLogRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{181}
}

func (x *MusicSendActionLogRequest) GetPlayedMusicIds() []string {
	if x != nil {
		return x.PlayedMusicIds
	}
	return nil
}

func (x *MusicSendActionLogRequest) GetIsPlaylistPlayed() bool {
	if x != nil {
		return x.IsPlaylistPlayed
	}
	return false
}

func (x *MusicSendActionLogRequest) GetPlaylistMusicIds() []string {
	if x != nil {
		return x.PlaylistMusicIds
	}
	return nil
}

type AuthAgreeTermsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *AuthAgreeTermsResponse) Reset() {
	*x = AuthAgreeTermsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthAgreeTermsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthAgreeTermsResponse) ProtoMessage() {}

func (x *AuthAgreeTermsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthAgreeTermsResponse.ProtoReflect.Descriptor instead.
func (*AuthAgreeTermsResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{182}
}

func (x *AuthAgreeTermsResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *MeishiGetRequest) Reset() {
	*x = MeishiGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiGetRequest) ProtoMessage() {}

func (x *MeishiGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiGetRequest.ProtoReflect.Descriptor instead.
func (*MeishiGetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{183}
}

func (x *MeishiGetRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type StoryReadProduceStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceStoryId string `protobuf:"bytes,1,opt,name=produceStoryId,proto3" json:"produceStoryId,omitempty"`
	IsAuto         bool   `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	IsSkip         bool   `protobuf:"varint,3,opt,name=isSkip,proto3" json:"isSkip,omitempty"`
}

func (x *StoryReadProduceStoryRequest) Reset() {
	*x = StoryReadProduceStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryReadProduceStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryReadProduceStoryRequest) ProtoMessage() {}

func (x *StoryReadProduceStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryReadProduceStoryRequest.ProtoReflect.Descriptor instead.
func (*StoryReadProduceStoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{184}
}

func (x *StoryReadProduceStoryRequest) GetProduceStoryId() string {
	if x != nil {
		return x.ProduceStoryId
	}
	return ""
}

func (x *StoryReadProduceStoryRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

func (x *StoryReadProduceStoryRequest) GetIsSkip() bool {
	if x != nil {
		return x.IsSkip
	}
	return false
}

type ProduceStepPresentReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvidedRewards []*pcommon.ProduceRewardResult `protobuf:"bytes,1,rep,name=providedRewards,proto3" json:"providedRewards,omitempty"`
	EffectResults   []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse  *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepPresentReceiveResponse) Reset() {
	*x = ProduceStepPresentReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepPresentReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepPresentReceiveResponse) ProtoMessage() {}

func (x *ProduceStepPresentReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepPresentReceiveResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepPresentReceiveResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{185}
}

func (x *ProduceStepPresentReceiveResponse) GetProvidedRewards() []*pcommon.ProduceRewardResult {
	if x != nil {
		return x.ProvidedRewards
	}
	return nil
}

func (x *ProduceStepPresentReceiveResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepPresentReceiveResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceDiscardDrinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceDiscardDrinkResponse) Reset() {
	*x = ProduceDiscardDrinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceDiscardDrinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceDiscardDrinkResponse) ProtoMessage() {}

func (x *ProduceDiscardDrinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceDiscardDrinkResponse.ProtoReflect.Descriptor instead.
func (*ProduceDiscardDrinkResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{186}
}

func (x *ProduceDiscardDrinkResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceDiscardDrinkResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PvpRateEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddRate        int32                 `protobuf:"varint,1,opt,name=addRate,proto3" json:"addRate,omitempty"`
	BeforeRank     int32                 `protobuf:"varint,2,opt,name=beforeRank,proto3" json:"beforeRank,omitempty"`
	AfterRate      int32                 `protobuf:"varint,3,opt,name=afterRate,proto3" json:"afterRate,omitempty"`
	AfterRank      int32                 `protobuf:"varint,4,opt,name=afterRank,proto3" json:"afterRank,omitempty"`
	FanCount       int32                 `protobuf:"varint,5,opt,name=fanCount,proto3" json:"fanCount,omitempty"`
	PlayReward     *pcommon.RewardResult `protobuf:"bytes,6,opt,name=playReward,proto3" json:"playReward,omitempty"`
	RateRewards    []*PvpRateRateReward  `protobuf:"bytes,7,rep,name=rateRewards,proto3" json:"rateRewards,omitempty"`
	CommonResponse *papicommon.Response  `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateEndResponse) Reset() {
	*x = PvpRateEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateEndResponse) ProtoMessage() {}

func (x *PvpRateEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateEndResponse.ProtoReflect.Descriptor instead.
func (*PvpRateEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{187}
}

func (x *PvpRateEndResponse) GetAddRate() int32 {
	if x != nil {
		return x.AddRate
	}
	return 0
}

func (x *PvpRateEndResponse) GetBeforeRank() int32 {
	if x != nil {
		return x.BeforeRank
	}
	return 0
}

func (x *PvpRateEndResponse) GetAfterRate() int32 {
	if x != nil {
		return x.AfterRate
	}
	return 0
}

func (x *PvpRateEndResponse) GetAfterRank() int32 {
	if x != nil {
		return x.AfterRank
	}
	return 0
}

func (x *PvpRateEndResponse) GetFanCount() int32 {
	if x != nil {
		return x.FanCount
	}
	return 0
}

func (x *PvpRateEndResponse) GetPlayReward() *pcommon.RewardResult {
	if x != nil {
		return x.PlayReward
	}
	return nil
}

func (x *PvpRateEndResponse) GetRateRewards() []*PvpRateRateReward {
	if x != nil {
		return x.RateRewards
	}
	return nil
}

func (x *PvpRateEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceUpdateSupportCardDeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decks []*ProduceUpdateSupportCardDeck `protobuf:"bytes,1,rep,name=decks,proto3" json:"decks,omitempty"`
}

func (x *ProduceUpdateSupportCardDeckRequest) Reset() {
	*x = ProduceUpdateSupportCardDeckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceUpdateSupportCardDeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceUpdateSupportCardDeckRequest) ProtoMessage() {}

func (x *ProduceUpdateSupportCardDeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceUpdateSupportCardDeckRequest.ProtoReflect.Descriptor instead.
func (*ProduceUpdateSupportCardDeckRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{188}
}

func (x *ProduceUpdateSupportCardDeckRequest) GetDecks() []*ProduceUpdateSupportCardDeck {
	if x != nil {
		return x.Decks
	}
	return nil
}

type TutorialProduceStepPresentReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvidedRewards []*pcommon.ProduceRewardResult `protobuf:"bytes,1,rep,name=providedRewards,proto3" json:"providedRewards,omitempty"`
	CommonResponse  *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProduceStepPresentReceiveResponse) Reset() {
	*x = TutorialProduceStepPresentReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStepPresentReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStepPresentReceiveResponse) ProtoMessage() {}

func (x *TutorialProduceStepPresentReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStepPresentReceiveResponse.ProtoReflect.Descriptor instead.
func (*TutorialProduceStepPresentReceiveResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{189}
}

func (x *TutorialProduceStepPresentReceiveResponse) GetProvidedRewards() []*pcommon.ProduceRewardResult {
	if x != nil {
		return x.ProvidedRewards
	}
	return nil
}

func (x *TutorialProduceStepPresentReceiveResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialUnlockFeatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialUnlockFeatureResponse) Reset() {
	*x = TutorialUnlockFeatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialUnlockFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialUnlockFeatureResponse) ProtoMessage() {}

func (x *TutorialUnlockFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialUnlockFeatureResponse.ProtoReflect.Descriptor instead.
func (*TutorialUnlockFeatureResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{190}
}

func (x *TutorialUnlockFeatureResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildUpdateLeaderMessageReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildReactionIds []string `protobuf:"bytes,1,rep,name=guildReactionIds,proto3" json:"guildReactionIds,omitempty"`
}

func (x *GuildUpdateLeaderMessageReactionRequest) Reset() {
	*x = GuildUpdateLeaderMessageReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildUpdateLeaderMessageReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildUpdateLeaderMessageReactionRequest) ProtoMessage() {}

func (x *GuildUpdateLeaderMessageReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildUpdateLeaderMessageReactionRequest.ProtoReflect.Descriptor instead.
func (*GuildUpdateLeaderMessageReactionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{191}
}

func (x *GuildUpdateLeaderMessageReactionRequest) GetGuildReactionIds() []string {
	if x != nil {
		return x.GuildReactionIds
	}
	return nil
}

type ExchangeExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeItemId string `protobuf:"bytes,1,opt,name=exchangeItemId,proto3" json:"exchangeItemId,omitempty"`
	Count          int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ExchangeExecuteRequest) Reset() {
	*x = ExchangeExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeExecuteRequest) ProtoMessage() {}

func (x *ExchangeExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExchangeExecuteRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{192}
}

func (x *ExchangeExecuteRequest) GetExchangeItemId() string {
	if x != nil {
		return x.ExchangeItemId
	}
	return ""
}

func (x *ExchangeExecuteRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MemoryUpdateProtectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MemoryUpdateProtectionResponse) Reset() {
	*x = MemoryUpdateProtectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryUpdateProtectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUpdateProtectionResponse) ProtoMessage() {}

func (x *MemoryUpdateProtectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUpdateProtectionResponse.ProtoReflect.Descriptor instead.
func (*MemoryUpdateProtectionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{193}
}

func (x *MemoryUpdateProtectionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceUpdateSupportCardDeckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceUpdateSupportCardDeckResponse) Reset() {
	*x = ProduceUpdateSupportCardDeckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceUpdateSupportCardDeckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceUpdateSupportCardDeckResponse) ProtoMessage() {}

func (x *ProduceUpdateSupportCardDeckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceUpdateSupportCardDeckResponse.ProtoReflect.Descriptor instead.
func (*ProduceUpdateSupportCardDeckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{194}
}

func (x *ProduceUpdateSupportCardDeckResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PvpRateUnitStageFormation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage penum.PvpRateStageType            `protobuf:"varint,1,opt,name=stage,proto3,enum=penum.PvpRateStageType" json:"stage,omitempty"`
	Slots []*PvpRateUnitStageFormation_Slot `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *PvpRateUnitStageFormation) Reset() {
	*x = PvpRateUnitStageFormation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateUnitStageFormation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateUnitStageFormation) ProtoMessage() {}

func (x *PvpRateUnitStageFormation) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateUnitStageFormation.ProtoReflect.Descriptor instead.
func (*PvpRateUnitStageFormation) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{195}
}

func (x *PvpRateUnitStageFormation) GetStage() penum.PvpRateStageType {
	if x != nil {
		return x.Stage
	}
	return penum.PvpRateStageType(0)
}

func (x *PvpRateUnitStageFormation) GetSlots() []*PvpRateUnitStageFormation_Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type PvpRateListRankingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users          []*PvpRateRankingUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Self           *PvpRateRankingUser   `protobuf:"bytes,2,opt,name=self,proto3" json:"self,omitempty"`
	CommonResponse *papicommon.Response  `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateListRankingResponse) Reset() {
	*x = PvpRateListRankingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateListRankingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateListRankingResponse) ProtoMessage() {}

func (x *PvpRateListRankingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateListRankingResponse.ProtoReflect.Descriptor instead.
func (*PvpRateListRankingResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{196}
}

func (x *PvpRateListRankingResponse) GetUsers() []*PvpRateRankingUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *PvpRateListRankingResponse) GetSelf() *PvpRateRankingUser {
	if x != nil {
		return x.Self
	}
	return nil
}

func (x *PvpRateListRankingResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type WorkTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishResults  []*WorkFinishResult  `protobuf:"bytes,1,rep,name=finishResults,proto3" json:"finishResults,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *WorkTopResponse) Reset() {
	*x = WorkTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkTopResponse) ProtoMessage() {}

func (x *WorkTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkTopResponse.ProtoReflect.Descriptor instead.
func (*WorkTopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{197}
}

func (x *WorkTopResponse) GetFinishResults() []*WorkFinishResult {
	if x != nil {
		return x.FinishResults
	}
	return nil
}

func (x *WorkTopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type HomeSetCharactersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters []*HomeSetCharactersRequest_HomeCharacter `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *HomeSetCharactersRequest) Reset() {
	*x = HomeSetCharactersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSetCharactersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSetCharactersRequest) ProtoMessage() {}

func (x *HomeSetCharactersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSetCharactersRequest.ProtoReflect.Descriptor instead.
func (*HomeSetCharactersRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{198}
}

func (x *HomeSetCharactersRequest) GetCharacters() []*HomeSetCharactersRequest_HomeCharacter {
	if x != nil {
		return x.Characters
	}
	return nil
}

type FriendFollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *FriendFollowResponse) Reset() {
	*x = FriendFollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendFollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendFollowResponse) ProtoMessage() {}

func (x *FriendFollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendFollowResponse.ProtoReflect.Descriptor instead.
func (*FriendFollowResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{199}
}

func (x *FriendFollowResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meishi         *pcommon.Meishi      `protobuf:"bytes,1,opt,name=meishi,proto3" json:"meishi,omitempty"`
	Followable     bool                 `protobuf:"varint,2,opt,name=followable,proto3" json:"followable,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiGetResponse) Reset() {
	*x = MeishiGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiGetResponse) ProtoMessage() {}

func (x *MeishiGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiGetResponse.ProtoReflect.Descriptor instead.
func (*MeishiGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{200}
}

func (x *MeishiGetResponse) GetMeishi() *pcommon.Meishi {
	if x != nil {
		return x.Meishi
	}
	return nil
}

func (x *MeishiGetResponse) GetFollowable() bool {
	if x != nil {
		return x.Followable
	}
	return false
}

func (x *MeishiGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MusicSendBuyActionLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MusicSendBuyActionLogResponse) Reset() {
	*x = MusicSendBuyActionLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSendBuyActionLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSendBuyActionLogResponse) ProtoMessage() {}

func (x *MusicSendBuyActionLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSendBuyActionLogResponse.ProtoReflect.Descriptor instead.
func (*MusicSendBuyActionLogResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{201}
}

func (x *MusicSendBuyActionLogResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewSeminarExam               bool                       `protobuf:"varint,1,opt,name=newSeminarExam,proto3" json:"newSeminarExam,omitempty"`
	IsClearAllSeminarExam        bool                       `protobuf:"varint,2,opt,name=isClearAllSeminarExam,proto3" json:"isClearAllSeminarExam,omitempty"`
	Campaigns                    []*pcommon.ProduceCampaign `protobuf:"bytes,3,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
	StoryEventType               penum.StoryEventType       `protobuf:"varint,4,opt,name=storyEventType,proto3,enum=penum.StoryEventType" json:"storyEventType,omitempty"`
	StoryEventConsumptionItemId  string                     `protobuf:"bytes,5,opt,name=storyEventConsumptionItemId,proto3" json:"storyEventConsumptionItemId,omitempty"`
	StoryEventBonus              *pcommon.StoryEventBonus   `protobuf:"bytes,6,opt,name=storyEventBonus,proto3" json:"storyEventBonus,omitempty"`
	ProduceHighScoreCharacterIds []string                   `protobuf:"bytes,7,rep,name=produceHighScoreCharacterIds,proto3" json:"produceHighScoreCharacterIds,omitempty"`
	CommonResponse               *papicommon.Response       `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceTopResponse) Reset() {
	*x = ProduceTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceTopResponse) ProtoMessage() {}

func (x *ProduceTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceTopResponse.ProtoReflect.Descriptor instead.
func (*ProduceTopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{202}
}

func (x *ProduceTopResponse) GetNewSeminarExam() bool {
	if x != nil {
		return x.NewSeminarExam
	}
	return false
}

func (x *ProduceTopResponse) GetIsClearAllSeminarExam() bool {
	if x != nil {
		return x.IsClearAllSeminarExam
	}
	return false
}

func (x *ProduceTopResponse) GetCampaigns() []*pcommon.ProduceCampaign {
	if x != nil {
		return x.Campaigns
	}
	return nil
}

func (x *ProduceTopResponse) GetStoryEventType() penum.StoryEventType {
	if x != nil {
		return x.StoryEventType
	}
	return penum.StoryEventType(0)
}

func (x *ProduceTopResponse) GetStoryEventConsumptionItemId() string {
	if x != nil {
		return x.StoryEventConsumptionItemId
	}
	return ""
}

func (x *ProduceTopResponse) GetStoryEventBonus() *pcommon.StoryEventBonus {
	if x != nil {
		return x.StoryEventBonus
	}
	return nil
}

func (x *ProduceTopResponse) GetProduceHighScoreCharacterIds() []string {
	if x != nil {
		return x.ProduceHighScoreCharacterIds
	}
	return nil
}

func (x *ProduceTopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthMigrateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PublicUserId  string `protobuf:"bytes,2,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	UserName      string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	ProducerLevel int32  `protobuf:"varint,4,opt,name=producerLevel,proto3" json:"producerLevel,omitempty"`
}

func (x *AuthMigrateResponse) Reset() {
	*x = AuthMigrateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthMigrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMigrateResponse) ProtoMessage() {}

func (x *AuthMigrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthMigrateResponse.ProtoReflect.Descriptor instead.
func (*AuthMigrateResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{203}
}

func (x *AuthMigrateResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthMigrateResponse) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *AuthMigrateResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AuthMigrateResponse) GetProducerLevel() int32 {
	if x != nil {
		return x.ProducerLevel
	}
	return 0
}

type PvpRateSeasonResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonStartTime int64              `protobuf:"varint,1,opt,name=seasonStartTime,proto3" json:"seasonStartTime,omitempty"`
	SeasonEndTime   int64              `protobuf:"varint,2,opt,name=seasonEndTime,proto3" json:"seasonEndTime,omitempty"`
	BeforeGrade     penum.PvpRateGrade `protobuf:"varint,3,opt,name=beforeGrade,proto3,enum=penum.PvpRateGrade" json:"beforeGrade,omitempty"`
	AfterGrade      penum.PvpRateGrade `protobuf:"varint,4,opt,name=afterGrade,proto3,enum=penum.PvpRateGrade" json:"afterGrade,omitempty"`
	Rank            int32              `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	Rate            int32              `protobuf:"varint,6,opt,name=rate,proto3" json:"rate,omitempty"`
	Rewards         []*pcommon.Reward  `protobuf:"bytes,7,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *PvpRateSeasonResult) Reset() {
	*x = PvpRateSeasonResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateSeasonResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateSeasonResult) ProtoMessage() {}

func (x *PvpRateSeasonResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateSeasonResult.ProtoReflect.Descriptor instead.
func (*PvpRateSeasonResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{204}
}

func (x *PvpRateSeasonResult) GetSeasonStartTime() int64 {
	if x != nil {
		return x.SeasonStartTime
	}
	return 0
}

func (x *PvpRateSeasonResult) GetSeasonEndTime() int64 {
	if x != nil {
		return x.SeasonEndTime
	}
	return 0
}

func (x *PvpRateSeasonResult) GetBeforeGrade() penum.PvpRateGrade {
	if x != nil {
		return x.BeforeGrade
	}
	return penum.PvpRateGrade(0)
}

func (x *PvpRateSeasonResult) GetAfterGrade() penum.PvpRateGrade {
	if x != nil {
		return x.AfterGrade
	}
	return penum.PvpRateGrade(0)
}

func (x *PvpRateSeasonResult) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PvpRateSeasonResult) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PvpRateSeasonResult) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type StartupConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *StartupConfirmResponse) Reset() {
	*x = StartupConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartupConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartupConfirmResponse) ProtoMessage() {}

func (x *StartupConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartupConfirmResponse.ProtoReflect.Descriptor instead.
func (*StartupConfirmResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{205}
}

func (x *StartupConfirmResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceCheckProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid       string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	ClientProduceUuid string `protobuf:"bytes,2,opt,name=clientProduceUuid,proto3" json:"clientProduceUuid,omitempty"`
}

func (x *ProduceCheckProgressRequest) Reset() {
	*x = ProduceCheckProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceCheckProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceCheckProgressRequest) ProtoMessage() {}

func (x *ProduceCheckProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceCheckProgressRequest.ProtoReflect.Descriptor instead.
func (*ProduceCheckProgressRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{206}
}

func (x *ProduceCheckProgressRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceCheckProgressRequest) GetClientProduceUuid() string {
	if x != nil {
		return x.ClientProduceUuid
	}
	return ""
}

type ShopPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopItemId string `protobuf:"bytes,1,opt,name=shopItemId,proto3" json:"shopItemId,omitempty"`
}

func (x *ShopPurchaseRequest) Reset() {
	*x = ShopPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchaseRequest) ProtoMessage() {}

func (x *ShopPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchaseRequest.ProtoReflect.Descriptor instead.
func (*ShopPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{207}
}

func (x *ShopPurchaseRequest) GetShopItemId() string {
	if x != nil {
		return x.ShopItemId
	}
	return ""
}

type PhotoUpdateNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPhotoId string `protobuf:"bytes,1,opt,name=userPhotoId,proto3" json:"userPhotoId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PhotoUpdateNameRequest) Reset() {
	*x = PhotoUpdateNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoUpdateNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoUpdateNameRequest) ProtoMessage() {}

func (x *PhotoUpdateNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoUpdateNameRequest.ProtoReflect.Descriptor instead.
func (*PhotoUpdateNameRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{208}
}

func (x *PhotoUpdateNameRequest) GetUserPhotoId() string {
	if x != nil {
		return x.UserPhotoId
	}
	return ""
}

func (x *PhotoUpdateNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TutorialProduceNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeforeStamina  int32                `protobuf:"varint,1,opt,name=beforeStamina,proto3" json:"beforeStamina,omitempty"`
	AfterStamina   int32                `protobuf:"varint,2,opt,name=afterStamina,proto3" json:"afterStamina,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProduceNextResponse) Reset() {
	*x = TutorialProduceNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceNextResponse) ProtoMessage() {}

func (x *TutorialProduceNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceNextResponse.ProtoReflect.Descriptor instead.
func (*TutorialProduceNextResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{209}
}

func (x *TutorialProduceNextResponse) GetBeforeStamina() int32 {
	if x != nil {
		return x.BeforeStamina
	}
	return 0
}

func (x *TutorialProduceNextResponse) GetAfterStamina() int32 {
	if x != nil {
		return x.AfterStamina
	}
	return 0
}

func (x *TutorialProduceNextResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CostumeSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *CostumeSetResponse) Reset() {
	*x = CostumeSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostumeSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostumeSetResponse) ProtoMessage() {}

func (x *CostumeSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostumeSetResponse.ProtoReflect.Descriptor instead.
func (*CostumeSetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{210}
}

func (x *CostumeSetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SeminarGetExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	ExamId  string `protobuf:"bytes,2,opt,name=examId,proto3" json:"examId,omitempty"`
}

func (x *SeminarGetExamRequest) Reset() {
	*x = SeminarGetExamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarGetExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarGetExamRequest) ProtoMessage() {}

func (x *SeminarGetExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarGetExamRequest.ProtoReflect.Descriptor instead.
func (*SeminarGetExamRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{211}
}

func (x *SeminarGetExamRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SeminarGetExamRequest) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

type GuildDismissResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildDismissResponse) Reset() {
	*x = GuildDismissResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDismissResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDismissResponse) ProtoMessage() {}

func (x *GuildDismissResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDismissResponse.ProtoReflect.Descriptor instead.
func (*GuildDismissResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{212}
}

func (x *GuildDismissResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialReadDearnessStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialReadDearnessStoryResponse) Reset() {
	*x = TutorialReadDearnessStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialReadDearnessStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialReadDearnessStoryResponse) ProtoMessage() {}

func (x *TutorialReadDearnessStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialReadDearnessStoryResponse.ProtoReflect.Descriptor instead.
func (*TutorialReadDearnessStoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{213}
}

func (x *TutorialReadDearnessStoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type WorkFinishResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          penum.WorkType          `protobuf:"varint,1,opt,name=type,proto3,enum=penum.WorkType" json:"type,omitempty"`
	RewardResults []*pcommon.RewardResult `protobuf:"bytes,2,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	IsExcellent   bool                    `protobuf:"varint,3,opt,name=isExcellent,proto3" json:"isExcellent,omitempty"`
	IsFined       bool                    `protobuf:"varint,4,opt,name=isFined,proto3" json:"isFined,omitempty"`
}

func (x *WorkFinishResult) Reset() {
	*x = WorkFinishResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFinishResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFinishResult) ProtoMessage() {}

func (x *WorkFinishResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFinishResult.ProtoReflect.Descriptor instead.
func (*WorkFinishResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{214}
}

func (x *WorkFinishResult) GetType() penum.WorkType {
	if x != nil {
		return x.Type
	}
	return penum.WorkType(0)
}

func (x *WorkFinishResult) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *WorkFinishResult) GetIsExcellent() bool {
	if x != nil {
		return x.IsExcellent
	}
	return false
}

func (x *WorkFinishResult) GetIsFined() bool {
	if x != nil {
		return x.IsFined
	}
	return false
}

type ShopCheckPurchaseJewelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopItemId string `protobuf:"bytes,1,opt,name=shopItemId,proto3" json:"shopItemId,omitempty"`
}

func (x *ShopCheckPurchaseJewelRequest) Reset() {
	*x = ShopCheckPurchaseJewelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCheckPurchaseJewelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCheckPurchaseJewelRequest) ProtoMessage() {}

func (x *ShopCheckPurchaseJewelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCheckPurchaseJewelRequest.ProtoReflect.Descriptor instead.
func (*ShopCheckPurchaseJewelRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{215}
}

func (x *ShopCheckPurchaseJewelRequest) GetShopItemId() string {
	if x != nil {
		return x.ShopItemId
	}
	return ""
}

type CoinGashaGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinGashaId string `protobuf:"bytes,1,opt,name=coinGashaId,proto3" json:"coinGashaId,omitempty"`
}

func (x *CoinGashaGetRequest) Reset() {
	*x = CoinGashaGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaGetRequest) ProtoMessage() {}

func (x *CoinGashaGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaGetRequest.ProtoReflect.Descriptor instead.
func (*CoinGashaGetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{216}
}

func (x *CoinGashaGetRequest) GetCoinGashaId() string {
	if x != nil {
		return x.CoinGashaId
	}
	return ""
}

type SupportCardRarityProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rarity                  penum.SupportCardRarity   `protobuf:"varint,1,opt,name=rarity,proto3,enum=penum.SupportCardRarity" json:"rarity,omitempty"`
	TenPermyriadProbability int32                     `protobuf:"varint,2,opt,name=tenPermyriadProbability,proto3" json:"tenPermyriadProbability,omitempty"`
	Probabilities           []*SupportCardProbability `protobuf:"bytes,3,rep,name=probabilities,proto3" json:"probabilities,omitempty"`
}

func (x *SupportCardRarityProbability) Reset() {
	*x = SupportCardRarityProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardRarityProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardRarityProbability) ProtoMessage() {}

func (x *SupportCardRarityProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardRarityProbability.ProtoReflect.Descriptor instead.
func (*SupportCardRarityProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{217}
}

func (x *SupportCardRarityProbability) GetRarity() penum.SupportCardRarity {
	if x != nil {
		return x.Rarity
	}
	return penum.SupportCardRarity(0)
}

func (x *SupportCardRarityProbability) GetTenPermyriadProbability() int32 {
	if x != nil {
		return x.TenPermyriadProbability
	}
	return 0
}

func (x *SupportCardRarityProbability) GetProbabilities() []*SupportCardProbability {
	if x != nil {
		return x.Probabilities
	}
	return nil
}

type MovieDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MovieDeleteResponse) Reset() {
	*x = MovieDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDeleteResponse) ProtoMessage() {}

func (x *MovieDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDeleteResponse.ProtoReflect.Descriptor instead.
func (*MovieDeleteResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{218}
}

func (x *MovieDeleteResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ItemSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ItemSellResponse) Reset() {
	*x = ItemSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSellResponse) ProtoMessage() {}

func (x *ItemSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSellResponse.ProtoReflect.Descriptor instead.
func (*ItemSellResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{219}
}

func (x *ItemSellResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceGrowthResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vocal                 int32 `protobuf:"varint,1,opt,name=vocal,proto3" json:"vocal,omitempty"`
	Dance                 int32 `protobuf:"varint,2,opt,name=dance,proto3" json:"dance,omitempty"`
	Visual                int32 `protobuf:"varint,3,opt,name=visual,proto3" json:"visual,omitempty"`
	GrowthRateBonusVocal  int32 `protobuf:"varint,4,opt,name=growthRateBonusVocal,proto3" json:"growthRateBonusVocal,omitempty"`
	GrowthRateBonusDance  int32 `protobuf:"varint,5,opt,name=growthRateBonusDance,proto3" json:"growthRateBonusDance,omitempty"`
	GrowthRateBonusVisual int32 `protobuf:"varint,6,opt,name=growthRateBonusVisual,proto3" json:"growthRateBonusVisual,omitempty"`
}

func (x *ProduceGrowthResult) Reset() {
	*x = ProduceGrowthResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceGrowthResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceGrowthResult) ProtoMessage() {}

func (x *ProduceGrowthResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceGrowthResult.ProtoReflect.Descriptor instead.
func (*ProduceGrowthResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{220}
}

func (x *ProduceGrowthResult) GetVocal() int32 {
	if x != nil {
		return x.Vocal
	}
	return 0
}

func (x *ProduceGrowthResult) GetDance() int32 {
	if x != nil {
		return x.Dance
	}
	return 0
}

func (x *ProduceGrowthResult) GetVisual() int32 {
	if x != nil {
		return x.Visual
	}
	return 0
}

func (x *ProduceGrowthResult) GetGrowthRateBonusVocal() int32 {
	if x != nil {
		return x.GrowthRateBonusVocal
	}
	return 0
}

func (x *ProduceGrowthResult) GetGrowthRateBonusDance() int32 {
	if x != nil {
		return x.GrowthRateBonusDance
	}
	return 0
}

func (x *ProduceGrowthResult) GetGrowthRateBonusVisual() int32 {
	if x != nil {
		return x.GrowthRateBonusVisual
	}
	return 0
}

type ProduceRankingTopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceGroupId string `protobuf:"bytes,1,opt,name=produceGroupId,proto3" json:"produceGroupId,omitempty"`
	CharacterId    string `protobuf:"bytes,2,opt,name=characterId,proto3" json:"characterId,omitempty"`
}

func (x *ProduceRankingTopRequest) Reset() {
	*x = ProduceRankingTopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRankingTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRankingTopRequest) ProtoMessage() {}

func (x *ProduceRankingTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRankingTopRequest.ProtoReflect.Descriptor instead.
func (*ProduceRankingTopRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{221}
}

func (x *ProduceRankingTopRequest) GetProduceGroupId() string {
	if x != nil {
		return x.ProduceGroupId
	}
	return ""
}

func (x *ProduceRankingTopRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

type AuthAgreeTermsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []penum.TermsType `protobuf:"varint,4,rep,packed,name=types,proto3,enum=penum.TermsType" json:"types,omitempty"`
}

func (x *AuthAgreeTermsRequest) Reset() {
	*x = AuthAgreeTermsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthAgreeTermsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthAgreeTermsRequest) ProtoMessage() {}

func (x *AuthAgreeTermsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthAgreeTermsRequest.ProtoReflect.Descriptor instead.
func (*AuthAgreeTermsRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{222}
}

func (x *AuthAgreeTermsRequest) GetTypes() []penum.TermsType {
	if x != nil {
		return x.Types
	}
	return nil
}

type MissionReceiveGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results        []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MissionReceiveGroupResponse) Reset() {
	*x = MissionReceiveGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveGroupResponse) ProtoMessage() {}

func (x *MissionReceiveGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveGroupResponse.ProtoReflect.Descriptor instead.
func (*MissionReceiveGroupResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{223}
}

func (x *MissionReceiveGroupResponse) GetResults() []*pcommon.RewardResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *MissionReceiveGroupResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceChangeCostumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Produce  bool `protobuf:"varint,1,opt,name=produce,proto3" json:"produce,omitempty"`
	Live     bool `protobuf:"varint,2,opt,name=live,proto3" json:"live,omitempty"`
	Training bool `protobuf:"varint,3,opt,name=training,proto3" json:"training,omitempty"`
}

func (x *ProduceChangeCostumeRequest) Reset() {
	*x = ProduceChangeCostumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceChangeCostumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceChangeCostumeRequest) ProtoMessage() {}

func (x *ProduceChangeCostumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceChangeCostumeRequest.ProtoReflect.Descriptor instead.
func (*ProduceChangeCostumeRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{224}
}

func (x *ProduceChangeCostumeRequest) GetProduce() bool {
	if x != nil {
		return x.Produce
	}
	return false
}

func (x *ProduceChangeCostumeRequest) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *ProduceChangeCostumeRequest) GetTraining() bool {
	if x != nil {
		return x.Training
	}
	return false
}

type ProduceNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceNextResponse) Reset() {
	*x = ProduceNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceNextResponse) ProtoMessage() {}

func (x *ProduceNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceNextResponse.ProtoReflect.Descriptor instead.
func (*ProduceNextResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{225}
}

func (x *ProduceNextResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceNextResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type IdolCardUpgradePotentialRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardId string                      `protobuf:"bytes,1,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	AfterRank  penum.IdolCardPotentialRank `protobuf:"varint,2,opt,name=afterRank,proto3,enum=penum.IdolCardPotentialRank" json:"afterRank,omitempty"`
}

func (x *IdolCardUpgradePotentialRankRequest) Reset() {
	*x = IdolCardUpgradePotentialRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardUpgradePotentialRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardUpgradePotentialRankRequest) ProtoMessage() {}

func (x *IdolCardUpgradePotentialRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardUpgradePotentialRankRequest.ProtoReflect.Descriptor instead.
func (*IdolCardUpgradePotentialRankRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{226}
}

func (x *IdolCardUpgradePotentialRankRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *IdolCardUpgradePotentialRankRequest) GetAfterRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.AfterRank
	}
	return penum.IdolCardPotentialRank(0)
}

type TutorialReceiveIdolCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardSkinId string `protobuf:"bytes,1,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
}

func (x *TutorialReceiveIdolCardRequest) Reset() {
	*x = TutorialReceiveIdolCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialReceiveIdolCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialReceiveIdolCardRequest) ProtoMessage() {}

func (x *TutorialReceiveIdolCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialReceiveIdolCardRequest.ProtoReflect.Descriptor instead.
func (*TutorialReceiveIdolCardRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{227}
}

func (x *TutorialReceiveIdolCardRequest) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

type TutorialSetNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TutorialSetNameRequest) Reset() {
	*x = TutorialSetNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialSetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialSetNameRequest) ProtoMessage() {}

func (x *TutorialSetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialSetNameRequest.ProtoReflect.Descriptor instead.
func (*TutorialSetNameRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{228}
}

func (x *TutorialSetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProduceStepAuditionStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepAuditionStartRequest) Reset() {
	*x = ProduceStepAuditionStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionStartRequest) ProtoMessage() {}

func (x *ProduceStepAuditionStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionStartRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{229}
}

func (x *ProduceStepAuditionStartRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type ProduceRerollSelectProduceCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceRerollSelectProduceCardResponse) Reset() {
	*x = ProduceRerollSelectProduceCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRerollSelectProduceCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRerollSelectProduceCardResponse) ProtoMessage() {}

func (x *ProduceRerollSelectProduceCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRerollSelectProduceCardResponse.ProtoReflect.Descriptor instead.
func (*ProduceRerollSelectProduceCardResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{230}
}

func (x *ProduceRerollSelectProduceCardResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceHighScoreCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId string                        `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
	Rank        int32                         `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	HighScore   int32                         `protobuf:"varint,3,opt,name=highScore,proto3" json:"highScore,omitempty"`
	RankRewards []*ProduceHighScoreRankReward `protobuf:"bytes,4,rep,name=rankRewards,proto3" json:"rankRewards,omitempty"`
}

func (x *ProduceHighScoreCharacter) Reset() {
	*x = ProduceHighScoreCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreCharacter) ProtoMessage() {}

func (x *ProduceHighScoreCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreCharacter.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreCharacter) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{231}
}

func (x *ProduceHighScoreCharacter) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *ProduceHighScoreCharacter) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProduceHighScoreCharacter) GetHighScore() int32 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

func (x *ProduceHighScoreCharacter) GetRankRewards() []*ProduceHighScoreRankReward {
	if x != nil {
		return x.RankRewards
	}
	return nil
}

type CoinGashaGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinGasha      *pcommon.CoinGasha   `protobuf:"bytes,1,opt,name=coinGasha,proto3" json:"coinGasha,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *CoinGashaGetResponse) Reset() {
	*x = CoinGashaGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaGetResponse) ProtoMessage() {}

func (x *CoinGashaGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaGetResponse.ProtoReflect.Descriptor instead.
func (*CoinGashaGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{232}
}

func (x *CoinGashaGetResponse) GetCoinGasha() *pcommon.CoinGasha {
	if x != nil {
		return x.CoinGasha
	}
	return nil
}

func (x *CoinGashaGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceHighScoreRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpperRank int32             `protobuf:"varint,1,opt,name=upperRank,proto3" json:"upperRank,omitempty"`
	LowerRank int32             `protobuf:"varint,2,opt,name=lowerRank,proto3" json:"lowerRank,omitempty"`
	Rewards   []*pcommon.Reward `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *ProduceHighScoreRankReward) Reset() {
	*x = ProduceHighScoreRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreRankReward) ProtoMessage() {}

func (x *ProduceHighScoreRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreRankReward.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreRankReward) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{233}
}

func (x *ProduceHighScoreRankReward) GetUpperRank() int32 {
	if x != nil {
		return x.UpperRank
	}
	return 0
}

func (x *ProduceHighScoreRankReward) GetLowerRank() int32 {
	if x != nil {
		return x.LowerRank
	}
	return 0
}

func (x *ProduceHighScoreRankReward) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type TowerEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results        []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerEndResponse) Reset() {
	*x = TowerEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerEndResponse) ProtoMessage() {}

func (x *TowerEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerEndResponse.ProtoReflect.Descriptor instead.
func (*TowerEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{234}
}

func (x *TowerEndResponse) GetResults() []*pcommon.RewardResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TowerEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialProduceStepAuditionEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProduceStepAuditionEndResponse) Reset() {
	*x = TutorialProduceStepAuditionEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStepAuditionEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStepAuditionEndResponse) ProtoMessage() {}

func (x *TutorialProduceStepAuditionEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStepAuditionEndResponse.ProtoReflect.Descriptor instead.
func (*TutorialProduceStepAuditionEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{235}
}

func (x *TutorialProduceStepAuditionEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthLinkBandaiNamcoIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success             bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	IsSameAccountLinked bool                 `protobuf:"varint,2,opt,name=isSameAccountLinked,proto3" json:"isSameAccountLinked,omitempty"`
	PublicUserId        string               `protobuf:"bytes,100,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	UserName            string               `protobuf:"bytes,101,opt,name=userName,proto3" json:"userName,omitempty"`
	ProducerLevel       int32                `protobuf:"varint,102,opt,name=producerLevel,proto3" json:"producerLevel,omitempty"`
	CommonResponse      *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *AuthLinkBandaiNamcoIdResponse) Reset() {
	*x = AuthLinkBandaiNamcoIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLinkBandaiNamcoIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLinkBandaiNamcoIdResponse) ProtoMessage() {}

func (x *AuthLinkBandaiNamcoIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLinkBandaiNamcoIdResponse.ProtoReflect.Descriptor instead.
func (*AuthLinkBandaiNamcoIdResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{236}
}

func (x *AuthLinkBandaiNamcoIdResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthLinkBandaiNamcoIdResponse) GetIsSameAccountLinked() bool {
	if x != nil {
		return x.IsSameAccountLinked
	}
	return false
}

func (x *AuthLinkBandaiNamcoIdResponse) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *AuthLinkBandaiNamcoIdResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AuthLinkBandaiNamcoIdResponse) GetProducerLevel() int32 {
	if x != nil {
		return x.ProducerLevel
	}
	return 0
}

func (x *AuthLinkBandaiNamcoIdResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaDrawStepUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId       string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
	GashaButtonId string `protobuf:"bytes,2,opt,name=gashaButtonId,proto3" json:"gashaButtonId,omitempty"`
}

func (x *GashaDrawStepUpRequest) Reset() {
	*x = GashaDrawStepUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaDrawStepUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaDrawStepUpRequest) ProtoMessage() {}

func (x *GashaDrawStepUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaDrawStepUpRequest.ProtoReflect.Descriptor instead.
func (*GashaDrawStepUpRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{237}
}

func (x *GashaDrawStepUpRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

func (x *GashaDrawStepUpRequest) GetGashaButtonId() string {
	if x != nil {
		return x.GashaButtonId
	}
	return ""
}

type GashaGetProbabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Probability    *DefaultGashaProbability `protobuf:"bytes,1,opt,name=probability,proto3" json:"probability,omitempty"`
	CommonResponse *papicommon.Response     `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaGetProbabilityResponse) Reset() {
	*x = GashaGetProbabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetProbabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetProbabilityResponse) ProtoMessage() {}

func (x *GashaGetProbabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetProbabilityResponse.ProtoReflect.Descriptor instead.
func (*GashaGetProbabilityResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{238}
}

func (x *GashaGetProbabilityResponse) GetProbability() *DefaultGashaProbability {
	if x != nil {
		return x.Probability
	}
	return nil
}

func (x *GashaGetProbabilityResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type NoticeFetchListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category penum.NoticeCategory `protobuf:"varint,1,opt,name=category,proto3,enum=penum.NoticeCategory" json:"category,omitempty"`
	Offset   int32                `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *NoticeFetchListRequest) Reset() {
	*x = NoticeFetchListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeFetchListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeFetchListRequest) ProtoMessage() {}

func (x *NoticeFetchListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeFetchListRequest.ProtoReflect.Descriptor instead.
func (*NoticeFetchListRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{239}
}

func (x *NoticeFetchListRequest) GetCategory() penum.NoticeCategory {
	if x != nil {
		return x.Category
	}
	return penum.NoticeCategory(0)
}

func (x *NoticeFetchListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ProduceHighScoreGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleAssetId         string                         `protobuf:"bytes,1,opt,name=titleAssetId,proto3" json:"titleAssetId,omitempty"`
	Rank                 int32                          `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	HighScore            int32                          `protobuf:"varint,3,opt,name=highScore,proto3" json:"highScore,omitempty"`
	HighScoreRewards     []*ProduceHighScoreReward      `protobuf:"bytes,4,rep,name=highScoreRewards,proto3" json:"highScoreRewards,omitempty"`
	RankRewards          []*ProduceHighScoreRankReward  `protobuf:"bytes,5,rep,name=rankRewards,proto3" json:"rankRewards,omitempty"`
	Characters           []*ProduceHighScoreCharacter   `protobuf:"bytes,6,rep,name=characters,proto3" json:"characters,omitempty"`
	Result               *ProduceHighScoreResult        `protobuf:"bytes,50,opt,name=result,proto3" json:"result,omitempty"`
	StartupNotifications []*pcommon.StartupNotification `protobuf:"bytes,70,rep,name=startupNotifications,proto3" json:"startupNotifications,omitempty"`
	StartTime            int64                          `protobuf:"varint,100,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64                          `protobuf:"varint,101,opt,name=endTime,proto3" json:"endTime,omitempty"`
	FixRankTime          int64                          `protobuf:"varint,102,opt,name=fixRankTime,proto3" json:"fixRankTime,omitempty"`
	CloseTime            int64                          `protobuf:"varint,103,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	CommonResponse       *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceHighScoreGetResponse) Reset() {
	*x = ProduceHighScoreGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreGetResponse) ProtoMessage() {}

func (x *ProduceHighScoreGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreGetResponse.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{240}
}

func (x *ProduceHighScoreGetResponse) GetTitleAssetId() string {
	if x != nil {
		return x.TitleAssetId
	}
	return ""
}

func (x *ProduceHighScoreGetResponse) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProduceHighScoreGetResponse) GetHighScore() int32 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

func (x *ProduceHighScoreGetResponse) GetHighScoreRewards() []*ProduceHighScoreReward {
	if x != nil {
		return x.HighScoreRewards
	}
	return nil
}

func (x *ProduceHighScoreGetResponse) GetRankRewards() []*ProduceHighScoreRankReward {
	if x != nil {
		return x.RankRewards
	}
	return nil
}

func (x *ProduceHighScoreGetResponse) GetCharacters() []*ProduceHighScoreCharacter {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *ProduceHighScoreGetResponse) GetResult() *ProduceHighScoreResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ProduceHighScoreGetResponse) GetStartupNotifications() []*pcommon.StartupNotification {
	if x != nil {
		return x.StartupNotifications
	}
	return nil
}

func (x *ProduceHighScoreGetResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProduceHighScoreGetResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProduceHighScoreGetResponse) GetFixRankTime() int64 {
	if x != nil {
		return x.FixRankTime
	}
	return 0
}

func (x *ProduceHighScoreGetResponse) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *ProduceHighScoreGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ItemSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ItemSellRequest) Reset() {
	*x = ItemSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSellRequest) ProtoMessage() {}

func (x *ItemSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSellRequest.ProtoReflect.Descriptor instead.
func (*ItemSellRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{241}
}

func (x *ItemSellRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemSellRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ProduceStepShopBuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvidedRewards    []*pcommon.ProduceRewardResult `protobuf:"bytes,1,rep,name=providedRewards,proto3" json:"providedRewards,omitempty"`
	BeforeProducePoint int32                          `protobuf:"varint,2,opt,name=beforeProducePoint,proto3" json:"beforeProducePoint,omitempty"`
	AfterProducePoint  int32                          `protobuf:"varint,3,opt,name=afterProducePoint,proto3" json:"afterProducePoint,omitempty"`
	EffectResults      []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse     *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepShopBuyResponse) Reset() {
	*x = ProduceStepShopBuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepShopBuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepShopBuyResponse) ProtoMessage() {}

func (x *ProduceStepShopBuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepShopBuyResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepShopBuyResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{242}
}

func (x *ProduceStepShopBuyResponse) GetProvidedRewards() []*pcommon.ProduceRewardResult {
	if x != nil {
		return x.ProvidedRewards
	}
	return nil
}

func (x *ProduceStepShopBuyResponse) GetBeforeProducePoint() int32 {
	if x != nil {
		return x.BeforeProducePoint
	}
	return 0
}

func (x *ProduceStepShopBuyResponse) GetAfterProducePoint() int32 {
	if x != nil {
		return x.AfterProducePoint
	}
	return 0
}

func (x *ProduceStepShopBuyResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepShopBuyResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceActivateEffectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string  `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	PickIndexes []int32 `protobuf:"varint,2,rep,packed,name=pickIndexes,proto3" json:"pickIndexes,omitempty"`
}

func (x *ProduceActivateEffectRequest) Reset() {
	*x = ProduceActivateEffectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceActivateEffectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceActivateEffectRequest) ProtoMessage() {}

func (x *ProduceActivateEffectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceActivateEffectRequest.ProtoReflect.Descriptor instead.
func (*ProduceActivateEffectRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{243}
}

func (x *ProduceActivateEffectRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceActivateEffectRequest) GetPickIndexes() []int32 {
	if x != nil {
		return x.PickIndexes
	}
	return nil
}

type ProduceReadDearnessStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	IsAuto      bool   `protobuf:"varint,2,opt,name=isAuto,proto3" json:"isAuto,omitempty"`
	IsSkip      bool   `protobuf:"varint,3,opt,name=isSkip,proto3" json:"isSkip,omitempty"`
}

func (x *ProduceReadDearnessStoryRequest) Reset() {
	*x = ProduceReadDearnessStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceReadDearnessStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceReadDearnessStoryRequest) ProtoMessage() {}

func (x *ProduceReadDearnessStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceReadDearnessStoryRequest.ProtoReflect.Descriptor instead.
func (*ProduceReadDearnessStoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{244}
}

func (x *ProduceReadDearnessStoryRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceReadDearnessStoryRequest) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

func (x *ProduceReadDearnessStoryRequest) GetIsSkip() bool {
	if x != nil {
		return x.IsSkip
	}
	return false
}

type AuthLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameAuthToken    string                    `protobuf:"bytes,1,opt,name=gameAuthToken,proto3" json:"gameAuthToken,omitempty"`
	RetrySignInToken string                    `protobuf:"bytes,2,opt,name=retrySignInToken,proto3" json:"retrySignInToken,omitempty"`
	Terms            []*AuthLoginResponse_Term `protobuf:"bytes,3,rep,name=terms,proto3" json:"terms,omitempty"`
	Consents         []*Consent                `protobuf:"bytes,4,rep,name=consents,proto3" json:"consents,omitempty"`
}

func (x *AuthLoginResponse) Reset() {
	*x = AuthLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLoginResponse) ProtoMessage() {}

func (x *AuthLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLoginResponse.ProtoReflect.Descriptor instead.
func (*AuthLoginResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{245}
}

func (x *AuthLoginResponse) GetGameAuthToken() string {
	if x != nil {
		return x.GameAuthToken
	}
	return ""
}

func (x *AuthLoginResponse) GetRetrySignInToken() string {
	if x != nil {
		return x.RetrySignInToken
	}
	return ""
}

func (x *AuthLoginResponse) GetTerms() []*AuthLoginResponse_Term {
	if x != nil {
		return x.Terms
	}
	return nil
}

func (x *AuthLoginResponse) GetConsents() []*Consent {
	if x != nil {
		return x.Consents
	}
	return nil
}

type GuildRejectJoinRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserIds []string `protobuf:"bytes,1,rep,name=publicUserIds,proto3" json:"publicUserIds,omitempty"`
}

func (x *GuildRejectJoinRequestRequest) Reset() {
	*x = GuildRejectJoinRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRejectJoinRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRejectJoinRequestRequest) ProtoMessage() {}

func (x *GuildRejectJoinRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRejectJoinRequestRequest.ProtoReflect.Descriptor instead.
func (*GuildRejectJoinRequestRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{246}
}

func (x *GuildRejectJoinRequestRequest) GetPublicUserIds() []string {
	if x != nil {
		return x.PublicUserIds
	}
	return nil
}

type MissionListEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events         []*pcommon.Event     `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MissionListEventResponse) Reset() {
	*x = MissionListEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionListEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionListEventResponse) ProtoMessage() {}

func (x *MissionListEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionListEventResponse.ProtoReflect.Descriptor instead.
func (*MissionListEventResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{247}
}

func (x *MissionListEventResponse) GetEvents() []*pcommon.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *MissionListEventResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceReportGuildMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceReportGuildMissionRequest) Reset() {
	*x = ProduceReportGuildMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceReportGuildMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceReportGuildMissionRequest) ProtoMessage() {}

func (x *ProduceReportGuildMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceReportGuildMissionRequest.ProtoReflect.Descriptor instead.
func (*ProduceReportGuildMissionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{248}
}

func (x *ProduceReportGuildMissionRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type MissionReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results                          []*pcommon.RewardResult                                   `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	MissionPointResults              []*pcommon.RewardResult                                   `protobuf:"bytes,2,rep,name=missionPointResults,proto3" json:"missionPointResults,omitempty"`
	MasterAchievementProgressResults []*MissionReceiveResponse_MasterAchievementProgressResult `protobuf:"bytes,3,rep,name=masterAchievementProgressResults,proto3" json:"masterAchievementProgressResults,omitempty"`
	MainTaskResults                  []*pmaster.Mission                                        `protobuf:"bytes,4,rep,name=mainTaskResults,proto3" json:"mainTaskResults,omitempty"`
	CommonResponse                   *papicommon.Response                                      `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MissionReceiveResponse) Reset() {
	*x = MissionReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveResponse) ProtoMessage() {}

func (x *MissionReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveResponse.ProtoReflect.Descriptor instead.
func (*MissionReceiveResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{249}
}

func (x *MissionReceiveResponse) GetResults() []*pcommon.RewardResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *MissionReceiveResponse) GetMissionPointResults() []*pcommon.RewardResult {
	if x != nil {
		return x.MissionPointResults
	}
	return nil
}

func (x *MissionReceiveResponse) GetMasterAchievementProgressResults() []*MissionReceiveResponse_MasterAchievementProgressResult {
	if x != nil {
		return x.MasterAchievementProgressResults
	}
	return nil
}

func (x *MissionReceiveResponse) GetMainTaskResults() []*pmaster.Mission {
	if x != nil {
		return x.MainTaskResults
	}
	return nil
}

func (x *MissionReceiveResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaExchangePointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaPointId string `protobuf:"bytes,1,opt,name=gashaPointId,proto3" json:"gashaPointId,omitempty"`
	Number       int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *GashaExchangePointRequest) Reset() {
	*x = GashaExchangePointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaExchangePointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaExchangePointRequest) ProtoMessage() {}

func (x *GashaExchangePointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaExchangePointRequest.ProtoReflect.Descriptor instead.
func (*GashaExchangePointRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{250}
}

func (x *GashaExchangePointRequest) GetGashaPointId() string {
	if x != nil {
		return x.GashaPointId
	}
	return ""
}

func (x *GashaExchangePointRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ProduceEndBeforeLiveEvaluationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceEndBeforeLiveEvaluationResponse) Reset() {
	*x = ProduceEndBeforeLiveEvaluationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceEndBeforeLiveEvaluationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceEndBeforeLiveEvaluationResponse) ProtoMessage() {}

func (x *ProduceEndBeforeLiveEvaluationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceEndBeforeLiveEvaluationResponse.ProtoReflect.Descriptor instead.
func (*ProduceEndBeforeLiveEvaluationResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{251}
}

func (x *ProduceEndBeforeLiveEvaluationResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiUnfollowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserIds []string `protobuf:"bytes,1,rep,name=publicUserIds,proto3" json:"publicUserIds,omitempty"`
}

func (x *MeishiUnfollowRequest) Reset() {
	*x = MeishiUnfollowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiUnfollowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiUnfollowRequest) ProtoMessage() {}

func (x *MeishiUnfollowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiUnfollowRequest.ProtoReflect.Descriptor instead.
func (*MeishiUnfollowRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{252}
}

func (x *MeishiUnfollowRequest) GetPublicUserIds() []string {
	if x != nil {
		return x.PublicUserIds
	}
	return nil
}

type SupportCardEnhanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCardId string `protobuf:"bytes,1,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	Level         int32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *SupportCardEnhanceRequest) Reset() {
	*x = SupportCardEnhanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardEnhanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardEnhanceRequest) ProtoMessage() {}

func (x *SupportCardEnhanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardEnhanceRequest.ProtoReflect.Descriptor instead.
func (*SupportCardEnhanceRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{253}
}

func (x *SupportCardEnhanceRequest) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *SupportCardEnhanceRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type TutorialProduceStepLessonEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProduceStepLessonEndResponse) Reset() {
	*x = TutorialProduceStepLessonEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStepLessonEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStepLessonEndResponse) ProtoMessage() {}

func (x *TutorialProduceStepLessonEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStepLessonEndResponse.ProtoReflect.Descriptor instead.
func (*TutorialProduceStepLessonEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{254}
}

func (x *TutorialProduceStepLessonEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GiftListHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []penum.GiftFilterType `protobuf:"varint,1,rep,packed,name=filters,proto3,enum=penum.GiftFilterType" json:"filters,omitempty"`
	IsDesc  bool                   `protobuf:"varint,2,opt,name=isDesc,proto3" json:"isDesc,omitempty"`
}

func (x *GiftListHistoryRequest) Reset() {
	*x = GiftListHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftListHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftListHistoryRequest) ProtoMessage() {}

func (x *GiftListHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftListHistoryRequest.ProtoReflect.Descriptor instead.
func (*GiftListHistoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{255}
}

func (x *GiftListHistoryRequest) GetFilters() []penum.GiftFilterType {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GiftListHistoryRequest) GetIsDesc() bool {
	if x != nil {
		return x.IsDesc
	}
	return false
}

type MissionReceiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Missions      []*MissionReceiveRequest_Mission      `protobuf:"bytes,1,rep,name=missions,proto3" json:"missions,omitempty"`
	MissionPoints []*MissionReceiveRequest_MissionPoint `protobuf:"bytes,2,rep,name=missionPoints,proto3" json:"missionPoints,omitempty"`
}

func (x *MissionReceiveRequest) Reset() {
	*x = MissionReceiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveRequest) ProtoMessage() {}

func (x *MissionReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveRequest.ProtoReflect.Descriptor instead.
func (*MissionReceiveRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{256}
}

func (x *MissionReceiveRequest) GetMissions() []*MissionReceiveRequest_Mission {
	if x != nil {
		return x.Missions
	}
	return nil
}

func (x *MissionReceiveRequest) GetMissionPoints() []*MissionReceiveRequest_MissionPoint {
	if x != nil {
		return x.MissionPoints
	}
	return nil
}

type GuildApplyJoinRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGuildId string                          `protobuf:"bytes,1,opt,name=publicGuildId,proto3" json:"publicGuildId,omitempty"`
	RouteType     penum.GuildJoinRequestRouteType `protobuf:"varint,2,opt,name=routeType,proto3,enum=penum.GuildJoinRequestRouteType" json:"routeType,omitempty"`
}

func (x *GuildApplyJoinRequestRequest) Reset() {
	*x = GuildApplyJoinRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildApplyJoinRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildApplyJoinRequestRequest) ProtoMessage() {}

func (x *GuildApplyJoinRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildApplyJoinRequestRequest.ProtoReflect.Descriptor instead.
func (*GuildApplyJoinRequestRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{257}
}

func (x *GuildApplyJoinRequestRequest) GetPublicGuildId() string {
	if x != nil {
		return x.PublicGuildId
	}
	return ""
}

func (x *GuildApplyJoinRequestRequest) GetRouteType() penum.GuildJoinRequestRouteType {
	if x != nil {
		return x.RouteType
	}
	return penum.GuildJoinRequestRouteType(0)
}

type TutorialSkipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialSkipResponse) Reset() {
	*x = TutorialSkipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialSkipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialSkipResponse) ProtoMessage() {}

func (x *TutorialSkipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialSkipResponse.ProtoReflect.Descriptor instead.
func (*TutorialSkipResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{258}
}

func (x *TutorialSkipResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceHighScoreRankingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId string `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
}

func (x *ProduceHighScoreRankingRequest) Reset() {
	*x = ProduceHighScoreRankingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreRankingRequest) ProtoMessage() {}

func (x *ProduceHighScoreRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreRankingRequest.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreRankingRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{259}
}

func (x *ProduceHighScoreRankingRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

type ProduceListRentalSupportCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCards           []*ProduceListRentalSupportCardResponse_RentalSupportCard `protobuf:"bytes,1,rep,name=supportCards,proto3" json:"supportCards,omitempty"`
	SuggestionSupportCards []*ProduceListRentalSupportCardResponse_RentalSupportCard `protobuf:"bytes,2,rep,name=suggestionSupportCards,proto3" json:"suggestionSupportCards,omitempty"`
	NpcSupportCards        []*ProduceListRentalSupportCardResponse_RentalSupportCard `protobuf:"bytes,3,rep,name=npcSupportCards,proto3" json:"npcSupportCards,omitempty"`
	CommonResponse         *papicommon.Response                                      `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceListRentalSupportCardResponse) Reset() {
	*x = ProduceListRentalSupportCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceListRentalSupportCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceListRentalSupportCardResponse) ProtoMessage() {}

func (x *ProduceListRentalSupportCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceListRentalSupportCardResponse.ProtoReflect.Descriptor instead.
func (*ProduceListRentalSupportCardResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{260}
}

func (x *ProduceListRentalSupportCardResponse) GetSupportCards() []*ProduceListRentalSupportCardResponse_RentalSupportCard {
	if x != nil {
		return x.SupportCards
	}
	return nil
}

func (x *ProduceListRentalSupportCardResponse) GetSuggestionSupportCards() []*ProduceListRentalSupportCardResponse_RentalSupportCard {
	if x != nil {
		return x.SuggestionSupportCards
	}
	return nil
}

func (x *ProduceListRentalSupportCardResponse) GetNpcSupportCards() []*ProduceListRentalSupportCardResponse_RentalSupportCard {
	if x != nil {
		return x.NpcSupportCards
	}
	return nil
}

func (x *ProduceListRentalSupportCardResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopListItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId string `protobuf:"bytes,1,opt,name=shopId,proto3" json:"shopId,omitempty"`
}

func (x *ShopListItemsRequest) Reset() {
	*x = ShopListItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopListItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopListItemsRequest) ProtoMessage() {}

func (x *ShopListItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopListItemsRequest.ProtoReflect.Descriptor instead.
func (*ShopListItemsRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{261}
}

func (x *ShopListItemsRequest) GetShopId() string {
	if x != nil {
		return x.ShopId
	}
	return ""
}

type TowerStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed           int64                  `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	IdolCardId     string                 `protobuf:"bytes,100,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	MaxStamina     int32                  `protobuf:"varint,101,opt,name=maxStamina,proto3" json:"maxStamina,omitempty"`
	VocalPermil    int32                  `protobuf:"varint,102,opt,name=vocalPermil,proto3" json:"vocalPermil,omitempty"`
	DancePermil    int32                  `protobuf:"varint,103,opt,name=dancePermil,proto3" json:"dancePermil,omitempty"`
	VisualPermil   int32                  `protobuf:"varint,104,opt,name=visualPermil,proto3" json:"visualPermil,omitempty"`
	ProduceCards   []*pcommon.ProduceCard `protobuf:"bytes,105,rep,name=produceCards,proto3" json:"produceCards,omitempty"`
	ProduceItemIds []string               `protobuf:"bytes,106,rep,name=produceItemIds,proto3" json:"produceItemIds,omitempty"`
	CommonResponse *papicommon.Response   `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerStartResponse) Reset() {
	*x = TowerStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerStartResponse) ProtoMessage() {}

func (x *TowerStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerStartResponse.ProtoReflect.Descriptor instead.
func (*TowerStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{262}
}

func (x *TowerStartResponse) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *TowerStartResponse) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *TowerStartResponse) GetMaxStamina() int32 {
	if x != nil {
		return x.MaxStamina
	}
	return 0
}

func (x *TowerStartResponse) GetVocalPermil() int32 {
	if x != nil {
		return x.VocalPermil
	}
	return 0
}

func (x *TowerStartResponse) GetDancePermil() int32 {
	if x != nil {
		return x.DancePermil
	}
	return 0
}

func (x *TowerStartResponse) GetVisualPermil() int32 {
	if x != nil {
		return x.VisualPermil
	}
	return 0
}

func (x *TowerStartResponse) GetProduceCards() []*pcommon.ProduceCard {
	if x != nil {
		return x.ProduceCards
	}
	return nil
}

func (x *TowerStartResponse) GetProduceItemIds() []string {
	if x != nil {
		return x.ProduceItemIds
	}
	return nil
}

func (x *TowerStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{263}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type ItemUseActionPointRecoveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ItemUseActionPointRecoveryRequest) Reset() {
	*x = ItemUseActionPointRecoveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseActionPointRecoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseActionPointRecoveryRequest) ProtoMessage() {}

func (x *ItemUseActionPointRecoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseActionPointRecoveryRequest.ProtoReflect.Descriptor instead.
func (*ItemUseActionPointRecoveryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{264}
}

func (x *ItemUseActionPointRecoveryRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemUseActionPointRecoveryRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TutorialUnlockFeatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type penum.TutorialType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.TutorialType" json:"type,omitempty"`
}

func (x *TutorialUnlockFeatureRequest) Reset() {
	*x = TutorialUnlockFeatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialUnlockFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialUnlockFeatureRequest) ProtoMessage() {}

func (x *TutorialUnlockFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialUnlockFeatureRequest.ProtoReflect.Descriptor instead.
func (*TutorialUnlockFeatureRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{265}
}

func (x *TutorialUnlockFeatureRequest) GetType() penum.TutorialType {
	if x != nil {
		return x.Type
	}
	return penum.TutorialType(0)
}

type WorkStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type penum.WorkType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.WorkType" json:"type,omitempty"`
}

func (x *WorkStopRequest) Reset() {
	*x = WorkStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStopRequest) ProtoMessage() {}

func (x *WorkStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStopRequest.ProtoReflect.Descriptor instead.
func (*WorkStopRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{266}
}

func (x *WorkStopRequest) GetType() penum.WorkType {
	if x != nil {
		return x.Type
	}
	return penum.WorkType(0)
}

type GuildApproveJoinRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildApproveJoinRequestResponse) Reset() {
	*x = GuildApproveJoinRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildApproveJoinRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildApproveJoinRequestResponse) ProtoMessage() {}

func (x *GuildApproveJoinRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildApproveJoinRequestResponse.ProtoReflect.Descriptor instead.
func (*GuildApproveJoinRequestResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{267}
}

func (x *GuildApproveJoinRequestResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MissionReceivePassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionPassId     string  `protobuf:"bytes,1,opt,name=missionPassId,proto3" json:"missionPassId,omitempty"`
	NormalThresholds  []int32 `protobuf:"varint,2,rep,packed,name=normalThresholds,proto3" json:"normalThresholds,omitempty"`
	PremiumThresholds []int32 `protobuf:"varint,3,rep,packed,name=premiumThresholds,proto3" json:"premiumThresholds,omitempty"`
}

func (x *MissionReceivePassRequest) Reset() {
	*x = MissionReceivePassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceivePassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceivePassRequest) ProtoMessage() {}

func (x *MissionReceivePassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceivePassRequest.ProtoReflect.Descriptor instead.
func (*MissionReceivePassRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{268}
}

func (x *MissionReceivePassRequest) GetMissionPassId() string {
	if x != nil {
		return x.MissionPassId
	}
	return ""
}

func (x *MissionReceivePassRequest) GetNormalThresholds() []int32 {
	if x != nil {
		return x.NormalThresholds
	}
	return nil
}

func (x *MissionReceivePassRequest) GetPremiumThresholds() []int32 {
	if x != nil {
		return x.PremiumThresholds
	}
	return nil
}

type PvpRateUpdateUserPvpRateUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageFormations []*pcommon.PvpRateSetupUnitStageFormation `protobuf:"bytes,1,rep,name=stageFormations,proto3" json:"stageFormations,omitempty"`
	RecommendType   penum.DeckRecommendType                   `protobuf:"varint,2,opt,name=recommendType,proto3,enum=penum.DeckRecommendType" json:"recommendType,omitempty"`
}

func (x *PvpRateUpdateUserPvpRateUnitRequest) Reset() {
	*x = PvpRateUpdateUserPvpRateUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateUpdateUserPvpRateUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateUpdateUserPvpRateUnitRequest) ProtoMessage() {}

func (x *PvpRateUpdateUserPvpRateUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateUpdateUserPvpRateUnitRequest.ProtoReflect.Descriptor instead.
func (*PvpRateUpdateUserPvpRateUnitRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{269}
}

func (x *PvpRateUpdateUserPvpRateUnitRequest) GetStageFormations() []*pcommon.PvpRateSetupUnitStageFormation {
	if x != nil {
		return x.StageFormations
	}
	return nil
}

func (x *PvpRateUpdateUserPvpRateUnitRequest) GetRecommendType() penum.DeckRecommendType {
	if x != nil {
		return x.RecommendType
	}
	return penum.DeckRecommendType(0)
}

type ProduceStepEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success             bool                                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	MemoryRewardResults []*pcommon.ProduceMemoryRewardResult `protobuf:"bytes,2,rep,name=memoryRewardResults,proto3" json:"memoryRewardResults,omitempty"`
	EffectResults       []*pcommon.ProduceEffectResult       `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse      *papicommon.Response                 `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepEventResponse) Reset() {
	*x = ProduceStepEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepEventResponse) ProtoMessage() {}

func (x *ProduceStepEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepEventResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepEventResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{270}
}

func (x *ProduceStepEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProduceStepEventResponse) GetMemoryRewardResults() []*pcommon.ProduceMemoryRewardResult {
	if x != nil {
		return x.MemoryRewardResults
	}
	return nil
}

func (x *ProduceStepEventResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepEventResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceHistory *pcommon.ProduceHistory `protobuf:"bytes,1,opt,name=produceHistory,proto3" json:"produceHistory,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceHistoryResponse) Reset() {
	*x = ProduceHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHistoryResponse) ProtoMessage() {}

func (x *ProduceHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHistoryResponse.ProtoReflect.Descriptor instead.
func (*ProduceHistoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{271}
}

func (x *ProduceHistoryResponse) GetProduceHistory() *pcommon.ProduceHistory {
	if x != nil {
		return x.ProduceHistory
	}
	return nil
}

func (x *ProduceHistoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProfileUpdateMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMemoryId string `protobuf:"bytes,1,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
}

func (x *ProfileUpdateMemoryRequest) Reset() {
	*x = ProfileUpdateMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateMemoryRequest) ProtoMessage() {}

func (x *ProfileUpdateMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateMemoryRequest.ProtoReflect.Descriptor instead.
func (*ProfileUpdateMemoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{272}
}

func (x *ProfileUpdateMemoryRequest) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

type ShopCancelPurchaseTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopCancelPurchaseTransactionResponse) Reset() {
	*x = ShopCancelPurchaseTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCancelPurchaseTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCancelPurchaseTransactionResponse) ProtoMessage() {}

func (x *ShopCancelPurchaseTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCancelPurchaseTransactionResponse.ProtoReflect.Descriptor instead.
func (*ShopCancelPurchaseTransactionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{273}
}

func (x *ShopCancelPurchaseTransactionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SupportCardExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters []*SupportCardExchangeRequest_Parameter `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *SupportCardExchangeRequest) Reset() {
	*x = SupportCardExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardExchangeRequest) ProtoMessage() {}

func (x *SupportCardExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardExchangeRequest.ProtoReflect.Descriptor instead.
func (*SupportCardExchangeRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{274}
}

func (x *SupportCardExchangeRequest) GetParameters() []*SupportCardExchangeRequest_Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type GashaGetSelectPickupProbabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Probability    *DefaultGashaProbability `protobuf:"bytes,1,opt,name=probability,proto3" json:"probability,omitempty"`
	CommonResponse *papicommon.Response     `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaGetSelectPickupProbabilityResponse) Reset() {
	*x = GashaGetSelectPickupProbabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetSelectPickupProbabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetSelectPickupProbabilityResponse) ProtoMessage() {}

func (x *GashaGetSelectPickupProbabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetSelectPickupProbabilityResponse.ProtoReflect.Descriptor instead.
func (*GashaGetSelectPickupProbabilityResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{275}
}

func (x *GashaGetSelectPickupProbabilityResponse) GetProbability() *DefaultGashaProbability {
	if x != nil {
		return x.Probability
	}
	return nil
}

func (x *GashaGetSelectPickupProbabilityResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MovieCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMovieId string `protobuf:"bytes,2,opt,name=userMovieId,proto3" json:"userMovieId,omitempty"`
}

func (x *MovieCreateRequest) Reset() {
	*x = MovieCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCreateRequest) ProtoMessage() {}

func (x *MovieCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCreateRequest.ProtoReflect.Descriptor instead.
func (*MovieCreateRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{276}
}

func (x *MovieCreateRequest) GetUserMovieId() string {
	if x != nil {
		return x.UserMovieId
	}
	return ""
}

type ProduceStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceGroupId          string                             `protobuf:"bytes,1,opt,name=produceGroupId,proto3" json:"produceGroupId,omitempty"`
	ProduceId               string                             `protobuf:"bytes,2,opt,name=produceId,proto3" json:"produceId,omitempty"`
	IdolCardId              string                             `protobuf:"bytes,3,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	SupportCards            []*ProduceStartRequest_SupportCard `protobuf:"bytes,4,rep,name=supportCards,proto3" json:"supportCards,omitempty"`
	Memories                []*ProduceStartRequest_Memory      `protobuf:"bytes,5,rep,name=memories,proto3" json:"memories,omitempty"`
	ProduceBoostItemIds     []string                           `protobuf:"bytes,6,rep,name=produceBoostItemIds,proto3" json:"produceBoostItemIds,omitempty"`
	IsChangeCostumeProduce  bool                               `protobuf:"varint,7,opt,name=isChangeCostumeProduce,proto3" json:"isChangeCostumeProduce,omitempty"`
	IsChangeCostumeLive     bool                               `protobuf:"varint,8,opt,name=isChangeCostumeLive,proto3" json:"isChangeCostumeLive,omitempty"`
	IsChangeCostumeTraining bool                               `protobuf:"varint,9,opt,name=isChangeCostumeTraining,proto3" json:"isChangeCostumeTraining,omitempty"`
	ClientProduceUuid       string                             `protobuf:"bytes,99,opt,name=clientProduceUuid,proto3" json:"clientProduceUuid,omitempty"`
}

func (x *ProduceStartRequest) Reset() {
	*x = ProduceStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStartRequest) ProtoMessage() {}

func (x *ProduceStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStartRequest.ProtoReflect.Descriptor instead.
func (*ProduceStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{277}
}

func (x *ProduceStartRequest) GetProduceGroupId() string {
	if x != nil {
		return x.ProduceGroupId
	}
	return ""
}

func (x *ProduceStartRequest) GetProduceId() string {
	if x != nil {
		return x.ProduceId
	}
	return ""
}

func (x *ProduceStartRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *ProduceStartRequest) GetSupportCards() []*ProduceStartRequest_SupportCard {
	if x != nil {
		return x.SupportCards
	}
	return nil
}

func (x *ProduceStartRequest) GetMemories() []*ProduceStartRequest_Memory {
	if x != nil {
		return x.Memories
	}
	return nil
}

func (x *ProduceStartRequest) GetProduceBoostItemIds() []string {
	if x != nil {
		return x.ProduceBoostItemIds
	}
	return nil
}

func (x *ProduceStartRequest) GetIsChangeCostumeProduce() bool {
	if x != nil {
		return x.IsChangeCostumeProduce
	}
	return false
}

func (x *ProduceStartRequest) GetIsChangeCostumeLive() bool {
	if x != nil {
		return x.IsChangeCostumeLive
	}
	return false
}

func (x *ProduceStartRequest) GetIsChangeCostumeTraining() bool {
	if x != nil {
		return x.IsChangeCostumeTraining
	}
	return false
}

func (x *ProduceStartRequest) GetClientProduceUuid() string {
	if x != nil {
		return x.ClientProduceUuid
	}
	return ""
}

type ProduceStepPresentStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepPresentStartResponse) Reset() {
	*x = ProduceStepPresentStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepPresentStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepPresentStartResponse) ProtoMessage() {}

func (x *ProduceStepPresentStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepPresentStartResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepPresentStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{278}
}

func (x *ProduceStepPresentStartResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepPresentStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List           []*GuildInfo         `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildSearchResponse) Reset() {
	*x = GuildSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildSearchResponse) ProtoMessage() {}

func (x *GuildSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildSearchResponse.ProtoReflect.Descriptor instead.
func (*GuildSearchResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{279}
}

func (x *GuildSearchResponse) GetList() []*GuildInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GuildSearchResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type HomeConfirmBanWarningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *HomeConfirmBanWarningResponse) Reset() {
	*x = HomeConfirmBanWarningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeConfirmBanWarningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeConfirmBanWarningResponse) ProtoMessage() {}

func (x *HomeConfirmBanWarningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeConfirmBanWarningResponse.ProtoReflect.Descriptor instead.
func (*HomeConfirmBanWarningResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{280}
}

func (x *HomeConfirmBanWarningResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MusicSendActionLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MusicSendActionLogResponse) Reset() {
	*x = MusicSendActionLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSendActionLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSendActionLogResponse) ProtoMessage() {}

func (x *MusicSendActionLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSendActionLogResponse.ProtoReflect.Descriptor instead.
func (*MusicSendActionLogResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{281}
}

func (x *MusicSendActionLogResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type WorkStopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *WorkStopResponse) Reset() {
	*x = WorkStopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStopResponse) ProtoMessage() {}

func (x *WorkStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStopResponse.ProtoReflect.Descriptor instead.
func (*WorkStopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{282}
}

func (x *WorkStopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepShopBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid          string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	PositionNumber       int32  `protobuf:"varint,2,opt,name=positionNumber,proto3" json:"positionNumber,omitempty"`
	DeckProduceCardIndex int32  `protobuf:"varint,3,opt,name=deckProduceCardIndex,proto3" json:"deckProduceCardIndex,omitempty"`
}

func (x *ProduceStepShopBuyRequest) Reset() {
	*x = ProduceStepShopBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepShopBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepShopBuyRequest) ProtoMessage() {}

func (x *ProduceStepShopBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepShopBuyRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepShopBuyRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{283}
}

func (x *ProduceStepShopBuyRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceStepShopBuyRequest) GetPositionNumber() int32 {
	if x != nil {
		return x.PositionNumber
	}
	return 0
}

func (x *ProduceStepShopBuyRequest) GetDeckProduceCardIndex() int32 {
	if x != nil {
		return x.DeckProduceCardIndex
	}
	return 0
}

type ExchangeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                    string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExchangeType            penum.ExchangeType `protobuf:"varint,3,opt,name=exchangeType,proto3,enum=penum.ExchangeType" json:"exchangeType,omitempty"`
	HeaderAssetId           string             `protobuf:"bytes,4,opt,name=headerAssetId,proto3" json:"headerAssetId,omitempty"`
	ThumbnailAssetId        string             `protobuf:"bytes,5,opt,name=thumbnailAssetId,proto3" json:"thumbnailAssetId,omitempty"`
	ThumbnailIconAssetId    string             `protobuf:"bytes,6,opt,name=thumbnailIconAssetId,proto3" json:"thumbnailIconAssetId,omitempty"`
	ConsumptionResourceType penum.ResourceType `protobuf:"varint,7,opt,name=consumptionResourceType,proto3,enum=penum.ResourceType" json:"consumptionResourceType,omitempty"`
	ConsumptionResourceId   string             `protobuf:"bytes,8,opt,name=consumptionResourceId,proto3" json:"consumptionResourceId,omitempty"`
	JewelConsumptionCountId string             `protobuf:"bytes,9,opt,name=jewelConsumptionCountId,proto3" json:"jewelConsumptionCountId,omitempty"`
	ResetJewelQuantity      int32              `protobuf:"varint,10,opt,name=resetJewelQuantity,proto3" json:"resetJewelQuantity,omitempty"`
	ManualResettable        bool               `protobuf:"varint,11,opt,name=manualResettable,proto3" json:"manualResettable,omitempty"`
	ResetCount              int32              `protobuf:"varint,12,opt,name=resetCount,proto3" json:"resetCount,omitempty"`
	UnlockConditionSetId    string             `protobuf:"bytes,13,opt,name=unlockConditionSetId,proto3" json:"unlockConditionSetId,omitempty"`
	Unlocked                bool               `protobuf:"varint,14,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Noti                    bool               `protobuf:"varint,15,opt,name=noti,proto3" json:"noti,omitempty"`
	StartTime               int64              `protobuf:"varint,16,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                 int64              `protobuf:"varint,17,opt,name=endTime,proto3" json:"endTime,omitempty"`
	NextResetTime           int64              `protobuf:"varint,18,opt,name=nextResetTime,proto3" json:"nextResetTime,omitempty"`
	Items                   []*ExchangeItem    `protobuf:"bytes,50,rep,name=items,proto3" json:"items,omitempty"`
	Order                   int32              `protobuf:"varint,99,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ExchangeInfo) Reset() {
	*x = ExchangeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeInfo) ProtoMessage() {}

func (x *ExchangeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeInfo.ProtoReflect.Descriptor instead.
func (*ExchangeInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{284}
}

func (x *ExchangeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExchangeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExchangeInfo) GetExchangeType() penum.ExchangeType {
	if x != nil {
		return x.ExchangeType
	}
	return penum.ExchangeType(0)
}

func (x *ExchangeInfo) GetHeaderAssetId() string {
	if x != nil {
		return x.HeaderAssetId
	}
	return ""
}

func (x *ExchangeInfo) GetThumbnailAssetId() string {
	if x != nil {
		return x.ThumbnailAssetId
	}
	return ""
}

func (x *ExchangeInfo) GetThumbnailIconAssetId() string {
	if x != nil {
		return x.ThumbnailIconAssetId
	}
	return ""
}

func (x *ExchangeInfo) GetConsumptionResourceType() penum.ResourceType {
	if x != nil {
		return x.ConsumptionResourceType
	}
	return penum.ResourceType(0)
}

func (x *ExchangeInfo) GetConsumptionResourceId() string {
	if x != nil {
		return x.ConsumptionResourceId
	}
	return ""
}

func (x *ExchangeInfo) GetJewelConsumptionCountId() string {
	if x != nil {
		return x.JewelConsumptionCountId
	}
	return ""
}

func (x *ExchangeInfo) GetResetJewelQuantity() int32 {
	if x != nil {
		return x.ResetJewelQuantity
	}
	return 0
}

func (x *ExchangeInfo) GetManualResettable() bool {
	if x != nil {
		return x.ManualResettable
	}
	return false
}

func (x *ExchangeInfo) GetResetCount() int32 {
	if x != nil {
		return x.ResetCount
	}
	return 0
}

func (x *ExchangeInfo) GetUnlockConditionSetId() string {
	if x != nil {
		return x.UnlockConditionSetId
	}
	return ""
}

func (x *ExchangeInfo) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *ExchangeInfo) GetNoti() bool {
	if x != nil {
		return x.Noti
	}
	return false
}

func (x *ExchangeInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ExchangeInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ExchangeInfo) GetNextResetTime() int64 {
	if x != nil {
		return x.NextResetTime
	}
	return 0
}

func (x *ExchangeInfo) GetItems() []*ExchangeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExchangeInfo) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId         string                    `protobuf:"bytes,1,opt,name=shopId,proto3" json:"shopId,omitempty"`
	Id             string                    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	PurchasedCount int32                     `protobuf:"varint,3,opt,name=purchasedCount,proto3" json:"purchasedCount,omitempty"`
	Unlocked       bool                      `protobuf:"varint,4,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Noti           bool                      `protobuf:"varint,5,opt,name=noti,proto3" json:"noti,omitempty"`
	LabelTypes     []penum.ShopItemLabelType `protobuf:"varint,6,rep,packed,name=labelTypes,proto3,enum=penum.ShopItemLabelType" json:"labelTypes,omitempty"`
	EndTime        int64                     `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	NextResetTime  int64                     `protobuf:"varint,8,opt,name=nextResetTime,proto3" json:"nextResetTime,omitempty"`
	Order          int32                     `protobuf:"varint,9,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ShopItem) Reset() {
	*x = ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopItem) ProtoMessage() {}

func (x *ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopItem.ProtoReflect.Descriptor instead.
func (*ShopItem) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{285}
}

func (x *ShopItem) GetShopId() string {
	if x != nil {
		return x.ShopId
	}
	return ""
}

func (x *ShopItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShopItem) GetPurchasedCount() int32 {
	if x != nil {
		return x.PurchasedCount
	}
	return 0
}

func (x *ShopItem) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *ShopItem) GetNoti() bool {
	if x != nil {
		return x.Noti
	}
	return false
}

func (x *ShopItem) GetLabelTypes() []penum.ShopItemLabelType {
	if x != nil {
		return x.LabelTypes
	}
	return nil
}

func (x *ShopItem) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ShopItem) GetNextResetTime() int64 {
	if x != nil {
		return x.NextResetTime
	}
	return 0
}

func (x *ShopItem) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type GashaDrawStepUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawResults     []*GashaDrawResult   `protobuf:"bytes,1,rep,name=drawResults,proto3" json:"drawResults,omitempty"`
	GashaButton     *pcommon.GashaButton `protobuf:"bytes,2,opt,name=gashaButton,proto3" json:"gashaButton,omitempty"`
	NextGashaStepUp *pcommon.GashaStepUp `protobuf:"bytes,3,opt,name=nextGashaStepUp,proto3" json:"nextGashaStepUp,omitempty"`
	BonusRewards    []*pcommon.Reward    `protobuf:"bytes,4,rep,name=bonusRewards,proto3" json:"bonusRewards,omitempty"`
	GashaPoint      *pcommon.GashaPoint  `protobuf:"bytes,5,opt,name=gashaPoint,proto3" json:"gashaPoint,omitempty"`
	CommonResponse  *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaDrawStepUpResponse) Reset() {
	*x = GashaDrawStepUpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaDrawStepUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaDrawStepUpResponse) ProtoMessage() {}

func (x *GashaDrawStepUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaDrawStepUpResponse.ProtoReflect.Descriptor instead.
func (*GashaDrawStepUpResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{286}
}

func (x *GashaDrawStepUpResponse) GetDrawResults() []*GashaDrawResult {
	if x != nil {
		return x.DrawResults
	}
	return nil
}

func (x *GashaDrawStepUpResponse) GetGashaButton() *pcommon.GashaButton {
	if x != nil {
		return x.GashaButton
	}
	return nil
}

func (x *GashaDrawStepUpResponse) GetNextGashaStepUp() *pcommon.GashaStepUp {
	if x != nil {
		return x.NextGashaStepUp
	}
	return nil
}

func (x *GashaDrawStepUpResponse) GetBonusRewards() []*pcommon.Reward {
	if x != nil {
		return x.BonusRewards
	}
	return nil
}

func (x *GashaDrawStepUpResponse) GetGashaPoint() *pcommon.GashaPoint {
	if x != nil {
		return x.GashaPoint
	}
	return nil
}

func (x *GashaDrawStepUpResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceViewPictureBookLiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceViewPictureBookLiveResponse) Reset() {
	*x = ProduceViewPictureBookLiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceViewPictureBookLiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceViewPictureBookLiveResponse) ProtoMessage() {}

func (x *ProduceViewPictureBookLiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceViewPictureBookLiveResponse.ProtoReflect.Descriptor instead.
func (*ProduceViewPictureBookLiveResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{287}
}

func (x *ProduceViewPictureBookLiveResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MusicSendBuyActionLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicId string `protobuf:"bytes,1,opt,name=musicId,proto3" json:"musicId,omitempty"`
}

func (x *MusicSendBuyActionLogRequest) Reset() {
	*x = MusicSendBuyActionLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSendBuyActionLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSendBuyActionLogRequest) ProtoMessage() {}

func (x *MusicSendBuyActionLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSendBuyActionLogRequest.ProtoReflect.Descriptor instead.
func (*MusicSendBuyActionLogRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{288}
}

func (x *MusicSendBuyActionLogRequest) GetMusicId() string {
	if x != nil {
		return x.MusicId
	}
	return ""
}

type GuildLeaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildLeaveResponse) Reset() {
	*x = GuildLeaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildLeaveResponse) ProtoMessage() {}

func (x *GuildLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildLeaveResponse.ProtoReflect.Descriptor instead.
func (*GuildLeaveResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{289}
}

func (x *GuildLeaveResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *MeishiDeleteRequest) Reset() {
	*x = MeishiDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[290]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiDeleteRequest) ProtoMessage() {}

func (x *MeishiDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[290]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiDeleteRequest.ProtoReflect.Descriptor instead.
func (*MeishiDeleteRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{290}
}

func (x *MeishiDeleteRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ProduceEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid          string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	UserMemoryId         string `protobuf:"bytes,2,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	IsDefaultImageMemory bool   `protobuf:"varint,3,opt,name=isDefaultImageMemory,proto3" json:"isDefaultImageMemory,omitempty"`
}

func (x *ProduceEndRequest) Reset() {
	*x = ProduceEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[291]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceEndRequest) ProtoMessage() {}

func (x *ProduceEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[291]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceEndRequest.ProtoReflect.Descriptor instead.
func (*ProduceEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{291}
}

func (x *ProduceEndRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceEndRequest) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *ProduceEndRequest) GetIsDefaultImageMemory() bool {
	if x != nil {
		return x.IsDefaultImageMemory
	}
	return false
}

type NoticeUpdateCategoryTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *NoticeUpdateCategoryTimeResponse) Reset() {
	*x = NoticeUpdateCategoryTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[292]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeUpdateCategoryTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeUpdateCategoryTimeResponse) ProtoMessage() {}

func (x *NoticeUpdateCategoryTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[292]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeUpdateCategoryTimeResponse.ProtoReflect.Descriptor instead.
func (*NoticeUpdateCategoryTimeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{292}
}

func (x *NoticeUpdateCategoryTimeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepLessonStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepLessonStartRequest) Reset() {
	*x = ProduceStepLessonStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[293]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepLessonStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepLessonStartRequest) ProtoMessage() {}

func (x *ProduceStepLessonStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[293]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepLessonStartRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepLessonStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{293}
}

func (x *ProduceStepLessonStartRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type ProduceStepAuditionEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryRewardResults []*pcommon.ProduceMemoryRewardResult `protobuf:"bytes,100,rep,name=memoryRewardResults,proto3" json:"memoryRewardResults,omitempty"`
	EffectResults       []*pcommon.ProduceEffectResult       `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse      *papicommon.Response                 `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepAuditionEndResponse) Reset() {
	*x = ProduceStepAuditionEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[294]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionEndResponse) ProtoMessage() {}

func (x *ProduceStepAuditionEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[294]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionEndResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{294}
}

func (x *ProduceStepAuditionEndResponse) GetMemoryRewardResults() []*pcommon.ProduceMemoryRewardResult {
	if x != nil {
		return x.MemoryRewardResults
	}
	return nil
}

func (x *ProduceStepAuditionEndResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepAuditionEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthLinkBandaiNamcoIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Force bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *AuthLinkBandaiNamcoIdRequest) Reset() {
	*x = AuthLinkBandaiNamcoIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[295]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLinkBandaiNamcoIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLinkBandaiNamcoIdRequest) ProtoMessage() {}

func (x *AuthLinkBandaiNamcoIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[295]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLinkBandaiNamcoIdRequest.ProtoReflect.Descriptor instead.
func (*AuthLinkBandaiNamcoIdRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{295}
}

func (x *AuthLinkBandaiNamcoIdRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthLinkBandaiNamcoIdRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type FriendListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendList     []*FriendInfo        `protobuf:"bytes,1,rep,name=friendList,proto3" json:"friendList,omitempty"`
	FollowerList   []*FriendInfo        `protobuf:"bytes,2,rep,name=followerList,proto3" json:"followerList,omitempty"`
	SuggestionList []*FriendInfo        `protobuf:"bytes,3,rep,name=suggestionList,proto3" json:"suggestionList,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *FriendListResponse) Reset() {
	*x = FriendListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[296]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListResponse) ProtoMessage() {}

func (x *FriendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[296]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListResponse.ProtoReflect.Descriptor instead.
func (*FriendListResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{296}
}

func (x *FriendListResponse) GetFriendList() []*FriendInfo {
	if x != nil {
		return x.FriendList
	}
	return nil
}

func (x *FriendListResponse) GetFollowerList() []*FriendInfo {
	if x != nil {
		return x.FollowerList
	}
	return nil
}

func (x *FriendListResponse) GetSuggestionList() []*FriendInfo {
	if x != nil {
		return x.SuggestionList
	}
	return nil
}

func (x *FriendListResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildRejectJoinRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildRejectJoinRequestResponse) Reset() {
	*x = GuildRejectJoinRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[297]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildRejectJoinRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRejectJoinRequestResponse) ProtoMessage() {}

func (x *GuildRejectJoinRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[297]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRejectJoinRequestResponse.ProtoReflect.Descriptor instead.
func (*GuildRejectJoinRequestResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{297}
}

func (x *GuildRejectJoinRequestResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CharacterCheckRosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId string `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
}

func (x *CharacterCheckRosterRequest) Reset() {
	*x = CharacterCheckRosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[298]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterCheckRosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterCheckRosterRequest) ProtoMessage() {}

func (x *CharacterCheckRosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[298]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterCheckRosterRequest.ProtoReflect.Descriptor instead.
func (*CharacterCheckRosterRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{298}
}

func (x *CharacterCheckRosterRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

type ProfileUpdateSupportCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProfileUpdateSupportCardResponse) Reset() {
	*x = ProfileUpdateSupportCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[299]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateSupportCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateSupportCardResponse) ProtoMessage() {}

func (x *ProfileUpdateSupportCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[299]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateSupportCardResponse.ProtoReflect.Descriptor instead.
func (*ProfileUpdateSupportCardResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{299}
}

func (x *ProfileUpdateSupportCardResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceReadDearnessStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFirst        bool                    `protobuf:"varint,1,opt,name=isFirst,proto3" json:"isFirst,omitempty"`
	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,2,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceReadDearnessStoryResponse) Reset() {
	*x = ProduceReadDearnessStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[300]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceReadDearnessStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceReadDearnessStoryResponse) ProtoMessage() {}

func (x *ProduceReadDearnessStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[300]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceReadDearnessStoryResponse.ProtoReflect.Descriptor instead.
func (*ProduceReadDearnessStoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{300}
}

func (x *ProduceReadDearnessStoryResponse) GetIsFirst() bool {
	if x != nil {
		return x.IsFirst
	}
	return false
}

func (x *ProduceReadDearnessStoryResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *ProduceReadDearnessStoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceReadAdvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceReadAdvResponse) Reset() {
	*x = ProduceReadAdvResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[301]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceReadAdvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceReadAdvResponse) ProtoMessage() {}

func (x *ProduceReadAdvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[301]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceReadAdvResponse.ProtoReflect.Descriptor instead.
func (*ProduceReadAdvResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{301}
}

func (x *ProduceReadAdvResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SupportCardProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCardId           string            `protobuf:"bytes,1,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	TenPermyriadProbability int32             `protobuf:"varint,2,opt,name=tenPermyriadProbability,proto3" json:"tenPermyriadProbability,omitempty"`
	Rewards                 []*pcommon.Reward `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"`
	IsPickup                bool              `protobuf:"varint,4,opt,name=isPickup,proto3" json:"isPickup,omitempty"`
}

func (x *SupportCardProbability) Reset() {
	*x = SupportCardProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[302]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardProbability) ProtoMessage() {}

func (x *SupportCardProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[302]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardProbability.ProtoReflect.Descriptor instead.
func (*SupportCardProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{302}
}

func (x *SupportCardProbability) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *SupportCardProbability) GetTenPermyriadProbability() int32 {
	if x != nil {
		return x.TenPermyriadProbability
	}
	return 0
}

func (x *SupportCardProbability) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *SupportCardProbability) GetIsPickup() bool {
	if x != nil {
		return x.IsPickup
	}
	return false
}

type GuildApplyJoinRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildApplyJoinRequestResponse) Reset() {
	*x = GuildApplyJoinRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[303]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildApplyJoinRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildApplyJoinRequestResponse) ProtoMessage() {}

func (x *GuildApplyJoinRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[303]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildApplyJoinRequestResponse.ProtoReflect.Descriptor instead.
func (*GuildApplyJoinRequestResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{303}
}

func (x *GuildApplyJoinRequestResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiUnfollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiUnfollowResponse) Reset() {
	*x = MeishiUnfollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[304]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiUnfollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiUnfollowResponse) ProtoMessage() {}

func (x *MeishiUnfollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[304]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiUnfollowResponse.ProtoReflect.Descriptor instead.
func (*MeishiUnfollowResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{304}
}

func (x *MeishiUnfollowResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gashas              []*pcommon.Gasha     `protobuf:"bytes,1,rep,name=gashas,proto3" json:"gashas,omitempty"`
	HasExpireGashaPoint bool                 `protobuf:"varint,2,opt,name=hasExpireGashaPoint,proto3" json:"hasExpireGashaPoint,omitempty"`
	CommonResponse      *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaListResponse) Reset() {
	*x = GashaListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[305]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaListResponse) ProtoMessage() {}

func (x *GashaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[305]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaListResponse.ProtoReflect.Descriptor instead.
func (*GashaListResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{305}
}

func (x *GashaListResponse) GetGashas() []*pcommon.Gasha {
	if x != nil {
		return x.Gashas
	}
	return nil
}

func (x *GashaListResponse) GetHasExpireGashaPoint() bool {
	if x != nil {
		return x.HasExpireGashaPoint
	}
	return false
}

func (x *GashaListResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiReportXPostMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *MeishiReportXPostMissionRequest) Reset() {
	*x = MeishiReportXPostMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[306]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiReportXPostMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiReportXPostMissionRequest) ProtoMessage() {}

func (x *MeishiReportXPostMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[306]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiReportXPostMissionRequest.ProtoReflect.Descriptor instead.
func (*MeishiReportXPostMissionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{306}
}

func (x *MeishiReportXPostMissionRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type PvpRateStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamBattleAutoRequest *pcommon.ExamBattleAutoRequest `protobuf:"bytes,1,opt,name=examBattleAutoRequest,proto3" json:"examBattleAutoRequest,omitempty"`
	SelfFormations        []*PvpRateUnitStageFormation   `protobuf:"bytes,2,rep,name=selfFormations,proto3" json:"selfFormations,omitempty"`
	Rival                 *PvpRateRival                  `protobuf:"bytes,3,opt,name=rival,proto3" json:"rival,omitempty"`
	CommonResponse        *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateStartResponse) Reset() {
	*x = PvpRateStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[307]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateStartResponse) ProtoMessage() {}

func (x *PvpRateStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[307]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateStartResponse.ProtoReflect.Descriptor instead.
func (*PvpRateStartResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{307}
}

func (x *PvpRateStartResponse) GetExamBattleAutoRequest() *pcommon.ExamBattleAutoRequest {
	if x != nil {
		return x.ExamBattleAutoRequest
	}
	return nil
}

func (x *PvpRateStartResponse) GetSelfFormations() []*PvpRateUnitStageFormation {
	if x != nil {
		return x.SelfFormations
	}
	return nil
}

func (x *PvpRateStartResponse) GetRival() *PvpRateRival {
	if x != nil {
		return x.Rival
	}
	return nil
}

func (x *PvpRateStartResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthPrepareMigrationBandaiNamcoIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AuthPrepareMigrationBandaiNamcoIdRequest) Reset() {
	*x = AuthPrepareMigrationBandaiNamcoIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[308]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPrepareMigrationBandaiNamcoIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPrepareMigrationBandaiNamcoIdRequest) ProtoMessage() {}

func (x *AuthPrepareMigrationBandaiNamcoIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[308]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPrepareMigrationBandaiNamcoIdRequest.ProtoReflect.Descriptor instead.
func (*AuthPrepareMigrationBandaiNamcoIdRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{308}
}

func (x *AuthPrepareMigrationBandaiNamcoIdRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ProduceCheckProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCurrentProduce      bool                 `protobuf:"varint,1,opt,name=isCurrentProduce,proto3" json:"isCurrentProduce,omitempty"`
	NeedForceReset        bool                 `protobuf:"varint,2,opt,name=needForceReset,proto3" json:"needForceReset,omitempty"`
	ForceResetDescription string               `protobuf:"bytes,3,opt,name=forceResetDescription,proto3" json:"forceResetDescription,omitempty"`
	ProduceUuid           string               `protobuf:"bytes,4,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	CommonResponse        *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceCheckProgressResponse) Reset() {
	*x = ProduceCheckProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[309]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceCheckProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceCheckProgressResponse) ProtoMessage() {}

func (x *ProduceCheckProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[309]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceCheckProgressResponse.ProtoReflect.Descriptor instead.
func (*ProduceCheckProgressResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{309}
}

func (x *ProduceCheckProgressResponse) GetIsCurrentProduce() bool {
	if x != nil {
		return x.IsCurrentProduce
	}
	return false
}

func (x *ProduceCheckProgressResponse) GetNeedForceReset() bool {
	if x != nil {
		return x.NeedForceReset
	}
	return false
}

func (x *ProduceCheckProgressResponse) GetForceResetDescription() string {
	if x != nil {
		return x.ForceResetDescription
	}
	return ""
}

func (x *ProduceCheckProgressResponse) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceCheckProgressResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SupportCardExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *SupportCardExchangeResponse) Reset() {
	*x = SupportCardExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[310]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardExchangeResponse) ProtoMessage() {}

func (x *SupportCardExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[310]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardExchangeResponse.ProtoReflect.Descriptor instead.
func (*SupportCardExchangeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{310}
}

func (x *SupportCardExchangeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type FriendDeleteFollowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *FriendDeleteFollowerResponse) Reset() {
	*x = FriendDeleteFollowerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[311]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendDeleteFollowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendDeleteFollowerResponse) ProtoMessage() {}

func (x *FriendDeleteFollowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[311]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendDeleteFollowerResponse.ProtoReflect.Descriptor instead.
func (*FriendDeleteFollowerResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{311}
}

func (x *FriendDeleteFollowerResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaExchangePointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaPoint     *pcommon.GashaPoint  `protobuf:"bytes,1,opt,name=gashaPoint,proto3" json:"gashaPoint,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaExchangePointResponse) Reset() {
	*x = GashaExchangePointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[312]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaExchangePointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaExchangePointResponse) ProtoMessage() {}

func (x *GashaExchangePointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[312]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaExchangePointResponse.ProtoReflect.Descriptor instead.
func (*GashaExchangePointResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{312}
}

func (x *GashaExchangePointResponse) GetGashaPoint() *pcommon.GashaPoint {
	if x != nil {
		return x.GashaPoint
	}
	return nil
}

func (x *GashaExchangePointResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type DonationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId        string               `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	GuildDonationItemId string               `protobuf:"bytes,2,opt,name=guildDonationItemId,proto3" json:"guildDonationItemId,omitempty"`
	EndTime             int64                `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	DonationList        []*GuildDonationInfo `protobuf:"bytes,4,rep,name=donationList,proto3" json:"donationList,omitempty"`
	ReceivableCount     int32                `protobuf:"varint,5,opt,name=receivableCount,proto3" json:"receivableCount,omitempty"`
}

func (x *DonationRequest) Reset() {
	*x = DonationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[313]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonationRequest) ProtoMessage() {}

func (x *DonationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[313]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonationRequest.ProtoReflect.Descriptor instead.
func (*DonationRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{313}
}

func (x *DonationRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *DonationRequest) GetGuildDonationItemId() string {
	if x != nil {
		return x.GuildDonationItemId
	}
	return ""
}

func (x *DonationRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DonationRequest) GetDonationList() []*GuildDonationInfo {
	if x != nil {
		return x.DonationList
	}
	return nil
}

func (x *DonationRequest) GetReceivableCount() int32 {
	if x != nil {
		return x.ReceivableCount
	}
	return 0
}

type ShopRecoverPurchaseJewelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId               string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Receipt                 string `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	Signature               string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	CurrencyCode            string `protobuf:"bytes,4,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	LocalizedPricePermyriad int64  `protobuf:"varint,5,opt,name=localizedPricePermyriad,proto3" json:"localizedPricePermyriad,omitempty"`
	StoreTransactionId      string `protobuf:"bytes,6,opt,name=storeTransactionId,proto3" json:"storeTransactionId,omitempty"`
}

func (x *ShopRecoverPurchaseJewelRequest) Reset() {
	*x = ShopRecoverPurchaseJewelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[314]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRecoverPurchaseJewelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRecoverPurchaseJewelRequest) ProtoMessage() {}

func (x *ShopRecoverPurchaseJewelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[314]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRecoverPurchaseJewelRequest.ProtoReflect.Descriptor instead.
func (*ShopRecoverPurchaseJewelRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{314}
}

func (x *ShopRecoverPurchaseJewelRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ShopRecoverPurchaseJewelRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

func (x *ShopRecoverPurchaseJewelRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ShopRecoverPurchaseJewelRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *ShopRecoverPurchaseJewelRequest) GetLocalizedPricePermyriad() int64 {
	if x != nil {
		return x.LocalizedPricePermyriad
	}
	return 0
}

func (x *ShopRecoverPurchaseJewelRequest) GetStoreTransactionId() string {
	if x != nil {
		return x.StoreTransactionId
	}
	return ""
}

type ExchangeGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange       *ExchangeInfo        `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ExchangeGetResponse) Reset() {
	*x = ExchangeGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[315]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeGetResponse) ProtoMessage() {}

func (x *ExchangeGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[315]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeGetResponse.ProtoReflect.Descriptor instead.
func (*ExchangeGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{315}
}

func (x *ExchangeGetResponse) GetExchange() *ExchangeInfo {
	if x != nil {
		return x.Exchange
	}
	return nil
}

func (x *ExchangeGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SupportCardUpgradeLevelLimitRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *SupportCardUpgradeLevelLimitRankResponse) Reset() {
	*x = SupportCardUpgradeLevelLimitRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[316]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardUpgradeLevelLimitRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardUpgradeLevelLimitRankResponse) ProtoMessage() {}

func (x *SupportCardUpgradeLevelLimitRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[316]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardUpgradeLevelLimitRankResponse.ProtoReflect.Descriptor instead.
func (*SupportCardUpgradeLevelLimitRankResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{316}
}

func (x *SupportCardUpgradeLevelLimitRankResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthPrepareMigrationBandaiNamcoIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId  string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
	UserName      string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	ProducerLevel int32  `protobuf:"varint,3,opt,name=producerLevel,proto3" json:"producerLevel,omitempty"`
	OnetimeToken  string `protobuf:"bytes,4,opt,name=onetimeToken,proto3" json:"onetimeToken,omitempty"`
}

func (x *AuthPrepareMigrationBandaiNamcoIdResponse) Reset() {
	*x = AuthPrepareMigrationBandaiNamcoIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[317]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPrepareMigrationBandaiNamcoIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPrepareMigrationBandaiNamcoIdResponse) ProtoMessage() {}

func (x *AuthPrepareMigrationBandaiNamcoIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[317]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPrepareMigrationBandaiNamcoIdResponse.ProtoReflect.Descriptor instead.
func (*AuthPrepareMigrationBandaiNamcoIdResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{317}
}

func (x *AuthPrepareMigrationBandaiNamcoIdResponse) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

func (x *AuthPrepareMigrationBandaiNamcoIdResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AuthPrepareMigrationBandaiNamcoIdResponse) GetProducerLevel() int32 {
	if x != nil {
		return x.ProducerLevel
	}
	return 0
}

func (x *AuthPrepareMigrationBandaiNamcoIdResponse) GetOnetimeToken() string {
	if x != nil {
		return x.OnetimeToken
	}
	return ""
}

type ProduceUseDrinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
}

func (x *ProduceUseDrinkResponse) Reset() {
	*x = ProduceUseDrinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[318]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceUseDrinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceUseDrinkResponse) ProtoMessage() {}

func (x *ProduceUseDrinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[318]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceUseDrinkResponse.ProtoReflect.Descriptor instead.
func (*ProduceUseDrinkResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{318}
}

func (x *ProduceUseDrinkResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

type SupportCardEnhanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *SupportCardEnhanceResponse) Reset() {
	*x = SupportCardEnhanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[319]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardEnhanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardEnhanceResponse) ProtoMessage() {}

func (x *SupportCardEnhanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[319]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardEnhanceResponse.ProtoReflect.Descriptor instead.
func (*SupportCardEnhanceResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{319}
}

func (x *SupportCardEnhanceResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopCheckPurchaseJewelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BirthdayNotRegistered   bool                 `protobuf:"varint,1,opt,name=birthdayNotRegistered,proto3" json:"birthdayNotRegistered,omitempty"`
	ExceedMaxJewelQuantity  bool                 `protobuf:"varint,2,opt,name=exceedMaxJewelQuantity,proto3" json:"exceedMaxJewelQuantity,omitempty"`
	ExceedPurchaseThreshold bool                 `protobuf:"varint,3,opt,name=exceedPurchaseThreshold,proto3" json:"exceedPurchaseThreshold,omitempty"`
	ExceedAlertThreshold    bool                 `protobuf:"varint,4,opt,name=exceedAlertThreshold,proto3" json:"exceedAlertThreshold,omitempty"`
	IsUnderage              bool                 `protobuf:"varint,5,opt,name=isUnderage,proto3" json:"isUnderage,omitempty"`
	CommonResponse          *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopCheckPurchaseJewelResponse) Reset() {
	*x = ShopCheckPurchaseJewelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[320]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopCheckPurchaseJewelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopCheckPurchaseJewelResponse) ProtoMessage() {}

func (x *ShopCheckPurchaseJewelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[320]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopCheckPurchaseJewelResponse.ProtoReflect.Descriptor instead.
func (*ShopCheckPurchaseJewelResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{320}
}

func (x *ShopCheckPurchaseJewelResponse) GetBirthdayNotRegistered() bool {
	if x != nil {
		return x.BirthdayNotRegistered
	}
	return false
}

func (x *ShopCheckPurchaseJewelResponse) GetExceedMaxJewelQuantity() bool {
	if x != nil {
		return x.ExceedMaxJewelQuantity
	}
	return false
}

func (x *ShopCheckPurchaseJewelResponse) GetExceedPurchaseThreshold() bool {
	if x != nil {
		return x.ExceedPurchaseThreshold
	}
	return false
}

func (x *ShopCheckPurchaseJewelResponse) GetExceedAlertThreshold() bool {
	if x != nil {
		return x.ExceedAlertThreshold
	}
	return false
}

func (x *ShopCheckPurchaseJewelResponse) GetIsUnderage() bool {
	if x != nil {
		return x.IsUnderage
	}
	return false
}

func (x *ShopCheckPurchaseJewelResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type WorkSkipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinishResult   *WorkFinishResult    `protobuf:"bytes,1,opt,name=finishResult,proto3" json:"finishResult,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *WorkSkipResponse) Reset() {
	*x = WorkSkipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[321]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkSkipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSkipResponse) ProtoMessage() {}

func (x *WorkSkipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[321]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSkipResponse.ProtoReflect.Descriptor instead.
func (*WorkSkipResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{321}
}

func (x *WorkSkipResponse) GetFinishResult() *WorkFinishResult {
	if x != nil {
		return x.FinishResult
	}
	return nil
}

func (x *WorkSkipResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type IdolCardReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardId string `protobuf:"bytes,1,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
}

func (x *IdolCardReleaseRequest) Reset() {
	*x = IdolCardReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[322]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardReleaseRequest) ProtoMessage() {}

func (x *IdolCardReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[322]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardReleaseRequest.ProtoReflect.Descriptor instead.
func (*IdolCardReleaseRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{322}
}

func (x *IdolCardReleaseRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

type AuthMigrateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnetimeToken string `protobuf:"bytes,1,opt,name=onetimeToken,proto3" json:"onetimeToken,omitempty"`
	PublicUserId string `protobuf:"bytes,2,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *AuthMigrateRequest) Reset() {
	*x = AuthMigrateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[323]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthMigrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMigrateRequest) ProtoMessage() {}

func (x *AuthMigrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[323]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthMigrateRequest.ProtoReflect.Descriptor instead.
func (*AuthMigrateRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{323}
}

func (x *AuthMigrateRequest) GetOnetimeToken() string {
	if x != nil {
		return x.OnetimeToken
	}
	return ""
}

func (x *AuthMigrateRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type MeishiListFollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Follows        []*MeishiListFollowResponse_Follow `protobuf:"bytes,1,rep,name=follows,proto3" json:"follows,omitempty"`
	CommonResponse *papicommon.Response               `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiListFollowResponse) Reset() {
	*x = MeishiListFollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[324]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiListFollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiListFollowResponse) ProtoMessage() {}

func (x *MeishiListFollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[324]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiListFollowResponse.ProtoReflect.Descriptor instead.
func (*MeishiListFollowResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{324}
}

func (x *MeishiListFollowResponse) GetFollows() []*MeishiListFollowResponse_Follow {
	if x != nil {
		return x.Follows
	}
	return nil
}

func (x *MeishiListFollowResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SeminarEndExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *SeminarEndExamResponse) Reset() {
	*x = SeminarEndExamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[325]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarEndExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarEndExamResponse) ProtoMessage() {}

func (x *SeminarEndExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[325]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarEndExamResponse.ProtoReflect.Descriptor instead.
func (*SeminarEndExamResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{325}
}

func (x *SeminarEndExamResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type HomeListEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events         []*pcommon.Event     `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *HomeListEventResponse) Reset() {
	*x = HomeListEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[326]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeListEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeListEventResponse) ProtoMessage() {}

func (x *HomeListEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[326]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeListEventResponse.ProtoReflect.Descriptor instead.
func (*HomeListEventResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{326}
}

func (x *HomeListEventResponse) GetEvents() []*pcommon.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *HomeListEventResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type FriendUnFollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *FriendUnFollowResponse) Reset() {
	*x = FriendUnFollowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[327]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendUnFollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendUnFollowResponse) ProtoMessage() {}

func (x *FriendUnFollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[327]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendUnFollowResponse.ProtoReflect.Descriptor instead.
func (*FriendUnFollowResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{327}
}

func (x *FriendUnFollowResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaProbability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaRarityProbabilities       []*GashaRarityProbability       `protobuf:"bytes,1,rep,name=gashaRarityProbabilities,proto3" json:"gashaRarityProbabilities,omitempty"`
	IdolCardRarityProbabilities    []*IdolCardRarityProbability    `protobuf:"bytes,2,rep,name=idolCardRarityProbabilities,proto3" json:"idolCardRarityProbabilities,omitempty"`
	SupportCardRarityProbabilities []*SupportCardRarityProbability `protobuf:"bytes,3,rep,name=supportCardRarityProbabilities,proto3" json:"supportCardRarityProbabilities,omitempty"`
}

func (x *GashaProbability) Reset() {
	*x = GashaProbability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[328]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaProbability) ProtoMessage() {}

func (x *GashaProbability) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[328]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaProbability.ProtoReflect.Descriptor instead.
func (*GashaProbability) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{328}
}

func (x *GashaProbability) GetGashaRarityProbabilities() []*GashaRarityProbability {
	if x != nil {
		return x.GashaRarityProbabilities
	}
	return nil
}

func (x *GashaProbability) GetIdolCardRarityProbabilities() []*IdolCardRarityProbability {
	if x != nil {
		return x.IdolCardRarityProbabilities
	}
	return nil
}

func (x *GashaProbability) GetSupportCardRarityProbabilities() []*SupportCardRarityProbability {
	if x != nil {
		return x.SupportCardRarityProbabilities
	}
	return nil
}

type StoryReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *StoryReadResponse) Reset() {
	*x = StoryReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[329]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryReadResponse) ProtoMessage() {}

func (x *StoryReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[329]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryReadResponse.ProtoReflect.Descriptor instead.
func (*StoryReadResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{329}
}

func (x *StoryReadResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *StoryReadResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CoinGashaDrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawResults            []*CoinGashaDrawResult  `protobuf:"bytes,1,rep,name=drawResults,proto3" json:"drawResults,omitempty"`
	DrawCountRewardResults []*pcommon.RewardResult `protobuf:"bytes,3,rep,name=drawCountRewardResults,proto3" json:"drawCountRewardResults,omitempty"`
	CoinGasha              *pcommon.CoinGasha      `protobuf:"bytes,2,opt,name=coinGasha,proto3" json:"coinGasha,omitempty"`
	CommonResponse         *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *CoinGashaDrawResponse) Reset() {
	*x = CoinGashaDrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[330]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaDrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaDrawResponse) ProtoMessage() {}

func (x *CoinGashaDrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[330]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaDrawResponse.ProtoReflect.Descriptor instead.
func (*CoinGashaDrawResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{330}
}

func (x *CoinGashaDrawResponse) GetDrawResults() []*CoinGashaDrawResult {
	if x != nil {
		return x.DrawResults
	}
	return nil
}

func (x *CoinGashaDrawResponse) GetDrawCountRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.DrawCountRewardResults
	}
	return nil
}

func (x *CoinGashaDrawResponse) GetCoinGasha() *pcommon.CoinGasha {
	if x != nil {
		return x.CoinGasha
	}
	return nil
}

func (x *CoinGashaDrawResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type FriendDeleteFollowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserIds []string `protobuf:"bytes,1,rep,name=publicUserIds,proto3" json:"publicUserIds,omitempty"`
}

func (x *FriendDeleteFollowerRequest) Reset() {
	*x = FriendDeleteFollowerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[331]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendDeleteFollowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendDeleteFollowerRequest) ProtoMessage() {}

func (x *FriendDeleteFollowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[331]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendDeleteFollowerRequest.ProtoReflect.Descriptor instead.
func (*FriendDeleteFollowerRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{331}
}

func (x *FriendDeleteFollowerRequest) GetPublicUserIds() []string {
	if x != nil {
		return x.PublicUserIds
	}
	return nil
}

type InvitationListInviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List           []*InviteUser        `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *InvitationListInviteUserResponse) Reset() {
	*x = InvitationListInviteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[332]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationListInviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationListInviteUserResponse) ProtoMessage() {}

func (x *InvitationListInviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[332]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationListInviteUserResponse.ProtoReflect.Descriptor instead.
func (*InvitationListInviteUserResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{332}
}

func (x *InvitationListInviteUserResponse) GetList() []*InviteUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *InvitationListInviteUserResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiDeleteResponse) Reset() {
	*x = MeishiDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[333]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiDeleteResponse) ProtoMessage() {}

func (x *MeishiDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[333]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiDeleteResponse.ProtoReflect.Descriptor instead.
func (*MeishiDeleteResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{333}
}

func (x *MeishiDeleteResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiSetResponse) Reset() {
	*x = MeishiSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[334]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiSetResponse) ProtoMessage() {}

func (x *MeishiSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[334]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiSetResponse.ProtoReflect.Descriptor instead.
func (*MeishiSetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{334}
}

func (x *MeishiSetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MissionExchangePassPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MissionExchangePassPointResponse) Reset() {
	*x = MissionExchangePassPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[335]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionExchangePassPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionExchangePassPointResponse) ProtoMessage() {}

func (x *MissionExchangePassPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[335]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionExchangePassPointResponse.ProtoReflect.Descriptor instead.
func (*MissionExchangePassPointResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{335}
}

func (x *MissionExchangePassPointResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PvpRateGetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayTime int64 `protobuf:"varint,1,opt,name=playTime,proto3" json:"playTime,omitempty"`
}

func (x *PvpRateGetHistoryRequest) Reset() {
	*x = PvpRateGetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[336]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateGetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateGetHistoryRequest) ProtoMessage() {}

func (x *PvpRateGetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[336]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateGetHistoryRequest.ProtoReflect.Descriptor instead.
func (*PvpRateGetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{336}
}

func (x *PvpRateGetHistoryRequest) GetPlayTime() int64 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

type GashaGetSelectPickupProbabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
}

func (x *GashaGetSelectPickupProbabilityRequest) Reset() {
	*x = GashaGetSelectPickupProbabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[337]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetSelectPickupProbabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetSelectPickupProbabilityRequest) ProtoMessage() {}

func (x *GashaGetSelectPickupProbabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[337]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetSelectPickupProbabilityRequest.ProtoReflect.Descriptor instead.
func (*GashaGetSelectPickupProbabilityRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{337}
}

func (x *GashaGetSelectPickupProbabilityRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

type GiftOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGiftIds []string `protobuf:"bytes,1,rep,name=userGiftIds,proto3" json:"userGiftIds,omitempty"`
}

func (x *GiftOpenRequest) Reset() {
	*x = GiftOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[338]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftOpenRequest) ProtoMessage() {}

func (x *GiftOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[338]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftOpenRequest.ProtoReflect.Descriptor instead.
func (*GiftOpenRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{338}
}

func (x *GiftOpenRequest) GetUserGiftIds() []string {
	if x != nil {
		return x.UserGiftIds
	}
	return nil
}

type GuildDissolveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildDissolveResponse) Reset() {
	*x = GuildDissolveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[339]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDissolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDissolveResponse) ProtoMessage() {}

func (x *GuildDissolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[339]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDissolveResponse.ProtoReflect.Descriptor instead.
func (*GuildDissolveResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{339}
}

func (x *GuildDissolveResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type InvitationEnterInvitationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *InvitationEnterInvitationCodeResponse) Reset() {
	*x = InvitationEnterInvitationCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[340]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationEnterInvitationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationEnterInvitationCodeResponse) ProtoMessage() {}

func (x *InvitationEnterInvitationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[340]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationEnterInvitationCodeResponse.ProtoReflect.Descriptor instead.
func (*InvitationEnterInvitationCodeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{340}
}

func (x *InvitationEnterInvitationCodeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepRefreshResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeforeStamina  int32                          `protobuf:"varint,1,opt,name=beforeStamina,proto3" json:"beforeStamina,omitempty"`
	AfterStamina   int32                          `protobuf:"varint,2,opt,name=afterStamina,proto3" json:"afterStamina,omitempty"`
	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepRefreshResponse) Reset() {
	*x = ProduceStepRefreshResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[341]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepRefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepRefreshResponse) ProtoMessage() {}

func (x *ProduceStepRefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[341]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepRefreshResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepRefreshResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{341}
}

func (x *ProduceStepRefreshResponse) GetBeforeStamina() int32 {
	if x != nil {
		return x.BeforeStamina
	}
	return 0
}

func (x *ProduceStepRefreshResponse) GetAfterStamina() int32 {
	if x != nil {
		return x.AfterStamina
	}
	return 0
}

func (x *ProduceStepRefreshResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepRefreshResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PvpRatePlayTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamBattleAutoRequest *pcommon.ExamBattleAutoRequest `protobuf:"bytes,1,opt,name=examBattleAutoRequest,proto3" json:"examBattleAutoRequest,omitempty"`
	SelfFormations        []*PvpRateUnitStageFormation   `protobuf:"bytes,2,rep,name=selfFormations,proto3" json:"selfFormations,omitempty"`
	CommonResponse        *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRatePlayTestResponse) Reset() {
	*x = PvpRatePlayTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[342]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRatePlayTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRatePlayTestResponse) ProtoMessage() {}

func (x *PvpRatePlayTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[342]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRatePlayTestResponse.ProtoReflect.Descriptor instead.
func (*PvpRatePlayTestResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{342}
}

func (x *PvpRatePlayTestResponse) GetExamBattleAutoRequest() *pcommon.ExamBattleAutoRequest {
	if x != nil {
		return x.ExamBattleAutoRequest
	}
	return nil
}

func (x *PvpRatePlayTestResponse) GetSelfFormations() []*PvpRateUnitStageFormation {
	if x != nil {
		return x.SelfFormations
	}
	return nil
}

func (x *PvpRatePlayTestResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopRecoverPurchaseJewelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopRecoverPurchaseJewelResponse) Reset() {
	*x = ShopRecoverPurchaseJewelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[343]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRecoverPurchaseJewelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRecoverPurchaseJewelResponse) ProtoMessage() {}

func (x *ShopRecoverPurchaseJewelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[343]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRecoverPurchaseJewelResponse.ProtoReflect.Descriptor instead.
func (*ShopRecoverPurchaseJewelResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{343}
}

func (x *ShopRecoverPurchaseJewelResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *ShopRecoverPurchaseJewelResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type StoryEventTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                      string                           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	TitleAssetId               string                           `protobuf:"bytes,2,opt,name=titleAssetId,proto3" json:"titleAssetId,omitempty"`
	GradationColor1            string                           `protobuf:"bytes,3,opt,name=gradationColor1,proto3" json:"gradationColor1,omitempty"`
	GradationColor2            string                           `protobuf:"bytes,4,opt,name=gradationColor2,proto3" json:"gradationColor2,omitempty"`
	BackgroundAssetId          string                           `protobuf:"bytes,5,opt,name=backgroundAssetId,proto3" json:"backgroundAssetId,omitempty"`
	SceneLayoutId              string                           `protobuf:"bytes,6,opt,name=sceneLayoutId,proto3" json:"sceneLayoutId,omitempty"`
	SceneLayoutCollectionId    string                           `protobuf:"bytes,7,opt,name=sceneLayoutCollectionId,proto3" json:"sceneLayoutCollectionId,omitempty"`
	BgmAssetId                 string                           `protobuf:"bytes,8,opt,name=bgmAssetId,proto3" json:"bgmAssetId,omitempty"`
	PointRewardBannerAssetId   string                           `protobuf:"bytes,23,opt,name=pointRewardBannerAssetId,proto3" json:"pointRewardBannerAssetId,omitempty"`
	Motions                    []*StoryEventTopResponse_Motion  `protobuf:"bytes,9,rep,name=motions,proto3" json:"motions,omitempty"`
	StoryEventType             penum.StoryEventType             `protobuf:"varint,10,opt,name=storyEventType,proto3,enum=penum.StoryEventType" json:"storyEventType,omitempty"`
	StoryEventBonus            *pcommon.StoryEventBonus         `protobuf:"bytes,11,opt,name=storyEventBonus,proto3" json:"storyEventBonus,omitempty"`
	StoryGroupId               string                           `protobuf:"bytes,12,opt,name=storyGroupId,proto3" json:"storyGroupId,omitempty"`
	MissionGroupId             string                           `protobuf:"bytes,13,opt,name=missionGroupId,proto3" json:"missionGroupId,omitempty"`
	DailyMissionGroupId        string                           `protobuf:"bytes,14,opt,name=dailyMissionGroupId,proto3" json:"dailyMissionGroupId,omitempty"`
	MissionDailyReleaseGroupId string                           `protobuf:"bytes,15,opt,name=missionDailyReleaseGroupId,proto3" json:"missionDailyReleaseGroupId,omitempty"`
	StorySynopsis              string                           `protobuf:"bytes,24,opt,name=storySynopsis,proto3" json:"storySynopsis,omitempty"`
	ExchangeId                 string                           `protobuf:"bytes,16,opt,name=exchangeId,proto3" json:"exchangeId,omitempty"`
	BoxGasha                   *pcommon.CoinGasha               `protobuf:"bytes,17,opt,name=boxGasha,proto3" json:"boxGasha,omitempty"`
	IdolCardSkinBeforeAssetId  string                           `protobuf:"bytes,18,opt,name=idolCardSkinBeforeAssetId,proto3" json:"idolCardSkinBeforeAssetId,omitempty"`
	IdolCardSkinAfterAssetId   string                           `protobuf:"bytes,19,opt,name=idolCardSkinAfterAssetId,proto3" json:"idolCardSkinAfterAssetId,omitempty"`
	MaxIdolCardPotentialRank   penum.IdolCardPotentialRank      `protobuf:"varint,25,opt,name=maxIdolCardPotentialRank,proto3,enum=penum.IdolCardPotentialRank" json:"maxIdolCardPotentialRank,omitempty"`
	ConsumptionItemId          string                           `protobuf:"bytes,20,opt,name=consumptionItemId,proto3" json:"consumptionItemId,omitempty"`
	StoryEventPointRewards     []*pcommon.StoryEventPointReward `protobuf:"bytes,21,rep,name=storyEventPointRewards,proto3" json:"storyEventPointRewards,omitempty"`
	CurrentPoint               int64                            `protobuf:"varint,22,opt,name=currentPoint,proto3" json:"currentPoint,omitempty"`
	StartupNotifications       []*pcommon.StartupNotification   `protobuf:"bytes,50,rep,name=startupNotifications,proto3" json:"startupNotifications,omitempty"`
	StartTime                  int64                            `protobuf:"varint,101,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                    int64                            `protobuf:"varint,102,opt,name=endTime,proto3" json:"endTime,omitempty"`
	CloseTime                  int64                            `protobuf:"varint,103,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	CommonResponse             *papicommon.Response             `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *StoryEventTopResponse) Reset() {
	*x = StoryEventTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[344]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryEventTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventTopResponse) ProtoMessage() {}

func (x *StoryEventTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[344]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventTopResponse.ProtoReflect.Descriptor instead.
func (*StoryEventTopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{344}
}

func (x *StoryEventTopResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StoryEventTopResponse) GetTitleAssetId() string {
	if x != nil {
		return x.TitleAssetId
	}
	return ""
}

func (x *StoryEventTopResponse) GetGradationColor1() string {
	if x != nil {
		return x.GradationColor1
	}
	return ""
}

func (x *StoryEventTopResponse) GetGradationColor2() string {
	if x != nil {
		return x.GradationColor2
	}
	return ""
}

func (x *StoryEventTopResponse) GetBackgroundAssetId() string {
	if x != nil {
		return x.BackgroundAssetId
	}
	return ""
}

func (x *StoryEventTopResponse) GetSceneLayoutId() string {
	if x != nil {
		return x.SceneLayoutId
	}
	return ""
}

func (x *StoryEventTopResponse) GetSceneLayoutCollectionId() string {
	if x != nil {
		return x.SceneLayoutCollectionId
	}
	return ""
}

func (x *StoryEventTopResponse) GetBgmAssetId() string {
	if x != nil {
		return x.BgmAssetId
	}
	return ""
}

func (x *StoryEventTopResponse) GetPointRewardBannerAssetId() string {
	if x != nil {
		return x.PointRewardBannerAssetId
	}
	return ""
}

func (x *StoryEventTopResponse) GetMotions() []*StoryEventTopResponse_Motion {
	if x != nil {
		return x.Motions
	}
	return nil
}

func (x *StoryEventTopResponse) GetStoryEventType() penum.StoryEventType {
	if x != nil {
		return x.StoryEventType
	}
	return penum.StoryEventType(0)
}

func (x *StoryEventTopResponse) GetStoryEventBonus() *pcommon.StoryEventBonus {
	if x != nil {
		return x.StoryEventBonus
	}
	return nil
}

func (x *StoryEventTopResponse) GetStoryGroupId() string {
	if x != nil {
		return x.StoryGroupId
	}
	return ""
}

func (x *StoryEventTopResponse) GetMissionGroupId() string {
	if x != nil {
		return x.MissionGroupId
	}
	return ""
}

func (x *StoryEventTopResponse) GetDailyMissionGroupId() string {
	if x != nil {
		return x.DailyMissionGroupId
	}
	return ""
}

func (x *StoryEventTopResponse) GetMissionDailyReleaseGroupId() string {
	if x != nil {
		return x.MissionDailyReleaseGroupId
	}
	return ""
}

func (x *StoryEventTopResponse) GetStorySynopsis() string {
	if x != nil {
		return x.StorySynopsis
	}
	return ""
}

func (x *StoryEventTopResponse) GetExchangeId() string {
	if x != nil {
		return x.ExchangeId
	}
	return ""
}

func (x *StoryEventTopResponse) GetBoxGasha() *pcommon.CoinGasha {
	if x != nil {
		return x.BoxGasha
	}
	return nil
}

func (x *StoryEventTopResponse) GetIdolCardSkinBeforeAssetId() string {
	if x != nil {
		return x.IdolCardSkinBeforeAssetId
	}
	return ""
}

func (x *StoryEventTopResponse) GetIdolCardSkinAfterAssetId() string {
	if x != nil {
		return x.IdolCardSkinAfterAssetId
	}
	return ""
}

func (x *StoryEventTopResponse) GetMaxIdolCardPotentialRank() penum.IdolCardPotentialRank {
	if x != nil {
		return x.MaxIdolCardPotentialRank
	}
	return penum.IdolCardPotentialRank(0)
}

func (x *StoryEventTopResponse) GetConsumptionItemId() string {
	if x != nil {
		return x.ConsumptionItemId
	}
	return ""
}

func (x *StoryEventTopResponse) GetStoryEventPointRewards() []*pcommon.StoryEventPointReward {
	if x != nil {
		return x.StoryEventPointRewards
	}
	return nil
}

func (x *StoryEventTopResponse) GetCurrentPoint() int64 {
	if x != nil {
		return x.CurrentPoint
	}
	return 0
}

func (x *StoryEventTopResponse) GetStartupNotifications() []*pcommon.StartupNotification {
	if x != nil {
		return x.StartupNotifications
	}
	return nil
}

func (x *StoryEventTopResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *StoryEventTopResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *StoryEventTopResponse) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *StoryEventTopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialProduceStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardId string `protobuf:"bytes,1,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
}

func (x *TutorialProduceStartRequest) Reset() {
	*x = TutorialProduceStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[345]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStartRequest) ProtoMessage() {}

func (x *TutorialProduceStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[345]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStartRequest.ProtoReflect.Descriptor instead.
func (*TutorialProduceStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{345}
}

func (x *TutorialProduceStartRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

type ExchangeGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeId string `protobuf:"bytes,1,opt,name=exchangeId,proto3" json:"exchangeId,omitempty"`
}

func (x *ExchangeGetRequest) Reset() {
	*x = ExchangeGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[346]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeGetRequest) ProtoMessage() {}

func (x *ExchangeGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[346]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeGetRequest.ProtoReflect.Descriptor instead.
func (*ExchangeGetRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{346}
}

func (x *ExchangeGetRequest) GetExchangeId() string {
	if x != nil {
		return x.ExchangeId
	}
	return ""
}

type GuildEditDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildEditDetailResponse) Reset() {
	*x = GuildEditDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[347]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEditDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEditDetailResponse) ProtoMessage() {}

func (x *GuildEditDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[347]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEditDetailResponse.ProtoReflect.Descriptor instead.
func (*GuildEditDetailResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{347}
}

func (x *GuildEditDetailResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MediaPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaId string `protobuf:"bytes,1,opt,name=mediaId,proto3" json:"mediaId,omitempty"`
	IsFirst bool   `protobuf:"varint,2,opt,name=isFirst,proto3" json:"isFirst,omitempty"`
}

func (x *MediaPlayRequest) Reset() {
	*x = MediaPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[348]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaPlayRequest) ProtoMessage() {}

func (x *MediaPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[348]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaPlayRequest.ProtoReflect.Descriptor instead.
func (*MediaPlayRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{348}
}

func (x *MediaPlayRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *MediaPlayRequest) GetIsFirst() bool {
	if x != nil {
		return x.IsFirst
	}
	return false
}

type GashaDrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId       string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
	GashaButtonId string `protobuf:"bytes,2,opt,name=gashaButtonId,proto3" json:"gashaButtonId,omitempty"`
	DrawCount     int32  `protobuf:"varint,3,opt,name=drawCount,proto3" json:"drawCount,omitempty"`
}

func (x *GashaDrawRequest) Reset() {
	*x = GashaDrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[349]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaDrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaDrawRequest) ProtoMessage() {}

func (x *GashaDrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[349]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaDrawRequest.ProtoReflect.Descriptor instead.
func (*GashaDrawRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{349}
}

func (x *GashaDrawRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

func (x *GashaDrawRequest) GetGashaButtonId() string {
	if x != nil {
		return x.GashaButtonId
	}
	return ""
}

func (x *GashaDrawRequest) GetDrawCount() int32 {
	if x != nil {
		return x.DrawCount
	}
	return 0
}

type TutorialProduceStepLessonEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultTargetValue int32    `protobuf:"varint,1,opt,name=resultTargetValue,proto3" json:"resultTargetValue,omitempty"`
	Stamina           int32    `protobuf:"varint,2,opt,name=stamina,proto3" json:"stamina,omitempty"`
	ProduceCardIds    []string `protobuf:"bytes,3,rep,name=produceCardIds,proto3" json:"produceCardIds,omitempty"`
}

func (x *TutorialProduceStepLessonEndRequest) Reset() {
	*x = TutorialProduceStepLessonEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[350]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStepLessonEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStepLessonEndRequest) ProtoMessage() {}

func (x *TutorialProduceStepLessonEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[350]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStepLessonEndRequest.ProtoReflect.Descriptor instead.
func (*TutorialProduceStepLessonEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{350}
}

func (x *TutorialProduceStepLessonEndRequest) GetResultTargetValue() int32 {
	if x != nil {
		return x.ResultTargetValue
	}
	return 0
}

func (x *TutorialProduceStepLessonEndRequest) GetStamina() int32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *TutorialProduceStepLessonEndRequest) GetProduceCardIds() []string {
	if x != nil {
		return x.ProduceCardIds
	}
	return nil
}

type IdolCardUpgradeLevelLimitRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardId string                       `protobuf:"bytes,1,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	AfterRank  penum.IdolCardLevelLimitRank `protobuf:"varint,2,opt,name=afterRank,proto3,enum=penum.IdolCardLevelLimitRank" json:"afterRank,omitempty"`
}

func (x *IdolCardUpgradeLevelLimitRankRequest) Reset() {
	*x = IdolCardUpgradeLevelLimitRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[351]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardUpgradeLevelLimitRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardUpgradeLevelLimitRankRequest) ProtoMessage() {}

func (x *IdolCardUpgradeLevelLimitRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[351]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardUpgradeLevelLimitRankRequest.ProtoReflect.Descriptor instead.
func (*IdolCardUpgradeLevelLimitRankRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{351}
}

func (x *IdolCardUpgradeLevelLimitRankRequest) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *IdolCardUpgradeLevelLimitRankRequest) GetAfterRank() penum.IdolCardLevelLimitRank {
	if x != nil {
		return x.AfterRank
	}
	return penum.IdolCardLevelLimitRank(0)
}

type ItemExchangeIdolCardPieceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemExchangeIdolCardPieceRequest) Reset() {
	*x = ItemExchangeIdolCardPieceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[352]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemExchangeIdolCardPieceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemExchangeIdolCardPieceRequest) ProtoMessage() {}

func (x *ItemExchangeIdolCardPieceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[352]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemExchangeIdolCardPieceRequest.ProtoReflect.Descriptor instead.
func (*ItemExchangeIdolCardPieceRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{352}
}

type TicketExchangeListItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items          []*TicketExchangeItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	CommonResponse *papicommon.Response  `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TicketExchangeListItemsResponse) Reset() {
	*x = TicketExchangeListItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[353]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketExchangeListItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketExchangeListItemsResponse) ProtoMessage() {}

func (x *TicketExchangeListItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[353]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketExchangeListItemsResponse.ProtoReflect.Descriptor instead.
func (*TicketExchangeListItemsResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{353}
}

func (x *TicketExchangeListItemsResponse) GetItems() []*TicketExchangeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *TicketExchangeListItemsResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ExchangeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstViewExchangeId string `protobuf:"bytes,1,opt,name=firstViewExchangeId,proto3" json:"firstViewExchangeId,omitempty"`
	IsDaily             bool   `protobuf:"varint,2,opt,name=isDaily,proto3" json:"isDaily,omitempty"`
}

func (x *ExchangeListRequest) Reset() {
	*x = ExchangeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[354]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeListRequest) ProtoMessage() {}

func (x *ExchangeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[354]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeListRequest.ProtoReflect.Descriptor instead.
func (*ExchangeListRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{354}
}

func (x *ExchangeListRequest) GetFirstViewExchangeId() string {
	if x != nil {
		return x.FirstViewExchangeId
	}
	return ""
}

func (x *ExchangeListRequest) GetIsDaily() bool {
	if x != nil {
		return x.IsDaily
	}
	return false
}

type MissionReceiveGroupAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionGroupId string `protobuf:"bytes,1,opt,name=missionGroupId,proto3" json:"missionGroupId,omitempty"`
}

func (x *MissionReceiveGroupAllRequest) Reset() {
	*x = MissionReceiveGroupAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[355]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveGroupAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveGroupAllRequest) ProtoMessage() {}

func (x *MissionReceiveGroupAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[355]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveGroupAllRequest.ProtoReflect.Descriptor instead.
func (*MissionReceiveGroupAllRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{355}
}

func (x *MissionReceiveGroupAllRequest) GetMissionGroupId() string {
	if x != nil {
		return x.MissionGroupId
	}
	return ""
}

type ProduceReportGuildMissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceReportGuildMissionResponse) Reset() {
	*x = ProduceReportGuildMissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[356]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceReportGuildMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceReportGuildMissionResponse) ProtoMessage() {}

func (x *ProduceReportGuildMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[356]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceReportGuildMissionResponse.ProtoReflect.Descriptor instead.
func (*ProduceReportGuildMissionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{356}
}

func (x *ProduceReportGuildMissionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceRerollSelectProduceCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceRerollSelectProduceCardRequest) Reset() {
	*x = ProduceRerollSelectProduceCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[357]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRerollSelectProduceCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRerollSelectProduceCardRequest) ProtoMessage() {}

func (x *ProduceRerollSelectProduceCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[357]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRerollSelectProduceCardRequest.ProtoReflect.Descriptor instead.
func (*ProduceRerollSelectProduceCardRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{357}
}

func (x *ProduceRerollSelectProduceCardRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type ShopRegisterBirthdayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *ShopRegisterBirthdayRequest) Reset() {
	*x = ShopRegisterBirthdayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[358]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRegisterBirthdayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRegisterBirthdayRequest) ProtoMessage() {}

func (x *ShopRegisterBirthdayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[358]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRegisterBirthdayRequest.ProtoReflect.Descriptor instead.
func (*ShopRegisterBirthdayRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{358}
}

func (x *ShopRegisterBirthdayRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *ShopRegisterBirthdayRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *ShopRegisterBirthdayRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type GuildDismissRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *GuildDismissRequest) Reset() {
	*x = GuildDismissRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[359]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildDismissRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDismissRequest) ProtoMessage() {}

func (x *GuildDismissRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[359]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDismissRequest.ProtoReflect.Descriptor instead.
func (*GuildDismissRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{359}
}

func (x *GuildDismissRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status penum.ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=penum.ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[360]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[360]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{360}
}

func (x *HealthCheckResponse) GetStatus() penum.ServingStatus {
	if x != nil {
		return x.Status
	}
	return penum.ServingStatus(0)
}

type IdolCardUpgradePotentialRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *IdolCardUpgradePotentialRankResponse) Reset() {
	*x = IdolCardUpgradePotentialRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[361]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardUpgradePotentialRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardUpgradePotentialRankResponse) ProtoMessage() {}

func (x *IdolCardUpgradePotentialRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[361]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardUpgradePotentialRankResponse.ProtoReflect.Descriptor instead.
func (*IdolCardUpgradePotentialRankResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{361}
}

func (x *IdolCardUpgradePotentialRankResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type IdolCardChangeSkinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *IdolCardChangeSkinResponse) Reset() {
	*x = IdolCardChangeSkinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[362]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardChangeSkinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardChangeSkinResponse) ProtoMessage() {}

func (x *IdolCardChangeSkinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[362]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardChangeSkinResponse.ProtoReflect.Descriptor instead.
func (*IdolCardChangeSkinResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{362}
}

func (x *IdolCardChangeSkinResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProfileUpdateMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProfileUpdateMemoryResponse) Reset() {
	*x = ProfileUpdateMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[363]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateMemoryResponse) ProtoMessage() {}

func (x *ProfileUpdateMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[363]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateMemoryResponse.ProtoReflect.Descriptor instead.
func (*ProfileUpdateMemoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{363}
}

func (x *ProfileUpdateMemoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PvpRateUpdateUserPvpRateUnitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateUpdateUserPvpRateUnitResponse) Reset() {
	*x = PvpRateUpdateUserPvpRateUnitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[364]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateUpdateUserPvpRateUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateUpdateUserPvpRateUnitResponse) ProtoMessage() {}

func (x *PvpRateUpdateUserPvpRateUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[364]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateUpdateUserPvpRateUnitResponse.ProtoReflect.Descriptor instead.
func (*PvpRateUpdateUserPvpRateUnitResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{364}
}

func (x *PvpRateUpdateUserPvpRateUnitResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopRegisterPurchaseTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId  string               `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopRegisterPurchaseTransactionResponse) Reset() {
	*x = ShopRegisterPurchaseTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[365]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRegisterPurchaseTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRegisterPurchaseTransactionResponse) ProtoMessage() {}

func (x *ShopRegisterPurchaseTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[365]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRegisterPurchaseTransactionResponse.ProtoReflect.Descriptor instead.
func (*ShopRegisterPurchaseTransactionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{365}
}

func (x *ShopRegisterPurchaseTransactionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ShopRegisterPurchaseTransactionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CoinGashaResetBoxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinGashaId string `protobuf:"bytes,1,opt,name=coinGashaId,proto3" json:"coinGashaId,omitempty"`
}

func (x *CoinGashaResetBoxRequest) Reset() {
	*x = CoinGashaResetBoxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[366]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaResetBoxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaResetBoxRequest) ProtoMessage() {}

func (x *CoinGashaResetBoxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[366]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaResetBoxRequest.ProtoReflect.Descriptor instead.
func (*CoinGashaResetBoxRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{366}
}

func (x *CoinGashaResetBoxRequest) GetCoinGashaId() string {
	if x != nil {
		return x.CoinGashaId
	}
	return ""
}

type FriendListSuggestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List           []*FriendInfo        `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *FriendListSuggestionResponse) Reset() {
	*x = FriendListSuggestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[367]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendListSuggestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListSuggestionResponse) ProtoMessage() {}

func (x *FriendListSuggestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[367]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListSuggestionResponse.ProtoReflect.Descriptor instead.
func (*FriendListSuggestionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{367}
}

func (x *FriendListSuggestionResponse) GetList() []*FriendInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FriendListSuggestionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaDrawSelectPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId       string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
	GashaButtonId string `protobuf:"bytes,2,opt,name=gashaButtonId,proto3" json:"gashaButtonId,omitempty"`
}

func (x *GashaDrawSelectPickupRequest) Reset() {
	*x = GashaDrawSelectPickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[368]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaDrawSelectPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaDrawSelectPickupRequest) ProtoMessage() {}

func (x *GashaDrawSelectPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[368]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaDrawSelectPickupRequest.ProtoReflect.Descriptor instead.
func (*GashaDrawSelectPickupRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{368}
}

func (x *GashaDrawSelectPickupRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

func (x *GashaDrawSelectPickupRequest) GetGashaButtonId() string {
	if x != nil {
		return x.GashaButtonId
	}
	return ""
}

type MissionUrlTransitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MissionUrlTransitionResponse) Reset() {
	*x = MissionUrlTransitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[369]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionUrlTransitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionUrlTransitionResponse) ProtoMessage() {}

func (x *MissionUrlTransitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[369]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionUrlTransitionResponse.ProtoReflect.Descriptor instead.
func (*MissionUrlTransitionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{369}
}

func (x *MissionUrlTransitionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildChangeLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *GuildChangeLeaderRequest) Reset() {
	*x = GuildChangeLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[370]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChangeLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChangeLeaderRequest) ProtoMessage() {}

func (x *GuildChangeLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[370]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChangeLeaderRequest.ProtoReflect.Descriptor instead.
func (*GuildChangeLeaderRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{370}
}

func (x *GuildChangeLeaderRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type NoticeFetchListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List           []*NoticeInfo        `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasNext        bool                 `protobuf:"varint,2,opt,name=hasNext,proto3" json:"hasNext,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *NoticeFetchListResponse) Reset() {
	*x = NoticeFetchListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[371]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeFetchListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeFetchListResponse) ProtoMessage() {}

func (x *NoticeFetchListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[371]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeFetchListResponse.ProtoReflect.Descriptor instead.
func (*NoticeFetchListResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{371}
}

func (x *NoticeFetchListResponse) GetList() []*NoticeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *NoticeFetchListResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *NoticeFetchListResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaDrawSelectPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawResults    []*GashaDrawResult   `protobuf:"bytes,1,rep,name=drawResults,proto3" json:"drawResults,omitempty"`
	GashaButton    *pcommon.GashaButton `protobuf:"bytes,2,opt,name=gashaButton,proto3" json:"gashaButton,omitempty"`
	BonusRewards   []*pcommon.Reward    `protobuf:"bytes,3,rep,name=bonusRewards,proto3" json:"bonusRewards,omitempty"`
	GashaPoint     *pcommon.GashaPoint  `protobuf:"bytes,4,opt,name=gashaPoint,proto3" json:"gashaPoint,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaDrawSelectPickupResponse) Reset() {
	*x = GashaDrawSelectPickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[372]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaDrawSelectPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaDrawSelectPickupResponse) ProtoMessage() {}

func (x *GashaDrawSelectPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[372]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaDrawSelectPickupResponse.ProtoReflect.Descriptor instead.
func (*GashaDrawSelectPickupResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{372}
}

func (x *GashaDrawSelectPickupResponse) GetDrawResults() []*GashaDrawResult {
	if x != nil {
		return x.DrawResults
	}
	return nil
}

func (x *GashaDrawSelectPickupResponse) GetGashaButton() *pcommon.GashaButton {
	if x != nil {
		return x.GashaButton
	}
	return nil
}

func (x *GashaDrawSelectPickupResponse) GetBonusRewards() []*pcommon.Reward {
	if x != nil {
		return x.BonusRewards
	}
	return nil
}

func (x *GashaDrawSelectPickupResponse) GetGashaPoint() *pcommon.GashaPoint {
	if x != nil {
		return x.GashaPoint
	}
	return nil
}

func (x *GashaDrawSelectPickupResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MeishiUpdateResponse) Reset() {
	*x = MeishiUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[373]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiUpdateResponse) ProtoMessage() {}

func (x *MeishiUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[373]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiUpdateResponse.ProtoReflect.Descriptor instead.
func (*MeishiUpdateResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{373}
}

func (x *MeishiUpdateResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Towers                 []*TowerTopResponse_Tower `protobuf:"bytes,1,rep,name=towers,proto3" json:"towers,omitempty"`
	PreviousTotalClearRank int32                     `protobuf:"varint,2,opt,name=previousTotalClearRank,proto3" json:"previousTotalClearRank,omitempty"`
	NextTotalClearRank     int32                     `protobuf:"varint,3,opt,name=nextTotalClearRank,proto3" json:"nextTotalClearRank,omitempty"`
	NextReward             *pcommon.Reward           `protobuf:"bytes,4,opt,name=nextReward,proto3" json:"nextReward,omitempty"`
	CommonResponse         *papicommon.Response      `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerTopResponse) Reset() {
	*x = TowerTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[374]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerTopResponse) ProtoMessage() {}

func (x *TowerTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[374]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerTopResponse.ProtoReflect.Descriptor instead.
func (*TowerTopResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{374}
}

func (x *TowerTopResponse) GetTowers() []*TowerTopResponse_Tower {
	if x != nil {
		return x.Towers
	}
	return nil
}

func (x *TowerTopResponse) GetPreviousTotalClearRank() int32 {
	if x != nil {
		return x.PreviousTotalClearRank
	}
	return 0
}

func (x *TowerTopResponse) GetNextTotalClearRank() int32 {
	if x != nil {
		return x.NextTotalClearRank
	}
	return 0
}

func (x *TowerTopResponse) GetNextReward() *pcommon.Reward {
	if x != nil {
		return x.NextReward
	}
	return nil
}

func (x *TowerTopResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildListJoinRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List           []*GuildInfo         `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildListJoinRequestResponse) Reset() {
	*x = GuildListJoinRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[375]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildListJoinRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildListJoinRequestResponse) ProtoMessage() {}

func (x *GuildListJoinRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[375]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildListJoinRequestResponse.ProtoReflect.Descriptor instead.
func (*GuildListJoinRequestResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{375}
}

func (x *GuildListJoinRequestResponse) GetList() []*GuildInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GuildListJoinRequestResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerListLayerPlayerHistoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histories      []*pcommon.TowerLayerHistory `protobuf:"bytes,1,rep,name=histories,proto3" json:"histories,omitempty"`
	CommonResponse *papicommon.Response         `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerListLayerPlayerHistoriesResponse) Reset() {
	*x = TowerListLayerPlayerHistoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[376]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerListLayerPlayerHistoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerListLayerPlayerHistoriesResponse) ProtoMessage() {}

func (x *TowerListLayerPlayerHistoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[376]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerListLayerPlayerHistoriesResponse.ProtoReflect.Descriptor instead.
func (*TowerListLayerPlayerHistoriesResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{376}
}

func (x *TowerListLayerPlayerHistoriesResponse) GetHistories() []*pcommon.TowerLayerHistory {
	if x != nil {
		return x.Histories
	}
	return nil
}

func (x *TowerListLayerPlayerHistoriesResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PvpRateRateReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate   int32           `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Reward *pcommon.Reward `protobuf:"bytes,2,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *PvpRateRateReward) Reset() {
	*x = PvpRateRateReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[377]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateRateReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateRateReward) ProtoMessage() {}

func (x *PvpRateRateReward) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[377]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateRateReward.ProtoReflect.Descriptor instead.
func (*PvpRateRateReward) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{377}
}

func (x *PvpRateRateReward) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PvpRateRateReward) GetReward() *pcommon.Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type CoinGashaDrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinGashaId string `protobuf:"bytes,1,opt,name=coinGashaId,proto3" json:"coinGashaId,omitempty"`
	DrawCount   int32  `protobuf:"varint,2,opt,name=drawCount,proto3" json:"drawCount,omitempty"`
}

func (x *CoinGashaDrawRequest) Reset() {
	*x = CoinGashaDrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[378]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaDrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaDrawRequest) ProtoMessage() {}

func (x *CoinGashaDrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[378]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaDrawRequest.ProtoReflect.Descriptor instead.
func (*CoinGashaDrawRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{378}
}

func (x *CoinGashaDrawRequest) GetCoinGashaId() string {
	if x != nil {
		return x.CoinGashaId
	}
	return ""
}

func (x *CoinGashaDrawRequest) GetDrawCount() int32 {
	if x != nil {
		return x.DrawCount
	}
	return 0
}

type GiftListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGifts      []*GiftListResponse_UserGift `protobuf:"bytes,1,rep,name=userGifts,proto3" json:"userGifts,omitempty"`
	Count          int32                        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Offset         int32                        `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	HasNext        bool                         `protobuf:"varint,4,opt,name=hasNext,proto3" json:"hasNext,omitempty"`
	CommonResponse *papicommon.Response         `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GiftListResponse) Reset() {
	*x = GiftListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[379]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftListResponse) ProtoMessage() {}

func (x *GiftListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[379]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftListResponse.ProtoReflect.Descriptor instead.
func (*GiftListResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{379}
}

func (x *GiftListResponse) GetUserGifts() []*GiftListResponse_UserGift {
	if x != nil {
		return x.UserGifts
	}
	return nil
}

func (x *GiftListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GiftListResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GiftListResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *GiftListResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepAuditionRefreshRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepAuditionRefreshRequest) Reset() {
	*x = ProduceStepAuditionRefreshRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[380]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionRefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionRefreshRequest) ProtoMessage() {}

func (x *ProduceStepAuditionRefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[380]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionRefreshRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionRefreshRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{380}
}

func (x *ProduceStepAuditionRefreshRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type PvpRateInitializeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousSeasonResult *PvpRateSeasonResult `protobuf:"bytes,1,opt,name=previousSeasonResult,proto3" json:"previousSeasonResult,omitempty"`
	IsChangedFormation   bool                 `protobuf:"varint,2,opt,name=isChangedFormation,proto3" json:"isChangedFormation,omitempty"`
	CommonResponse       *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateInitializeResponse) Reset() {
	*x = PvpRateInitializeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[381]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateInitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateInitializeResponse) ProtoMessage() {}

func (x *PvpRateInitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[381]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateInitializeResponse.ProtoReflect.Descriptor instead.
func (*PvpRateInitializeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{381}
}

func (x *PvpRateInitializeResponse) GetPreviousSeasonResult() *PvpRateSeasonResult {
	if x != nil {
		return x.PreviousSeasonResult
	}
	return nil
}

func (x *PvpRateInitializeResponse) GetIsChangedFormation() bool {
	if x != nil {
		return x.IsChangedFormation
	}
	return false
}

func (x *PvpRateInitializeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PhotoUpdateProtectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPhotoId string `protobuf:"bytes,1,opt,name=userPhotoId,proto3" json:"userPhotoId,omitempty"`
	IsProtected bool   `protobuf:"varint,2,opt,name=isProtected,proto3" json:"isProtected,omitempty"`
}

func (x *PhotoUpdateProtectionRequest) Reset() {
	*x = PhotoUpdateProtectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[382]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoUpdateProtectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoUpdateProtectionRequest) ProtoMessage() {}

func (x *PhotoUpdateProtectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[382]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoUpdateProtectionRequest.ProtoReflect.Descriptor instead.
func (*PhotoUpdateProtectionRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{382}
}

func (x *PhotoUpdateProtectionRequest) GetUserPhotoId() string {
	if x != nil {
		return x.UserPhotoId
	}
	return ""
}

func (x *PhotoUpdateProtectionRequest) GetIsProtected() bool {
	if x != nil {
		return x.IsProtected
	}
	return false
}

type TicketExchangeExecuteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item           *TicketExchangeItem     `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,2,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TicketExchangeExecuteResponse) Reset() {
	*x = TicketExchangeExecuteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[383]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketExchangeExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketExchangeExecuteResponse) ProtoMessage() {}

func (x *TicketExchangeExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[383]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketExchangeExecuteResponse.ProtoReflect.Descriptor instead.
func (*TicketExchangeExecuteResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{383}
}

func (x *TicketExchangeExecuteResponse) GetItem() *TicketExchangeItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *TicketExchangeExecuteResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *TicketExchangeExecuteResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults           []*pcommon.RewardResult                      `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	StoryEventProduceResult *pcommon.StoryEventProduceResult             `protobuf:"bytes,2,opt,name=storyEventProduceResult,proto3" json:"storyEventProduceResult,omitempty"`
	HighScoreUpdateResult   *ProduceResultResponse_HighScoreUpdateResult `protobuf:"bytes,3,opt,name=highScoreUpdateResult,proto3" json:"highScoreUpdateResult,omitempty"`
	CommonResponse          *papicommon.Response                         `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceResultResponse) Reset() {
	*x = ProduceResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[384]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceResultResponse) ProtoMessage() {}

func (x *ProduceResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[384]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceResultResponse.ProtoReflect.Descriptor instead.
func (*ProduceResultResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{384}
}

func (x *ProduceResultResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *ProduceResultResponse) GetStoryEventProduceResult() *pcommon.StoryEventProduceResult {
	if x != nil {
		return x.StoryEventProduceResult
	}
	return nil
}

func (x *ProduceResultResponse) GetHighScoreUpdateResult() *ProduceResultResponse_HighScoreUpdateResult {
	if x != nil {
		return x.HighScoreUpdateResult
	}
	return nil
}

func (x *ProduceResultResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CoinGashaListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinGashas     []*pcommon.CoinGasha `protobuf:"bytes,1,rep,name=coinGashas,proto3" json:"coinGashas,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *CoinGashaListResponse) Reset() {
	*x = CoinGashaListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[385]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaListResponse) ProtoMessage() {}

func (x *CoinGashaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[385]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaListResponse.ProtoReflect.Descriptor instead.
func (*CoinGashaListResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{385}
}

func (x *CoinGashaListResponse) GetCoinGashas() []*pcommon.CoinGasha {
	if x != nil {
		return x.CoinGashas
	}
	return nil
}

func (x *CoinGashaListResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GuildEditLeaderMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderMessage string `protobuf:"bytes,1,opt,name=leaderMessage,proto3" json:"leaderMessage,omitempty"`
}

func (x *GuildEditLeaderMessageRequest) Reset() {
	*x = GuildEditLeaderMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[386]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildEditLeaderMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildEditLeaderMessageRequest) ProtoMessage() {}

func (x *GuildEditLeaderMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[386]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildEditLeaderMessageRequest.ProtoReflect.Descriptor instead.
func (*GuildEditLeaderMessageRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{386}
}

func (x *GuildEditLeaderMessageRequest) GetLeaderMessage() string {
	if x != nil {
		return x.LeaderMessage
	}
	return ""
}

type MoneyReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity           int32                `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ElapsedTimeSeconds int32                `protobuf:"varint,2,opt,name=elapsedTimeSeconds,proto3" json:"elapsedTimeSeconds,omitempty"`
	IsOverflow         bool                 `protobuf:"varint,3,opt,name=isOverflow,proto3" json:"isOverflow,omitempty"`
	CommonResponse     *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MoneyReceiveResponse) Reset() {
	*x = MoneyReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[387]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoneyReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyReceiveResponse) ProtoMessage() {}

func (x *MoneyReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[387]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyReceiveResponse.ProtoReflect.Descriptor instead.
func (*MoneyReceiveResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{387}
}

func (x *MoneyReceiveResponse) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MoneyReceiveResponse) GetElapsedTimeSeconds() int32 {
	if x != nil {
		return x.ElapsedTimeSeconds
	}
	return 0
}

func (x *MoneyReceiveResponse) GetIsOverflow() bool {
	if x != nil {
		return x.IsOverflow
	}
	return false
}

func (x *MoneyReceiveResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MemoryUpdateTagSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMemoryId string `protobuf:"bytes,1,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	MemoryTagId  string `protobuf:"bytes,2,opt,name=memoryTagId,proto3" json:"memoryTagId,omitempty"`
}

func (x *MemoryUpdateTagSettingRequest) Reset() {
	*x = MemoryUpdateTagSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[388]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryUpdateTagSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUpdateTagSettingRequest) ProtoMessage() {}

func (x *MemoryUpdateTagSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[388]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUpdateTagSettingRequest.ProtoReflect.Descriptor instead.
func (*MemoryUpdateTagSettingRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{388}
}

func (x *MemoryUpdateTagSettingRequest) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *MemoryUpdateTagSettingRequest) GetMemoryTagId() string {
	if x != nil {
		return x.MemoryTagId
	}
	return ""
}

type TowerListLayerPlayerHistoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TowerId string `protobuf:"bytes,1,opt,name=towerId,proto3" json:"towerId,omitempty"`
	Number  int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *TowerListLayerPlayerHistoriesRequest) Reset() {
	*x = TowerListLayerPlayerHistoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[389]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerListLayerPlayerHistoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerListLayerPlayerHistoriesRequest) ProtoMessage() {}

func (x *TowerListLayerPlayerHistoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[389]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerListLayerPlayerHistoriesRequest.ProtoReflect.Descriptor instead.
func (*TowerListLayerPlayerHistoriesRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{389}
}

func (x *TowerListLayerPlayerHistoriesRequest) GetTowerId() string {
	if x != nil {
		return x.TowerId
	}
	return ""
}

func (x *TowerListLayerPlayerHistoriesRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type GuildListDonationRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestList    []*DonationRequest   `protobuf:"bytes,1,rep,name=requestList,proto3" json:"requestList,omitempty"`
	MemberList     []*GuildMemberInfo   `protobuf:"bytes,2,rep,name=memberList,proto3" json:"memberList,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildListDonationRequestResponse) Reset() {
	*x = GuildListDonationRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[390]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildListDonationRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildListDonationRequestResponse) ProtoMessage() {}

func (x *GuildListDonationRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[390]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildListDonationRequestResponse.ProtoReflect.Descriptor instead.
func (*GuildListDonationRequestResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{390}
}

func (x *GuildListDonationRequestResponse) GetRequestList() []*DonationRequest {
	if x != nil {
		return x.RequestList
	}
	return nil
}

func (x *GuildListDonationRequestResponse) GetMemberList() []*GuildMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *GuildListDonationRequestResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialReceiveIdolCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results        []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialReceiveIdolCardResponse) Reset() {
	*x = TutorialReceiveIdolCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[391]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialReceiveIdolCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialReceiveIdolCardResponse) ProtoMessage() {}

func (x *TutorialReceiveIdolCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[391]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialReceiveIdolCardResponse.ProtoReflect.Descriptor instead.
func (*TutorialReceiveIdolCardResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{391}
}

func (x *TutorialReceiveIdolCardResponse) GetResults() []*pcommon.RewardResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TutorialReceiveIdolCardResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid  string                `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
	StepType     penum.ProduceStepType `protobuf:"varint,2,opt,name=stepType,proto3,enum=penum.ProduceStepType" json:"stepType,omitempty"`
	SelectNumber int32                 `protobuf:"varint,3,opt,name=selectNumber,proto3" json:"selectNumber,omitempty"`
}

func (x *ProduceNextRequest) Reset() {
	*x = ProduceNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[392]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceNextRequest) ProtoMessage() {}

func (x *ProduceNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[392]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceNextRequest.ProtoReflect.Descriptor instead.
func (*ProduceNextRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{392}
}

func (x *ProduceNextRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

func (x *ProduceNextRequest) GetStepType() penum.ProduceStepType {
	if x != nil {
		return x.StepType
	}
	return penum.ProduceStepType(0)
}

func (x *ProduceNextRequest) GetSelectNumber() int32 {
	if x != nil {
		return x.SelectNumber
	}
	return 0
}

type ProduceStepShopEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectResults  []*pcommon.ProduceEffectResult `protobuf:"bytes,101,rep,name=effectResults,proto3" json:"effectResults,omitempty"`
	CommonResponse *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepShopEndResponse) Reset() {
	*x = ProduceStepShopEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[393]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepShopEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepShopEndResponse) ProtoMessage() {}

func (x *ProduceStepShopEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[393]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepShopEndResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepShopEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{393}
}

func (x *ProduceStepShopEndResponse) GetEffectResults() []*pcommon.ProduceEffectResult {
	if x != nil {
		return x.EffectResults
	}
	return nil
}

func (x *ProduceStepShopEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type NoticeUpdateCategoryTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []penum.NoticeCategory `protobuf:"varint,1,rep,packed,name=categories,proto3,enum=penum.NoticeCategory" json:"categories,omitempty"`
}

func (x *NoticeUpdateCategoryTimeRequest) Reset() {
	*x = NoticeUpdateCategoryTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[394]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeUpdateCategoryTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeUpdateCategoryTimeRequest) ProtoMessage() {}

func (x *NoticeUpdateCategoryTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[394]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeUpdateCategoryTimeRequest.ProtoReflect.Descriptor instead.
func (*NoticeUpdateCategoryTimeRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{394}
}

func (x *NoticeUpdateCategoryTimeRequest) GetCategories() []penum.NoticeCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type StartupConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*StartupConfirmRequest_Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *StartupConfirmRequest) Reset() {
	*x = StartupConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[395]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartupConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartupConfirmRequest) ProtoMessage() {}

func (x *StartupConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[395]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartupConfirmRequest.ProtoReflect.Descriptor instead.
func (*StartupConfirmRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{395}
}

func (x *StartupConfirmRequest) GetNotifications() []*StartupConfirmRequest_Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type TicketExchangeListItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketItemId string `protobuf:"bytes,1,opt,name=ticketItemId,proto3" json:"ticketItemId,omitempty"`
}

func (x *TicketExchangeListItemsRequest) Reset() {
	*x = TicketExchangeListItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[396]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketExchangeListItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketExchangeListItemsRequest) ProtoMessage() {}

func (x *TicketExchangeListItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[396]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketExchangeListItemsRequest.ProtoReflect.Descriptor instead.
func (*TicketExchangeListItemsRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{396}
}

func (x *TicketExchangeListItemsRequest) GetTicketItemId() string {
	if x != nil {
		return x.TicketItemId
	}
	return ""
}

type AuthSendConsentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *AuthSendConsentResponse) Reset() {
	*x = AuthSendConsentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[397]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSendConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSendConsentResponse) ProtoMessage() {}

func (x *AuthSendConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[397]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSendConsentResponse.ProtoReflect.Descriptor instead.
func (*AuthSendConsentResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{397}
}

func (x *AuthSendConsentResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type CoinGashaDrawResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                 *pcommon.RewardResult   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ProvidedResult         *pcommon.RewardResult   `protobuf:"bytes,2,opt,name=providedResult,proto3" json:"providedResult,omitempty"`
	CardBonusRewardResults []*pcommon.RewardResult `protobuf:"bytes,3,rep,name=cardBonusRewardResults,proto3" json:"cardBonusRewardResults,omitempty"`
	IsFeature              bool                    `protobuf:"varint,4,opt,name=isFeature,proto3" json:"isFeature,omitempty"`
	IsFeaturePickup        bool                    `protobuf:"varint,5,opt,name=isFeaturePickup,proto3" json:"isFeaturePickup,omitempty"`
}

func (x *CoinGashaDrawResult) Reset() {
	*x = CoinGashaDrawResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[398]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinGashaDrawResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinGashaDrawResult) ProtoMessage() {}

func (x *CoinGashaDrawResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[398]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinGashaDrawResult.ProtoReflect.Descriptor instead.
func (*CoinGashaDrawResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{398}
}

func (x *CoinGashaDrawResult) GetResult() *pcommon.RewardResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CoinGashaDrawResult) GetProvidedResult() *pcommon.RewardResult {
	if x != nil {
		return x.ProvidedResult
	}
	return nil
}

func (x *CoinGashaDrawResult) GetCardBonusRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.CardBonusRewardResults
	}
	return nil
}

func (x *CoinGashaDrawResult) GetIsFeature() bool {
	if x != nil {
		return x.IsFeature
	}
	return false
}

func (x *CoinGashaDrawResult) GetIsFeaturePickup() bool {
	if x != nil {
		return x.IsFeaturePickup
	}
	return false
}

type PvpRateRival struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile    *pcommon.SimpleProfile       `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	RivalType  penum.PvpRateRivalType       `protobuf:"varint,2,opt,name=rivalType,proto3,enum=penum.PvpRateRivalType" json:"rivalType,omitempty"`
	EarnedRate int32                        `protobuf:"varint,3,opt,name=earnedRate,proto3" json:"earnedRate,omitempty"`
	IsNpc      bool                         `protobuf:"varint,4,opt,name=isNpc,proto3" json:"isNpc,omitempty"`
	Formations []*PvpRateUnitStageFormation `protobuf:"bytes,5,rep,name=formations,proto3" json:"formations,omitempty"`
}

func (x *PvpRateRival) Reset() {
	*x = PvpRateRival{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[399]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateRival) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateRival) ProtoMessage() {}

func (x *PvpRateRival) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[399]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateRival.ProtoReflect.Descriptor instead.
func (*PvpRateRival) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{399}
}

func (x *PvpRateRival) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *PvpRateRival) GetRivalType() penum.PvpRateRivalType {
	if x != nil {
		return x.RivalType
	}
	return penum.PvpRateRivalType(0)
}

func (x *PvpRateRival) GetEarnedRate() int32 {
	if x != nil {
		return x.EarnedRate
	}
	return 0
}

func (x *PvpRateRival) GetIsNpc() bool {
	if x != nil {
		return x.IsNpc
	}
	return false
}

func (x *PvpRateRival) GetFormations() []*PvpRateUnitStageFormation {
	if x != nil {
		return x.Formations
	}
	return nil
}

type GuildApproveJoinRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *GuildApproveJoinRequestRequest) Reset() {
	*x = GuildApproveJoinRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[400]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildApproveJoinRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildApproveJoinRequestRequest) ProtoMessage() {}

func (x *GuildApproveJoinRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[400]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildApproveJoinRequestRequest.ProtoReflect.Descriptor instead.
func (*GuildApproveJoinRequestRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{400}
}

func (x *GuildApproveJoinRequestRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type MissionReceiveGroupAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupResults   []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=groupResults,proto3" json:"groupResults,omitempty"`
	Results        []*pcommon.RewardResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MissionReceiveGroupAllResponse) Reset() {
	*x = MissionReceiveGroupAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[401]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveGroupAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveGroupAllResponse) ProtoMessage() {}

func (x *MissionReceiveGroupAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[401]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveGroupAllResponse.ProtoReflect.Descriptor instead.
func (*MissionReceiveGroupAllResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{401}
}

func (x *MissionReceiveGroupAllResponse) GetGroupResults() []*pcommon.RewardResult {
	if x != nil {
		return x.GroupResults
	}
	return nil
}

func (x *MissionReceiveGroupAllResponse) GetResults() []*pcommon.RewardResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *MissionReceiveGroupAllResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceStepPresentStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepPresentStartRequest) Reset() {
	*x = ProduceStepPresentStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[402]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepPresentStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepPresentStartRequest) ProtoMessage() {}

func (x *ProduceStepPresentStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[402]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepPresentStartRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepPresentStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{402}
}

func (x *ProduceStepPresentStartRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type TutorialProduceStepAuditionExamEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TutorialProduceStepAuditionExamEndResponse) Reset() {
	*x = TutorialProduceStepAuditionExamEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[403]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProduceStepAuditionExamEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProduceStepAuditionExamEndResponse) ProtoMessage() {}

func (x *TutorialProduceStepAuditionExamEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[403]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProduceStepAuditionExamEndResponse.ProtoReflect.Descriptor instead.
func (*TutorialProduceStepAuditionExamEndResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{403}
}

func (x *TutorialProduceStepAuditionExamEndResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceChangeCostumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceChangeCostumeResponse) Reset() {
	*x = ProduceChangeCostumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[404]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceChangeCostumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceChangeCostumeResponse) ProtoMessage() {}

func (x *ProduceChangeCostumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[404]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceChangeCostumeResponse.ProtoReflect.Descriptor instead.
func (*ProduceChangeCostumeResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{404}
}

func (x *ProduceChangeCostumeResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type SystemCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdToken string `protobuf:"bytes,1,opt,name=idToken,proto3" json:"idToken,omitempty"`
}

func (x *SystemCheckRequest) Reset() {
	*x = SystemCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[405]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckRequest) ProtoMessage() {}

func (x *SystemCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[405]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckRequest.ProtoReflect.Descriptor instead.
func (*SystemCheckRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{405}
}

func (x *SystemCheckRequest) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

type PvpRateGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime               int64                          `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                 int64                          `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	PvpRateConfigId         string                         `protobuf:"bytes,3,opt,name=pvpRateConfigId,proto3" json:"pvpRateConfigId,omitempty"`
	PlayReward              *pcommon.Reward                `protobuf:"bytes,4,opt,name=playReward,proto3" json:"playReward,omitempty"`
	RateRewards             []*PvpRateRateReward           `protobuf:"bytes,5,rep,name=rateRewards,proto3" json:"rateRewards,omitempty"`
	RankRewards             []*PvpRateRankReward           `protobuf:"bytes,6,rep,name=rankRewards,proto3" json:"rankRewards,omitempty"`
	Grade                   penum.PvpRateGrade             `protobuf:"varint,100,opt,name=grade,proto3,enum=penum.PvpRateGrade" json:"grade,omitempty"`
	Rank                    int32                          `protobuf:"varint,101,opt,name=rank,proto3" json:"rank,omitempty"`
	Rate                    int32                          `protobuf:"varint,102,opt,name=rate,proto3" json:"rate,omitempty"`
	GradeUpRate             int32                          `protobuf:"varint,103,opt,name=gradeUpRate,proto3" json:"gradeUpRate,omitempty"`
	GradeKeepRate           int32                          `protobuf:"varint,104,opt,name=gradeKeepRate,proto3" json:"gradeKeepRate,omitempty"`
	MaxDailyPlayCount       int32                          `protobuf:"varint,105,opt,name=maxDailyPlayCount,proto3" json:"maxDailyPlayCount,omitempty"`
	RemainingDailyPlayCount int32                          `protobuf:"varint,106,opt,name=remainingDailyPlayCount,proto3" json:"remainingDailyPlayCount,omitempty"`
	Meishi                  *pcommon.Meishi                `protobuf:"bytes,107,opt,name=meishi,proto3" json:"meishi,omitempty"`
	Rivals                  []*PvpRateRival                `protobuf:"bytes,200,rep,name=rivals,proto3" json:"rivals,omitempty"`
	ExamBattleAutoRequest   *pcommon.ExamBattleAutoRequest `protobuf:"bytes,300,opt,name=examBattleAutoRequest,proto3" json:"examBattleAutoRequest,omitempty"`
	SelfFormations          []*PvpRateUnitStageFormation   `protobuf:"bytes,301,rep,name=selfFormations,proto3" json:"selfFormations,omitempty"`
	CurrentRival            *PvpRateRival                  `protobuf:"bytes,302,opt,name=currentRival,proto3" json:"currentRival,omitempty"`
	CommonResponse          *papicommon.Response           `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRateGetResponse) Reset() {
	*x = PvpRateGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[406]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateGetResponse) ProtoMessage() {}

func (x *PvpRateGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[406]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateGetResponse.ProtoReflect.Descriptor instead.
func (*PvpRateGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{406}
}

func (x *PvpRateGetResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PvpRateGetResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *PvpRateGetResponse) GetPvpRateConfigId() string {
	if x != nil {
		return x.PvpRateConfigId
	}
	return ""
}

func (x *PvpRateGetResponse) GetPlayReward() *pcommon.Reward {
	if x != nil {
		return x.PlayReward
	}
	return nil
}

func (x *PvpRateGetResponse) GetRateRewards() []*PvpRateRateReward {
	if x != nil {
		return x.RateRewards
	}
	return nil
}

func (x *PvpRateGetResponse) GetRankRewards() []*PvpRateRankReward {
	if x != nil {
		return x.RankRewards
	}
	return nil
}

func (x *PvpRateGetResponse) GetGrade() penum.PvpRateGrade {
	if x != nil {
		return x.Grade
	}
	return penum.PvpRateGrade(0)
}

func (x *PvpRateGetResponse) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *PvpRateGetResponse) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PvpRateGetResponse) GetGradeUpRate() int32 {
	if x != nil {
		return x.GradeUpRate
	}
	return 0
}

func (x *PvpRateGetResponse) GetGradeKeepRate() int32 {
	if x != nil {
		return x.GradeKeepRate
	}
	return 0
}

func (x *PvpRateGetResponse) GetMaxDailyPlayCount() int32 {
	if x != nil {
		return x.MaxDailyPlayCount
	}
	return 0
}

func (x *PvpRateGetResponse) GetRemainingDailyPlayCount() int32 {
	if x != nil {
		return x.RemainingDailyPlayCount
	}
	return 0
}

func (x *PvpRateGetResponse) GetMeishi() *pcommon.Meishi {
	if x != nil {
		return x.Meishi
	}
	return nil
}

func (x *PvpRateGetResponse) GetRivals() []*PvpRateRival {
	if x != nil {
		return x.Rivals
	}
	return nil
}

func (x *PvpRateGetResponse) GetExamBattleAutoRequest() *pcommon.ExamBattleAutoRequest {
	if x != nil {
		return x.ExamBattleAutoRequest
	}
	return nil
}

func (x *PvpRateGetResponse) GetSelfFormations() []*PvpRateUnitStageFormation {
	if x != nil {
		return x.SelfFormations
	}
	return nil
}

func (x *PvpRateGetResponse) GetCurrentRival() *PvpRateRival {
	if x != nil {
		return x.CurrentRival
	}
	return nil
}

func (x *PvpRateGetResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type InvitationEnterInvitationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *InvitationEnterInvitationCodeRequest) Reset() {
	*x = InvitationEnterInvitationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[407]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationEnterInvitationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationEnterInvitationCodeRequest) ProtoMessage() {}

func (x *InvitationEnterInvitationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[407]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationEnterInvitationCodeRequest.ProtoReflect.Descriptor instead.
func (*InvitationEnterInvitationCodeRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{407}
}

func (x *InvitationEnterInvitationCodeRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type MasterGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterTag *MasterGetResponse_MasterTag `protobuf:"bytes,1,opt,name=masterTag,proto3" json:"masterTag,omitempty"`
	ProtoHash string                       `protobuf:"bytes,2,opt,name=protoHash,proto3" json:"protoHash,omitempty"`
}

func (x *MasterGetResponse) Reset() {
	*x = MasterGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[408]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterGetResponse) ProtoMessage() {}

func (x *MasterGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[408]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterGetResponse.ProtoReflect.Descriptor instead.
func (*MasterGetResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{408}
}

func (x *MasterGetResponse) GetMasterTag() *MasterGetResponse_MasterTag {
	if x != nil {
		return x.MasterTag
	}
	return nil
}

func (x *MasterGetResponse) GetProtoHash() string {
	if x != nil {
		return x.ProtoHash
	}
	return ""
}

type ProduceStepAuditionRefreshResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeforeStamina  int32                `protobuf:"varint,1,opt,name=beforeStamina,proto3" json:"beforeStamina,omitempty"`
	AfterStamina   int32                `protobuf:"varint,2,opt,name=afterStamina,proto3" json:"afterStamina,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceStepAuditionRefreshResponse) Reset() {
	*x = ProduceStepAuditionRefreshResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[409]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionRefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionRefreshResponse) ProtoMessage() {}

func (x *ProduceStepAuditionRefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[409]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionRefreshResponse.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionRefreshResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{409}
}

func (x *ProduceStepAuditionRefreshResponse) GetBeforeStamina() int32 {
	if x != nil {
		return x.BeforeStamina
	}
	return 0
}

func (x *ProduceStepAuditionRefreshResponse) GetAfterStamina() int32 {
	if x != nil {
		return x.AfterStamina
	}
	return 0
}

func (x *ProduceStepAuditionRefreshResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type StoryReadDearnessStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId         string                  `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
	BeforeDearnessLevel int32                   `protobuf:"varint,2,opt,name=beforeDearnessLevel,proto3" json:"beforeDearnessLevel,omitempty"`
	AfterDearnessLevel  int32                   `protobuf:"varint,3,opt,name=afterDearnessLevel,proto3" json:"afterDearnessLevel,omitempty"`
	RewardResults       []*pcommon.RewardResult `protobuf:"bytes,4,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse      *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *StoryReadDearnessStoryResponse) Reset() {
	*x = StoryReadDearnessStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[410]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryReadDearnessStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryReadDearnessStoryResponse) ProtoMessage() {}

func (x *StoryReadDearnessStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[410]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryReadDearnessStoryResponse.ProtoReflect.Descriptor instead.
func (*StoryReadDearnessStoryResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{410}
}

func (x *StoryReadDearnessStoryResponse) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *StoryReadDearnessStoryResponse) GetBeforeDearnessLevel() int32 {
	if x != nil {
		return x.BeforeDearnessLevel
	}
	return 0
}

func (x *StoryReadDearnessStoryResponse) GetAfterDearnessLevel() int32 {
	if x != nil {
		return x.AfterDearnessLevel
	}
	return 0
}

func (x *StoryReadDearnessStoryResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *StoryReadDearnessStoryResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaGetPointExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaPointId string `protobuf:"bytes,1,opt,name=gashaPointId,proto3" json:"gashaPointId,omitempty"`
}

func (x *GashaGetPointExchangeRequest) Reset() {
	*x = GashaGetPointExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[411]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetPointExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetPointExchangeRequest) ProtoMessage() {}

func (x *GashaGetPointExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[411]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetPointExchangeRequest.ProtoReflect.Descriptor instead.
func (*GashaGetPointExchangeRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{411}
}

func (x *GashaGetPointExchangeRequest) GetGashaPointId() string {
	if x != nil {
		return x.GashaPointId
	}
	return ""
}

type TowerCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCurrentTower bool                 `protobuf:"varint,1,opt,name=isCurrentTower,proto3" json:"isCurrentTower,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerCheckResponse) Reset() {
	*x = TowerCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[412]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerCheckResponse) ProtoMessage() {}

func (x *TowerCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[412]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerCheckResponse.ProtoReflect.Descriptor instead.
func (*TowerCheckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{412}
}

func (x *TowerCheckResponse) GetIsCurrentTower() bool {
	if x != nil {
		return x.IsCurrentTower
	}
	return false
}

func (x *TowerCheckResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaSelectPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId       string            `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
	PickupRewards []*pcommon.Reward `protobuf:"bytes,2,rep,name=pickupRewards,proto3" json:"pickupRewards,omitempty"`
}

func (x *GashaSelectPickupRequest) Reset() {
	*x = GashaSelectPickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[413]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaSelectPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaSelectPickupRequest) ProtoMessage() {}

func (x *GashaSelectPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[413]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaSelectPickupRequest.ProtoReflect.Descriptor instead.
func (*GashaSelectPickupRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{413}
}

func (x *GashaSelectPickupRequest) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

func (x *GashaSelectPickupRequest) GetPickupRewards() []*pcommon.Reward {
	if x != nil {
		return x.PickupRewards
	}
	return nil
}

type ProduceContinueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceContinueRequest) Reset() {
	*x = ProduceContinueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[414]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceContinueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceContinueRequest) ProtoMessage() {}

func (x *ProduceContinueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[414]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceContinueRequest.ProtoReflect.Descriptor instead.
func (*ProduceContinueRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{414}
}

func (x *ProduceContinueRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type SeminarGetExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId                         string                                      `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	ExamId                          string                                      `protobuf:"bytes,2,opt,name=examId,proto3" json:"examId,omitempty"`
	Name                            string                                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	IdolCardId                      string                                      `protobuf:"bytes,4,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	StepType                        penum.ProduceStepType                       `protobuf:"varint,5,opt,name=stepType,proto3,enum=penum.ProduceStepType" json:"stepType,omitempty"`
	ExamBattleParameterTypes        []penum.ProduceParameterType                `protobuf:"varint,6,rep,packed,name=examBattleParameterTypes,proto3,enum=penum.ProduceParameterType" json:"examBattleParameterTypes,omitempty"`
	LimitTurn                       int32                                       `protobuf:"varint,10,opt,name=limitTurn,proto3" json:"limitTurn,omitempty"`
	SuccessThreshold                int32                                       `protobuf:"varint,11,opt,name=successThreshold,proto3" json:"successThreshold,omitempty"`
	ExamBattleParameterBaseLine     int32                                       `protobuf:"varint,12,opt,name=examBattleParameterBaseLine,proto3" json:"examBattleParameterBaseLine,omitempty"`
	ExamBattleBaseScore             int32                                       `protobuf:"varint,13,opt,name=examBattleBaseScore,proto3" json:"examBattleBaseScore,omitempty"`
	ProduceExamGimmickEffectGroupId string                                      `protobuf:"bytes,14,opt,name=produceExamGimmickEffectGroupId,proto3" json:"produceExamGimmickEffectGroupId,omitempty"`
	ProduceExamBattleNpcGroupId     string                                      `protobuf:"bytes,15,opt,name=produceExamBattleNpcGroupId,proto3" json:"produceExamBattleNpcGroupId,omitempty"`
	ProduceExamBattleConfigId       string                                      `protobuf:"bytes,16,opt,name=produceExamBattleConfigId,proto3" json:"produceExamBattleConfigId,omitempty"`
	StartStamina                    int32                                       `protobuf:"varint,20,opt,name=startStamina,proto3" json:"startStamina,omitempty"`
	StartMaxStamina                 int32                                       `protobuf:"varint,21,opt,name=startMaxStamina,proto3" json:"startMaxStamina,omitempty"`
	StartBlock                      int32                                       `protobuf:"varint,22,opt,name=startBlock,proto3" json:"startBlock,omitempty"`
	StartResultTargetValue          int32                                       `protobuf:"varint,23,opt,name=startResultTargetValue,proto3" json:"startResultTargetValue,omitempty"`
	StartProduceItemIds             []string                                    `protobuf:"bytes,24,rep,name=startProduceItemIds,proto3" json:"startProduceItemIds,omitempty"`
	StartProduceDrinkIds            []string                                    `protobuf:"bytes,25,rep,name=startProduceDrinkIds,proto3" json:"startProduceDrinkIds,omitempty"`
	ProduceCards                    []*pcommon.ProduceCard                      `protobuf:"bytes,30,rep,name=produceCards,proto3" json:"produceCards,omitempty"`
	TurnNavigations                 []*SeminarGetExamResponse_TurnNavigation    `protobuf:"bytes,60,rep,name=turnNavigations,proto3" json:"turnNavigations,omitempty"`
	FailureNavigations              []*SeminarGetExamResponse_FailureNavigation `protobuf:"bytes,70,rep,name=failureNavigations,proto3" json:"failureNavigations,omitempty"`
	CommonResponse                  *papicommon.Response                        `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *SeminarGetExamResponse) Reset() {
	*x = SeminarGetExamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[415]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarGetExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarGetExamResponse) ProtoMessage() {}

func (x *SeminarGetExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[415]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarGetExamResponse.ProtoReflect.Descriptor instead.
func (*SeminarGetExamResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{415}
}

func (x *SeminarGetExamResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SeminarGetExamResponse) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *SeminarGetExamResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeminarGetExamResponse) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *SeminarGetExamResponse) GetStepType() penum.ProduceStepType {
	if x != nil {
		return x.StepType
	}
	return penum.ProduceStepType(0)
}

func (x *SeminarGetExamResponse) GetExamBattleParameterTypes() []penum.ProduceParameterType {
	if x != nil {
		return x.ExamBattleParameterTypes
	}
	return nil
}

func (x *SeminarGetExamResponse) GetLimitTurn() int32 {
	if x != nil {
		return x.LimitTurn
	}
	return 0
}

func (x *SeminarGetExamResponse) GetSuccessThreshold() int32 {
	if x != nil {
		return x.SuccessThreshold
	}
	return 0
}

func (x *SeminarGetExamResponse) GetExamBattleParameterBaseLine() int32 {
	if x != nil {
		return x.ExamBattleParameterBaseLine
	}
	return 0
}

func (x *SeminarGetExamResponse) GetExamBattleBaseScore() int32 {
	if x != nil {
		return x.ExamBattleBaseScore
	}
	return 0
}

func (x *SeminarGetExamResponse) GetProduceExamGimmickEffectGroupId() string {
	if x != nil {
		return x.ProduceExamGimmickEffectGroupId
	}
	return ""
}

func (x *SeminarGetExamResponse) GetProduceExamBattleNpcGroupId() string {
	if x != nil {
		return x.ProduceExamBattleNpcGroupId
	}
	return ""
}

func (x *SeminarGetExamResponse) GetProduceExamBattleConfigId() string {
	if x != nil {
		return x.ProduceExamBattleConfigId
	}
	return ""
}

func (x *SeminarGetExamResponse) GetStartStamina() int32 {
	if x != nil {
		return x.StartStamina
	}
	return 0
}

func (x *SeminarGetExamResponse) GetStartMaxStamina() int32 {
	if x != nil {
		return x.StartMaxStamina
	}
	return 0
}

func (x *SeminarGetExamResponse) GetStartBlock() int32 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *SeminarGetExamResponse) GetStartResultTargetValue() int32 {
	if x != nil {
		return x.StartResultTargetValue
	}
	return 0
}

func (x *SeminarGetExamResponse) GetStartProduceItemIds() []string {
	if x != nil {
		return x.StartProduceItemIds
	}
	return nil
}

func (x *SeminarGetExamResponse) GetStartProduceDrinkIds() []string {
	if x != nil {
		return x.StartProduceDrinkIds
	}
	return nil
}

func (x *SeminarGetExamResponse) GetProduceCards() []*pcommon.ProduceCard {
	if x != nil {
		return x.ProduceCards
	}
	return nil
}

func (x *SeminarGetExamResponse) GetTurnNavigations() []*SeminarGetExamResponse_TurnNavigation {
	if x != nil {
		return x.TurnNavigations
	}
	return nil
}

func (x *SeminarGetExamResponse) GetFailureNavigations() []*SeminarGetExamResponse_FailureNavigation {
	if x != nil {
		return x.FailureNavigations
	}
	return nil
}

func (x *SeminarGetExamResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type AuthLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdToken                  string `protobuf:"bytes,1,opt,name=idToken,proto3" json:"idToken,omitempty"`
	IntegrityToken           string `protobuf:"bytes,2,opt,name=integrityToken,proto3" json:"integrityToken,omitempty"`
	ForceReCreateSignInToken bool   `protobuf:"varint,3,opt,name=forceReCreateSignInToken,proto3" json:"forceReCreateSignInToken,omitempty"`
}

func (x *AuthLoginRequest) Reset() {
	*x = AuthLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[416]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLoginRequest) ProtoMessage() {}

func (x *AuthLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[416]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLoginRequest.ProtoReflect.Descriptor instead.
func (*AuthLoginRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{416}
}

func (x *AuthLoginRequest) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

func (x *AuthLoginRequest) GetIntegrityToken() string {
	if x != nil {
		return x.IntegrityToken
	}
	return ""
}

func (x *AuthLoginRequest) GetForceReCreateSignInToken() bool {
	if x != nil {
		return x.ForceReCreateSignInToken
	}
	return false
}

type CharacterCheckRosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *CharacterCheckRosterResponse) Reset() {
	*x = CharacterCheckRosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[417]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterCheckRosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterCheckRosterResponse) ProtoMessage() {}

func (x *CharacterCheckRosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[417]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterCheckRosterResponse.ProtoReflect.Descriptor instead.
func (*CharacterCheckRosterResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{417}
}

func (x *CharacterCheckRosterResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile     *pcommon.SimpleProfile  `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	IsFriend    bool                    `protobuf:"varint,2,opt,name=isFriend,proto3" json:"isFriend,omitempty"`
	IsFollower  bool                    `protobuf:"varint,3,opt,name=isFollower,proto3" json:"isFollower,omitempty"`
	SupportCard *FriendInfo_SupportCard `protobuf:"bytes,100,opt,name=supportCard,proto3" json:"supportCard,omitempty"`
	Memory      *pcommon.Memory         `protobuf:"bytes,101,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[418]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[418]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{418}
}

func (x *FriendInfo) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *FriendInfo) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

func (x *FriendInfo) GetIsFollower() bool {
	if x != nil {
		return x.IsFollower
	}
	return false
}

func (x *FriendInfo) GetSupportCard() *FriendInfo_SupportCard {
	if x != nil {
		return x.SupportCard
	}
	return nil
}

func (x *FriendInfo) GetMemory() *pcommon.Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

type TowerGetLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TowerId string `protobuf:"bytes,1,opt,name=towerId,proto3" json:"towerId,omitempty"`
	Number  int32  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *TowerGetLayerRequest) Reset() {
	*x = TowerGetLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[419]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerGetLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerGetLayerRequest) ProtoMessage() {}

func (x *TowerGetLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[419]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerGetLayerRequest.ProtoReflect.Descriptor instead.
func (*TowerGetLayerRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{419}
}

func (x *TowerGetLayerRequest) GetTowerId() string {
	if x != nil {
		return x.TowerId
	}
	return ""
}

func (x *TowerGetLayerRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ProduceStepShopStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepShopStartRequest) Reset() {
	*x = ProduceStepShopStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[420]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepShopStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepShopStartRequest) ProtoMessage() {}

func (x *ProduceStepShopStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[420]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepShopStartRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepShopStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{420}
}

func (x *ProduceStepShopStartRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type ProduceStepAuditionEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepAuditionEndRequest) Reset() {
	*x = ProduceStepAuditionEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[421]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepAuditionEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepAuditionEndRequest) ProtoMessage() {}

func (x *ProduceStepAuditionEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[421]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepAuditionEndRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepAuditionEndRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{421}
}

func (x *ProduceStepAuditionEndRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type GuildListMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List            []*GuildMemberInfo   `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	JoinRequestList []*GuildMemberInfo   `protobuf:"bytes,2,rep,name=joinRequestList,proto3" json:"joinRequestList,omitempty"`
	CommonResponse  *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GuildListMemberResponse) Reset() {
	*x = GuildListMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[422]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildListMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildListMemberResponse) ProtoMessage() {}

func (x *GuildListMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[422]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildListMemberResponse.ProtoReflect.Descriptor instead.
func (*GuildListMemberResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{422}
}

func (x *GuildListMemberResponse) GetList() []*GuildMemberInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GuildListMemberResponse) GetJoinRequestList() []*GuildMemberInfo {
	if x != nil {
		return x.JoinRequestList
	}
	return nil
}

func (x *GuildListMemberResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TowerUpdateMemoryDeckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *TowerUpdateMemoryDeckResponse) Reset() {
	*x = TowerUpdateMemoryDeckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[423]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerUpdateMemoryDeckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerUpdateMemoryDeckResponse) ProtoMessage() {}

func (x *TowerUpdateMemoryDeckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[423]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerUpdateMemoryDeckResponse.ProtoReflect.Descriptor instead.
func (*TowerUpdateMemoryDeckResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{423}
}

func (x *TowerUpdateMemoryDeckResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type WorkStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            penum.WorkType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.WorkType" json:"type,omitempty"`
	DurationMinutes int32          `protobuf:"varint,2,opt,name=durationMinutes,proto3" json:"durationMinutes,omitempty"`
	CharacterId     string         `protobuf:"bytes,3,opt,name=characterId,proto3" json:"characterId,omitempty"`
}

func (x *WorkStartRequest) Reset() {
	*x = WorkStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[424]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkStartRequest) ProtoMessage() {}

func (x *WorkStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[424]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkStartRequest.ProtoReflect.Descriptor instead.
func (*WorkStartRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{424}
}

func (x *WorkStartRequest) GetType() penum.WorkType {
	if x != nil {
		return x.Type
	}
	return penum.WorkType(0)
}

func (x *WorkStartRequest) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *WorkStartRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

type ExchangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AssetId              string                              `protobuf:"bytes,4,opt,name=assetId,proto3" json:"assetId,omitempty"`
	IsShowRecommendLabel bool                                `protobuf:"varint,5,opt,name=isShowRecommendLabel,proto3" json:"isShowRecommendLabel,omitempty"`
	ExchangeLimit        int32                               `protobuf:"varint,6,opt,name=exchangeLimit,proto3" json:"exchangeLimit,omitempty"`
	ExchangedCount       int32                               `protobuf:"varint,7,opt,name=exchangedCount,proto3" json:"exchangedCount,omitempty"`
	NextResetTime        int64                               `protobuf:"varint,8,opt,name=nextResetTime,proto3" json:"nextResetTime,omitempty"`
	UnlockConditionSetId string                              `protobuf:"bytes,9,opt,name=unlockConditionSetId,proto3" json:"unlockConditionSetId,omitempty"`
	Unlocked             bool                                `protobuf:"varint,10,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Noti                 bool                                `protobuf:"varint,11,opt,name=noti,proto3" json:"noti,omitempty"`
	Reward               *pcommon.Reward                     `protobuf:"bytes,12,opt,name=reward,proto3" json:"reward,omitempty"`
	ConsumptionResources []*ExchangeItem_ConsumptionResource `protobuf:"bytes,13,rep,name=consumptionResources,proto3" json:"consumptionResources,omitempty"`
	Order                int32                               `protobuf:"varint,99,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ExchangeItem) Reset() {
	*x = ExchangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[425]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeItem) ProtoMessage() {}

func (x *ExchangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[425]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeItem.ProtoReflect.Descriptor instead.
func (*ExchangeItem) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{425}
}

func (x *ExchangeItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExchangeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExchangeItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExchangeItem) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ExchangeItem) GetIsShowRecommendLabel() bool {
	if x != nil {
		return x.IsShowRecommendLabel
	}
	return false
}

func (x *ExchangeItem) GetExchangeLimit() int32 {
	if x != nil {
		return x.ExchangeLimit
	}
	return 0
}

func (x *ExchangeItem) GetExchangedCount() int32 {
	if x != nil {
		return x.ExchangedCount
	}
	return 0
}

func (x *ExchangeItem) GetNextResetTime() int64 {
	if x != nil {
		return x.NextResetTime
	}
	return 0
}

func (x *ExchangeItem) GetUnlockConditionSetId() string {
	if x != nil {
		return x.UnlockConditionSetId
	}
	return ""
}

func (x *ExchangeItem) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *ExchangeItem) GetNoti() bool {
	if x != nil {
		return x.Noti
	}
	return false
}

func (x *ExchangeItem) GetReward() *pcommon.Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *ExchangeItem) GetConsumptionResources() []*ExchangeItem_ConsumptionResource {
	if x != nil {
		return x.ConsumptionResources
	}
	return nil
}

func (x *ExchangeItem) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type AuthCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthCreateResponse) Reset() {
	*x = AuthCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[426]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthCreateResponse) ProtoMessage() {}

func (x *AuthCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[426]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthCreateResponse.ProtoReflect.Descriptor instead.
func (*AuthCreateResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{426}
}

func (x *AuthCreateResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type IdolCardReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *IdolCardReleaseResponse) Reset() {
	*x = IdolCardReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[427]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdolCardReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdolCardReleaseResponse) ProtoMessage() {}

func (x *IdolCardReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[427]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdolCardReleaseResponse.ProtoReflect.Descriptor instead.
func (*IdolCardReleaseResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{427}
}

func (x *IdolCardReleaseResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PhotoDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPhotoIds []string `protobuf:"bytes,1,rep,name=userPhotoIds,proto3" json:"userPhotoIds,omitempty"`
}

func (x *PhotoDeleteRequest) Reset() {
	*x = PhotoDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[428]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoDeleteRequest) ProtoMessage() {}

func (x *PhotoDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[428]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoDeleteRequest.ProtoReflect.Descriptor instead.
func (*PhotoDeleteRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{428}
}

func (x *PhotoDeleteRequest) GetUserPhotoIds() []string {
	if x != nil {
		return x.UserPhotoIds
	}
	return nil
}

type MissionReceivePassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *MissionReceivePassResponse) Reset() {
	*x = MissionReceivePassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[429]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceivePassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceivePassResponse) ProtoMessage() {}

func (x *MissionReceivePassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[429]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceivePassResponse.ProtoReflect.Descriptor instead.
func (*MissionReceivePassResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{429}
}

func (x *MissionReceivePassResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type PhotoUpdateProtectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PhotoUpdateProtectionResponse) Reset() {
	*x = PhotoUpdateProtectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[430]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoUpdateProtectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoUpdateProtectionResponse) ProtoMessage() {}

func (x *PhotoUpdateProtectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[430]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoUpdateProtectionResponse.ProtoReflect.Descriptor instead.
func (*PhotoUpdateProtectionResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{430}
}

func (x *PhotoUpdateProtectionResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ProduceContinueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ProduceContinueResponse) Reset() {
	*x = ProduceContinueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[431]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceContinueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceContinueResponse) ProtoMessage() {}

func (x *ProduceContinueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[431]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceContinueResponse.ProtoReflect.Descriptor instead.
func (*ProduceContinueResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{431}
}

func (x *ProduceContinueResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopListItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List           []*pmaster.ShopItem  `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopListItemsResponse) Reset() {
	*x = ShopListItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[432]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopListItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopListItemsResponse) ProtoMessage() {}

func (x *ShopListItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[432]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopListItemsResponse.ProtoReflect.Descriptor instead.
func (*ShopListItemsResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{432}
}

func (x *ShopListItemsResponse) GetList() []*pmaster.ShopItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ShopListItemsResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type GashaExpirePointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaPoints    []*GashaExpirePointResponse_GashaPoint `protobuf:"bytes,1,rep,name=gashaPoints,proto3" json:"gashaPoints,omitempty"`
	RewardResults  []*pcommon.RewardResult                `protobuf:"bytes,2,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response                   `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *GashaExpirePointResponse) Reset() {
	*x = GashaExpirePointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[433]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaExpirePointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaExpirePointResponse) ProtoMessage() {}

func (x *GashaExpirePointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[433]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaExpirePointResponse.ProtoReflect.Descriptor instead.
func (*GashaExpirePointResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{433}
}

func (x *GashaExpirePointResponse) GetGashaPoints() []*GashaExpirePointResponse_GashaPoint {
	if x != nil {
		return x.GashaPoints
	}
	return nil
}

func (x *GashaExpirePointResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *GashaExpirePointResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type NoticeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Category       penum.NoticeCategory `protobuf:"varint,3,opt,name=category,proto3,enum=penum.NoticeCategory" json:"category,omitempty"`
	Type           penum.NoticeType     `protobuf:"varint,4,opt,name=type,proto3,enum=penum.NoticeType" json:"type,omitempty"`
	StartTime      int64                `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime        int64                `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	LastUpdateTime int64                `protobuf:"varint,7,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	BannerAssetId  string               `protobuf:"bytes,8,opt,name=bannerAssetId,proto3" json:"bannerAssetId,omitempty"`
	DetailUrl      string               `protobuf:"bytes,97,opt,name=detailUrl,proto3" json:"detailUrl,omitempty"`
	Noti           bool                 `protobuf:"varint,98,opt,name=noti,proto3" json:"noti,omitempty"`
	IsNew          bool                 `protobuf:"varint,99,opt,name=isNew,proto3" json:"isNew,omitempty"`
}

func (x *NoticeInfo) Reset() {
	*x = NoticeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[434]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeInfo) ProtoMessage() {}

func (x *NoticeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[434]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeInfo.ProtoReflect.Descriptor instead.
func (*NoticeInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{434}
}

func (x *NoticeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NoticeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoticeInfo) GetCategory() penum.NoticeCategory {
	if x != nil {
		return x.Category
	}
	return penum.NoticeCategory(0)
}

func (x *NoticeInfo) GetType() penum.NoticeType {
	if x != nil {
		return x.Type
	}
	return penum.NoticeType(0)
}

func (x *NoticeInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *NoticeInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *NoticeInfo) GetLastUpdateTime() int64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

func (x *NoticeInfo) GetBannerAssetId() string {
	if x != nil {
		return x.BannerAssetId
	}
	return ""
}

func (x *NoticeInfo) GetDetailUrl() string {
	if x != nil {
		return x.DetailUrl
	}
	return ""
}

func (x *NoticeInfo) GetNoti() bool {
	if x != nil {
		return x.Noti
	}
	return false
}

func (x *NoticeInfo) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type NoticeUpdateDetailTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeId string `protobuf:"bytes,1,opt,name=noticeId,proto3" json:"noticeId,omitempty"`
}

func (x *NoticeUpdateDetailTimeRequest) Reset() {
	*x = NoticeUpdateDetailTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[435]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeUpdateDetailTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeUpdateDetailTimeRequest) ProtoMessage() {}

func (x *NoticeUpdateDetailTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[435]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeUpdateDetailTimeRequest.ProtoReflect.Descriptor instead.
func (*NoticeUpdateDetailTimeRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{435}
}

func (x *NoticeUpdateDetailTimeRequest) GetNoticeId() string {
	if x != nil {
		return x.NoticeId
	}
	return ""
}

type ProduceStepRefreshRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceUuid string `protobuf:"bytes,1,opt,name=produceUuid,proto3" json:"produceUuid,omitempty"`
}

func (x *ProduceStepRefreshRequest) Reset() {
	*x = ProduceStepRefreshRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[436]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStepRefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStepRefreshRequest) ProtoMessage() {}

func (x *ProduceStepRefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[436]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStepRefreshRequest.ProtoReflect.Descriptor instead.
func (*ProduceStepRefreshRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{436}
}

func (x *ProduceStepRefreshRequest) GetProduceUuid() string {
	if x != nil {
		return x.ProduceUuid
	}
	return ""
}

type PvpRatePlayExamBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *PvpRatePlayExamBattleResponse) Reset() {
	*x = PvpRatePlayExamBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[437]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRatePlayExamBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRatePlayExamBattleResponse) ProtoMessage() {}

func (x *PvpRatePlayExamBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[437]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRatePlayExamBattleResponse.ProtoReflect.Descriptor instead.
func (*PvpRatePlayExamBattleResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{437}
}

func (x *PvpRatePlayExamBattleResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopPurchaseJewelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopPurchaseJewelResponse) Reset() {
	*x = ShopPurchaseJewelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[438]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopPurchaseJewelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopPurchaseJewelResponse) ProtoMessage() {}

func (x *ShopPurchaseJewelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[438]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopPurchaseJewelResponse.ProtoReflect.Descriptor instead.
func (*ShopPurchaseJewelResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{438}
}

func (x *ShopPurchaseJewelResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *ShopPurchaseJewelResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type ShopRegisterBirthdayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *papicommon.Response `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ShopRegisterBirthdayResponse) Reset() {
	*x = ShopRegisterBirthdayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[439]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopRegisterBirthdayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopRegisterBirthdayResponse) ProtoMessage() {}

func (x *ShopRegisterBirthdayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[439]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopRegisterBirthdayResponse.ProtoReflect.Descriptor instead.
func (*ShopRegisterBirthdayResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{439}
}

func (x *ShopRegisterBirthdayResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type TutorialProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type penum.TutorialType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.TutorialType" json:"type,omitempty"`
	Step int32              `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *TutorialProgressRequest) Reset() {
	*x = TutorialProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[440]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TutorialProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TutorialProgressRequest) ProtoMessage() {}

func (x *TutorialProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[440]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TutorialProgressRequest.ProtoReflect.Descriptor instead.
func (*TutorialProgressRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{440}
}

func (x *TutorialProgressRequest) GetType() penum.TutorialType {
	if x != nil {
		return x.Type
	}
	return penum.TutorialType(0)
}

func (x *TutorialProgressRequest) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type ItemExchangeIdolCardPieceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardResults  []*pcommon.RewardResult `protobuf:"bytes,1,rep,name=rewardResults,proto3" json:"rewardResults,omitempty"`
	CommonResponse *papicommon.Response    `protobuf:"bytes,9999,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
}

func (x *ItemExchangeIdolCardPieceResponse) Reset() {
	*x = ItemExchangeIdolCardPieceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[441]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemExchangeIdolCardPieceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemExchangeIdolCardPieceResponse) ProtoMessage() {}

func (x *ItemExchangeIdolCardPieceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[441]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemExchangeIdolCardPieceResponse.ProtoReflect.Descriptor instead.
func (*ItemExchangeIdolCardPieceResponse) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{441}
}

func (x *ItemExchangeIdolCardPieceResponse) GetRewardResults() []*pcommon.RewardResult {
	if x != nil {
		return x.RewardResults
	}
	return nil
}

func (x *ItemExchangeIdolCardPieceResponse) GetCommonResponse() *papicommon.Response {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

type MeishiFollowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicUserId string `protobuf:"bytes,1,opt,name=publicUserId,proto3" json:"publicUserId,omitempty"`
}

func (x *MeishiFollowRequest) Reset() {
	*x = MeishiFollowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[442]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiFollowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiFollowRequest) ProtoMessage() {}

func (x *MeishiFollowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[442]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiFollowRequest.ProtoReflect.Descriptor instead.
func (*MeishiFollowRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{442}
}

func (x *MeishiFollowRequest) GetPublicUserId() string {
	if x != nil {
		return x.PublicUserId
	}
	return ""
}

type ProfileUpdateBirthdayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month int32 `protobuf:"varint,1,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *ProfileUpdateBirthdayRequest) Reset() {
	*x = ProfileUpdateBirthdayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[443]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateBirthdayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateBirthdayRequest) ProtoMessage() {}

func (x *ProfileUpdateBirthdayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[443]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateBirthdayRequest.ProtoReflect.Descriptor instead.
func (*ProfileUpdateBirthdayRequest) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{443}
}

func (x *ProfileUpdateBirthdayRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *ProfileUpdateBirthdayRequest) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type SeminarListExamResponse_Exam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IdolCardId        string            `protobuf:"bytes,3,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	New               bool              `protobuf:"varint,4,opt,name=new,proto3" json:"new,omitempty"`
	Play              bool              `protobuf:"varint,5,opt,name=play,proto3" json:"play,omitempty"`
	Clear             bool              `protobuf:"varint,6,opt,name=clear,proto3" json:"clear,omitempty"`
	Unlock            bool              `protobuf:"varint,7,opt,name=unlock,proto3" json:"unlock,omitempty"`
	UnlockDescription string            `protobuf:"bytes,8,opt,name=unlockDescription,proto3" json:"unlockDescription,omitempty"`
	Rewards           []*pcommon.Reward `protobuf:"bytes,9,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *SeminarListExamResponse_Exam) Reset() {
	*x = SeminarListExamResponse_Exam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[444]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarListExamResponse_Exam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarListExamResponse_Exam) ProtoMessage() {}

func (x *SeminarListExamResponse_Exam) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[444]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarListExamResponse_Exam.ProtoReflect.Descriptor instead.
func (*SeminarListExamResponse_Exam) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{12, 0}
}

func (x *SeminarListExamResponse_Exam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SeminarListExamResponse_Exam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeminarListExamResponse_Exam) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *SeminarListExamResponse_Exam) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *SeminarListExamResponse_Exam) GetPlay() bool {
	if x != nil {
		return x.Play
	}
	return false
}

func (x *SeminarListExamResponse_Exam) GetClear() bool {
	if x != nil {
		return x.Clear
	}
	return false
}

func (x *SeminarListExamResponse_Exam) GetUnlock() bool {
	if x != nil {
		return x.Unlock
	}
	return false
}

func (x *SeminarListExamResponse_Exam) GetUnlockDescription() string {
	if x != nil {
		return x.UnlockDescription
	}
	return ""
}

func (x *SeminarListExamResponse_Exam) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type SeminarListExamResponse_ExamGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Exams             []*SeminarListExamResponse_Exam `protobuf:"bytes,3,rep,name=exams,proto3" json:"exams,omitempty"`
	Unlock            bool                            `protobuf:"varint,4,opt,name=unlock,proto3" json:"unlock,omitempty"`
	UnlockDescription string                          `protobuf:"bytes,5,opt,name=unlockDescription,proto3" json:"unlockDescription,omitempty"`
	Order             int32                           `protobuf:"varint,99,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *SeminarListExamResponse_ExamGroup) Reset() {
	*x = SeminarListExamResponse_ExamGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[445]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarListExamResponse_ExamGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarListExamResponse_ExamGroup) ProtoMessage() {}

func (x *SeminarListExamResponse_ExamGroup) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[445]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarListExamResponse_ExamGroup.ProtoReflect.Descriptor instead.
func (*SeminarListExamResponse_ExamGroup) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{12, 1}
}

func (x *SeminarListExamResponse_ExamGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SeminarListExamResponse_ExamGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeminarListExamResponse_ExamGroup) GetExams() []*SeminarListExamResponse_Exam {
	if x != nil {
		return x.Exams
	}
	return nil
}

func (x *SeminarListExamResponse_ExamGroup) GetUnlock() bool {
	if x != nil {
		return x.Unlock
	}
	return false
}

func (x *SeminarListExamResponse_ExamGroup) GetUnlockDescription() string {
	if x != nil {
		return x.UnlockDescription
	}
	return ""
}

func (x *SeminarListExamResponse_ExamGroup) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type LoginBonusCheckResponse_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                    penum.LoginBonusType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.LoginBonusType" json:"type,omitempty"`
	Name                    string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description             string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TitleAssetId            string               `protobuf:"bytes,4,opt,name=titleAssetId,proto3" json:"titleAssetId,omitempty"`
	BackgroundAssetId       string               `protobuf:"bytes,5,opt,name=backgroundAssetId,proto3" json:"backgroundAssetId,omitempty"`
	StartLoginBonusMotionId string               `protobuf:"bytes,6,opt,name=startLoginBonusMotionId,proto3" json:"startLoginBonusMotionId,omitempty"`
	EndLoginBonusMotionId   string               `protobuf:"bytes,7,opt,name=endLoginBonusMotionId,proto3" json:"endLoginBonusMotionId,omitempty"`
	OpenConditionSetId      string               `protobuf:"bytes,8,opt,name=openConditionSetId,proto3" json:"openConditionSetId,omitempty"`
	Rewards                 []*pcommon.Reward    `protobuf:"bytes,9,rep,name=rewards,proto3" json:"rewards,omitempty"`
	Days                    int32                `protobuf:"varint,10,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *LoginBonusCheckResponse_Info) Reset() {
	*x = LoginBonusCheckResponse_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[446]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBonusCheckResponse_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBonusCheckResponse_Info) ProtoMessage() {}

func (x *LoginBonusCheckResponse_Info) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[446]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBonusCheckResponse_Info.ProtoReflect.Descriptor instead.
func (*LoginBonusCheckResponse_Info) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{24, 0}
}

func (x *LoginBonusCheckResponse_Info) GetType() penum.LoginBonusType {
	if x != nil {
		return x.Type
	}
	return penum.LoginBonusType(0)
}

func (x *LoginBonusCheckResponse_Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginBonusCheckResponse_Info) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LoginBonusCheckResponse_Info) GetTitleAssetId() string {
	if x != nil {
		return x.TitleAssetId
	}
	return ""
}

func (x *LoginBonusCheckResponse_Info) GetBackgroundAssetId() string {
	if x != nil {
		return x.BackgroundAssetId
	}
	return ""
}

func (x *LoginBonusCheckResponse_Info) GetStartLoginBonusMotionId() string {
	if x != nil {
		return x.StartLoginBonusMotionId
	}
	return ""
}

func (x *LoginBonusCheckResponse_Info) GetEndLoginBonusMotionId() string {
	if x != nil {
		return x.EndLoginBonusMotionId
	}
	return ""
}

func (x *LoginBonusCheckResponse_Info) GetOpenConditionSetId() string {
	if x != nil {
		return x.OpenConditionSetId
	}
	return ""
}

func (x *LoginBonusCheckResponse_Info) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *LoginBonusCheckResponse_Info) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type LoginBonusCheckResponse_TotalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days                    int32           `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"`
	NextDays                int32           `protobuf:"varint,2,opt,name=nextDays,proto3" json:"nextDays,omitempty"`
	StartLoginBonusMotionId string          `protobuf:"bytes,3,opt,name=startLoginBonusMotionId,proto3" json:"startLoginBonusMotionId,omitempty"`
	EndLoginBonusMotionId   string          `protobuf:"bytes,4,opt,name=endLoginBonusMotionId,proto3" json:"endLoginBonusMotionId,omitempty"`
	Reward                  *pcommon.Reward `protobuf:"bytes,5,opt,name=reward,proto3" json:"reward,omitempty"`
	NextReward              *pcommon.Reward `protobuf:"bytes,6,opt,name=nextReward,proto3" json:"nextReward,omitempty"`
}

func (x *LoginBonusCheckResponse_TotalInfo) Reset() {
	*x = LoginBonusCheckResponse_TotalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[447]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBonusCheckResponse_TotalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBonusCheckResponse_TotalInfo) ProtoMessage() {}

func (x *LoginBonusCheckResponse_TotalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[447]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBonusCheckResponse_TotalInfo.ProtoReflect.Descriptor instead.
func (*LoginBonusCheckResponse_TotalInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{24, 1}
}

func (x *LoginBonusCheckResponse_TotalInfo) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *LoginBonusCheckResponse_TotalInfo) GetNextDays() int32 {
	if x != nil {
		return x.NextDays
	}
	return 0
}

func (x *LoginBonusCheckResponse_TotalInfo) GetStartLoginBonusMotionId() string {
	if x != nil {
		return x.StartLoginBonusMotionId
	}
	return ""
}

func (x *LoginBonusCheckResponse_TotalInfo) GetEndLoginBonusMotionId() string {
	if x != nil {
		return x.EndLoginBonusMotionId
	}
	return ""
}

func (x *LoginBonusCheckResponse_TotalInfo) GetReward() *pcommon.Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *LoginBonusCheckResponse_TotalInfo) GetNextReward() *pcommon.Reward {
	if x != nil {
		return x.NextReward
	}
	return nil
}

type HomeLoginResponse_FriendResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedFriendCoinQuantity int32 `protobuf:"varint,1,opt,name=receivedFriendCoinQuantity,proto3" json:"receivedFriendCoinQuantity,omitempty"`
	SupportCardRentalCount     int32 `protobuf:"varint,2,opt,name=supportCardRentalCount,proto3" json:"supportCardRentalCount,omitempty"`
	MemoryRentalCount          int32 `protobuf:"varint,3,opt,name=memoryRentalCount,proto3" json:"memoryRentalCount,omitempty"`
}

func (x *HomeLoginResponse_FriendResult) Reset() {
	*x = HomeLoginResponse_FriendResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[448]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeLoginResponse_FriendResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeLoginResponse_FriendResult) ProtoMessage() {}

func (x *HomeLoginResponse_FriendResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[448]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeLoginResponse_FriendResult.ProtoReflect.Descriptor instead.
func (*HomeLoginResponse_FriendResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{26, 0}
}

func (x *HomeLoginResponse_FriendResult) GetReceivedFriendCoinQuantity() int32 {
	if x != nil {
		return x.ReceivedFriendCoinQuantity
	}
	return 0
}

func (x *HomeLoginResponse_FriendResult) GetSupportCardRentalCount() int32 {
	if x != nil {
		return x.SupportCardRentalCount
	}
	return 0
}

func (x *HomeLoginResponse_FriendResult) GetMemoryRentalCount() int32 {
	if x != nil {
		return x.MemoryRentalCount
	}
	return 0
}

type PvpRateListHistoryResponse_PvpRateHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayTimeUnixMilli int64                        `protobuf:"varint,1,opt,name=playTimeUnixMilli,proto3" json:"playTimeUnixMilli,omitempty"`
	RivalPublicUserId string                       `protobuf:"bytes,2,opt,name=rivalPublicUserId,proto3" json:"rivalPublicUserId,omitempty"`
	RivalName         string                       `protobuf:"bytes,3,opt,name=rivalName,proto3" json:"rivalName,omitempty"`
	SelfFormations    []*PvpRateUnitStageFormation `protobuf:"bytes,4,rep,name=selfFormations,proto3" json:"selfFormations,omitempty"`
	RivalFormations   []*PvpRateUnitStageFormation `protobuf:"bytes,5,rep,name=rivalFormations,proto3" json:"rivalFormations,omitempty"`
	IsWin             bool                         `protobuf:"varint,6,opt,name=isWin,proto3" json:"isWin,omitempty"`
	IsWinStages       []bool                       `protobuf:"varint,7,rep,packed,name=isWinStages,proto3" json:"isWinStages,omitempty"`
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) Reset() {
	*x = PvpRateListHistoryResponse_PvpRateHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[449]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateListHistoryResponse_PvpRateHistory) ProtoMessage() {}

func (x *PvpRateListHistoryResponse_PvpRateHistory) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[449]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateListHistoryResponse_PvpRateHistory.ProtoReflect.Descriptor instead.
func (*PvpRateListHistoryResponse_PvpRateHistory) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{51, 0}
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) GetPlayTimeUnixMilli() int64 {
	if x != nil {
		return x.PlayTimeUnixMilli
	}
	return 0
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) GetRivalPublicUserId() string {
	if x != nil {
		return x.RivalPublicUserId
	}
	return ""
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) GetRivalName() string {
	if x != nil {
		return x.RivalName
	}
	return ""
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) GetSelfFormations() []*PvpRateUnitStageFormation {
	if x != nil {
		return x.SelfFormations
	}
	return nil
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) GetRivalFormations() []*PvpRateUnitStageFormation {
	if x != nil {
		return x.RivalFormations
	}
	return nil
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) GetIsWin() bool {
	if x != nil {
		return x.IsWin
	}
	return false
}

func (x *PvpRateListHistoryResponse_PvpRateHistory) GetIsWinStages() []bool {
	if x != nil {
		return x.IsWinStages
	}
	return nil
}

type GiftListHistoryResponse_UserGiftHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGiftId   string             `protobuf:"bytes,1,opt,name=userGiftId,proto3" json:"userGiftId,omitempty"`
	ResourceType penum.ResourceType `protobuf:"varint,2,opt,name=resourceType,proto3,enum=penum.ResourceType" json:"resourceType,omitempty"`
	ResourceId   string             `protobuf:"bytes,3,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Quantity     int32              `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Message      string             `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	SentTime     int64              `protobuf:"varint,7,opt,name=sentTime,proto3" json:"sentTime,omitempty"`
	ReceivedTime int64              `protobuf:"varint,6,opt,name=receivedTime,proto3" json:"receivedTime,omitempty"`
}

func (x *GiftListHistoryResponse_UserGiftHistory) Reset() {
	*x = GiftListHistoryResponse_UserGiftHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[450]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftListHistoryResponse_UserGiftHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftListHistoryResponse_UserGiftHistory) ProtoMessage() {}

func (x *GiftListHistoryResponse_UserGiftHistory) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[450]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftListHistoryResponse_UserGiftHistory.ProtoReflect.Descriptor instead.
func (*GiftListHistoryResponse_UserGiftHistory) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{70, 0}
}

func (x *GiftListHistoryResponse_UserGiftHistory) GetUserGiftId() string {
	if x != nil {
		return x.UserGiftId
	}
	return ""
}

func (x *GiftListHistoryResponse_UserGiftHistory) GetResourceType() penum.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ResourceType(0)
}

func (x *GiftListHistoryResponse_UserGiftHistory) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *GiftListHistoryResponse_UserGiftHistory) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GiftListHistoryResponse_UserGiftHistory) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GiftListHistoryResponse_UserGiftHistory) GetSentTime() int64 {
	if x != nil {
		return x.SentTime
	}
	return 0
}

func (x *GiftListHistoryResponse_UserGiftHistory) GetReceivedTime() int64 {
	if x != nil {
		return x.ReceivedTime
	}
	return 0
}

type MeishiListResponse_MeishiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32           `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Order  int32           `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Meishi *pcommon.Meishi `protobuf:"bytes,10,opt,name=meishi,proto3" json:"meishi,omitempty"`
}

func (x *MeishiListResponse_MeishiInfo) Reset() {
	*x = MeishiListResponse_MeishiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[451]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiListResponse_MeishiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiListResponse_MeishiInfo) ProtoMessage() {}

func (x *MeishiListResponse_MeishiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[451]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiListResponse_MeishiInfo.ProtoReflect.Descriptor instead.
func (*MeishiListResponse_MeishiInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{71, 0}
}

func (x *MeishiListResponse_MeishiInfo) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *MeishiListResponse_MeishiInfo) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *MeishiListResponse_MeishiInfo) GetMeishi() *pcommon.Meishi {
	if x != nil {
		return x.Meishi
	}
	return nil
}

type ProduceHighScoreRankingResponse_Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank           int32                  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Score          int32                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Grade          penum.ResultGrade      `protobuf:"varint,4,opt,name=grade,proto3,enum=penum.ResultGrade" json:"grade,omitempty"`
	IdolCardId     string                 `protobuf:"bytes,5,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	IdolCardSkinId string                 `protobuf:"bytes,6,opt,name=idolCardSkinId,proto3" json:"idolCardSkinId,omitempty"`
	UserMemoryId   string                 `protobuf:"bytes,7,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	Profile        *pcommon.SimpleProfile `protobuf:"bytes,99,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *ProduceHighScoreRankingResponse_Rank) Reset() {
	*x = ProduceHighScoreRankingResponse_Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[452]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceHighScoreRankingResponse_Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceHighScoreRankingResponse_Rank) ProtoMessage() {}

func (x *ProduceHighScoreRankingResponse_Rank) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[452]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceHighScoreRankingResponse_Rank.ProtoReflect.Descriptor instead.
func (*ProduceHighScoreRankingResponse_Rank) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{74, 0}
}

func (x *ProduceHighScoreRankingResponse_Rank) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProduceHighScoreRankingResponse_Rank) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProduceHighScoreRankingResponse_Rank) GetGrade() penum.ResultGrade {
	if x != nil {
		return x.Grade
	}
	return penum.ResultGrade(0)
}

func (x *ProduceHighScoreRankingResponse_Rank) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *ProduceHighScoreRankingResponse_Rank) GetIdolCardSkinId() string {
	if x != nil {
		return x.IdolCardSkinId
	}
	return ""
}

func (x *ProduceHighScoreRankingResponse_Rank) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *ProduceHighScoreRankingResponse_Rank) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type AuthSendConsentRequest_Consent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsentType   penum.ConsentType          `protobuf:"varint,1,opt,name=consentType,proto3,enum=penum.ConsentType" json:"consentType,omitempty"`
	AgreementType penum.ConsentAgreementType `protobuf:"varint,2,opt,name=agreementType,proto3,enum=penum.ConsentAgreementType" json:"agreementType,omitempty"`
}

func (x *AuthSendConsentRequest_Consent) Reset() {
	*x = AuthSendConsentRequest_Consent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[453]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSendConsentRequest_Consent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSendConsentRequest_Consent) ProtoMessage() {}

func (x *AuthSendConsentRequest_Consent) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[453]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSendConsentRequest_Consent.ProtoReflect.Descriptor instead.
func (*AuthSendConsentRequest_Consent) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{75, 0}
}

func (x *AuthSendConsentRequest_Consent) GetConsentType() penum.ConsentType {
	if x != nil {
		return x.ConsentType
	}
	return penum.ConsentType(0)
}

func (x *AuthSendConsentRequest_Consent) GetAgreementType() penum.ConsentAgreementType {
	if x != nil {
		return x.AgreementType
	}
	return penum.ConsentAgreementType(0)
}

type MeishiUpdateRequest_MeishiBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LayoutNumber      int32  `protobuf:"varint,1,opt,name=layoutNumber,proto3" json:"layoutNumber,omitempty"`
	Vertical          bool   `protobuf:"varint,2,opt,name=vertical,proto3" json:"vertical,omitempty"`
	BeforeIdolCardId  string `protobuf:"bytes,10,opt,name=beforeIdolCardId,proto3" json:"beforeIdolCardId,omitempty"`
	AfterIdolCardId   string `protobuf:"bytes,11,opt,name=afterIdolCardId,proto3" json:"afterIdolCardId,omitempty"`
	SupportCardId     string `protobuf:"bytes,12,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	MeishiBaseAssetId string `protobuf:"bytes,13,opt,name=meishiBaseAssetId,proto3" json:"meishiBaseAssetId,omitempty"`
	UserMemoryId      string `protobuf:"bytes,14,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	UserPhotoId       string `protobuf:"bytes,15,opt,name=userPhotoId,proto3" json:"userPhotoId,omitempty"`
	UserMovieId       string `protobuf:"bytes,16,opt,name=userMovieId,proto3" json:"userMovieId,omitempty"`
	MeishiBaseColorId string `protobuf:"bytes,17,opt,name=meishiBaseColorId,proto3" json:"meishiBaseColorId,omitempty"`
}

func (x *MeishiUpdateRequest_MeishiBase) Reset() {
	*x = MeishiUpdateRequest_MeishiBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[454]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiUpdateRequest_MeishiBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiUpdateRequest_MeishiBase) ProtoMessage() {}

func (x *MeishiUpdateRequest_MeishiBase) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[454]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiUpdateRequest_MeishiBase.ProtoReflect.Descriptor instead.
func (*MeishiUpdateRequest_MeishiBase) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{90, 0}
}

func (x *MeishiUpdateRequest_MeishiBase) GetLayoutNumber() int32 {
	if x != nil {
		return x.LayoutNumber
	}
	return 0
}

func (x *MeishiUpdateRequest_MeishiBase) GetVertical() bool {
	if x != nil {
		return x.Vertical
	}
	return false
}

func (x *MeishiUpdateRequest_MeishiBase) GetBeforeIdolCardId() string {
	if x != nil {
		return x.BeforeIdolCardId
	}
	return ""
}

func (x *MeishiUpdateRequest_MeishiBase) GetAfterIdolCardId() string {
	if x != nil {
		return x.AfterIdolCardId
	}
	return ""
}

func (x *MeishiUpdateRequest_MeishiBase) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *MeishiUpdateRequest_MeishiBase) GetMeishiBaseAssetId() string {
	if x != nil {
		return x.MeishiBaseAssetId
	}
	return ""
}

func (x *MeishiUpdateRequest_MeishiBase) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *MeishiUpdateRequest_MeishiBase) GetUserPhotoId() string {
	if x != nil {
		return x.UserPhotoId
	}
	return ""
}

func (x *MeishiUpdateRequest_MeishiBase) GetUserMovieId() string {
	if x != nil {
		return x.UserMovieId
	}
	return ""
}

func (x *MeishiUpdateRequest_MeishiBase) GetMeishiBaseColorId() string {
	if x != nil {
		return x.MeishiBaseColorId
	}
	return ""
}

type MeishiUpdateRequest_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectType                penum.MeishiObjectType `protobuf:"varint,1,opt,name=objectType,proto3,enum=penum.MeishiObjectType" json:"objectType,omitempty"`
	Vertical                  bool                   `protobuf:"varint,11,opt,name=vertical,proto3" json:"vertical,omitempty"`
	DisplayPublicUserId       bool                   `protobuf:"varint,20,opt,name=displayPublicUserId,proto3" json:"displayPublicUserId,omitempty"`
	DisplayPvpRateGrade       bool                   `protobuf:"varint,22,opt,name=displayPvpRateGrade,proto3" json:"displayPvpRateGrade,omitempty"`
	DisplayProducerLevels     bool                   `protobuf:"varint,24,opt,name=displayProducerLevels,proto3" json:"displayProducerLevels,omitempty"`
	DisplayFanCounts          bool                   `protobuf:"varint,26,opt,name=displayFanCounts,proto3" json:"displayFanCounts,omitempty"`
	DisplayComment            bool                   `protobuf:"varint,28,opt,name=displayComment,proto3" json:"displayComment,omitempty"`
	AchievementId             string                 `protobuf:"bytes,40,opt,name=achievementId,proto3" json:"achievementId,omitempty"`
	MeishiIllustrationAssetId string                 `protobuf:"bytes,51,opt,name=meishiIllustrationAssetId,proto3" json:"meishiIllustrationAssetId,omitempty"`
	MeishiTextColorId         string                 `protobuf:"bytes,100,opt,name=meishiTextColorId,proto3" json:"meishiTextColorId,omitempty"`
	PositionX                 int32                  `protobuf:"varint,101,opt,name=positionX,proto3" json:"positionX,omitempty"`
	PositionY                 int32                  `protobuf:"varint,102,opt,name=positionY,proto3" json:"positionY,omitempty"`
	Size                      int32                  `protobuf:"varint,103,opt,name=size,proto3" json:"size,omitempty"`
	Lock                      bool                   `protobuf:"varint,104,opt,name=lock,proto3" json:"lock,omitempty"`
	Background                bool                   `protobuf:"varint,105,opt,name=background,proto3" json:"background,omitempty"`
	Layer                     int32                  `protobuf:"varint,106,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *MeishiUpdateRequest_Object) Reset() {
	*x = MeishiUpdateRequest_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[455]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiUpdateRequest_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiUpdateRequest_Object) ProtoMessage() {}

func (x *MeishiUpdateRequest_Object) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[455]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiUpdateRequest_Object.ProtoReflect.Descriptor instead.
func (*MeishiUpdateRequest_Object) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{90, 1}
}

func (x *MeishiUpdateRequest_Object) GetObjectType() penum.MeishiObjectType {
	if x != nil {
		return x.ObjectType
	}
	return penum.MeishiObjectType(0)
}

func (x *MeishiUpdateRequest_Object) GetVertical() bool {
	if x != nil {
		return x.Vertical
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetDisplayPublicUserId() bool {
	if x != nil {
		return x.DisplayPublicUserId
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetDisplayPvpRateGrade() bool {
	if x != nil {
		return x.DisplayPvpRateGrade
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetDisplayProducerLevels() bool {
	if x != nil {
		return x.DisplayProducerLevels
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetDisplayFanCounts() bool {
	if x != nil {
		return x.DisplayFanCounts
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetDisplayComment() bool {
	if x != nil {
		return x.DisplayComment
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

func (x *MeishiUpdateRequest_Object) GetMeishiIllustrationAssetId() string {
	if x != nil {
		return x.MeishiIllustrationAssetId
	}
	return ""
}

func (x *MeishiUpdateRequest_Object) GetMeishiTextColorId() string {
	if x != nil {
		return x.MeishiTextColorId
	}
	return ""
}

func (x *MeishiUpdateRequest_Object) GetPositionX() int32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *MeishiUpdateRequest_Object) GetPositionY() int32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *MeishiUpdateRequest_Object) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MeishiUpdateRequest_Object) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetBackground() bool {
	if x != nil {
		return x.Background
	}
	return false
}

func (x *MeishiUpdateRequest_Object) GetLayer() int32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

type GuildTopResponse_HomeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicGuildId             string                                          `protobuf:"bytes,1,opt,name=publicGuildId,proto3" json:"publicGuildId,omitempty"`
	Name                      string                                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Achievement               *pcommon.Achievement                            `protobuf:"bytes,3,opt,name=achievement,proto3" json:"achievement,omitempty"`
	IsAutoApproveJoinRequest  bool                                            `protobuf:"varint,4,opt,name=isAutoApproveJoinRequest,proto3" json:"isAutoApproveJoinRequest,omitempty"`
	ActivityPolicyType        penum.GuildActivityPolicyType                   `protobuf:"varint,5,opt,name=activityPolicyType,proto3,enum=penum.GuildActivityPolicyType" json:"activityPolicyType,omitempty"`
	Description               string                                          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	LeaderMessage             string                                          `protobuf:"bytes,7,opt,name=leaderMessage,proto3" json:"leaderMessage,omitempty"`
	LeaderMessageEditedTime   int64                                           `protobuf:"varint,8,opt,name=leaderMessageEditedTime,proto3" json:"leaderMessageEditedTime,omitempty"`
	LeaderMessageBySystem     bool                                            `protobuf:"varint,9,opt,name=leaderMessageBySystem,proto3" json:"leaderMessageBySystem,omitempty"`
	IsLeaderMessageUpdated    bool                                            `protobuf:"varint,10,opt,name=isLeaderMessageUpdated,proto3" json:"isLeaderMessageUpdated,omitempty"`
	LeaderMessageReactionList []*GuildReactionInfo                            `protobuf:"bytes,11,rep,name=leaderMessageReactionList,proto3" json:"leaderMessageReactionList,omitempty"`
	MemberList                []*GuildMemberInfo                              `protobuf:"bytes,12,rep,name=memberList,proto3" json:"memberList,omitempty"`
	JoinRequestList           []*GuildMemberInfo                              `protobuf:"bytes,13,rep,name=joinRequestList,proto3" json:"joinRequestList,omitempty"`
	DonationRequestList       []*DonationRequest                              `protobuf:"bytes,14,rep,name=donationRequestList,proto3" json:"donationRequestList,omitempty"`
	ReceivedDonationInfo      *GuildTopResponse_HomeInfo_ReceivedDonationInfo `protobuf:"bytes,15,opt,name=receivedDonationInfo,proto3" json:"receivedDonationInfo,omitempty"`
}

func (x *GuildTopResponse_HomeInfo) Reset() {
	*x = GuildTopResponse_HomeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[456]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTopResponse_HomeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTopResponse_HomeInfo) ProtoMessage() {}

func (x *GuildTopResponse_HomeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[456]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTopResponse_HomeInfo.ProtoReflect.Descriptor instead.
func (*GuildTopResponse_HomeInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{98, 0}
}

func (x *GuildTopResponse_HomeInfo) GetPublicGuildId() string {
	if x != nil {
		return x.PublicGuildId
	}
	return ""
}

func (x *GuildTopResponse_HomeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildTopResponse_HomeInfo) GetAchievement() *pcommon.Achievement {
	if x != nil {
		return x.Achievement
	}
	return nil
}

func (x *GuildTopResponse_HomeInfo) GetIsAutoApproveJoinRequest() bool {
	if x != nil {
		return x.IsAutoApproveJoinRequest
	}
	return false
}

func (x *GuildTopResponse_HomeInfo) GetActivityPolicyType() penum.GuildActivityPolicyType {
	if x != nil {
		return x.ActivityPolicyType
	}
	return penum.GuildActivityPolicyType(0)
}

func (x *GuildTopResponse_HomeInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuildTopResponse_HomeInfo) GetLeaderMessage() string {
	if x != nil {
		return x.LeaderMessage
	}
	return ""
}

func (x *GuildTopResponse_HomeInfo) GetLeaderMessageEditedTime() int64 {
	if x != nil {
		return x.LeaderMessageEditedTime
	}
	return 0
}

func (x *GuildTopResponse_HomeInfo) GetLeaderMessageBySystem() bool {
	if x != nil {
		return x.LeaderMessageBySystem
	}
	return false
}

func (x *GuildTopResponse_HomeInfo) GetIsLeaderMessageUpdated() bool {
	if x != nil {
		return x.IsLeaderMessageUpdated
	}
	return false
}

func (x *GuildTopResponse_HomeInfo) GetLeaderMessageReactionList() []*GuildReactionInfo {
	if x != nil {
		return x.LeaderMessageReactionList
	}
	return nil
}

func (x *GuildTopResponse_HomeInfo) GetMemberList() []*GuildMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *GuildTopResponse_HomeInfo) GetJoinRequestList() []*GuildMemberInfo {
	if x != nil {
		return x.JoinRequestList
	}
	return nil
}

func (x *GuildTopResponse_HomeInfo) GetDonationRequestList() []*DonationRequest {
	if x != nil {
		return x.DonationRequestList
	}
	return nil
}

func (x *GuildTopResponse_HomeInfo) GetReceivedDonationInfo() *GuildTopResponse_HomeInfo_ReceivedDonationInfo {
	if x != nil {
		return x.ReceivedDonationInfo
	}
	return nil
}

type GuildTopResponse_HomeInfo_ReceivedDonationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildDonationItemId string               `protobuf:"bytes,1,opt,name=guildDonationItemId,proto3" json:"guildDonationItemId,omitempty"`
	DonationList        []*GuildDonationInfo `protobuf:"bytes,2,rep,name=donationList,proto3" json:"donationList,omitempty"`
	TotalDonationCount  int32                `protobuf:"varint,3,opt,name=totalDonationCount,proto3" json:"totalDonationCount,omitempty"`
}

func (x *GuildTopResponse_HomeInfo_ReceivedDonationInfo) Reset() {
	*x = GuildTopResponse_HomeInfo_ReceivedDonationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[457]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildTopResponse_HomeInfo_ReceivedDonationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTopResponse_HomeInfo_ReceivedDonationInfo) ProtoMessage() {}

func (x *GuildTopResponse_HomeInfo_ReceivedDonationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[457]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTopResponse_HomeInfo_ReceivedDonationInfo.ProtoReflect.Descriptor instead.
func (*GuildTopResponse_HomeInfo_ReceivedDonationInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{98, 0, 0}
}

func (x *GuildTopResponse_HomeInfo_ReceivedDonationInfo) GetGuildDonationItemId() string {
	if x != nil {
		return x.GuildDonationItemId
	}
	return ""
}

func (x *GuildTopResponse_HomeInfo_ReceivedDonationInfo) GetDonationList() []*GuildDonationInfo {
	if x != nil {
		return x.DonationList
	}
	return nil
}

func (x *GuildTopResponse_HomeInfo_ReceivedDonationInfo) GetTotalDonationCount() int32 {
	if x != nil {
		return x.TotalDonationCount
	}
	return 0
}

type SystemCheckResponse_ReviewInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InReview    bool   `protobuf:"varint,1,opt,name=inReview,proto3" json:"inReview,omitempty"`
	ApiHost     string `protobuf:"bytes,2,opt,name=apiHost,proto3" json:"apiHost,omitempty"`
	OctoHost    string `protobuf:"bytes,3,opt,name=octoHost,proto3" json:"octoHost,omitempty"`
	OctoVersion int32  `protobuf:"varint,4,opt,name=octoVersion,proto3" json:"octoVersion,omitempty"`
}

func (x *SystemCheckResponse_ReviewInfo) Reset() {
	*x = SystemCheckResponse_ReviewInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[458]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckResponse_ReviewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckResponse_ReviewInfo) ProtoMessage() {}

func (x *SystemCheckResponse_ReviewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[458]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckResponse_ReviewInfo.ProtoReflect.Descriptor instead.
func (*SystemCheckResponse_ReviewInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{99, 0}
}

func (x *SystemCheckResponse_ReviewInfo) GetInReview() bool {
	if x != nil {
		return x.InReview
	}
	return false
}

func (x *SystemCheckResponse_ReviewInfo) GetApiHost() string {
	if x != nil {
		return x.ApiHost
	}
	return ""
}

func (x *SystemCheckResponse_ReviewInfo) GetOctoHost() string {
	if x != nil {
		return x.OctoHost
	}
	return ""
}

func (x *SystemCheckResponse_ReviewInfo) GetOctoVersion() int32 {
	if x != nil {
		return x.OctoVersion
	}
	return 0
}

type SystemCheckResponse_MaintenanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InMaintenance  bool   `protobuf:"varint,1,opt,name=inMaintenance,proto3" json:"inMaintenance,omitempty"`
	TopMessage     string `protobuf:"bytes,2,opt,name=topMessage,proto3" json:"topMessage,omitempty"`
	TimeMessage    string `protobuf:"bytes,3,opt,name=timeMessage,proto3" json:"timeMessage,omitempty"`
	BottomMessage  string `protobuf:"bytes,4,opt,name=bottomMessage,proto3" json:"bottomMessage,omitempty"`
	StartTime      int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime        int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	IsPrerelease   bool   `protobuf:"varint,7,opt,name=isPrerelease,proto3" json:"isPrerelease,omitempty"`
	PrereleaseHtml string `protobuf:"bytes,8,opt,name=prereleaseHtml,proto3" json:"prereleaseHtml,omitempty"`
}

func (x *SystemCheckResponse_MaintenanceInfo) Reset() {
	*x = SystemCheckResponse_MaintenanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[459]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCheckResponse_MaintenanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCheckResponse_MaintenanceInfo) ProtoMessage() {}

func (x *SystemCheckResponse_MaintenanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[459]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCheckResponse_MaintenanceInfo.ProtoReflect.Descriptor instead.
func (*SystemCheckResponse_MaintenanceInfo) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{99, 1}
}

func (x *SystemCheckResponse_MaintenanceInfo) GetInMaintenance() bool {
	if x != nil {
		return x.InMaintenance
	}
	return false
}

func (x *SystemCheckResponse_MaintenanceInfo) GetTopMessage() string {
	if x != nil {
		return x.TopMessage
	}
	return ""
}

func (x *SystemCheckResponse_MaintenanceInfo) GetTimeMessage() string {
	if x != nil {
		return x.TimeMessage
	}
	return ""
}

func (x *SystemCheckResponse_MaintenanceInfo) GetBottomMessage() string {
	if x != nil {
		return x.BottomMessage
	}
	return ""
}

func (x *SystemCheckResponse_MaintenanceInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SystemCheckResponse_MaintenanceInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SystemCheckResponse_MaintenanceInfo) GetIsPrerelease() bool {
	if x != nil {
		return x.IsPrerelease
	}
	return false
}

func (x *SystemCheckResponse_MaintenanceInfo) GetPrereleaseHtml() string {
	if x != nil {
		return x.PrereleaseHtml
	}
	return ""
}

type ShopTopResponse_Shop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EndTime       int64               `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	NextResetTime int64               `protobuf:"varint,3,opt,name=nextResetTime,proto3" json:"nextResetTime,omitempty"`
	ShopItems     []*pmaster.ShopItem `protobuf:"bytes,4,rep,name=shopItems,proto3" json:"shopItems,omitempty"`
}

func (x *ShopTopResponse_Shop) Reset() {
	*x = ShopTopResponse_Shop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[460]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopTopResponse_Shop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopTopResponse_Shop) ProtoMessage() {}

func (x *ShopTopResponse_Shop) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[460]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopTopResponse_Shop.ProtoReflect.Descriptor instead.
func (*ShopTopResponse_Shop) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{111, 0}
}

func (x *ShopTopResponse_Shop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShopTopResponse_Shop) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ShopTopResponse_Shop) GetNextResetTime() int64 {
	if x != nil {
		return x.NextResetTime
	}
	return 0
}

func (x *ShopTopResponse_Shop) GetShopItems() []*pmaster.ShopItem {
	if x != nil {
		return x.ShopItems
	}
	return nil
}

type GashaGetPointExchangeResponse_ExchangeResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number           int32             `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	RequiredQuantity int32             `protobuf:"varint,2,opt,name=requiredQuantity,proto3" json:"requiredQuantity,omitempty"`
	Rewards          []*pcommon.Reward `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *GashaGetPointExchangeResponse_ExchangeResource) Reset() {
	*x = GashaGetPointExchangeResponse_ExchangeResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[461]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaGetPointExchangeResponse_ExchangeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaGetPointExchangeResponse_ExchangeResource) ProtoMessage() {}

func (x *GashaGetPointExchangeResponse_ExchangeResource) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[461]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaGetPointExchangeResponse_ExchangeResource.ProtoReflect.Descriptor instead.
func (*GashaGetPointExchangeResponse_ExchangeResource) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{121, 0}
}

func (x *GashaGetPointExchangeResponse_ExchangeResource) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GashaGetPointExchangeResponse_ExchangeResource) GetRequiredQuantity() int32 {
	if x != nil {
		return x.RequiredQuantity
	}
	return 0
}

func (x *GashaGetPointExchangeResponse_ExchangeResource) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ProduceListRentalMemoryResponse_RentalMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile       *pcommon.SimpleProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	UserMemoryId  string                 `protobuf:"bytes,3,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	Following     bool                   `protobuf:"varint,4,opt,name=following,proto3" json:"following,omitempty"`
	FollowedBy    bool                   `protobuf:"varint,5,opt,name=followedBy,proto3" json:"followedBy,omitempty"`
	IsGuildMember bool                   `protobuf:"varint,6,opt,name=isGuildMember,proto3" json:"isGuildMember,omitempty"`
	Money         int32                  `protobuf:"varint,7,opt,name=money,proto3" json:"money,omitempty"`
	Memory        *pcommon.Memory        `protobuf:"bytes,100,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) Reset() {
	*x = ProduceListRentalMemoryResponse_RentalMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[462]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceListRentalMemoryResponse_RentalMemory) ProtoMessage() {}

func (x *ProduceListRentalMemoryResponse_RentalMemory) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[462]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceListRentalMemoryResponse_RentalMemory.ProtoReflect.Descriptor instead.
func (*ProduceListRentalMemoryResponse_RentalMemory) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{128, 0}
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) GetFollowedBy() bool {
	if x != nil {
		return x.FollowedBy
	}
	return false
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) GetIsGuildMember() bool {
	if x != nil {
		return x.IsGuildMember
	}
	return false
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) GetMoney() int32 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *ProduceListRentalMemoryResponse_RentalMemory) GetMemory() *pcommon.Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

type HomeEnterResponse_FeatureMaintenance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      penum.FeatureMaintenanceType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.FeatureMaintenanceType" json:"type,omitempty"`
	TargetIds []string                     `protobuf:"bytes,2,rep,name=targetIds,proto3" json:"targetIds,omitempty"`
	StartTime int64                        `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64                        `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *HomeEnterResponse_FeatureMaintenance) Reset() {
	*x = HomeEnterResponse_FeatureMaintenance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[463]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeEnterResponse_FeatureMaintenance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeEnterResponse_FeatureMaintenance) ProtoMessage() {}

func (x *HomeEnterResponse_FeatureMaintenance) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[463]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeEnterResponse_FeatureMaintenance.ProtoReflect.Descriptor instead.
func (*HomeEnterResponse_FeatureMaintenance) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{132, 0}
}

func (x *HomeEnterResponse_FeatureMaintenance) GetType() penum.FeatureMaintenanceType {
	if x != nil {
		return x.Type
	}
	return penum.FeatureMaintenanceType(0)
}

func (x *HomeEnterResponse_FeatureMaintenance) GetTargetIds() []string {
	if x != nil {
		return x.TargetIds
	}
	return nil
}

func (x *HomeEnterResponse_FeatureMaintenance) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HomeEnterResponse_FeatureMaintenance) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ProduceRankingTopResponse_Ranking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdolCardId              string            `protobuf:"bytes,1,opt,name=idolCardId,proto3" json:"idolCardId,omitempty"`
	TopRanks                []*ProduceRank    `protobuf:"bytes,2,rep,name=topRanks,proto3" json:"topRanks,omitempty"`
	SelfHighestScore        int32             `protobuf:"varint,3,opt,name=selfHighestScore,proto3" json:"selfHighestScore,omitempty"`
	SelfHighestRank         int32             `protobuf:"varint,4,opt,name=selfHighestRank,proto3" json:"selfHighestRank,omitempty"`
	SelfHighestGrade        penum.ResultGrade `protobuf:"varint,5,opt,name=selfHighestGrade,proto3,enum=penum.ResultGrade" json:"selfHighestGrade,omitempty"`
	SelfHighestUserMemoryId string            `protobuf:"bytes,6,opt,name=selfHighestUserMemoryId,proto3" json:"selfHighestUserMemoryId,omitempty"`
}

func (x *ProduceRankingTopResponse_Ranking) Reset() {
	*x = ProduceRankingTopResponse_Ranking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[464]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceRankingTopResponse_Ranking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceRankingTopResponse_Ranking) ProtoMessage() {}

func (x *ProduceRankingTopResponse_Ranking) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[464]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceRankingTopResponse_Ranking.ProtoReflect.Descriptor instead.
func (*ProduceRankingTopResponse_Ranking) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{138, 0}
}

func (x *ProduceRankingTopResponse_Ranking) GetIdolCardId() string {
	if x != nil {
		return x.IdolCardId
	}
	return ""
}

func (x *ProduceRankingTopResponse_Ranking) GetTopRanks() []*ProduceRank {
	if x != nil {
		return x.TopRanks
	}
	return nil
}

func (x *ProduceRankingTopResponse_Ranking) GetSelfHighestScore() int32 {
	if x != nil {
		return x.SelfHighestScore
	}
	return 0
}

func (x *ProduceRankingTopResponse_Ranking) GetSelfHighestRank() int32 {
	if x != nil {
		return x.SelfHighestRank
	}
	return 0
}

func (x *ProduceRankingTopResponse_Ranking) GetSelfHighestGrade() penum.ResultGrade {
	if x != nil {
		return x.SelfHighestGrade
	}
	return penum.ResultGrade(0)
}

func (x *ProduceRankingTopResponse_Ranking) GetSelfHighestUserMemoryId() string {
	if x != nil {
		return x.SelfHighestUserMemoryId
	}
	return ""
}

type ProfileGetResponse_ProduceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceType  penum.ProduceType `protobuf:"varint,1,opt,name=produceType,proto3,enum=penum.ProduceType" json:"produceType,omitempty"`
	TrueEndCount int32             `protobuf:"varint,2,opt,name=trueEndCount,proto3" json:"trueEndCount,omitempty"`
	HighScore    int32             `protobuf:"varint,3,opt,name=highScore,proto3" json:"highScore,omitempty"`
}

func (x *ProfileGetResponse_ProduceRecord) Reset() {
	*x = ProfileGetResponse_ProduceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[465]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileGetResponse_ProduceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileGetResponse_ProduceRecord) ProtoMessage() {}

func (x *ProfileGetResponse_ProduceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[465]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileGetResponse_ProduceRecord.ProtoReflect.Descriptor instead.
func (*ProfileGetResponse_ProduceRecord) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{143, 0}
}

func (x *ProfileGetResponse_ProduceRecord) GetProduceType() penum.ProduceType {
	if x != nil {
		return x.ProduceType
	}
	return penum.ProduceType(0)
}

func (x *ProfileGetResponse_ProduceRecord) GetTrueEndCount() int32 {
	if x != nil {
		return x.TrueEndCount
	}
	return 0
}

func (x *ProfileGetResponse_ProduceRecord) GetHighScore() int32 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

type SeminarEndExamRequest_Turn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Turn            int32    `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	ProduceCardIds  []string `protobuf:"bytes,2,rep,name=produceCardIds,proto3" json:"produceCardIds,omitempty"`
	ProduceDrinkIds []string `protobuf:"bytes,3,rep,name=produceDrinkIds,proto3" json:"produceDrinkIds,omitempty"`
}

func (x *SeminarEndExamRequest_Turn) Reset() {
	*x = SeminarEndExamRequest_Turn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[466]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarEndExamRequest_Turn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarEndExamRequest_Turn) ProtoMessage() {}

func (x *SeminarEndExamRequest_Turn) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[466]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarEndExamRequest_Turn.ProtoReflect.Descriptor instead.
func (*SeminarEndExamRequest_Turn) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{164, 0}
}

func (x *SeminarEndExamRequest_Turn) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *SeminarEndExamRequest_Turn) GetProduceCardIds() []string {
	if x != nil {
		return x.ProduceCardIds
	}
	return nil
}

func (x *SeminarEndExamRequest_Turn) GetProduceDrinkIds() []string {
	if x != nil {
		return x.ProduceDrinkIds
	}
	return nil
}

type TowerGetLayerResponse_Exam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamEffectType                  penum.ProduceExamEffectType `protobuf:"varint,1,opt,name=examEffectType,proto3,enum=penum.ProduceExamEffectType" json:"examEffectType,omitempty"`
	ParameterBaseLine               int32                       `protobuf:"varint,2,opt,name=parameterBaseLine,proto3" json:"parameterBaseLine,omitempty"`
	BaseScore                       int32                       `protobuf:"varint,3,opt,name=baseScore,proto3" json:"baseScore,omitempty"`
	ProduceItemIds                  []string                    `protobuf:"bytes,4,rep,name=produceItemIds,proto3" json:"produceItemIds,omitempty"`
	ProduceExamGimmickEffectGroupId string                      `protobuf:"bytes,5,opt,name=produceExamGimmickEffectGroupId,proto3" json:"produceExamGimmickEffectGroupId,omitempty"`
	ProduceExamBattleConfigId       string                      `protobuf:"bytes,6,opt,name=produceExamBattleConfigId,proto3" json:"produceExamBattleConfigId,omitempty"`
	ProduceExamBattleNpcGroupId     string                      `protobuf:"bytes,7,opt,name=produceExamBattleNpcGroupId,proto3" json:"produceExamBattleNpcGroupId,omitempty"`
}

func (x *TowerGetLayerResponse_Exam) Reset() {
	*x = TowerGetLayerResponse_Exam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[467]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerGetLayerResponse_Exam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerGetLayerResponse_Exam) ProtoMessage() {}

func (x *TowerGetLayerResponse_Exam) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[467]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerGetLayerResponse_Exam.ProtoReflect.Descriptor instead.
func (*TowerGetLayerResponse_Exam) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{170, 0}
}

func (x *TowerGetLayerResponse_Exam) GetExamEffectType() penum.ProduceExamEffectType {
	if x != nil {
		return x.ExamEffectType
	}
	return penum.ProduceExamEffectType(0)
}

func (x *TowerGetLayerResponse_Exam) GetParameterBaseLine() int32 {
	if x != nil {
		return x.ParameterBaseLine
	}
	return 0
}

func (x *TowerGetLayerResponse_Exam) GetBaseScore() int32 {
	if x != nil {
		return x.BaseScore
	}
	return 0
}

func (x *TowerGetLayerResponse_Exam) GetProduceItemIds() []string {
	if x != nil {
		return x.ProduceItemIds
	}
	return nil
}

func (x *TowerGetLayerResponse_Exam) GetProduceExamGimmickEffectGroupId() string {
	if x != nil {
		return x.ProduceExamGimmickEffectGroupId
	}
	return ""
}

func (x *TowerGetLayerResponse_Exam) GetProduceExamBattleConfigId() string {
	if x != nil {
		return x.ProduceExamBattleConfigId
	}
	return ""
}

func (x *TowerGetLayerResponse_Exam) GetProduceExamBattleNpcGroupId() string {
	if x != nil {
		return x.ProduceExamBattleNpcGroupId
	}
	return ""
}

type TowerListLayersResponse_TowerLayerRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank              int32                       `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	ExamBattleRank    int32                       `protobuf:"varint,2,opt,name=examBattleRank,proto3" json:"examBattleRank,omitempty"`
	ExamTriggerCounts []*pcommon.ExamTriggerCount `protobuf:"bytes,3,rep,name=examTriggerCounts,proto3" json:"examTriggerCounts,omitempty"`
	Reward            *pcommon.Reward             `protobuf:"bytes,4,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *TowerListLayersResponse_TowerLayerRank) Reset() {
	*x = TowerListLayersResponse_TowerLayerRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[468]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerListLayersResponse_TowerLayerRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerListLayersResponse_TowerLayerRank) ProtoMessage() {}

func (x *TowerListLayersResponse_TowerLayerRank) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[468]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerListLayersResponse_TowerLayerRank.ProtoReflect.Descriptor instead.
func (*TowerListLayersResponse_TowerLayerRank) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{171, 0}
}

func (x *TowerListLayersResponse_TowerLayerRank) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *TowerListLayersResponse_TowerLayerRank) GetExamBattleRank() int32 {
	if x != nil {
		return x.ExamBattleRank
	}
	return 0
}

func (x *TowerListLayersResponse_TowerLayerRank) GetExamTriggerCounts() []*pcommon.ExamTriggerCount {
	if x != nil {
		return x.ExamTriggerCounts
	}
	return nil
}

func (x *TowerListLayersResponse_TowerLayerRank) GetReward() *pcommon.Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type TowerListLayersResponse_TowerLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number               int32                                     `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	UnlockConditionSetId string                                    `protobuf:"bytes,2,opt,name=unlockConditionSetId,proto3" json:"unlockConditionSetId,omitempty"`
	ClearRank            int32                                     `protobuf:"varint,3,opt,name=clearRank,proto3" json:"clearRank,omitempty"`
	Ranks                []*TowerListLayersResponse_TowerLayerRank `protobuf:"bytes,4,rep,name=ranks,proto3" json:"ranks,omitempty"`
	Rewards              []*pcommon.Reward                         `protobuf:"bytes,5,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *TowerListLayersResponse_TowerLayer) Reset() {
	*x = TowerListLayersResponse_TowerLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[469]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerListLayersResponse_TowerLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerListLayersResponse_TowerLayer) ProtoMessage() {}

func (x *TowerListLayersResponse_TowerLayer) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[469]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerListLayersResponse_TowerLayer.ProtoReflect.Descriptor instead.
func (*TowerListLayersResponse_TowerLayer) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{171, 1}
}

func (x *TowerListLayersResponse_TowerLayer) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *TowerListLayersResponse_TowerLayer) GetUnlockConditionSetId() string {
	if x != nil {
		return x.UnlockConditionSetId
	}
	return ""
}

func (x *TowerListLayersResponse_TowerLayer) GetClearRank() int32 {
	if x != nil {
		return x.ClearRank
	}
	return 0
}

func (x *TowerListLayersResponse_TowerLayer) GetRanks() []*TowerListLayersResponse_TowerLayerRank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *TowerListLayersResponse_TowerLayer) GetRewards() []*pcommon.Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type PvpRateUnitStageFormation_Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainMemory            *pcommon.Memory `protobuf:"bytes,1,opt,name=mainMemory,proto3" json:"mainMemory,omitempty"`
	SubMemory             *pcommon.Memory `protobuf:"bytes,2,opt,name=subMemory,proto3" json:"subMemory,omitempty"`
	SupportBonusPermyriad int32           `protobuf:"varint,3,opt,name=supportBonusPermyriad,proto3" json:"supportBonusPermyriad,omitempty"`
	IsDefault             bool            `protobuf:"varint,4,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
}

func (x *PvpRateUnitStageFormation_Slot) Reset() {
	*x = PvpRateUnitStageFormation_Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[470]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvpRateUnitStageFormation_Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvpRateUnitStageFormation_Slot) ProtoMessage() {}

func (x *PvpRateUnitStageFormation_Slot) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[470]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvpRateUnitStageFormation_Slot.ProtoReflect.Descriptor instead.
func (*PvpRateUnitStageFormation_Slot) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{195, 0}
}

func (x *PvpRateUnitStageFormation_Slot) GetMainMemory() *pcommon.Memory {
	if x != nil {
		return x.MainMemory
	}
	return nil
}

func (x *PvpRateUnitStageFormation_Slot) GetSubMemory() *pcommon.Memory {
	if x != nil {
		return x.SubMemory
	}
	return nil
}

func (x *PvpRateUnitStageFormation_Slot) GetSupportBonusPermyriad() int32 {
	if x != nil {
		return x.SupportBonusPermyriad
	}
	return 0
}

func (x *PvpRateUnitStageFormation_Slot) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type HomeSetCharactersRequest_HomeCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeType    penum.HomeType `protobuf:"varint,1,opt,name=homeType,proto3,enum=penum.HomeType" json:"homeType,omitempty"`
	CharacterId string         `protobuf:"bytes,2,opt,name=characterId,proto3" json:"characterId,omitempty"`
}

func (x *HomeSetCharactersRequest_HomeCharacter) Reset() {
	*x = HomeSetCharactersRequest_HomeCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[471]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeSetCharactersRequest_HomeCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeSetCharactersRequest_HomeCharacter) ProtoMessage() {}

func (x *HomeSetCharactersRequest_HomeCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[471]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeSetCharactersRequest_HomeCharacter.ProtoReflect.Descriptor instead.
func (*HomeSetCharactersRequest_HomeCharacter) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{198, 0}
}

func (x *HomeSetCharactersRequest_HomeCharacter) GetHomeType() penum.HomeType {
	if x != nil {
		return x.HomeType
	}
	return penum.HomeType(0)
}

func (x *HomeSetCharactersRequest_HomeCharacter) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

type AuthLoginResponse_Term struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type penum.TermsType `protobuf:"varint,1,opt,name=type,proto3,enum=penum.TermsType" json:"type,omitempty"`
	Name string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url  string          `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AuthLoginResponse_Term) Reset() {
	*x = AuthLoginResponse_Term{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[472]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLoginResponse_Term) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLoginResponse_Term) ProtoMessage() {}

func (x *AuthLoginResponse_Term) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[472]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLoginResponse_Term.ProtoReflect.Descriptor instead.
func (*AuthLoginResponse_Term) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{245, 0}
}

func (x *AuthLoginResponse_Term) GetType() penum.TermsType {
	if x != nil {
		return x.Type
	}
	return penum.TermsType(0)
}

func (x *AuthLoginResponse_Term) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthLoginResponse_Term) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MissionReceiveResponse_MasterAchievementProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementId   string `protobuf:"bytes,1,opt,name=achievementId,proto3" json:"achievementId,omitempty"`
	BeforeThreshold int32  `protobuf:"varint,2,opt,name=beforeThreshold,proto3" json:"beforeThreshold,omitempty"`
	AfterThreshold  int32  `protobuf:"varint,3,opt,name=afterThreshold,proto3" json:"afterThreshold,omitempty"`
	Progress        int32  `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *MissionReceiveResponse_MasterAchievementProgress) Reset() {
	*x = MissionReceiveResponse_MasterAchievementProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[473]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveResponse_MasterAchievementProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveResponse_MasterAchievementProgress) ProtoMessage() {}

func (x *MissionReceiveResponse_MasterAchievementProgress) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[473]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveResponse_MasterAchievementProgress.ProtoReflect.Descriptor instead.
func (*MissionReceiveResponse_MasterAchievementProgress) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{249, 0}
}

func (x *MissionReceiveResponse_MasterAchievementProgress) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

func (x *MissionReceiveResponse_MasterAchievementProgress) GetBeforeThreshold() int32 {
	if x != nil {
		return x.BeforeThreshold
	}
	return 0
}

func (x *MissionReceiveResponse_MasterAchievementProgress) GetAfterThreshold() int32 {
	if x != nil {
		return x.AfterThreshold
	}
	return 0
}

func (x *MissionReceiveResponse_MasterAchievementProgress) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type MissionReceiveResponse_MasterAchievementProgressResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterAchievementId         string                                              `protobuf:"bytes,1,opt,name=masterAchievementId,proto3" json:"masterAchievementId,omitempty"`
	BeforeProgress              int32                                               `protobuf:"varint,2,opt,name=beforeProgress,proto3" json:"beforeProgress,omitempty"`
	AfterProgress               int32                                               `protobuf:"varint,3,opt,name=afterProgress,proto3" json:"afterProgress,omitempty"`
	MasterAchievementProgresses []*MissionReceiveResponse_MasterAchievementProgress `protobuf:"bytes,4,rep,name=masterAchievementProgresses,proto3" json:"masterAchievementProgresses,omitempty"`
}

func (x *MissionReceiveResponse_MasterAchievementProgressResult) Reset() {
	*x = MissionReceiveResponse_MasterAchievementProgressResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[474]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveResponse_MasterAchievementProgressResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveResponse_MasterAchievementProgressResult) ProtoMessage() {}

func (x *MissionReceiveResponse_MasterAchievementProgressResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[474]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveResponse_MasterAchievementProgressResult.ProtoReflect.Descriptor instead.
func (*MissionReceiveResponse_MasterAchievementProgressResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{249, 1}
}

func (x *MissionReceiveResponse_MasterAchievementProgressResult) GetMasterAchievementId() string {
	if x != nil {
		return x.MasterAchievementId
	}
	return ""
}

func (x *MissionReceiveResponse_MasterAchievementProgressResult) GetBeforeProgress() int32 {
	if x != nil {
		return x.BeforeProgress
	}
	return 0
}

func (x *MissionReceiveResponse_MasterAchievementProgressResult) GetAfterProgress() int32 {
	if x != nil {
		return x.AfterProgress
	}
	return 0
}

func (x *MissionReceiveResponse_MasterAchievementProgressResult) GetMasterAchievementProgresses() []*MissionReceiveResponse_MasterAchievementProgress {
	if x != nil {
		return x.MasterAchievementProgresses
	}
	return nil
}

type MissionReceiveRequest_MissionPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionPointId string  `protobuf:"bytes,1,opt,name=missionPointId,proto3" json:"missionPointId,omitempty"`
	Points         []int32 `protobuf:"varint,2,rep,packed,name=points,proto3" json:"points,omitempty"`
}

func (x *MissionReceiveRequest_MissionPoint) Reset() {
	*x = MissionReceiveRequest_MissionPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[475]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveRequest_MissionPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveRequest_MissionPoint) ProtoMessage() {}

func (x *MissionReceiveRequest_MissionPoint) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[475]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveRequest_MissionPoint.ProtoReflect.Descriptor instead.
func (*MissionReceiveRequest_MissionPoint) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{256, 0}
}

func (x *MissionReceiveRequest_MissionPoint) GetMissionPointId() string {
	if x != nil {
		return x.MissionPointId
	}
	return ""
}

func (x *MissionReceiveRequest_MissionPoint) GetPoints() []int32 {
	if x != nil {
		return x.Points
	}
	return nil
}

type MissionReceiveRequest_Mission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionId string `protobuf:"bytes,1,opt,name=missionId,proto3" json:"missionId,omitempty"`
	Threshold int32  `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *MissionReceiveRequest_Mission) Reset() {
	*x = MissionReceiveRequest_Mission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[476]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionReceiveRequest_Mission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionReceiveRequest_Mission) ProtoMessage() {}

func (x *MissionReceiveRequest_Mission) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[476]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionReceiveRequest_Mission.ProtoReflect.Descriptor instead.
func (*MissionReceiveRequest_Mission) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{256, 1}
}

func (x *MissionReceiveRequest_Mission) GetMissionId() string {
	if x != nil {
		return x.MissionId
	}
	return ""
}

func (x *MissionReceiveRequest_Mission) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type ProduceListRentalSupportCardResponse_RentalSupportCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile        *pcommon.SimpleProfile          `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	SupportCardId  string                          `protobuf:"bytes,2,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	Level          int32                           `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	LevelLimitRank penum.SupportCardLevelLimitRank `protobuf:"varint,4,opt,name=levelLimitRank,proto3,enum=penum.SupportCardLevelLimitRank" json:"levelLimitRank,omitempty"`
	Following      bool                            `protobuf:"varint,5,opt,name=following,proto3" json:"following,omitempty"`
	FollowedBy     bool                            `protobuf:"varint,6,opt,name=followedBy,proto3" json:"followedBy,omitempty"`
	IsGuildMember  bool                            `protobuf:"varint,7,opt,name=isGuildMember,proto3" json:"isGuildMember,omitempty"`
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) Reset() {
	*x = ProduceListRentalSupportCardResponse_RentalSupportCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[477]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceListRentalSupportCardResponse_RentalSupportCard) ProtoMessage() {}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[477]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceListRentalSupportCardResponse_RentalSupportCard.ProtoReflect.Descriptor instead.
func (*ProduceListRentalSupportCardResponse_RentalSupportCard) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{260, 0}
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) GetProfile() *pcommon.SimpleProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) GetLevelLimitRank() penum.SupportCardLevelLimitRank {
	if x != nil {
		return x.LevelLimitRank
	}
	return penum.SupportCardLevelLimitRank(0)
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) GetFollowedBy() bool {
	if x != nil {
		return x.FollowedBy
	}
	return false
}

func (x *ProduceListRentalSupportCardResponse_RentalSupportCard) GetIsGuildMember() bool {
	if x != nil {
		return x.IsGuildMember
	}
	return false
}

type SupportCardExchangeRequest_Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCardId string `protobuf:"bytes,1,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	Quantity      int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *SupportCardExchangeRequest_Parameter) Reset() {
	*x = SupportCardExchangeRequest_Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[478]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportCardExchangeRequest_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportCardExchangeRequest_Parameter) ProtoMessage() {}

func (x *SupportCardExchangeRequest_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[478]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportCardExchangeRequest_Parameter.ProtoReflect.Descriptor instead.
func (*SupportCardExchangeRequest_Parameter) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{274, 0}
}

func (x *SupportCardExchangeRequest_Parameter) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *SupportCardExchangeRequest_Parameter) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ProduceStartRequest_Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMemoryId       string `protobuf:"bytes,1,opt,name=userMemoryId,proto3" json:"userMemoryId,omitempty"`
	RentalPublicUserId string `protobuf:"bytes,2,opt,name=rentalPublicUserId,proto3" json:"rentalPublicUserId,omitempty"`
}

func (x *ProduceStartRequest_Memory) Reset() {
	*x = ProduceStartRequest_Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[479]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStartRequest_Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStartRequest_Memory) ProtoMessage() {}

func (x *ProduceStartRequest_Memory) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[479]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStartRequest_Memory.ProtoReflect.Descriptor instead.
func (*ProduceStartRequest_Memory) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{277, 0}
}

func (x *ProduceStartRequest_Memory) GetUserMemoryId() string {
	if x != nil {
		return x.UserMemoryId
	}
	return ""
}

func (x *ProduceStartRequest_Memory) GetRentalPublicUserId() string {
	if x != nil {
		return x.RentalPublicUserId
	}
	return ""
}

type ProduceStartRequest_SupportCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCardId      string `protobuf:"bytes,1,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	RentalPublicUserId string `protobuf:"bytes,2,opt,name=rentalPublicUserId,proto3" json:"rentalPublicUserId,omitempty"`
}

func (x *ProduceStartRequest_SupportCard) Reset() {
	*x = ProduceStartRequest_SupportCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[480]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceStartRequest_SupportCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceStartRequest_SupportCard) ProtoMessage() {}

func (x *ProduceStartRequest_SupportCard) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[480]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceStartRequest_SupportCard.ProtoReflect.Descriptor instead.
func (*ProduceStartRequest_SupportCard) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{277, 1}
}

func (x *ProduceStartRequest_SupportCard) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *ProduceStartRequest_SupportCard) GetRentalPublicUserId() string {
	if x != nil {
		return x.RentalPublicUserId
	}
	return ""
}

type MeishiListFollowResponse_Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meishi        *pcommon.Meishi `protobuf:"bytes,1,opt,name=meishi,proto3" json:"meishi,omitempty"`
	FollowTime    int64           `protobuf:"varint,2,opt,name=followTime,proto3" json:"followTime,omitempty"`
	LastLoginTime int64           `protobuf:"varint,3,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
}

func (x *MeishiListFollowResponse_Follow) Reset() {
	*x = MeishiListFollowResponse_Follow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[481]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeishiListFollowResponse_Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeishiListFollowResponse_Follow) ProtoMessage() {}

func (x *MeishiListFollowResponse_Follow) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[481]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeishiListFollowResponse_Follow.ProtoReflect.Descriptor instead.
func (*MeishiListFollowResponse_Follow) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{324, 0}
}

func (x *MeishiListFollowResponse_Follow) GetMeishi() *pcommon.Meishi {
	if x != nil {
		return x.Meishi
	}
	return nil
}

func (x *MeishiListFollowResponse_Follow) GetFollowTime() int64 {
	if x != nil {
		return x.FollowTime
	}
	return 0
}

func (x *MeishiListFollowResponse_Follow) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

type StoryEventTopResponse_Motion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId    string                     `protobuf:"bytes,1,opt,name=characterId,proto3" json:"characterId,omitempty"`
	ConditionSetId string                     `protobuf:"bytes,2,opt,name=conditionSetId,proto3" json:"conditionSetId,omitempty"`
	MotionType     penum.StoryEventMotionType `protobuf:"varint,3,opt,name=motionType,proto3,enum=penum.StoryEventMotionType" json:"motionType,omitempty"`
	CostumeId      string                     `protobuf:"bytes,4,opt,name=costumeId,proto3" json:"costumeId,omitempty"`
	CostumeHeadId  string                     `protobuf:"bytes,5,opt,name=costumeHeadId,proto3" json:"costumeHeadId,omitempty"`
	FacialAssetId  string                     `protobuf:"bytes,6,opt,name=facialAssetId,proto3" json:"facialAssetId,omitempty"`
	BodyAssetId    string                     `protobuf:"bytes,7,opt,name=bodyAssetId,proto3" json:"bodyAssetId,omitempty"`
	VoiceAssetId   string                     `protobuf:"bytes,8,opt,name=voiceAssetId,proto3" json:"voiceAssetId,omitempty"`
	Text           string                     `protobuf:"bytes,9,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *StoryEventTopResponse_Motion) Reset() {
	*x = StoryEventTopResponse_Motion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[482]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryEventTopResponse_Motion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEventTopResponse_Motion) ProtoMessage() {}

func (x *StoryEventTopResponse_Motion) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[482]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEventTopResponse_Motion.ProtoReflect.Descriptor instead.
func (*StoryEventTopResponse_Motion) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{344, 0}
}

func (x *StoryEventTopResponse_Motion) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *StoryEventTopResponse_Motion) GetConditionSetId() string {
	if x != nil {
		return x.ConditionSetId
	}
	return ""
}

func (x *StoryEventTopResponse_Motion) GetMotionType() penum.StoryEventMotionType {
	if x != nil {
		return x.MotionType
	}
	return penum.StoryEventMotionType(0)
}

func (x *StoryEventTopResponse_Motion) GetCostumeId() string {
	if x != nil {
		return x.CostumeId
	}
	return ""
}

func (x *StoryEventTopResponse_Motion) GetCostumeHeadId() string {
	if x != nil {
		return x.CostumeHeadId
	}
	return ""
}

func (x *StoryEventTopResponse_Motion) GetFacialAssetId() string {
	if x != nil {
		return x.FacialAssetId
	}
	return ""
}

func (x *StoryEventTopResponse_Motion) GetBodyAssetId() string {
	if x != nil {
		return x.BodyAssetId
	}
	return ""
}

func (x *StoryEventTopResponse_Motion) GetVoiceAssetId() string {
	if x != nil {
		return x.VoiceAssetId
	}
	return ""
}

func (x *StoryEventTopResponse_Motion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type TowerTopResponse_Tower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LayerCount          int32  `protobuf:"varint,2,opt,name=layerCount,proto3" json:"layerCount,omitempty"`
	HasLayerCountReward bool   `protobuf:"varint,3,opt,name=hasLayerCountReward,proto3" json:"hasLayerCountReward,omitempty"`
}

func (x *TowerTopResponse_Tower) Reset() {
	*x = TowerTopResponse_Tower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[483]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerTopResponse_Tower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerTopResponse_Tower) ProtoMessage() {}

func (x *TowerTopResponse_Tower) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[483]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerTopResponse_Tower.ProtoReflect.Descriptor instead.
func (*TowerTopResponse_Tower) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{374, 0}
}

func (x *TowerTopResponse_Tower) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TowerTopResponse_Tower) GetLayerCount() int32 {
	if x != nil {
		return x.LayerCount
	}
	return 0
}

func (x *TowerTopResponse_Tower) GetHasLayerCountReward() bool {
	if x != nil {
		return x.HasLayerCountReward
	}
	return false
}

type GiftListResponse_UserGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserGiftId     string             `protobuf:"bytes,1,opt,name=userGiftId,proto3" json:"userGiftId,omitempty"`
	ResourceType   penum.ResourceType `protobuf:"varint,2,opt,name=resourceType,proto3,enum=penum.ResourceType" json:"resourceType,omitempty"`
	ResourceId     string             `protobuf:"bytes,3,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Quantity       int32              `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Message        string             `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	LimitTime      int64              `protobuf:"varint,6,opt,name=limitTime,proto3" json:"limitTime,omitempty"`
	CreatedAt      int64              `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	IsUnreceivable bool               `protobuf:"varint,8,opt,name=isUnreceivable,proto3" json:"isUnreceivable,omitempty"`
}

func (x *GiftListResponse_UserGift) Reset() {
	*x = GiftListResponse_UserGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[484]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiftListResponse_UserGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiftListResponse_UserGift) ProtoMessage() {}

func (x *GiftListResponse_UserGift) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[484]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiftListResponse_UserGift.ProtoReflect.Descriptor instead.
func (*GiftListResponse_UserGift) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{379, 0}
}

func (x *GiftListResponse_UserGift) GetUserGiftId() string {
	if x != nil {
		return x.UserGiftId
	}
	return ""
}

func (x *GiftListResponse_UserGift) GetResourceType() penum.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return penum.ResourceType(0)
}

func (x *GiftListResponse_UserGift) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *GiftListResponse_UserGift) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GiftListResponse_UserGift) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GiftListResponse_UserGift) GetLimitTime() int64 {
	if x != nil {
		return x.LimitTime
	}
	return 0
}

func (x *GiftListResponse_UserGift) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GiftListResponse_UserGift) GetIsUnreceivable() bool {
	if x != nil {
		return x.IsUnreceivable
	}
	return false
}

type ProduceResultResponse_HighScoreReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score  int32           `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Reward *pcommon.Reward `protobuf:"bytes,2,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *ProduceResultResponse_HighScoreReward) Reset() {
	*x = ProduceResultResponse_HighScoreReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[485]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceResultResponse_HighScoreReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceResultResponse_HighScoreReward) ProtoMessage() {}

func (x *ProduceResultResponse_HighScoreReward) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[485]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceResultResponse_HighScoreReward.ProtoReflect.Descriptor instead.
func (*ProduceResultResponse_HighScoreReward) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{384, 0}
}

func (x *ProduceResultResponse_HighScoreReward) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProduceResultResponse_HighScoreReward) GetReward() *pcommon.Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type ProduceResultResponse_HighScoreUpdateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleAssetId       string                                   `protobuf:"bytes,1,opt,name=titleAssetId,proto3" json:"titleAssetId,omitempty"`
	CharacterId        string                                   `protobuf:"bytes,2,opt,name=characterId,proto3" json:"characterId,omitempty"`
	Rank               int32                                    `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	HighScore          int32                                    `protobuf:"varint,4,opt,name=highScore,proto3" json:"highScore,omitempty"`
	CharacterRank      int32                                    `protobuf:"varint,5,opt,name=characterRank,proto3" json:"characterRank,omitempty"`
	CharacterHighScore int32                                    `protobuf:"varint,6,opt,name=characterHighScore,proto3" json:"characterHighScore,omitempty"`
	HighScoreRewards   []*ProduceResultResponse_HighScoreReward `protobuf:"bytes,7,rep,name=highScoreRewards,proto3" json:"highScoreRewards,omitempty"`
}

func (x *ProduceResultResponse_HighScoreUpdateResult) Reset() {
	*x = ProduceResultResponse_HighScoreUpdateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[486]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceResultResponse_HighScoreUpdateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceResultResponse_HighScoreUpdateResult) ProtoMessage() {}

func (x *ProduceResultResponse_HighScoreUpdateResult) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[486]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceResultResponse_HighScoreUpdateResult.ProtoReflect.Descriptor instead.
func (*ProduceResultResponse_HighScoreUpdateResult) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{384, 1}
}

func (x *ProduceResultResponse_HighScoreUpdateResult) GetTitleAssetId() string {
	if x != nil {
		return x.TitleAssetId
	}
	return ""
}

func (x *ProduceResultResponse_HighScoreUpdateResult) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *ProduceResultResponse_HighScoreUpdateResult) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProduceResultResponse_HighScoreUpdateResult) GetHighScore() int32 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

func (x *ProduceResultResponse_HighScoreUpdateResult) GetCharacterRank() int32 {
	if x != nil {
		return x.CharacterRank
	}
	return 0
}

func (x *ProduceResultResponse_HighScoreUpdateResult) GetCharacterHighScore() int32 {
	if x != nil {
		return x.CharacterHighScore
	}
	return 0
}

func (x *ProduceResultResponse_HighScoreUpdateResult) GetHighScoreRewards() []*ProduceResultResponse_HighScoreReward {
	if x != nil {
		return x.HighScoreRewards
	}
	return nil
}

type StartupConfirmRequest_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartupNotificationId string `protobuf:"bytes,1,opt,name=startupNotificationId,proto3" json:"startupNotificationId,omitempty"`
	IsSkip                bool   `protobuf:"varint,2,opt,name=isSkip,proto3" json:"isSkip,omitempty"`
}

func (x *StartupConfirmRequest_Notification) Reset() {
	*x = StartupConfirmRequest_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[487]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartupConfirmRequest_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartupConfirmRequest_Notification) ProtoMessage() {}

func (x *StartupConfirmRequest_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[487]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartupConfirmRequest_Notification.ProtoReflect.Descriptor instead.
func (*StartupConfirmRequest_Notification) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{395, 0}
}

func (x *StartupConfirmRequest_Notification) GetStartupNotificationId() string {
	if x != nil {
		return x.StartupNotificationId
	}
	return ""
}

func (x *StartupConfirmRequest_Notification) GetIsSkip() bool {
	if x != nil {
		return x.IsSkip
	}
	return false
}

type MasterGetResponse_MasterTagPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	FileName    string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize    int32  `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	CryptoKey   string `protobuf:"bytes,4,opt,name=cryptoKey,proto3" json:"cryptoKey,omitempty"`
	DownloadUrl string `protobuf:"bytes,5,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"`
}

func (x *MasterGetResponse_MasterTagPack) Reset() {
	*x = MasterGetResponse_MasterTagPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[488]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterGetResponse_MasterTagPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterGetResponse_MasterTagPack) ProtoMessage() {}

func (x *MasterGetResponse_MasterTagPack) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[488]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterGetResponse_MasterTagPack.ProtoReflect.Descriptor instead.
func (*MasterGetResponse_MasterTagPack) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{408, 0}
}

func (x *MasterGetResponse_MasterTagPack) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MasterGetResponse_MasterTagPack) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *MasterGetResponse_MasterTagPack) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *MasterGetResponse_MasterTagPack) GetCryptoKey() string {
	if x != nil {
		return x.CryptoKey
	}
	return ""
}

func (x *MasterGetResponse_MasterTagPack) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type MasterGetResponse_MasterTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        string                             `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	MasterTagPacks []*MasterGetResponse_MasterTagPack `protobuf:"bytes,2,rep,name=masterTagPacks,proto3" json:"masterTagPacks,omitempty"`
}

func (x *MasterGetResponse_MasterTag) Reset() {
	*x = MasterGetResponse_MasterTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[489]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterGetResponse_MasterTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterGetResponse_MasterTag) ProtoMessage() {}

func (x *MasterGetResponse_MasterTag) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[489]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterGetResponse_MasterTag.ProtoReflect.Descriptor instead.
func (*MasterGetResponse_MasterTag) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{408, 1}
}

func (x *MasterGetResponse_MasterTag) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MasterGetResponse_MasterTag) GetMasterTagPacks() []*MasterGetResponse_MasterTagPack {
	if x != nil {
		return x.MasterTagPacks
	}
	return nil
}

type SeminarGetExamResponse_TurnNavigationStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NavigationType penum.TutorialNavigationType `protobuf:"varint,1,opt,name=navigationType,proto3,enum=penum.TutorialNavigationType" json:"navigationType,omitempty"`
	Texts          []string                     `protobuf:"bytes,2,rep,name=texts,proto3" json:"texts,omitempty"`
	AssetIds       []string                     `protobuf:"bytes,3,rep,name=assetIds,proto3" json:"assetIds,omitempty"`
}

func (x *SeminarGetExamResponse_TurnNavigationStep) Reset() {
	*x = SeminarGetExamResponse_TurnNavigationStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[490]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarGetExamResponse_TurnNavigationStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarGetExamResponse_TurnNavigationStep) ProtoMessage() {}

func (x *SeminarGetExamResponse_TurnNavigationStep) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[490]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarGetExamResponse_TurnNavigationStep.ProtoReflect.Descriptor instead.
func (*SeminarGetExamResponse_TurnNavigationStep) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{415, 0}
}

func (x *SeminarGetExamResponse_TurnNavigationStep) GetNavigationType() penum.TutorialNavigationType {
	if x != nil {
		return x.NavigationType
	}
	return penum.TutorialNavigationType(0)
}

func (x *SeminarGetExamResponse_TurnNavigationStep) GetTexts() []string {
	if x != nil {
		return x.Texts
	}
	return nil
}

func (x *SeminarGetExamResponse_TurnNavigationStep) GetAssetIds() []string {
	if x != nil {
		return x.AssetIds
	}
	return nil
}

type SeminarGetExamResponse_TurnNavigation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Turn                 int32                                        `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	FieldStatusCheckType penum.ProduceExamTriggerCheckType            `protobuf:"varint,2,opt,name=fieldStatusCheckType,proto3,enum=penum.ProduceExamTriggerCheckType" json:"fieldStatusCheckType,omitempty"`
	FieldStatusType      penum.ProduceExamFieldStatusType             `protobuf:"varint,3,opt,name=fieldStatusType,proto3,enum=penum.ProduceExamFieldStatusType" json:"fieldStatusType,omitempty"`
	FieldStatusValue     int32                                        `protobuf:"varint,4,opt,name=fieldStatusValue,proto3" json:"fieldStatusValue,omitempty"`
	Steps                []*SeminarGetExamResponse_TurnNavigationStep `protobuf:"bytes,5,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *SeminarGetExamResponse_TurnNavigation) Reset() {
	*x = SeminarGetExamResponse_TurnNavigation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[491]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarGetExamResponse_TurnNavigation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarGetExamResponse_TurnNavigation) ProtoMessage() {}

func (x *SeminarGetExamResponse_TurnNavigation) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[491]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarGetExamResponse_TurnNavigation.ProtoReflect.Descriptor instead.
func (*SeminarGetExamResponse_TurnNavigation) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{415, 1}
}

func (x *SeminarGetExamResponse_TurnNavigation) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *SeminarGetExamResponse_TurnNavigation) GetFieldStatusCheckType() penum.ProduceExamTriggerCheckType {
	if x != nil {
		return x.FieldStatusCheckType
	}
	return penum.ProduceExamTriggerCheckType(0)
}

func (x *SeminarGetExamResponse_TurnNavigation) GetFieldStatusType() penum.ProduceExamFieldStatusType {
	if x != nil {
		return x.FieldStatusType
	}
	return penum.ProduceExamFieldStatusType(0)
}

func (x *SeminarGetExamResponse_TurnNavigation) GetFieldStatusValue() int32 {
	if x != nil {
		return x.FieldStatusValue
	}
	return 0
}

func (x *SeminarGetExamResponse_TurnNavigation) GetSteps() []*SeminarGetExamResponse_TurnNavigationStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type SeminarGetExamResponse_FailureNavigation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProduceExamTriggerId string                 `protobuf:"bytes,1,opt,name=produceExamTriggerId,proto3" json:"produceExamTriggerId,omitempty"`
	Text1                string                 `protobuf:"bytes,2,opt,name=text1,proto3" json:"text1,omitempty"`
	ProduceCards1        []*pcommon.ProduceCard `protobuf:"bytes,3,rep,name=produceCards1,proto3" json:"produceCards1,omitempty"`
	Text2                string                 `protobuf:"bytes,4,opt,name=text2,proto3" json:"text2,omitempty"`
	ProduceCards2        []*pcommon.ProduceCard `protobuf:"bytes,5,rep,name=produceCards2,proto3" json:"produceCards2,omitempty"`
	Priority             int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *SeminarGetExamResponse_FailureNavigation) Reset() {
	*x = SeminarGetExamResponse_FailureNavigation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[492]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeminarGetExamResponse_FailureNavigation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeminarGetExamResponse_FailureNavigation) ProtoMessage() {}

func (x *SeminarGetExamResponse_FailureNavigation) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[492]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeminarGetExamResponse_FailureNavigation.ProtoReflect.Descriptor instead.
func (*SeminarGetExamResponse_FailureNavigation) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{415, 2}
}

func (x *SeminarGetExamResponse_FailureNavigation) GetProduceExamTriggerId() string {
	if x != nil {
		return x.ProduceExamTriggerId
	}
	return ""
}

func (x *SeminarGetExamResponse_FailureNavigation) GetText1() string {
	if x != nil {
		return x.Text1
	}
	return ""
}

func (x *SeminarGetExamResponse_FailureNavigation) GetProduceCards1() []*pcommon.ProduceCard {
	if x != nil {
		return x.ProduceCards1
	}
	return nil
}

func (x *SeminarGetExamResponse_FailureNavigation) GetText2() string {
	if x != nil {
		return x.Text2
	}
	return ""
}

func (x *SeminarGetExamResponse_FailureNavigation) GetProduceCards2() []*pcommon.ProduceCard {
	if x != nil {
		return x.ProduceCards2
	}
	return nil
}

func (x *SeminarGetExamResponse_FailureNavigation) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type FriendInfo_SupportCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportCardId  string                          `protobuf:"bytes,1,opt,name=supportCardId,proto3" json:"supportCardId,omitempty"`
	Level          int32                           `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	LevelLimitRank penum.SupportCardLevelLimitRank `protobuf:"varint,3,opt,name=levelLimitRank,proto3,enum=penum.SupportCardLevelLimitRank" json:"levelLimitRank,omitempty"`
}

func (x *FriendInfo_SupportCard) Reset() {
	*x = FriendInfo_SupportCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[493]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo_SupportCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo_SupportCard) ProtoMessage() {}

func (x *FriendInfo_SupportCard) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[493]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo_SupportCard.ProtoReflect.Descriptor instead.
func (*FriendInfo_SupportCard) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{418, 0}
}

func (x *FriendInfo_SupportCard) GetSupportCardId() string {
	if x != nil {
		return x.SupportCardId
	}
	return ""
}

func (x *FriendInfo_SupportCard) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *FriendInfo_SupportCard) GetLevelLimitRank() penum.SupportCardLevelLimitRank {
	if x != nil {
		return x.LevelLimitRank
	}
	return penum.SupportCardLevelLimitRank(0)
}

type ExchangeItem_ConsumptionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceQuantity int32 `protobuf:"varint,1,opt,name=resourceQuantity,proto3" json:"resourceQuantity,omitempty"`
	Count            int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ExchangeItem_ConsumptionResource) Reset() {
	*x = ExchangeItem_ConsumptionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[494]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeItem_ConsumptionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeItem_ConsumptionResource) ProtoMessage() {}

func (x *ExchangeItem_ConsumptionResource) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[494]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeItem_ConsumptionResource.ProtoReflect.Descriptor instead.
func (*ExchangeItem_ConsumptionResource) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{425, 0}
}

func (x *ExchangeItem_ConsumptionResource) GetResourceQuantity() int32 {
	if x != nil {
		return x.ResourceQuantity
	}
	return 0
}

func (x *ExchangeItem_ConsumptionResource) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GashaExpirePointResponse_GashaBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaId       string `protobuf:"bytes,1,opt,name=gashaId,proto3" json:"gashaId,omitempty"`
	BannerAssetId string `protobuf:"bytes,2,opt,name=bannerAssetId,proto3" json:"bannerAssetId,omitempty"`
	Order         int32  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GashaExpirePointResponse_GashaBanner) Reset() {
	*x = GashaExpirePointResponse_GashaBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[495]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaExpirePointResponse_GashaBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaExpirePointResponse_GashaBanner) ProtoMessage() {}

func (x *GashaExpirePointResponse_GashaBanner) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[495]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaExpirePointResponse_GashaBanner.ProtoReflect.Descriptor instead.
func (*GashaExpirePointResponse_GashaBanner) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{433, 0}
}

func (x *GashaExpirePointResponse_GashaBanner) GetGashaId() string {
	if x != nil {
		return x.GashaId
	}
	return ""
}

func (x *GashaExpirePointResponse_GashaBanner) GetBannerAssetId() string {
	if x != nil {
		return x.BannerAssetId
	}
	return ""
}

func (x *GashaExpirePointResponse_GashaBanner) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type GashaExpirePointResponse_GashaPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GashaPointId string                                  `protobuf:"bytes,1,opt,name=gashaPointId,proto3" json:"gashaPointId,omitempty"`
	Name         string                                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExpirePoint  int32                                   `protobuf:"varint,3,opt,name=expirePoint,proto3" json:"expirePoint,omitempty"`
	Reward       *pcommon.Reward                         `protobuf:"bytes,4,opt,name=reward,proto3" json:"reward,omitempty"`
	GashaBanners []*GashaExpirePointResponse_GashaBanner `protobuf:"bytes,5,rep,name=gashaBanners,proto3" json:"gashaBanners,omitempty"`
}

func (x *GashaExpirePointResponse_GashaPoint) Reset() {
	*x = GashaExpirePointResponse_GashaPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_papi_proto_msgTypes[496]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GashaExpirePointResponse_GashaPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GashaExpirePointResponse_GashaPoint) ProtoMessage() {}

func (x *GashaExpirePointResponse_GashaPoint) ProtoReflect() protoreflect.Message {
	mi := &file_papi_proto_msgTypes[496]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GashaExpirePointResponse_GashaPoint.ProtoReflect.Descriptor instead.
func (*GashaExpirePointResponse_GashaPoint) Descriptor() ([]byte, []int) {
	return file_papi_proto_rawDescGZIP(), []int{433, 1}
}

func (x *GashaExpirePointResponse_GashaPoint) GetGashaPointId() string {
	if x != nil {
		return x.GashaPointId
	}
	return ""
}

func (x *GashaExpirePointResponse_GashaPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GashaExpirePointResponse_GashaPoint) GetExpirePoint() int32 {
	if x != nil {
		return x.ExpirePoint
	}
	return 0
}

func (x *GashaExpirePointResponse_GashaPoint) GetReward() *pcommon.Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *GashaExpirePointResponse_GashaPoint) GetGashaBanners() []*GashaExpirePointResponse_GashaBanner {
	if x != nil {
		return x.GashaBanners
	}
	return nil
}

var File_papi_proto protoreflect.FileDescriptor

var file_papi_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x0b, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29,
	0x0a, 0x0f, 0x47, 0x69, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x52, 0x0a, 0x1c, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x35, 0x0a,
	0x19, 0x47, 0x61, 0x73, 0x68, 0x61, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x61, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61,
	0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73,
	0x68, 0x61, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x54, 0x6f, 0x77, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x55, 0x0a, 0x14, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x19, 0x49, 0x64, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x49, 0x64, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x06, 0x72, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72,
	0x69, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69,
	0x61, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x0a, 0x11, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x29, 0x54, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x73, 0x22, 0xe7, 0x04, 0x0a, 0x17, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x6e,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0xf7, 0x01, 0x0a, 0x04, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e,
	0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0xcb, 0x01,
	0x0a, 0x09, 0x45, 0x78, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3e, 0x0a, 0x05, 0x65, 0x78, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6d, 0x69,
	0x6e, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x05, 0x65, 0x78, 0x61, 0x6d, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xf2, 0x01, 0x0a, 0x1c,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x31,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44,
	0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xcc, 0x02, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x69, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x06, 0x70, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x4e, 0x65,
	0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x67, 0x48, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x75, 0x67, 0x48, 0x61, 0x73, 0x4e, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x48, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x48, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa1, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x53,
	0x68, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x22,
	0xac, 0x01, 0x0a, 0x21, 0x47, 0x61, 0x73, 0x68, 0x61, 0x47, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x55, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x55, 0x70,
	0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d,
	0x0a, 0x1c, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x41, 0x0a, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x1c,
	0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x22, 0xd8, 0x07, 0x0a, 0x17, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x4b,
	0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x14, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x98, 0x03, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x1a, 0x85, 0x02, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x44, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x44, 0x61, 0x79, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x15, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2f,
	0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22,
	0x3d, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xab,
	0x03, 0x0a, 0x11, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xb4, 0x01, 0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfc, 0x01, 0x0a,
	0x28, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x17, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53,
	0x65, 0x6c, 0x66, 0x22, 0xa8, 0x01, 0x0a, 0x19, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47,
	0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x10, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61,
	0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x65,
	0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaa,
	0x01, 0x0a, 0x11, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x75,
	0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x11,
	0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x36, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x61, 0x73,
	0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x0c, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x33, 0x0a,
	0x0a, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x73, 0x68,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x66, 0x0a, 0x25, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x28, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4c,
	0x69, 0x76, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xd3, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x24, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x41, 0x64, 0x76, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x59, 0x0a, 0x18, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x11,
	0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x57, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x1c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73,
	0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xb9, 0x01, 0x0a, 0x27, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x31,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x54, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52,
	0x0b, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x56, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x74, 0x69, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x44, 0x0a, 0x0e, 0x66, 0x69, 0x78, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x66, 0x69, 0x78, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x37, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0xd4, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x53, 0x6b, 0x69, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x61,
	0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x54, 0x61, 0x67, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x5f, 0x0a, 0x1e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x95, 0x04, 0x0a, 0x1a, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x76, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xe2, 0x02, 0x0a, 0x0e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69,
	0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x57, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x57, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x17, 0x54, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4d, 0x0a, 0x16, 0x63, 0x61, 0x72, 0x64, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x16, 0x63,
	0x61, 0x72, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x22, 0xe1, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x41, 0x6c, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x80,
	0x02, 0x0a, 0x16, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x7a, 0x0a, 0x11, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x70, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xff, 0x01,
	0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x98, 0x01, 0x0a, 0x28, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x30, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x22, 0xa2, 0x01, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x1c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x14,
	0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4c, 0x0a, 0x24, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x49,
	0x0a, 0x13, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x18, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x14, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x64, 0x22, 0xbe, 0x03, 0x0a, 0x17, 0x47, 0x69, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x80, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66,
	0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x12, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x6d, 0x65, 0x69,
	0x73, 0x68, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x69, 0x73, 0x68,
	0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65,
	0x69, 0x73, 0x68, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0x63, 0x0a, 0x0a, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69,
	0x52, 0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x22, 0xd5, 0x03, 0x0a, 0x09, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x5f, 0x0a, 0x1e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xf1, 0x03, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67,
	0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x52, 0x61, 0x6e,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x46, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xf8, 0x01, 0x0a, 0x04, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x70,
	0x74, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x70,
	0x74, 0x6f, 0x75, 0x74, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74,
	0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x43, 0x6f,
	0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x6f, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x73, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x52, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x6e,
	0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x09,
	0x73, 0x65, 0x6c, 0x66, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x73, 0x65, 0x6c, 0x66, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x12, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x25, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x6e,
	0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x47,
	0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x11, 0x50, 0x76, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x0d, 0x65, 0x78,
	0x61, 0x6d, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xe9, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x18,
	0xea, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x54, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52,
	0x0b, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x4c, 0x0a, 0x13,
	0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50,
	0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x43, 0x0a, 0x19, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b,
	0x69, 0x6e, 0x49, 0x64, 0x22, 0xa4, 0x02, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x1c,
	0x54, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x22, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x19, 0x47, 0x61, 0x73,
	0x68, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda, 0x09, 0x0a, 0x13, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0a, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x69, 0x73, 0x68,
	0x69, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0a, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x8c, 0x03, 0x0a, 0x0a, 0x4d, 0x65,
	0x69, 0x73, 0x68, 0x69, 0x42, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x42, 0x61,
	0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x42, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65,
	0x69, 0x73, 0x68, 0x69, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x42, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x1a, 0xf7, 0x04, 0x0a, 0x06, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x61, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x19,
	0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x19, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65,
	0x69, 0x73, 0x68, 0x69, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x54, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x58, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x59, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x69, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0x3a, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5f,
	0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22,
	0x39, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x38, 0x0a, 0x12, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x19, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x54, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa3, 0x0b, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0xd6, 0x08, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a,
	0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x15, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5b, 0x0a,
	0x19, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x19, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d,
	0x0a, 0x13, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6e, 0x0a,
	0x14, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x6f,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xbb, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x44,
	0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x64, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x64,
	0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe7, 0x06, 0x0a, 0x13,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4a,
	0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x63,
	0x74, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x63,
	0x74, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x63, 0x74, 0x6f, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x63, 0x74,
	0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x58, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x58, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x61, 0x71, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61,
	0x71, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x55,
	0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x80, 0x01, 0x0a,
	0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x6e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x48, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x63, 0x74, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x63, 0x74, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x63, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6f, 0x63, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0xa3, 0x02, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x6f, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x50,
	0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x50, 0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x48, 0x74, 0x6d, 0x6c, 0x22, 0x5f, 0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x64,
	0x69, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x11, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
	0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x20, 0x4d, 0x65,
	0x69, 0x73, 0x68, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x58, 0x50, 0x6f, 0x73, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x1a, 0x47, 0x61,
	0x73, 0x68, 0x61, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x61, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x10,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x19, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x04, 0x0a, 0x0f, 0x53, 0x68, 0x6f,
	0x70, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x70,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x74, 0x65,
	0x6d, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x12, 0x2c, 0x0a,
	0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x4e, 0x6f, 0x74,
	0x69, 0x12, 0x50, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x87, 0x01, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2e, 0x0a, 0x12,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a,
	0x12, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x47, 0x69, 0x66, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x69, 0x66, 0x74, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x75, 0x6e, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x54, 0x6f, 0x77, 0x65,
	0x72, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12,
	0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x54, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67,
	0x52, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0xbe, 0x01,
	0x0a, 0x13, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x17, 0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17,
	0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x62,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x5c,
	0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x22, 0x8c, 0x01, 0x0a,
	0x15, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x20, 0x47,
	0x61, 0x73, 0x68, 0x61, 0x47, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x55, 0x70, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x26, 0x53, 0x68, 0x6f,
	0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0xaf, 0x04, 0x0a, 0x1d, 0x47, 0x61, 0x73, 0x68, 0x61, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x73,
	0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x68, 0x0a, 0x11, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x11, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x81, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x5b, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x22, 0xcd,
	0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x3e,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x44, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x44,
	0x0a, 0x1a, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x11, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc0, 0x03, 0x0a, 0x1f, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0x87, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x9a, 0x01,
	0x0a, 0x20, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x22, 0x8b, 0x01, 0x0a, 0x16, 0x53,
	0x74, 0x65, 0x70, 0x55, 0x70, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x5d, 0x0a, 0x17, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47,
	0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x4f, 0x0a, 0x1b, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xf6, 0x07, 0x0a, 0x11, 0x48, 0x6f,
	0x6d, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x61,
	0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4e, 0x61,
	0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x61,
	0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x13, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x06, 0x67, 0x61, 0x73, 0x68, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x52, 0x06, 0x67,
	0x61, 0x73, 0x68, 0x61, 0x73, 0x12, 0x48, 0x0a, 0x10, 0x70, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x76, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x52, 0x10, 0x70,
	0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x12,
	0x26, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x18, 0x68, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x18, 0x69, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x18, 0x6a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x68, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x68, 0x61, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x9d, 0x01, 0x0a, 0x12, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x49, 0x0a, 0x27, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x55, 0x0a,
	0x14, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x1f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x4b, 0x0a, 0x27, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x77, 0x0a, 0x11, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x61, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x61, 0x63, 0x74, 0x65,
	0x64, 0x22, 0xd6, 0x03, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xae, 0x02, 0x0a, 0x07, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65,
	0x6c, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x12, 0x3e, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x10,
	0x73, 0x65, 0x6c, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x38, 0x0a, 0x17, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x11, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x5a, 0x0a, 0x19, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a,
	0x23, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6a,
	0x0a, 0x16, 0x47, 0x61, 0x73, 0x68, 0x61, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x17, 0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x17, 0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x50,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xb9, 0x08, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x1b, 0x6d,
	0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x1b, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a,
	0x1a, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x1a, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x78, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69,
	0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x0c, 0x70, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x37, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18,
	0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x18, 0xcc, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x69, 0x73, 0x68, 0x69, 0x52, 0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x87, 0x01, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x34,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x65, 0x45, 0x6e, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x72, 0x75, 0x65,
	0x45, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x67,
	0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x42, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12,
	0x34, 0x0a, 0x15, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x15, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72,
	0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1d, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a,
	0x1d, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73,
	0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x22, 0x78, 0x0a, 0x28, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x22, 0x68, 0x0a, 0x11, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x1a, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x44, 0x72, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72,
	0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x72, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x54,
	0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x1d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xa3, 0x01, 0x0a, 0x28, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x17,
	0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x73,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3d, 0x0a, 0x15, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x13, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x37, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x27, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x09, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x4f, 0x0a, 0x27, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x0f,
	0x57, 0x6f, 0x72, 0x6b, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x15, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72,
	0x45, 0x6e, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61, 0x6d,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x3c, 0x0a, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x52, 0x05, 0x74,
	0x75, 0x72, 0x6e, 0x73, 0x1a, 0x6c, 0x0a, 0x04, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x73, 0x22, 0x5e, 0x0a, 0x1d, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5f, 0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x1b, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0xa3, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x20, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x83, 0x06, 0x0a, 0x15, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x52, 0x05, 0x65, 0x78, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x67, 0x6d, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x67,
	0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78,
	0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x61, 0x6d, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x8a, 0x03, 0x0a, 0x04,
	0x45, 0x78, 0x61, 0x6d, 0x12, 0x44, 0x0a, 0x0e, 0x65, 0x78, 0x61, 0x6d, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x61, 0x6d,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x73,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x48,
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x47, 0x69, 0x6d,
	0x6d, 0x69, 0x63, 0x6b, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x45, 0x78, 0x61, 0x6d, 0x47, 0x69, 0x6d, 0x6d, 0x69, 0x63, 0x6b, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x70, 0x63, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x70,
	0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xcf, 0x04, 0x0a, 0x17, 0x54, 0x6f, 0x77,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xbe, 0x01, 0x0a, 0x0e,
	0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x61, 0x6d,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x47, 0x0a, 0x11, 0x65, 0x78,
	0x61, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x78, 0x61, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x11, 0x65, 0x78, 0x61, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0xeb, 0x01, 0x0a,
	0x0a, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x48, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12,
	0x29, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x28, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x49, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x1d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73,
	0x46, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x22, 0x71, 0x0a, 0x30, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x19,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x53, 0x68, 0x6f, 0x70, 0x45,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x1d, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x43,
	0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x75,
	0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74,
	0x75, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x73,
	0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x19, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x49, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a,
	0x10, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x1c, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x61, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x22, 0xee, 0x01,
	0x0a, 0x21, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x65, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0,
	0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xdd, 0x02, 0x0a, 0x12, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x64, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x66, 0x61, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x65, 0x0a, 0x23, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x64, 0x65, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63,
	0x6b, 0x52, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x29, 0x54, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a,
	0x1d, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a,
	0x27, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x16, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x1e,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a,
	0x24, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9, 0x02, 0x0a, 0x19, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76,
	0x70, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x6d, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x09, 0x73, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x15,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x79, 0x72, 0x69, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x22, 0xc5, 0x01, 0x0a, 0x1a, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x57, 0x6f, 0x72,
	0x6b, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xce, 0x01, 0x0a, 0x18, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x5e, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x48, 0x6f, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x55, 0x0a, 0x14, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x69, 0x73,
	0x68, 0x69, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x52, 0x06,
	0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x65,
	0x6e, 0x64, 0x42, 0x75, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf2, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x6e, 0x65, 0x77, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x45, 0x78, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72,
	0x45, 0x78, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41,
	0x6c, 0x6c, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x45, 0x78, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x53,
	0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x45, 0x78, 0x61, 0x6d, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x40, 0x0a, 0x1b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x41,
	0x75, 0x74, 0x68, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa4,
	0x02, 0x0a, 0x13, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x0b, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x33, 0x0a,
	0x0a, 0x61, 0x66, 0x74, 0x65, 0x72, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x0a, 0x61, 0x66, 0x74, 0x65, 0x72, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d,
	0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x35, 0x0a,
	0x13, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x1b, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a,
	0x12, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x55, 0x0a,
	0x14, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x21, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72,
	0x6b, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x65, 0x64, 0x22, 0x3f, 0x0a, 0x1d, 0x53,
	0x68, 0x6f, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x4a, 0x65, 0x77, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x13,
	0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x68, 0x61, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x65, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x74, 0x65, 0x6e, 0x50, 0x65,
	0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x13,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x51, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x6f,
	0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x12, 0x32, 0x0a, 0x14, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x56, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x56, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x67, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x56, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x22,
	0x64, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c,
	0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22,
	0x98, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x23, 0x49,
	0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x49, 0x64,
	0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x48,
	0x0a, 0x1e, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x54, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x26, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x67,
	0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x87, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1a, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x70,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x82, 0x01, 0x0a, 0x10, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x26, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90,
	0x02, 0x0a, 0x1d, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x61,
	0x69, 0x4e, 0x61, 0x6d, 0x63, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x73,
	0x53, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x53, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x58, 0x0a, 0x16, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61, 0x77, 0x53, 0x74,
	0x65, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61,
	0x73, 0x68, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x61,
	0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x1b,
	0x47, 0x61, 0x73, 0x68, 0x61, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x63, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x99, 0x05, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x4e, 0x0a, 0x10,
	0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x10, 0x68, 0x69, 0x67, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x0b,
	0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48,
	0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x46, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x78, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x52, 0x61, 0x6e,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xc5, 0x02, 0x0a, 0x1a, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x42,
	0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x62, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x22, 0xa4, 0x02, 0x0a, 0x11, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x52, 0x0a,
	0x04, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x65, 0x72, 0x6d,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x45, 0x0a, 0x1d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x18, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x20,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x22, 0xf4, 0x06, 0x0a, 0x16, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x47,
	0x0a, 0x13, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x13, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x20, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x20, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0xaf, 0x01, 0x0a, 0x19, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xa1, 0x02, 0x0a, 0x1f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x7e, 0x0a, 0x1b, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x1b, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x61, 0x73,
	0x68, 0x61, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61,
	0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x67, 0x0a, 0x26, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x6e, 0x64,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x15, 0x4d,
	0x65, 0x69, 0x73, 0x68, 0x69, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x19, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x65, 0x0a, 0x24, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x69,
	0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x69,
	0x66, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x22, 0xcb, 0x02,
	0x0a, 0x15, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54,
	0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x1a, 0x45, 0x0a, 0x07, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x1c,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x55, 0x0a, 0x14, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x6b,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x1e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9, 0x05,
	0x0a, 0x24, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x7a,
	0x0a, 0x16, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x16, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x6c, 0x0a, 0x0f, 0x6e, 0x70,
	0x63, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0f, 0x6e, 0x70, 0x63, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xaf, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x30, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x48, 0x0a, 0x0e, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x0e, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xf1, 0x02, 0x0a, 0x12, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x65, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x6d, 0x69,
	0x6e, 0x61, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x6c, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x6c, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x69, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x6a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a,
	0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x57, 0x0a,
	0x21, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x47, 0x0a, 0x1c, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x36, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x1f, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x19, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x23, 0x50, 0x76, 0x70, 0x52,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x76, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x55,
	0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x54, 0x0a, 0x13, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x13, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a,
	0x1a, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22,
	0x66, 0x0a, 0x25, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x4d, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xaf, 0x01, 0x0a, 0x27, 0x47, 0x61, 0x73, 0x68,
	0x61, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x61, 0x73,
	0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x22, 0xd7, 0x05, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x4f, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x42,
	0x6f, 0x6f, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x12, 0x38, 0x0a, 0x17, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74,
	0x75, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x17, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75,
	0x6d, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x1a, 0x5c, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x63, 0x0a, 0x0b, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x1f,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7f, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x42, 0x61, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x1a, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x51, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53,
	0x74, 0x65, 0x70, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x64,
	0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x65, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0xb4, 0x06, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x63, 0x6f, 0x6e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x6a, 0x65, 0x77, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6a, 0x65, 0x77, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4a, 0x65, 0x77, 0x65, 0x6c,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x9a, 0x02, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x69, 0x12, 0x38, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0xf9, 0x02, 0x0a, 0x17, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61,
	0x77, 0x53, 0x74, 0x65, 0x70, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x36,
	0x0a, 0x0b, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61,
	0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x61, 0x73, 0x68, 0x61,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x47, 0x61,
	0x73, 0x68, 0x61, 0x53, 0x74, 0x65, 0x70, 0x55, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x53,
	0x74, 0x65, 0x70, 0x55, 0x70, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x53, 0x74, 0x65, 0x70, 0x55, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x67,
	0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x63, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x1c, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x65, 0x6e,
	0x64, 0x42, 0x75, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x22, 0x53,
	0x0a, 0x12, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x14, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x22, 0x61, 0x0a, 0x20, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x13, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x1c, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x69, 0x6e, 0x6b,
	0x42, 0x61, 0x6e, 0x64, 0x61, 0x69, 0x4e, 0x61, 0x6d, 0x63, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x87,
	0x02, 0x0a, 0x12, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x1b, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x20, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb8, 0x01,
	0x0a, 0x20, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x41, 0x64, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xbf, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69,
	0x61, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x17, 0x74, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x22, 0x5e, 0x0a, 0x1d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x55, 0x6e, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xac, 0x01, 0x0a,
	0x11, 0x47, 0x61, 0x73, 0x68, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x73,
	0x68, 0x61, 0x52, 0x06, 0x67, 0x61, 0x73, 0x68, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x61,
	0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x61, 0x73, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x1f, 0x4d,
	0x65, 0x69, 0x73, 0x68, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x58, 0x50, 0x6f, 0x73, 0x74,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xaa, 0x02, 0x0a, 0x14, 0x50, 0x76, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x15, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15,
	0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x05, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x28, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x61,
	0x69, 0x4e, 0x61, 0x6d, 0x63, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5c, 0x0a, 0x1b, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a,
	0x1c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x01, 0x0a,
	0x1a, 0x47, 0x61, 0x73, 0x68, 0x61, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x67,
	0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xee, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x85, 0x02, 0x0a, 0x1f, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38,
	0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x28, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xb5, 0x01, 0x0a, 0x29, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x61, 0x69, 0x4e,
	0x61, 0x6d, 0x63, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x6e, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5d, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x73, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x5b, 0x0a, 0x1a, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb, 0x02, 0x0a, 0x1e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x4e, 0x6f, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x36, 0x0a,
	0x16, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x65,
	0x78, 0x63, 0x65, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65,
	0x78, 0x63, 0x65, 0x65, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x6b, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x16, 0x49, 0x64, 0x6f, 0x6c,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0x5c, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6e, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x6e, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x99, 0x02, 0x0a, 0x18, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x69, 0x73,
	0x68, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x07, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x1a, 0x77, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x27, 0x0a,
	0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x52, 0x06,
	0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x16,
	0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x15, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55,
	0x6e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcd,
	0x02, 0x0a, 0x10, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x18, 0x67, 0x61, 0x73, 0x68, 0x61, 0x52, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x18, 0x67, 0x61, 0x73, 0x68, 0x61,
	0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x1b, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x1b, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x70, 0x0a, 0x1e,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x1e,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x8f,
	0x01, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x9a, 0x02, 0x0a, 0x15, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x64, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x4d, 0x0a,
	0x16, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x16, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x68, 0x61, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a,
	0x1b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x20, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x55, 0x0a, 0x14, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x11, 0x4d, 0x65, 0x69,
	0x73, 0x68, 0x69, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a,
	0x20, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x36, 0x0a, 0x18, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x26, 0x47, 0x61, 0x73, 0x68,
	0x61, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x0f,
	0x47, 0x69, 0x66, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64,
	0x73, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x69, 0x73, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x25, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xe9, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfd, 0x01,
	0x0a, 0x17, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x15, 0x65, 0x78, 0x61,
	0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4d, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x01,
	0x0a, 0x20, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc5,
	0x0e, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x61,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x12, 0x28, 0x0a, 0x0f,
	0x67, 0x72, 0x61, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x61, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x67, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x67, 0x6d, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x42, 0x0a, 0x07, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x79,
	0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x62,
	0x6f, 0x78, 0x47, 0x61, 0x73, 0x68, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68,
	0x61, 0x52, 0x08, 0x62, 0x6f, 0x78, 0x47, 0x61, 0x73, 0x68, 0x61, 0x12, 0x3c, 0x0a, 0x19, 0x69,
	0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19,
	0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x64, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69, 0x64, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x18, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6f, 0x6c,
	0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x6e,
	0x6b, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x18, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x56, 0x0a,
	0x16, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x16, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0xd3, 0x02, 0x0a, 0x06, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69, 0x61, 0x6c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x61, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x6f, 0x64, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x6f, 0x64, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3d, 0x0a, 0x1b, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x17, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x22, 0x70, 0x0a,
	0x10, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x67,
	0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x95, 0x01, 0x0a, 0x23, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x24, 0x49, 0x64, 0x6f, 0x6c,
	0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x3b, 0x0a, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x49, 0x64, 0x6f, 0x6c,
	0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x22, 0x0a,
	0x20, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x6f,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x96, 0x01, 0x0a, 0x1f, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x13, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x22, 0x47, 0x0a,
	0x1d, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x25, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x1b, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79,
	0x22, 0x39, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x65, 0x0a, 0x24, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x1a, 0x49, 0x64, 0x6f, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x65, 0x0a, 0x24, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x27, 0x53, 0x68,
	0x6f, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x18, 0x43, 0x6f,
	0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x6f, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x1c, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1c, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61,
	0x77, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x1d, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72,
	0x61, 0x77, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x52, 0x0b, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x33, 0x0a,
	0x0c, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x67, 0x61, 0x73,
	0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x14, 0x4d, 0x65, 0x69, 0x73, 0x68, 0x69,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x03,
	0x0a, 0x10, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x06, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x36,
	0x0a, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x2f, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x69, 0x0a, 0x05, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x61,
	0x73, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x22, 0x88, 0x01, 0x0a, 0x1c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x01, 0x0a,
	0x25, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x50, 0x0a, 0x11, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x22, 0x56, 0x0a, 0x14, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfe, 0x03, 0x0a, 0x10, 0x47, 0x69,
	0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x69, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x47, 0x69,
	0x66, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x9d, 0x02, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x55, 0x6e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x45, 0x0a, 0x21, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x22, 0xdf, 0x01, 0x0a, 0x19, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x14,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x1c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x1d, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a,
	0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf7, 0x05, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x5a, 0x0a, 0x17, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x17, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6d, 0x0a, 0x15,
	0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48,
	0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x15, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x50, 0x0a, 0x0f, 0x48, 0x69,
	0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0xc4, 0x02, 0x0a,
	0x15, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x48, 0x69, 0x67, 0x68, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x10, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x73, 0x68, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x45, 0x0a, 0x1d, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x64, 0x69, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x12,
	0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x1d, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x61, 0x67, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x61, 0x67,
	0x49, 0x64, 0x22, 0x58, 0x0a, 0x24, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xdd, 0x01, 0x0a,
	0x20, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a,
	0x1f, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x8e, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4e, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x74, 0x65,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x53, 0x68, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x1f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xcb, 0x01,
	0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5c, 0x0a,
	0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x15, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x22, 0x44, 0x0a, 0x1e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x22, 0x58, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x13,
	0x43, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x4d, 0x0a, 0x16, 0x63, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x16, 0x63, 0x61, 0x72, 0x64, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x22, 0xf4, 0x01, 0x0a, 0x0c, 0x50, 0x76, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x69,
	0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x70, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x70, 0x63, 0x12, 0x45, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x44, 0x0a, 0x1e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x1e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x2a, 0x54, 0x75, 0x74, 0x6f, 0x72,
	0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xad, 0x07, 0x0a, 0x12, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x76, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3f, 0x0a,
	0x0b, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3f,
	0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x29, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x55, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4b, 0x65, 0x65,
	0x70, 0x52, 0x61, 0x74, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61,
	0x78, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x69,
	0x73, 0x68, 0x69, 0x52, 0x06, 0x6d, 0x65, 0x69, 0x73, 0x68, 0x69, 0x12, 0x31, 0x0a, 0x06, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x06, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x55,
	0x0a, 0x15, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15,
	0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xad, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x69, 0x76, 0x61, 0x6c, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x76, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x69, 0x76, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x24, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x92, 0x03, 0x0a, 0x11, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x52, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x9b, 0x01, 0x0a, 0x0d, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x1a, 0x7a, 0x0a, 0x09, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x53, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50, 0x61, 0x63, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x50, 0x61, 0x63, 0x6b, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50,
	0x61, 0x63, 0x6b, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x1e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x61, 0x64, 0x44, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x44, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x44, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x44, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x66, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x1c, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x68, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67,
	0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x12, 0x54,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x18, 0x47, 0x61, 0x73, 0x68,
	0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x0d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x22, 0xba, 0x0f, 0x0a, 0x16, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x74,
	0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x18, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x18, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x40, 0x0a, 0x1b, 0x65, 0x78, 0x61,
	0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b,
	0x65, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x65,
	0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x78, 0x61, 0x6d, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x48, 0x0a,
	0x1f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x47, 0x69, 0x6d, 0x6d,
	0x69, 0x63, 0x6b, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45,
	0x78, 0x61, 0x6d, 0x47, 0x69, 0x6d, 0x6d, 0x69, 0x63, 0x6b, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x70, 0x63, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e,
	0x70, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12,
	0x32, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x44,
	0x72, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x44, 0x72, 0x69, 0x6e, 0x6b,
	0x49, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x5b, 0x0a,
	0x0f, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x3c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x75, 0x72, 0x6e, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x64, 0x0a, 0x12, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x46, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x8d, 0x01, 0x0a, 0x12, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x1a,
	0xc2, 0x02, 0x0a, 0x0e, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x56, 0x0a, 0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b,
	0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6d, 0x69, 0x6e, 0x61, 0x72, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x1a, 0x87, 0x02, 0x0a, 0x11, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x45, 0x78, 0x61, 0x6d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x65, 0x78, 0x74, 0x31, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x31, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x31,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x65, 0x78, 0x74, 0x32, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x90,
	0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x5d, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70,
	0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xff, 0x02, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x30, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x44, 0x0a,
	0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x1a, 0x93, 0x01, 0x0a,
	0x0b, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x48, 0x0a, 0x0e, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x0e, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x22, 0x48, 0x0a, 0x14, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x1b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x53, 0x68, 0x6f, 0x70, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x41, 0x0a,
	0x1d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x22, 0xd0, 0x01, 0x0a, 0x17, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf4, 0x04, 0x0a, 0x0c, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x69, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x60, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x14, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x57, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x2a, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x58, 0x0a, 0x17,
	0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x12, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73,
	0x22, 0x5b, 0x0a, 0x1a, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a,
	0x1d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a,
	0x17, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb6, 0x04, 0x0a, 0x18, 0x47, 0x61, 0x73, 0x68, 0x61,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0b, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47,
	0x61, 0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x67, 0x61, 0x73, 0x68, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x63, 0x0a, 0x0b, 0x47, 0x61, 0x73, 0x68, 0x61, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x68, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0xe5, 0x01, 0x0a, 0x0a, 0x47, 0x61, 0x73, 0x68,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x68, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61,
	0x73, 0x68, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x54, 0x0a, 0x0c, 0x67, 0x61, 0x73,
	0x68, 0x61, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73,
	0x68, 0x61, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x61, 0x73, 0x68, 0x61, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x68, 0x61, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x22,
	0xda, 0x02, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x72,
	0x6c, 0x18, 0x61, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x69, 0x18, 0x62, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18,
	0x63, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x22, 0x3b, 0x0a, 0x1d,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x19, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x1d, 0x50, 0x76, 0x70, 0x52,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x19, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x5d, 0x0a, 0x1c, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x56, 0x0a, 0x17, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x9f, 0x01, 0x0a, 0x21, 0x49, 0x74,
	0x65, 0x6d, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x6f, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x4d,
	0x65, 0x69, 0x73, 0x68, 0x69, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x32, 0x52,
	0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x48, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x4c, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x41, 0x0a, 0x06, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x3d, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x7c, 0x0a, 0x04, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x11,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x92, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12,
	0x3f, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x11, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1c, 0x5a, 0x1a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x73, 0x61,
	0x6e, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_papi_proto_rawDescOnce sync.Once
	file_papi_proto_rawDescData = file_papi_proto_rawDesc
)

func file_papi_proto_rawDescGZIP() []byte {
	file_papi_proto_rawDescOnce.Do(func() {
		file_papi_proto_rawDescData = protoimpl.X.CompressGZIP(file_papi_proto_rawDescData)
	})
	return file_papi_proto_rawDescData
}

var file_papi_proto_msgTypes = make([]protoimpl.MessageInfo, 497)
var file_papi_proto_goTypes = []interface{}{
	(*Empty)(nil),                                                  // 0: client.api.Empty
	(*GiftListRequest)(nil),                                        // 1: client.api.GiftListRequest
	(*TicketExchangeExecuteRequest)(nil),                           // 2: client.api.TicketExchangeExecuteRequest
	(*GashaGetPrecautionRequest)(nil),                              // 3: client.api.GashaGetPrecautionRequest
	(*GuildDonateResponse)(nil),                                    // 4: client.api.GuildDonateResponse
	(*TowerStartRequest)(nil),                                      // 5: client.api.TowerStartRequest
	(*CostumeCheckResponse)(nil),                                   // 6: client.api.CostumeCheckResponse
	(*IdolCardRarityProbability)(nil),                              // 7: client.api.IdolCardRarityProbability
	(*ProfileUpdateNameResponse)(nil),                              // 8: client.api.ProfileUpdateNameResponse
	(*TowerCheckRequest)(nil),                                      // 9: client.api.TowerCheckRequest
	(*ProduceEndResponse)(nil),                                     // 10: client.api.ProduceEndResponse
	(*TutorialProduceStepAuditionExamEndRequest)(nil),              // 11: client.api.TutorialProduceStepAuditionExamEndRequest
	(*SeminarListExamResponse)(nil),                                // 12: client.api.SeminarListExamResponse
	(*GuildReceiveDonationResponse)(nil),                           // 13: client.api.GuildReceiveDonationResponse
	(*NoticeListAllResponse)(nil),                                  // 14: client.api.NoticeListAllResponse
	(*ProduceStepShopStartResponse)(nil),                           // 15: client.api.ProduceStepShopStartResponse
	(*TowerListLayersRequest)(nil),                                 // 16: client.api.TowerListLayersRequest
	(*GashaGetProbabilityRequest)(nil),                             // 17: client.api.GashaGetProbabilityRequest
	(*GashaGetStepUpProbabilityResponse)(nil),                      // 18: client.api.GashaGetStepUpProbabilityResponse
	(*TutorialProduceStartResponse)(nil),                           // 19: client.api.TutorialProduceStartResponse
	(*Consent)(nil),                                                // 20: client.api.Consent
	(*ProduceStartResponse)(nil),                                   // 21: client.api.ProduceStartResponse
	(*ProduceRank)(nil),                                            // 22: client.api.ProduceRank
	(*TutorialProduceResultRequest)(nil),                           // 23: client.api.TutorialProduceResultRequest
	(*LoginBonusCheckResponse)(nil),                                // 24: client.api.LoginBonusCheckResponse
	(*FriendUnFollowRequest)(nil),                                  // 25: client.api.FriendUnFollowRequest
	(*HomeLoginResponse)(nil),                                      // 26: client.api.HomeLoginResponse
	(*InvitationReceiveInvitationPointResponse)(nil),               // 27: client.api.InvitationReceiveInvitationPointResponse
	(*PhotoUpdateNameResponse)(nil),                                // 28: client.api.PhotoUpdateNameResponse
	(*ProduceStepPresentEndResponse)(nil),                          // 29: client.api.ProduceStepPresentEndResponse
	(*ProduceHistoryRequest)(nil),                                  // 30: client.api.ProduceHistoryRequest
	(*PvpRateGetHistoryResponse)(nil),                              // 31: client.api.PvpRateGetHistoryResponse
	(*CostumeSetRequest)(nil),                                      // 32: client.api.CostumeSetRequest
	(*GashaDrawResponse)(nil),                                      // 33: client.api.GashaDrawResponse
	(*IdolCardUpgradeLevelLimitRankResponse)(nil),                  // 34: client.api.IdolCardUpgradeLevelLimitRankResponse
	(*ProduceStartBeforeLiveEvaluationResponse)(nil),               // 35: client.api.ProduceStartBeforeLiveEvaluationResponse
	(*AuthGetConsentResponse)(nil),                                 // 36: client.api.AuthGetConsentResponse
	(*ExchangeExecuteResponse)(nil),                                // 37: client.api.ExchangeExecuteResponse
	(*TowerReceiveLayerCountRewardResponse)(nil),                   // 38: client.api.TowerReceiveLayerCountRewardResponse
	(*ProduceReadAdvRequest)(nil),                                  // 39: client.api.ProduceReadAdvRequest
	(*TutorialProgressResponse)(nil),                               // 40: client.api.TutorialProgressResponse
	(*WorkStartResponse)(nil),                                      // 41: client.api.WorkStartResponse
	(*GuildEstablishResponse)(nil),                                 // 42: client.api.GuildEstablishResponse
	(*ProduceUpdateSupportCardDeck)(nil),                           // 43: client.api.ProduceUpdateSupportCardDeck
	(*ProduceStepAuditionEndExamBattleRequest)(nil),                // 44: client.api.ProduceStepAuditionEndExamBattleRequest
	(*ProduceRetireResponse)(nil),                                  // 45: client.api.ProduceRetireResponse
	(*DefaultGashaProbability)(nil),                                // 46: client.api.DefaultGashaProbability
	(*ProfileUpdateCommentRequest)(nil),                            // 47: client.api.ProfileUpdateCommentRequest
	(*ProduceResultRequest)(nil),                                   // 48: client.api.ProduceResultRequest
	(*FriendFollowRequest)(nil),                                    // 49: client.api.FriendFollowRequest
	(*NoticeUpdateDetailTimeResponse)(nil),                         // 50: client.api.NoticeUpdateDetailTimeResponse
	(*PvpRateListHistoryResponse)(nil),                             // 51: client.api.PvpRateListHistoryResponse
	(*TutorialSetNameResponse)(nil),                                // 52: client.api.TutorialSetNameResponse
	(*ExchangeListResponse)(nil),                                   // 53: client.api.ExchangeListResponse
	(*GashaDrawResult)(nil),                                        // 54: client.api.GashaDrawResult
	(*InviteUser)(nil),                                             // 55: client.api.InviteUser
	(*TicketExchangeItem)(nil),                                     // 56: client.api.TicketExchangeItem
	(*ProduceHighScoreReward)(nil),                                 // 57: client.api.ProduceHighScoreReward
	(*GuildEditDetailRequest)(nil),                                 // 58: client.api.GuildEditDetailRequest
	(*PvpRateRankReward)(nil),                                      // 59: client.api.PvpRateRankReward
	(*GuildEstablishRequest)(nil),                                  // 60: client.api.GuildEstablishRequest
	(*TowerReceiveTotalClearRankRewardResponse)(nil),               // 61: client.api.TowerReceiveTotalClearRankRewardResponse
	(*GuildMemberInfo)(nil),                                        // 62: client.api.GuildMemberInfo
	(*ProduceActivateEffectResponse)(nil),                          // 63: client.api.ProduceActivateEffectResponse
	(*ProduceStepPresentEndRequest)(nil),                           // 64: client.api.ProduceStepPresentEndRequest
	(*ShopPurchaseResponse)(nil),                                   // 65: client.api.ShopPurchaseResponse
	(*ShopCancelPurchaseTransactionRequest)(nil),                   // 66: client.api.ShopCancelPurchaseTransactionRequest
	(*TutorialSkipRequest)(nil),                                    // 67: client.api.TutorialSkipRequest
	(*ProfileUpdateNameRequest)(nil),                               // 68: client.api.ProfileUpdateNameRequest
	(*ExchangeResetRequest)(nil),                                   // 69: client.api.ExchangeResetRequest
	(*GiftListHistoryResponse)(nil),                                // 70: client.api.GiftListHistoryResponse
	(*MeishiListResponse)(nil),                                     // 71: client.api.MeishiListResponse
	(*GuildInfo)(nil),                                              // 72: client.api.GuildInfo
	(*MemoryUpdateTagSettingResponse)(nil),                         // 73: client.api.MemoryUpdateTagSettingResponse
	(*ProduceHighScoreRankingResponse)(nil),                        // 74: client.api.ProduceHighScoreRankingResponse
	(*AuthSendConsentRequest)(nil),                                 // 75: client.api.AuthSendConsentRequest
	(*CoinGashaResetBoxResponse)(nil),                              // 76: client.api.CoinGashaResetBoxResponse
	(*ProduceRankingResponse)(nil),                                 // 77: client.api.ProduceRankingResponse
	(*MovieDeleteRequest)(nil),                                     // 78: client.api.MovieDeleteRequest
	(*ProduceEndBeforeLiveEvaluationRequest)(nil),                  // 79: client.api.ProduceEndBeforeLiveEvaluationRequest
	(*ProfileUpdateSupportCardRequest)(nil),                        // 80: client.api.ProfileUpdateSupportCardRequest
	(*PvpRateEndRequest)(nil),                                      // 81: client.api.PvpRateEndRequest
	(*ProduceStepLessonEndRequest)(nil),                            // 82: client.api.ProduceStepLessonEndRequest
	(*PvpRateStartRequest)(nil),                                    // 83: client.api.PvpRateStartRequest
	(*UserGetResponse)(nil),                                        // 84: client.api.UserGetResponse
	(*IdolCardChangeSkinRequest)(nil),                              // 85: client.api.IdolCardChangeSkinRequest
	(*ShopPurchaseJewelRequest)(nil),                               // 86: client.api.ShopPurchaseJewelRequest
	(*TowerUpdateMemoryDeckRequest)(nil),                           // 87: client.api.TowerUpdateMemoryDeckRequest
	(*ItemUseActionPointRecoveryResponse)(nil),                     // 88: client.api.ItemUseActionPointRecoveryResponse
	(*GashaSelectPickupResponse)(nil),                              // 89: client.api.GashaSelectPickupResponse
	(*MeishiUpdateRequest)(nil),                                    // 90: client.api.MeishiUpdateRequest
	(*StoryEventTopRequest)(nil),                                   // 91: client.api.StoryEventTopRequest
	(*ProduceRankingRequest)(nil),                                  // 92: client.api.ProduceRankingRequest
	(*ProfileBirthday)(nil),                                        // 93: client.api.ProfileBirthday
	(*GuildDonateRequest)(nil),                                     // 94: client.api.GuildDonateRequest
	(*GuildRequestDonationResponse)(nil),                           // 95: client.api.GuildRequestDonationResponse
	(*HomeSetCharactersResponse)(nil),                              // 96: client.api.HomeSetCharactersResponse
	(*PhotoCreateResponse)(nil),                                    // 97: client.api.PhotoCreateResponse
	(*GuildTopResponse)(nil),                                       // 98: client.api.GuildTopResponse
	(*SystemCheckResponse)(nil),                                    // 99: client.api.SystemCheckResponse
	(*GuildEditLeaderMessageResponse)(nil),                         // 100: client.api.GuildEditLeaderMessageResponse
	(*MediaPlayResponse)(nil),                                      // 101: client.api.MediaPlayResponse
	(*MeishiReportXPostMissionResponse)(nil),                       // 102: client.api.MeishiReportXPostMissionResponse
	(*ProfileGetRequest)(nil),                                      // 103: client.api.ProfileGetRequest
	(*ProduceViewPictureBookLiveRequest)(nil),                      // 104: client.api.ProduceViewPictureBookLiveRequest
	(*AuthUnlinkResponse)(nil),                                     // 105: client.api.AuthUnlinkResponse
	(*GashaGetPrecautionResponse)(nil),                             // 106: client.api.GashaGetPrecautionResponse
	(*ProduceStepPresentReceiveRequest)(nil),                       // 107: client.api.ProduceStepPresentReceiveRequest
	(*GuildGetResponse)(nil),                                       // 108: client.api.GuildGetResponse
	(*GuildChangeLeaderResponse)(nil),                              // 109: client.api.GuildChangeLeaderResponse
	(*ProduceUpdateMemoryDeckResponse)(nil),                        // 110: client.api.ProduceUpdateMemoryDeckResponse
	(*ShopTopResponse)(nil),                                        // 111: client.api.ShopTopResponse
	(*StoryUnlockRequest)(nil),                                     // 112: client.api.StoryUnlockRequest
	(*WorkFinishResponse)(nil),                                     // 113: client.api.WorkFinishResponse
	(*GiftOpenResponse)(nil),                                       // 114: client.api.GiftOpenResponse
	(*TowerEndRequest)(nil),                                        // 115: client.api.TowerEndRequest
	(*IdolCardProbability)(nil),                                    // 116: client.api.IdolCardProbability
	(*StoryReadRequest)(nil),                                       // 117: client.api.StoryReadRequest
	(*ExchangeResetResponse)(nil),                                  // 118: client.api.ExchangeResetResponse
	(*GashaGetStepUpProbabilityRequest)(nil),                       // 119: client.api.GashaGetStepUpProbabilityRequest
	(*ShopRegisterPurchaseTransactionRequest)(nil),                 // 120: client.api.ShopRegisterPurchaseTransactionRequest
	(*GashaGetPointExchangeResponse)(nil),                          // 121: client.api.GashaGetPointExchangeResponse
	(*MeishiSetRequest)(nil),                                       // 122: client.api.MeishiSetRequest
	(*ProduceUpdateMemoryDeckRequest)(nil),                         // 123: client.api.ProduceUpdateMemoryDeckRequest
	(*ProduceUpdateMemoryDeck)(nil),                                // 124: client.api.ProduceUpdateMemoryDeck
	(*MissionReceiveGroupRequest)(nil),                             // 125: client.api.MissionReceiveGroupRequest
	(*MovieCreateResponse)(nil),                                    // 126: client.api.MovieCreateResponse
	(*NoticeGetResponse)(nil),                                      // 127: client.api.NoticeGetResponse
	(*ProduceListRentalMemoryResponse)(nil),                        // 128: client.api.ProduceListRentalMemoryResponse
	(*TutorialReadDearnessStoryRequest)(nil),                       // 129: client.api.TutorialReadDearnessStoryRequest
	(*StepUpGashaProbability)(nil),                                 // 130: client.api.StepUpGashaProbability
	(*GuildRequestDonationRequest)(nil),                            // 131: client.api.GuildRequestDonationRequest
	(*HomeEnterResponse)(nil),                                      // 132: client.api.HomeEnterResponse
	(*TowerReceiveTotalClearRankRewardRequest)(nil),                // 133: client.api.TowerReceiveTotalClearRankRewardRequest
	(*MeishiFollowResponse)(nil),                                   // 134: client.api.MeishiFollowResponse
	(*MissionExchangePassPointRequest)(nil),                        // 135: client.api.MissionExchangePassPointRequest
	(*ProduceStartBeforeLiveEvaluationRequest)(nil),                // 136: client.api.ProduceStartBeforeLiveEvaluationRequest
	(*GuildReactionInfo)(nil),                                      // 137: client.api.GuildReactionInfo
	(*ProduceRankingTopResponse)(nil),                              // 138: client.api.ProduceRankingTopResponse
	(*GuildDonationInfo)(nil),                                      // 139: client.api.GuildDonationInfo
	(*LoginBonusConfirmResponse)(nil),                              // 140: client.api.LoginBonusConfirmResponse
	(*TowerReceiveLayerCountRewardRequest)(nil),                    // 141: client.api.TowerReceiveLayerCountRewardRequest
	(*GashaRarityProbability)(nil),                                 // 142: client.api.GashaRarityProbability
	(*ProfileGetResponse)(nil),                                     // 143: client.api.ProfileGetResponse
	(*GuildSearchRequest)(nil),                                     // 144: client.api.GuildSearchRequest
	(*ProduceStepLessonEndResponse)(nil),                           // 145: client.api.ProduceStepLessonEndResponse
	(*ProfileUpdateCommentResponse)(nil),                           // 146: client.api.ProfileUpdateCommentResponse
	(*TutorialProduceResultResponse)(nil),                          // 147: client.api.TutorialProduceResultResponse
	(*StoryReadDearnessStoryRequest)(nil),                          // 148: client.api.StoryReadDearnessStoryRequest
	(*TutorialProduceStepPresentReceiveRequest)(nil),               // 149: client.api.TutorialProduceStepPresentReceiveRequest
	(*GiftCountResponse)(nil),                                      // 150: client.api.GiftCountResponse
	(*ProduceDiscardDrinkRequest)(nil),                             // 151: client.api.ProduceDiscardDrinkRequest
	(*StoryUnlockResponse)(nil),                                    // 152: client.api.StoryUnlockResponse
	(*GuildCancelJoinRequestRequest)(nil),                          // 153: client.api.GuildCancelJoinRequestRequest
	(*NoticeGetRequest)(nil),                                       // 154: client.api.NoticeGetRequest
	(*ProduceStepAuditionEndExamBattleResponse)(nil),               // 155: client.api.ProduceStepAuditionEndExamBattleResponse
	(*ProduceHighScoreResult)(nil),                                 // 156: client.api.ProduceHighScoreResult
	(*PvpRateRankingUser)(nil),                                     // 157: client.api.PvpRateRankingUser
	(*MemoryExchangeRequest)(nil),                                  // 158: client.api.MemoryExchangeRequest
	(*PhotoDeleteResponse)(nil),                                    // 159: client.api.PhotoDeleteResponse
	(*GuildGetRequest)(nil),                                        // 160: client.api.GuildGetRequest
	(*SupportCardUpgradeLevelLimitRankRequest)(nil),                // 161: client.api.SupportCardUpgradeLevelLimitRankRequest
	(*InvitationReceiveInvitationPointRequest)(nil),                // 162: client.api.InvitationReceiveInvitationPointRequest
	(*WorkSkipRequest)(nil),                                        // 163: client.api.WorkSkipRequest
	(*SeminarEndExamRequest)(nil),                                  // 164: client.api.SeminarEndExamRequest
	(*StoryReadProduceStoryResponse)(nil),                          // 165: client.api.StoryReadProduceStoryResponse
	(*GuildCancelJoinRequestResponse)(nil),                         // 166: client.api.GuildCancelJoinRequestResponse
	(*MissionUrlTransitionRequest)(nil),                            // 167: client.api.MissionUrlTransitionRequest
	(*ProduceStepLessonStartResponse)(nil),                         // 168: client.api.ProduceStepLessonStartResponse
	(*ProduceStepAuditionStartResponse)(nil),                       // 169: client.api.ProduceStepAuditionStartResponse
	(*TowerGetLayerResponse)(nil),                                  // 170: client.api.TowerGetLayerResponse
	(*TowerListLayersResponse)(nil),                                // 171: client.api.TowerListLayersResponse
	(*GuildUpdateLeaderMessageReactionResponse)(nil),               // 172: client.api.GuildUpdateLeaderMessageReactionResponse
	(*PhotoCreateRequest)(nil),                                     // 173: client.api.PhotoCreateRequest
	(*MemoryUpdateProtectionRequest)(nil),                          // 174: client.api.MemoryUpdateProtectionRequest
	(*ProduceStepEventRequest)(nil),                                // 175: client.api.ProduceStepEventRequest
	(*TutorialCheckBeforeLiveProduceEvaluationResponse)(nil),       // 176: client.api.TutorialCheckBeforeLiveProduceEvaluationResponse
	(*MemoryExchangeResponse)(nil),                                 // 177: client.api.MemoryExchangeResponse
	(*ProduceStepShopEndRequest)(nil),                              // 178: client.api.ProduceStepShopEndRequest
	(*ProfileUpdateBirthdayResponse)(nil),                          // 179: client.api.ProfileUpdateBirthdayResponse
	(*CostumeCheckRequest)(nil),                                    // 180: client.api.CostumeCheckRequest
	(*MusicSendActionLogRequest)(nil),                              // 181: client.api.MusicSendActionLogRequest
	(*AuthAgreeTermsResponse)(nil),                                 // 182: client.api.AuthAgreeTermsResponse
	(*MeishiGetRequest)(nil),                                       // 183: client.api.MeishiGetRequest
	(*StoryReadProduceStoryRequest)(nil),                           // 184: client.api.StoryReadProduceStoryRequest
	(*ProduceStepPresentReceiveResponse)(nil),                      // 185: client.api.ProduceStepPresentReceiveResponse
	(*ProduceDiscardDrinkResponse)(nil),                            // 186: client.api.ProduceDiscardDrinkResponse
	(*PvpRateEndResponse)(nil),                                     // 187: client.api.PvpRateEndResponse
	(*ProduceUpdateSupportCardDeckRequest)(nil),                    // 188: client.api.ProduceUpdateSupportCardDeckRequest
	(*TutorialProduceStepPresentReceiveResponse)(nil),              // 189: client.api.TutorialProduceStepPresentReceiveResponse
	(*TutorialUnlockFeatureResponse)(nil),                          // 190: client.api.TutorialUnlockFeatureResponse
	(*GuildUpdateLeaderMessageReactionRequest)(nil),                // 191: client.api.GuildUpdateLeaderMessageReactionRequest
	(*ExchangeExecuteRequest)(nil),                                 // 192: client.api.ExchangeExecuteRequest
	(*MemoryUpdateProtectionResponse)(nil),                         // 193: client.api.MemoryUpdateProtectionResponse
	(*ProduceUpdateSupportCardDeckResponse)(nil),                   // 194: client.api.ProduceUpdateSupportCardDeckResponse
	(*PvpRateUnitStageFormation)(nil),                              // 195: client.api.PvpRateUnitStageFormation
	(*PvpRateListRankingResponse)(nil),                             // 196: client.api.PvpRateListRankingResponse
	(*WorkTopResponse)(nil),                                        // 197: client.api.WorkTopResponse
	(*HomeSetCharactersRequest)(nil),                               // 198: client.api.HomeSetCharactersRequest
	(*FriendFollowResponse)(nil),                                   // 199: client.api.FriendFollowResponse
	(*MeishiGetResponse)(nil),                                      // 200: client.api.MeishiGetResponse
	(*MusicSendBuyActionLogResponse)(nil),                          // 201: client.api.MusicSendBuyActionLogResponse
	(*ProduceTopResponse)(nil),                                     // 202: client.api.ProduceTopResponse
	(*AuthMigrateResponse)(nil),                                    // 203: client.api.AuthMigrateResponse
	(*PvpRateSeasonResult)(nil),                                    // 204: client.api.PvpRateSeasonResult
	(*StartupConfirmResponse)(nil),                                 // 205: client.api.StartupConfirmResponse
	(*ProduceCheckProgressRequest)(nil),                            // 206: client.api.ProduceCheckProgressRequest
	(*ShopPurchaseRequest)(nil),                                    // 207: client.api.ShopPurchaseRequest
	(*PhotoUpdateNameRequest)(nil),                                 // 208: client.api.PhotoUpdateNameRequest
	(*TutorialProduceNextResponse)(nil),                            // 209: client.api.TutorialProduceNextResponse
	(*CostumeSetResponse)(nil),                                     // 210: client.api.CostumeSetResponse
	(*SeminarGetExamRequest)(nil),                                  // 211: client.api.SeminarGetExamRequest
	(*GuildDismissResponse)(nil),                                   // 212: client.api.GuildDismissResponse
	(*TutorialReadDearnessStoryResponse)(nil),                      // 213: client.api.TutorialReadDearnessStoryResponse
	(*WorkFinishResult)(nil),                                       // 214: client.api.WorkFinishResult
	(*ShopCheckPurchaseJewelRequest)(nil),                          // 215: client.api.ShopCheckPurchaseJewelRequest
	(*CoinGashaGetRequest)(nil),                                    // 216: client.api.CoinGashaGetRequest
	(*SupportCardRarityProbability)(nil),                           // 217: client.api.SupportCardRarityProbability
	(*MovieDeleteResponse)(nil),                                    // 218: client.api.MovieDeleteResponse
	(*ItemSellResponse)(nil),                                       // 219: client.api.ItemSellResponse
	(*ProduceGrowthResult)(nil),                                    // 220: client.api.ProduceGrowthResult
	(*ProduceRankingTopRequest)(nil),                               // 221: client.api.ProduceRankingTopRequest
	(*AuthAgreeTermsRequest)(nil),                                  // 222: client.api.AuthAgreeTermsRequest
	(*MissionReceiveGroupResponse)(nil),                            // 223: client.api.MissionReceiveGroupResponse
	(*ProduceChangeCostumeRequest)(nil),                            // 224: client.api.ProduceChangeCostumeRequest
	(*ProduceNextResponse)(nil),                                    // 225: client.api.ProduceNextResponse
	(*IdolCardUpgradePotentialRankRequest)(nil),                    // 226: client.api.IdolCardUpgradePotentialRankRequest
	(*TutorialReceiveIdolCardRequest)(nil),                         // 227: client.api.TutorialReceiveIdolCardRequest
	(*TutorialSetNameRequest)(nil),                                 // 228: client.api.TutorialSetNameRequest
	(*ProduceStepAuditionStartRequest)(nil),                        // 229: client.api.ProduceStepAuditionStartRequest
	(*ProduceRerollSelectProduceCardResponse)(nil),                 // 230: client.api.ProduceRerollSelectProduceCardResponse
	(*ProduceHighScoreCharacter)(nil),                              // 231: client.api.ProduceHighScoreCharacter
	(*CoinGashaGetResponse)(nil),                                   // 232: client.api.CoinGashaGetResponse
	(*ProduceHighScoreRankReward)(nil),                             // 233: client.api.ProduceHighScoreRankReward
	(*TowerEndResponse)(nil),                                       // 234: client.api.TowerEndResponse
	(*TutorialProduceStepAuditionEndResponse)(nil),                 // 235: client.api.TutorialProduceStepAuditionEndResponse
	(*AuthLinkBandaiNamcoIdResponse)(nil),                          // 236: client.api.AuthLinkBandaiNamcoIdResponse
	(*GashaDrawStepUpRequest)(nil),                                 // 237: client.api.GashaDrawStepUpRequest
	(*GashaGetProbabilityResponse)(nil),                            // 238: client.api.GashaGetProbabilityResponse
	(*NoticeFetchListRequest)(nil),                                 // 239: client.api.NoticeFetchListRequest
	(*ProduceHighScoreGetResponse)(nil),                            // 240: client.api.ProduceHighScoreGetResponse
	(*ItemSellRequest)(nil),                                        // 241: client.api.ItemSellRequest
	(*ProduceStepShopBuyResponse)(nil),                             // 242: client.api.ProduceStepShopBuyResponse
	(*ProduceActivateEffectRequest)(nil),                           // 243: client.api.ProduceActivateEffectRequest
	(*ProduceReadDearnessStoryRequest)(nil),                        // 244: client.api.ProduceReadDearnessStoryRequest
	(*AuthLoginResponse)(nil),                                      // 245: client.api.AuthLoginResponse
	(*GuildRejectJoinRequestRequest)(nil),                          // 246: client.api.GuildRejectJoinRequestRequest
	(*MissionListEventResponse)(nil),                               // 247: client.api.MissionListEventResponse
	(*ProduceReportGuildMissionRequest)(nil),                       // 248: client.api.ProduceReportGuildMissionRequest
	(*MissionReceiveResponse)(nil),                                 // 249: client.api.MissionReceiveResponse
	(*GashaExchangePointRequest)(nil),                              // 250: client.api.GashaExchangePointRequest
	(*ProduceEndBeforeLiveEvaluationResponse)(nil),                 // 251: client.api.ProduceEndBeforeLiveEvaluationResponse
	(*MeishiUnfollowRequest)(nil),                                  // 252: client.api.MeishiUnfollowRequest
	(*SupportCardEnhanceRequest)(nil),                              // 253: client.api.SupportCardEnhanceRequest
	(*TutorialProduceStepLessonEndResponse)(nil),                   // 254: client.api.TutorialProduceStepLessonEndResponse
	(*GiftListHistoryRequest)(nil),                                 // 255: client.api.GiftListHistoryRequest
	(*MissionReceiveRequest)(nil),                                  // 256: client.api.MissionReceiveRequest
	(*GuildApplyJoinRequestRequest)(nil),                           // 257: client.api.GuildApplyJoinRequestRequest
	(*TutorialSkipResponse)(nil),                                   // 258: client.api.TutorialSkipResponse
	(*ProduceHighScoreRankingRequest)(nil),                         // 259: client.api.ProduceHighScoreRankingRequest
	(*ProduceListRentalSupportCardResponse)(nil),                   // 260: client.api.ProduceListRentalSupportCardResponse
	(*ShopListItemsRequest)(nil),                                   // 261: client.api.ShopListItemsRequest
	(*TowerStartResponse)(nil),                                     // 262: client.api.TowerStartResponse
	(*HealthCheckRequest)(nil),                                     // 263: client.api.HealthCheckRequest
	(*ItemUseActionPointRecoveryRequest)(nil),                      // 264: client.api.ItemUseActionPointRecoveryRequest
	(*TutorialUnlockFeatureRequest)(nil),                           // 265: client.api.TutorialUnlockFeatureRequest
	(*WorkStopRequest)(nil),                                        // 266: client.api.WorkStopRequest
	(*GuildApproveJoinRequestResponse)(nil),                        // 267: client.api.GuildApproveJoinRequestResponse
	(*MissionReceivePassRequest)(nil),                              // 268: client.api.MissionReceivePassRequest
	(*PvpRateUpdateUserPvpRateUnitRequest)(nil),                    // 269: client.api.PvpRateUpdateUserPvpRateUnitRequest
	(*ProduceStepEventResponse)(nil),                               // 270: client.api.ProduceStepEventResponse
	(*ProduceHistoryResponse)(nil),                                 // 271: client.api.ProduceHistoryResponse
	(*ProfileUpdateMemoryRequest)(nil),                             // 272: client.api.ProfileUpdateMemoryRequest
	(*ShopCancelPurchaseTransactionResponse)(nil),                  // 273: client.api.ShopCancelPurchaseTransactionResponse
	(*SupportCardExchangeRequest)(nil),                             // 274: client.api.SupportCardExchangeRequest
	(*GashaGetSelectPickupProbabilityResponse)(nil),                // 275: client.api.GashaGetSelectPickupProbabilityResponse
	(*MovieCreateRequest)(nil),                                     // 276: client.api.MovieCreateRequest
	(*ProduceStartRequest)(nil),                                    // 277: client.api.ProduceStartRequest
	(*ProduceStepPresentStartResponse)(nil),                        // 278: client.api.ProduceStepPresentStartResponse
	(*GuildSearchResponse)(nil),                                    // 279: client.api.GuildSearchResponse
	(*HomeConfirmBanWarningResponse)(nil),                          // 280: client.api.HomeConfirmBanWarningResponse
	(*MusicSendActionLogResponse)(nil),                             // 281: client.api.MusicSendActionLogResponse
	(*WorkStopResponse)(nil),                                       // 282: client.api.WorkStopResponse
	(*ProduceStepShopBuyRequest)(nil),                              // 283: client.api.ProduceStepShopBuyRequest
	(*ExchangeInfo)(nil),                                           // 284: client.api.ExchangeInfo
	(*ShopItem)(nil),                                               // 285: client.api.ShopItem
	(*GashaDrawStepUpResponse)(nil),                                // 286: client.api.GashaDrawStepUpResponse
	(*ProduceViewPictureBookLiveResponse)(nil),                     // 287: client.api.ProduceViewPictureBookLiveResponse
	(*MusicSendBuyActionLogRequest)(nil),                           // 288: client.api.MusicSendBuyActionLogRequest
	(*GuildLeaveResponse)(nil),                                     // 289: client.api.GuildLeaveResponse
	(*MeishiDeleteRequest)(nil),                                    // 290: client.api.MeishiDeleteRequest
	(*ProduceEndRequest)(nil),                                      // 291: client.api.ProduceEndRequest
	(*NoticeUpdateCategoryTimeResponse)(nil),                       // 292: client.api.NoticeUpdateCategoryTimeResponse
	(*ProduceStepLessonStartRequest)(nil),                          // 293: client.api.ProduceStepLessonStartRequest
	(*ProduceStepAuditionEndResponse)(nil),                         // 294: client.api.ProduceStepAuditionEndResponse
	(*AuthLinkBandaiNamcoIdRequest)(nil),                           // 295: client.api.AuthLinkBandaiNamcoIdRequest
	(*FriendListResponse)(nil),                                     // 296: client.api.FriendListResponse
	(*GuildRejectJoinRequestResponse)(nil),                         // 297: client.api.GuildRejectJoinRequestResponse
	(*CharacterCheckRosterRequest)(nil),                            // 298: client.api.CharacterCheckRosterRequest
	(*ProfileUpdateSupportCardResponse)(nil),                       // 299: client.api.ProfileUpdateSupportCardResponse
	(*ProduceReadDearnessStoryResponse)(nil),                       // 300: client.api.ProduceReadDearnessStoryResponse
	(*ProduceReadAdvResponse)(nil),                                 // 301: client.api.ProduceReadAdvResponse
	(*SupportCardProbability)(nil),                                 // 302: client.api.SupportCardProbability
	(*GuildApplyJoinRequestResponse)(nil),                          // 303: client.api.GuildApplyJoinRequestResponse
	(*MeishiUnfollowResponse)(nil),                                 // 304: client.api.MeishiUnfollowResponse
	(*GashaListResponse)(nil),                                      // 305: client.api.GashaListResponse
	(*MeishiReportXPostMissionRequest)(nil),                        // 306: client.api.MeishiReportXPostMissionRequest
	(*PvpRateStartResponse)(nil),                                   // 307: client.api.PvpRateStartResponse
	(*AuthPrepareMigrationBandaiNamcoIdRequest)(nil),               // 308: client.api.AuthPrepareMigrationBandaiNamcoIdRequest
	(*ProduceCheckProgressResponse)(nil),                           // 309: client.api.ProduceCheckProgressResponse
	(*SupportCardExchangeResponse)(nil),                            // 310: client.api.SupportCardExchangeResponse
	(*FriendDeleteFollowerResponse)(nil),                           // 311: client.api.FriendDeleteFollowerResponse
	(*GashaExchangePointResponse)(nil),                             // 312: client.api.GashaExchangePointResponse
	(*DonationRequest)(nil),                                        // 313: client.api.DonationRequest
	(*ShopRecoverPurchaseJewelRequest)(nil),                        // 314: client.api.ShopRecoverPurchaseJewelRequest
	(*ExchangeGetResponse)(nil),                                    // 315: client.api.ExchangeGetResponse
	(*SupportCardUpgradeLevelLimitRankResponse)(nil),               // 316: client.api.SupportCardUpgradeLevelLimitRankResponse
	(*AuthPrepareMigrationBandaiNamcoIdResponse)(nil),              // 317: client.api.AuthPrepareMigrationBandaiNamcoIdResponse
	(*ProduceUseDrinkResponse)(nil),                                // 318: client.api.ProduceUseDrinkResponse
	(*SupportCardEnhanceResponse)(nil),                             // 319: client.api.SupportCardEnhanceResponse
	(*ShopCheckPurchaseJewelResponse)(nil),                         // 320: client.api.ShopCheckPurchaseJewelResponse
	(*WorkSkipResponse)(nil),                                       // 321: client.api.WorkSkipResponse
	(*IdolCardReleaseRequest)(nil),                                 // 322: client.api.IdolCardReleaseRequest
	(*AuthMigrateRequest)(nil),                                     // 323: client.api.AuthMigrateRequest
	(*MeishiListFollowResponse)(nil),                               // 324: client.api.MeishiListFollowResponse
	(*SeminarEndExamResponse)(nil),                                 // 325: client.api.SeminarEndExamResponse
	(*HomeListEventResponse)(nil),                                  // 326: client.api.HomeListEventResponse
	(*FriendUnFollowResponse)(nil),                                 // 327: client.api.FriendUnFollowResponse
	(*GashaProbability)(nil),                                       // 328: client.api.GashaProbability
	(*StoryReadResponse)(nil),                                      // 329: client.api.StoryReadResponse
	(*CoinGashaDrawResponse)(nil),                                  // 330: client.api.CoinGashaDrawResponse
	(*FriendDeleteFollowerRequest)(nil),                            // 331: client.api.FriendDeleteFollowerRequest
	(*InvitationListInviteUserResponse)(nil),                       // 332: client.api.InvitationListInviteUserResponse
	(*MeishiDeleteResponse)(nil),                                   // 333: client.api.MeishiDeleteResponse
	(*MeishiSetResponse)(nil),                                      // 334: client.api.MeishiSetResponse
	(*MissionExchangePassPointResponse)(nil),                       // 335: client.api.MissionExchangePassPointResponse
	(*PvpRateGetHistoryRequest)(nil),                               // 336: client.api.PvpRateGetHistoryRequest
	(*GashaGetSelectPickupProbabilityRequest)(nil),                 // 337: client.api.GashaGetSelectPickupProbabilityRequest
	(*GiftOpenRequest)(nil),                                        // 338: client.api.GiftOpenRequest
	(*GuildDissolveResponse)(nil),                                  // 339: client.api.GuildDissolveResponse
	(*InvitationEnterInvitationCodeResponse)(nil),                  // 340: client.api.InvitationEnterInvitationCodeResponse
	(*ProduceStepRefreshResponse)(nil),                             // 341: client.api.ProduceStepRefreshResponse
	(*PvpRatePlayTestResponse)(nil),                                // 342: client.api.PvpRatePlayTestResponse
	(*ShopRecoverPurchaseJewelResponse)(nil),                       // 343: client.api.ShopRecoverPurchaseJewelResponse
	(*StoryEventTopResponse)(nil),                                  // 344: client.api.StoryEventTopResponse
	(*TutorialProduceStartRequest)(nil),                            // 345: client.api.TutorialProduceStartRequest
	(*ExchangeGetRequest)(nil),                                     // 346: client.api.ExchangeGetRequest
	(*GuildEditDetailResponse)(nil),                                // 347: client.api.GuildEditDetailResponse
	(*MediaPlayRequest)(nil),                                       // 348: client.api.MediaPlayRequest
	(*GashaDrawRequest)(nil),                                       // 349: client.api.GashaDrawRequest
	(*TutorialProduceStepLessonEndRequest)(nil),                    // 350: client.api.TutorialProduceStepLessonEndRequest
	(*IdolCardUpgradeLevelLimitRankRequest)(nil),                   // 351: client.api.IdolCardUpgradeLevelLimitRankRequest
	(*ItemExchangeIdolCardPieceRequest)(nil),                       // 352: client.api.ItemExchangeIdolCardPieceRequest
	(*TicketExchangeListItemsResponse)(nil),                        // 353: client.api.TicketExchangeListItemsResponse
	(*ExchangeListRequest)(nil),                                    // 354: client.api.ExchangeListRequest
	(*MissionReceiveGroupAllRequest)(nil),                          // 355: client.api.MissionReceiveGroupAllRequest
	(*ProduceReportGuildMissionResponse)(nil),                      // 356: client.api.ProduceReportGuildMissionResponse
	(*ProduceRerollSelectProduceCardRequest)(nil),                  // 357: client.api.ProduceRerollSelectProduceCardRequest
	(*ShopRegisterBirthdayRequest)(nil),                            // 358: client.api.ShopRegisterBirthdayRequest
	(*GuildDismissRequest)(nil),                                    // 359: client.api.GuildDismissRequest
	(*HealthCheckResponse)(nil),                                    // 360: client.api.HealthCheckResponse
	(*IdolCardUpgradePotentialRankResponse)(nil),                   // 361: client.api.IdolCardUpgradePotentialRankResponse
	(*IdolCardChangeSkinResponse)(nil),                             // 362: client.api.IdolCardChangeSkinResponse
	(*ProfileUpdateMemoryResponse)(nil),                            // 363: client.api.ProfileUpdateMemoryResponse
	(*PvpRateUpdateUserPvpRateUnitResponse)(nil),                   // 364: client.api.PvpRateUpdateUserPvpRateUnitResponse
	(*ShopRegisterPurchaseTransactionResponse)(nil),                // 365: client.api.ShopRegisterPurchaseTransactionResponse
	(*CoinGashaResetBoxRequest)(nil),                               // 366: client.api.CoinGashaResetBoxRequest
	(*FriendListSuggestionResponse)(nil),                           // 367: client.api.FriendListSuggestionResponse
	(*GashaDrawSelectPickupRequest)(nil),                           // 368: client.api.GashaDrawSelectPickupRequest
	(*MissionUrlTransitionResponse)(nil),                           // 369: client.api.MissionUrlTransitionResponse
	(*GuildChangeLeaderRequest)(nil),                               // 370: client.api.GuildChangeLeaderRequest
	(*NoticeFetchListResponse)(nil),                                // 371: client.api.NoticeFetchListResponse
	(*GashaDrawSelectPickupResponse)(nil),                          // 372: client.api.GashaDrawSelectPickupResponse
	(*MeishiUpdateResponse)(nil),                                   // 373: client.api.MeishiUpdateResponse
	(*TowerTopResponse)(nil),                                       // 374: client.api.TowerTopResponse
	(*GuildListJoinRequestResponse)(nil),                           // 375: client.api.GuildListJoinRequestResponse
	(*TowerListLayerPlayerHistoriesResponse)(nil),                  // 376: client.api.TowerListLayerPlayerHistoriesResponse
	(*PvpRateRateReward)(nil),                                      // 377: client.api.PvpRateRateReward
	(*CoinGashaDrawRequest)(nil),                                   // 378: client.api.CoinGashaDrawRequest
	(*GiftListResponse)(nil),                                       // 379: client.api.GiftListResponse
	(*ProduceStepAuditionRefreshRequest)(nil),                      // 380: client.api.ProduceStepAuditionRefreshRequest
	(*PvpRateInitializeResponse)(nil),                              // 381: client.api.PvpRateInitializeResponse
	(*PhotoUpdateProtectionRequest)(nil),                           // 382: client.api.PhotoUpdateProtectionRequest
	(*TicketExchangeExecuteResponse)(nil),                          // 383: client.api.TicketExchangeExecuteResponse
	(*ProduceResultResponse)(nil),                                  // 384: client.api.ProduceResultResponse
	(*CoinGashaListResponse)(nil),                                  // 385: client.api.CoinGashaListResponse
	(*GuildEditLeaderMessageRequest)(nil),                          // 386: client.api.GuildEditLeaderMessageRequest
	(*MoneyReceiveResponse)(nil),                                   // 387: client.api.MoneyReceiveResponse
	(*MemoryUpdateTagSettingRequest)(nil),                          // 388: client.api.MemoryUpdateTagSettingRequest
	(*TowerListLayerPlayerHistoriesRequest)(nil),                   // 389: client.api.TowerListLayerPlayerHistoriesRequest
	(*GuildListDonationRequestResponse)(nil),                       // 390: client.api.GuildListDonationRequestResponse
	(*TutorialReceiveIdolCardResponse)(nil),                        // 391: client.api.TutorialReceiveIdolCardResponse
	(*ProduceNextRequest)(nil),                                     // 392: client.api.ProduceNextRequest
	(*ProduceStepShopEndResponse)(nil),                             // 393: client.api.ProduceStepShopEndResponse
	(*NoticeUpdateCategoryTimeRequest)(nil),                        // 394: client.api.NoticeUpdateCategoryTimeRequest
	(*StartupConfirmRequest)(nil),                                  // 395: client.api.StartupConfirmRequest
	(*TicketExchangeListItemsRequest)(nil),                         // 396: client.api.TicketExchangeListItemsRequest
	(*AuthSendConsentResponse)(nil),                                // 397: client.api.AuthSendConsentResponse
	(*CoinGashaDrawResult)(nil),                                    // 398: client.api.CoinGashaDrawResult
	(*PvpRateRival)(nil),                                           // 399: client.api.PvpRateRival
	(*GuildApproveJoinRequestRequest)(nil),                         // 400: client.api.GuildApproveJoinRequestRequest
	(*MissionReceiveGroupAllResponse)(nil),                         // 401: client.api.MissionReceiveGroupAllResponse
	(*ProduceStepPresentStartRequest)(nil),                         // 402: client.api.ProduceStepPresentStartRequest
	(*TutorialProduceStepAuditionExamEndResponse)(nil),             // 403: client.api.TutorialProduceStepAuditionExamEndResponse
	(*ProduceChangeCostumeResponse)(nil),                           // 404: client.api.ProduceChangeCostumeResponse
	(*SystemCheckRequest)(nil),                                     // 405: client.api.SystemCheckRequest
	(*PvpRateGetResponse)(nil),                                     // 406: client.api.PvpRateGetResponse
	(*InvitationEnterInvitationCodeRequest)(nil),                   // 407: client.api.InvitationEnterInvitationCodeRequest
	(*MasterGetResponse)(nil),                                      // 408: client.api.MasterGetResponse
	(*ProduceStepAuditionRefreshResponse)(nil),                     // 409: client.api.ProduceStepAuditionRefreshResponse
	(*StoryReadDearnessStoryResponse)(nil),                         // 410: client.api.StoryReadDearnessStoryResponse
	(*GashaGetPointExchangeRequest)(nil),                           // 411: client.api.GashaGetPointExchangeRequest
	(*TowerCheckResponse)(nil),                                     // 412: client.api.TowerCheckResponse
	(*GashaSelectPickupRequest)(nil),                               // 413: client.api.GashaSelectPickupRequest
	(*ProduceContinueRequest)(nil),                                 // 414: client.api.ProduceContinueRequest
	(*SeminarGetExamResponse)(nil),                                 // 415: client.api.SeminarGetExamResponse
	(*AuthLoginRequest)(nil),                                       // 416: client.api.AuthLoginRequest
	(*CharacterCheckRosterResponse)(nil),                           // 417: client.api.CharacterCheckRosterResponse
	(*FriendInfo)(nil),                                             // 418: client.api.FriendInfo
	(*TowerGetLayerRequest)(nil),                                   // 419: client.api.TowerGetLayerRequest
	(*ProduceStepShopStartRequest)(nil),                            // 420: client.api.ProduceStepShopStartRequest
	(*ProduceStepAuditionEndRequest)(nil),                          // 421: client.api.ProduceStepAuditionEndRequest
	(*GuildListMemberResponse)(nil),                                // 422: client.api.GuildListMemberResponse
	(*TowerUpdateMemoryDeckResponse)(nil),                          // 423: client.api.TowerUpdateMemoryDeckResponse
	(*WorkStartRequest)(nil),                                       // 424: client.api.WorkStartRequest
	(*ExchangeItem)(nil),                                           // 425: client.api.ExchangeItem
	(*AuthCreateResponse)(nil),                                     // 426: client.api.AuthCreateResponse
	(*IdolCardReleaseResponse)(nil),                                // 427: client.api.IdolCardReleaseResponse
	(*PhotoDeleteRequest)(nil),                                     // 428: client.api.PhotoDeleteRequest
	(*MissionReceivePassResponse)(nil),                             // 429: client.api.MissionReceivePassResponse
	(*PhotoUpdateProtectionResponse)(nil),                          // 430: client.api.PhotoUpdateProtectionResponse
	(*ProduceContinueResponse)(nil),                                // 431: client.api.ProduceContinueResponse
	(*ShopListItemsResponse)(nil),                                  // 432: client.api.ShopListItemsResponse
	(*GashaExpirePointResponse)(nil),                               // 433: client.api.GashaExpirePointResponse
	(*NoticeInfo)(nil),                                             // 434: client.api.NoticeInfo
	(*NoticeUpdateDetailTimeRequest)(nil),                          // 435: client.api.NoticeUpdateDetailTimeRequest
	(*ProduceStepRefreshRequest)(nil),                              // 436: client.api.ProduceStepRefreshRequest
	(*PvpRatePlayExamBattleResponse)(nil),                          // 437: client.api.PvpRatePlayExamBattleResponse
	(*ShopPurchaseJewelResponse)(nil),                              // 438: client.api.ShopPurchaseJewelResponse
	(*ShopRegisterBirthdayResponse)(nil),                           // 439: client.api.ShopRegisterBirthdayResponse
	(*TutorialProgressRequest)(nil),                                // 440: client.api.TutorialProgressRequest
	(*ItemExchangeIdolCardPieceResponse)(nil),                      // 441: client.api.ItemExchangeIdolCardPieceResponse
	(*MeishiFollowRequest)(nil),                                    // 442: client.api.MeishiFollowRequest
	(*ProfileUpdateBirthdayRequest)(nil),                           // 443: client.api.ProfileUpdateBirthdayRequest
	(*SeminarListExamResponse_Exam)(nil),                           // 444: client.api.SeminarListExamResponse.Exam
	(*SeminarListExamResponse_ExamGroup)(nil),                      // 445: client.api.SeminarListExamResponse.ExamGroup
	(*LoginBonusCheckResponse_Info)(nil),                           // 446: client.api.LoginBonusCheckResponse.Info
	(*LoginBonusCheckResponse_TotalInfo)(nil),                      // 447: client.api.LoginBonusCheckResponse.TotalInfo
	(*HomeLoginResponse_FriendResult)(nil),                         // 448: client.api.HomeLoginResponse.FriendResult
	(*PvpRateListHistoryResponse_PvpRateHistory)(nil),              // 449: client.api.PvpRateListHistoryResponse.PvpRateHistory
	(*GiftListHistoryResponse_UserGiftHistory)(nil),                // 450: client.api.GiftListHistoryResponse.UserGiftHistory
	(*MeishiListResponse_MeishiInfo)(nil),                          // 451: client.api.MeishiListResponse.MeishiInfo
	(*ProduceHighScoreRankingResponse_Rank)(nil),                   // 452: client.api.ProduceHighScoreRankingResponse.Rank
	(*AuthSendConsentRequest_Consent)(nil),                         // 453: client.api.AuthSendConsentRequest.Consent
	(*MeishiUpdateRequest_MeishiBase)(nil),                         // 454: client.api.MeishiUpdateRequest.MeishiBase
	(*MeishiUpdateRequest_Object)(nil),                             // 455: client.api.MeishiUpdateRequest.Object
	(*GuildTopResponse_HomeInfo)(nil),                              // 456: client.api.GuildTopResponse.HomeInfo
	(*GuildTopResponse_HomeInfo_ReceivedDonationInfo)(nil),         // 457: client.api.GuildTopResponse.HomeInfo.ReceivedDonationInfo
	(*SystemCheckResponse_ReviewInfo)(nil),                         // 458: client.api.SystemCheckResponse.ReviewInfo
	(*SystemCheckResponse_MaintenanceInfo)(nil),                    // 459: client.api.SystemCheckResponse.MaintenanceInfo
	(*ShopTopResponse_Shop)(nil),                                   // 460: client.api.ShopTopResponse.Shop
	(*GashaGetPointExchangeResponse_ExchangeResource)(nil),         // 461: client.api.GashaGetPointExchangeResponse.ExchangeResource
	(*ProduceListRentalMemoryResponse_RentalMemory)(nil),           // 462: client.api.ProduceListRentalMemoryResponse.RentalMemory
	(*HomeEnterResponse_FeatureMaintenance)(nil),                   // 463: client.api.HomeEnterResponse.FeatureMaintenance
	(*ProduceRankingTopResponse_Ranking)(nil),                      // 464: client.api.ProduceRankingTopResponse.Ranking
	(*ProfileGetResponse_ProduceRecord)(nil),                       // 465: client.api.ProfileGetResponse.ProduceRecord
	(*SeminarEndExamRequest_Turn)(nil),                             // 466: client.api.SeminarEndExamRequest.Turn
	(*TowerGetLayerResponse_Exam)(nil),                             // 467: client.api.TowerGetLayerResponse.Exam
	(*TowerListLayersResponse_TowerLayerRank)(nil),                 // 468: client.api.TowerListLayersResponse.TowerLayerRank
	(*TowerListLayersResponse_TowerLayer)(nil),                     // 469: client.api.TowerListLayersResponse.TowerLayer
	(*PvpRateUnitStageFormation_Slot)(nil),                         // 470: client.api.PvpRateUnitStageFormation.Slot
	(*HomeSetCharactersRequest_HomeCharacter)(nil),                 // 471: client.api.HomeSetCharactersRequest.HomeCharacter
	(*AuthLoginResponse_Term)(nil),                                 // 472: client.api.AuthLoginResponse.Term
	(*MissionReceiveResponse_MasterAchievementProgress)(nil),       // 473: client.api.MissionReceiveResponse.MasterAchievementProgress
	(*MissionReceiveResponse_MasterAchievementProgressResult)(nil), // 474: client.api.MissionReceiveResponse.MasterAchievementProgressResult
	(*MissionReceiveRequest_MissionPoint)(nil),                     // 475: client.api.MissionReceiveRequest.MissionPoint
	(*MissionReceiveRequest_Mission)(nil),                          // 476: client.api.MissionReceiveRequest.Mission
	(*ProduceListRentalSupportCardResponse_RentalSupportCard)(nil), // 477: client.api.ProduceListRentalSupportCardResponse.RentalSupportCard
	(*SupportCardExchangeRequest_Parameter)(nil),                   // 478: client.api.SupportCardExchangeRequest.Parameter
	(*ProduceStartRequest_Memory)(nil),                             // 479: client.api.ProduceStartRequest.Memory
	(*ProduceStartRequest_SupportCard)(nil),                        // 480: client.api.ProduceStartRequest.SupportCard
	(*MeishiListFollowResponse_Follow)(nil),                        // 481: client.api.MeishiListFollowResponse.Follow
	(*StoryEventTopResponse_Motion)(nil),                           // 482: client.api.StoryEventTopResponse.Motion
	(*TowerTopResponse_Tower)(nil),                                 // 483: client.api.TowerTopResponse.Tower
	(*GiftListResponse_UserGift)(nil),                              // 484: client.api.GiftListResponse.UserGift
	(*ProduceResultResponse_HighScoreReward)(nil),                  // 485: client.api.ProduceResultResponse.HighScoreReward
	(*ProduceResultResponse_HighScoreUpdateResult)(nil),            // 486: client.api.ProduceResultResponse.HighScoreUpdateResult
	(*StartupConfirmRequest_Notification)(nil),                     // 487: client.api.StartupConfirmRequest.Notification
	(*MasterGetResponse_MasterTagPack)(nil),                        // 488: client.api.MasterGetResponse.MasterTagPack
	(*MasterGetResponse_MasterTag)(nil),                            // 489: client.api.MasterGetResponse.MasterTag
	(*SeminarGetExamResponse_TurnNavigationStep)(nil),              // 490: client.api.SeminarGetExamResponse.TurnNavigationStep
	(*SeminarGetExamResponse_TurnNavigation)(nil),                  // 491: client.api.SeminarGetExamResponse.TurnNavigation
	(*SeminarGetExamResponse_FailureNavigation)(nil),               // 492: client.api.SeminarGetExamResponse.FailureNavigation
	(*FriendInfo_SupportCard)(nil),                                 // 493: client.api.FriendInfo.SupportCard
	(*ExchangeItem_ConsumptionResource)(nil),                       // 494: client.api.ExchangeItem.ConsumptionResource
	(*GashaExpirePointResponse_GashaBanner)(nil),                   // 495: client.api.GashaExpirePointResponse.GashaBanner
	(*GashaExpirePointResponse_GashaPoint)(nil),                    // 496: client.api.GashaExpirePointResponse.GashaPoint
	(*pcommon.RewardResult)(nil),                                   // 497: pcommon.RewardResult
	(*papicommon.Response)(nil),                                    // 498: papicommon.Response
	(penum.IdolCardRarity)(0),                                      // 499: penum.IdolCardRarity
	(*pcommon.Memory)(nil),                                         // 500: pcommon.Memory
	(*pcommon.ProduceEffectResult)(nil),                            // 501: pcommon.ProduceEffectResult
	(penum.ConsentType)(0),                                         // 502: penum.ConsentType
	(penum.ConsentAgreementType)(0),                                // 503: penum.ConsentAgreementType
	(*pcommon.SimpleProfile)(nil),                                  // 504: pcommon.SimpleProfile
	(penum.ResultGrade)(0),                                         // 505: penum.ResultGrade
	(*pcommon.StartupNotification)(nil),                            // 506: pcommon.StartupNotification
	(*pcommon.ProducerLevelUnlock)(nil),                            // 507: pcommon.ProducerLevelUnlock
	(*pcommon.PvpRateExamBattleResult)(nil),                        // 508: pcommon.PvpRateExamBattleResult
	(penum.CostumeSetType)(0),                                      // 509: penum.CostumeSetType
	(*pcommon.GashaButton)(nil),                                    // 510: pcommon.GashaButton
	(*pcommon.Reward)(nil),                                         // 511: pcommon.Reward
	(*pcommon.GashaPoint)(nil),                                     // 512: pcommon.GashaPoint
	(penum.ProduceType)(0),                                         // 513: penum.ProduceType
	(penum.DeckRecommendType)(0),                                   // 514: penum.DeckRecommendType
	(*pcommon.ExamBattleResult)(nil),                               // 515: pcommon.ExamBattleResult
	(*pcommon.ExamTurnEndLog)(nil),                                 // 516: pcommon.ExamTurnEndLog
	(penum.FriendStatusType)(0),                                    // 517: penum.FriendStatusType
	(penum.GuildActivityPolicyType)(0),                             // 518: penum.GuildActivityPolicyType
	(penum.GuildRoleType)(0),                                       // 519: penum.GuildRoleType
	(*pcommon.Achievement)(nil),                                    // 520: pcommon.Achievement
	(penum.GuildSearchMemberCountRangeType)(0),                     // 521: penum.GuildSearchMemberCountRangeType
	(*pcommon.CoinGasha)(nil),                                      // 522: pcommon.CoinGasha
	(*pcommon.ExamBattleAutoStageResult)(nil),                      // 523: pcommon.ExamBattleAutoStageResult
	(*pcommon.ProduceExamEndResult)(nil),                           // 524: pcommon.ProduceExamEndResult
	(penum.PvpRateRivalType)(0),                                    // 525: penum.PvpRateRivalType
	(*papicommon.UserData)(nil),                                    // 526: papicommon.UserData
	(penum.GuildNotificationType)(0),                               // 527: penum.GuildNotificationType
	(*pmaster.ShopItem)(nil),                                       // 528: pmaster.ShopItem
	(*pcommon.HomeBanner)(nil),                                     // 529: pcommon.HomeBanner
	(*pcommon.HomeNavigation)(nil),                                 // 530: pcommon.HomeNavigation
	(*pcommon.Gasha)(nil),                                          // 531: pcommon.Gasha
	(*papicommon.PvpRateSeasonTop)(nil),                            // 532: papicommon.PvpRateSeasonTop
	(*pcommon.Event)(nil),                                          // 533: pcommon.Event
	(penum.ShopItemLabelType)(0),                                   // 534: penum.ShopItemLabelType
	(penum.PvpRateGrade)(0),                                        // 535: penum.PvpRateGrade
	(*pcommon.SupportCard)(nil),                                    // 536: pcommon.SupportCard
	(*pcommon.Meishi)(nil),                                         // 537: pcommon.Meishi
	(penum.SupportCardLevelLimitRank)(0),                           // 538: penum.SupportCardLevelLimitRank
	(penum.WorkType)(0),                                            // 539: penum.WorkType
	(*pcommon.ProduceRewardResult)(nil),                            // 540: pcommon.ProduceRewardResult
	(penum.PvpRateStageType)(0),                                    // 541: penum.PvpRateStageType
	(*pcommon.ProduceCampaign)(nil),                                // 542: pcommon.ProduceCampaign
	(penum.StoryEventType)(0),                                      // 543: penum.StoryEventType
	(*pcommon.StoryEventBonus)(nil),                                // 544: pcommon.StoryEventBonus
	(penum.SupportCardRarity)(0),                                   // 545: penum.SupportCardRarity
	(penum.TermsType)(0),                                           // 546: penum.TermsType
	(penum.IdolCardPotentialRank)(0),                               // 547: penum.IdolCardPotentialRank
	(penum.NoticeCategory)(0),                                      // 548: penum.NoticeCategory
	(*pmaster.Mission)(nil),                                        // 549: pmaster.Mission
	(penum.GiftFilterType)(0),                                      // 550: penum.GiftFilterType
	(penum.GuildJoinRequestRouteType)(0),                           // 551: penum.GuildJoinRequestRouteType
	(*pcommon.ProduceCard)(nil),                                    // 552: pcommon.ProduceCard
	(penum.TutorialType)(0),                                        // 553: penum.TutorialType
	(*pcommon.PvpRateSetupUnitStageFormation)(nil),                 // 554: pcommon.PvpRateSetupUnitStageFormation
	(*pcommon.ProduceMemoryRewardResult)(nil),                      // 555: pcommon.ProduceMemoryRewardResult
	(*pcommon.ProduceHistory)(nil),                                 // 556: pcommon.ProduceHistory
	(penum.ExchangeType)(0),                                        // 557: penum.ExchangeType
	(penum.ResourceType)(0),                                        // 558: penum.ResourceType
	(*pcommon.GashaStepUp)(nil),                                    // 559: pcommon.GashaStepUp
	(*pcommon.ExamBattleAutoRequest)(nil),                          // 560: pcommon.ExamBattleAutoRequest
	(*pcommon.StoryEventPointReward)(nil),                          // 561: pcommon.StoryEventPointReward
	(penum.IdolCardLevelLimitRank)(0),                              // 562: penum.IdolCardLevelLimitRank
	(penum.ServingStatus)(0),                                       // 563: penum.ServingStatus
	(*pcommon.TowerLayerHistory)(nil),                              // 564: pcommon.TowerLayerHistory
	(*pcommon.StoryEventProduceResult)(nil),                        // 565: pcommon.StoryEventProduceResult
	(penum.ProduceStepType)(0),                                     // 566: penum.ProduceStepType
	(penum.ProduceParameterType)(0),                                // 567: penum.ProduceParameterType
	(penum.NoticeType)(0),                                          // 568: penum.NoticeType
	(penum.LoginBonusType)(0),                                      // 569: penum.LoginBonusType
	(penum.MeishiObjectType)(0),                                    // 570: penum.MeishiObjectType
	(penum.FeatureMaintenanceType)(0),                              // 571: penum.FeatureMaintenanceType
	(penum.ProduceExamEffectType)(0),                               // 572: penum.ProduceExamEffectType
	(*pcommon.ExamTriggerCount)(nil),                               // 573: pcommon.ExamTriggerCount
	(penum.HomeType)(0),                                            // 574: penum.HomeType
	(penum.StoryEventMotionType)(0),                                // 575: penum.StoryEventMotionType
	(penum.TutorialNavigationType)(0),                              // 576: penum.TutorialNavigationType
	(penum.ProduceExamTriggerCheckType)(0),                         // 577: penum.ProduceExamTriggerCheckType
	(penum.ProduceExamFieldStatusType)(0),                          // 578: penum.ProduceExamFieldStatusType
}
var file_papi_proto_depIdxs = []int32{
	497, // 0: client.api.GuildDonateResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 1: client.api.GuildDonateResponse.commonResponse:type_name -> papicommon.Response
	498, // 2: client.api.CostumeCheckResponse.commonResponse:type_name -> papicommon.Response
	499, // 3: client.api.IdolCardRarityProbability.rarity:type_name -> penum.IdolCardRarity
	116, // 4: client.api.IdolCardRarityProbability.probabilities:type_name -> client.api.IdolCardProbability
	498, // 5: client.api.ProfileUpdateNameResponse.commonResponse:type_name -> papicommon.Response
	500, // 6: client.api.ProduceEndResponse.memory:type_name -> pcommon.Memory
	498, // 7: client.api.ProduceEndResponse.commonResponse:type_name -> papicommon.Response
	445, // 8: client.api.SeminarListExamResponse.groups:type_name -> client.api.SeminarListExamResponse.ExamGroup
	498, // 9: client.api.SeminarListExamResponse.commonResponse:type_name -> papicommon.Response
	139, // 10: client.api.GuildReceiveDonationResponse.list:type_name -> client.api.GuildDonationInfo
	498, // 11: client.api.GuildReceiveDonationResponse.commonResponse:type_name -> papicommon.Response
	434, // 12: client.api.NoticeListAllResponse.infoList:type_name -> client.api.NoticeInfo
	434, // 13: client.api.NoticeListAllResponse.bugList:type_name -> client.api.NoticeInfo
	434, // 14: client.api.NoticeListAllResponse.prList:type_name -> client.api.NoticeInfo
	498, // 15: client.api.NoticeListAllResponse.commonResponse:type_name -> papicommon.Response
	501, // 16: client.api.ProduceStepShopStartResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 17: client.api.ProduceStepShopStartResponse.commonResponse:type_name -> papicommon.Response
	130, // 18: client.api.GashaGetStepUpProbabilityResponse.probabilities:type_name -> client.api.StepUpGashaProbability
	498, // 19: client.api.GashaGetStepUpProbabilityResponse.commonResponse:type_name -> papicommon.Response
	498, // 20: client.api.TutorialProduceStartResponse.commonResponse:type_name -> papicommon.Response
	502, // 21: client.api.Consent.consentType:type_name -> penum.ConsentType
	503, // 22: client.api.Consent.agreementType:type_name -> penum.ConsentAgreementType
	501, // 23: client.api.ProduceStartResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 24: client.api.ProduceStartResponse.commonResponse:type_name -> papicommon.Response
	504, // 25: client.api.ProduceRank.profile:type_name -> pcommon.SimpleProfile
	505, // 26: client.api.ProduceRank.grade:type_name -> penum.ResultGrade
	446, // 27: client.api.LoginBonusCheckResponse.list:type_name -> client.api.LoginBonusCheckResponse.Info
	447, // 28: client.api.LoginBonusCheckResponse.totalInfo:type_name -> client.api.LoginBonusCheckResponse.TotalInfo
	506, // 29: client.api.LoginBonusCheckResponse.startupNotifications:type_name -> pcommon.StartupNotification
	498, // 30: client.api.LoginBonusCheckResponse.commonResponse:type_name -> papicommon.Response
	448, // 31: client.api.HomeLoginResponse.friendResult:type_name -> client.api.HomeLoginResponse.FriendResult
	507, // 32: client.api.HomeLoginResponse.producerLevelUnlocks:type_name -> pcommon.ProducerLevelUnlock
	498, // 33: client.api.HomeLoginResponse.commonResponse:type_name -> papicommon.Response
	55,  // 34: client.api.InvitationReceiveInvitationPointResponse.list:type_name -> client.api.InviteUser
	497, // 35: client.api.InvitationReceiveInvitationPointResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 36: client.api.InvitationReceiveInvitationPointResponse.commonResponse:type_name -> papicommon.Response
	498, // 37: client.api.PhotoUpdateNameResponse.commonResponse:type_name -> papicommon.Response
	501, // 38: client.api.ProduceStepPresentEndResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 39: client.api.ProduceStepPresentEndResponse.commonResponse:type_name -> papicommon.Response
	508, // 40: client.api.PvpRateGetHistoryResponse.examBattleResult:type_name -> pcommon.PvpRateExamBattleResult
	498, // 41: client.api.PvpRateGetHistoryResponse.commonResponse:type_name -> papicommon.Response
	509, // 42: client.api.CostumeSetRequest.setType:type_name -> penum.CostumeSetType
	54,  // 43: client.api.GashaDrawResponse.drawResults:type_name -> client.api.GashaDrawResult
	510, // 44: client.api.GashaDrawResponse.gashaButton:type_name -> pcommon.GashaButton
	511, // 45: client.api.GashaDrawResponse.bonusRewards:type_name -> pcommon.Reward
	512, // 46: client.api.GashaDrawResponse.gashaPoint:type_name -> pcommon.GashaPoint
	498, // 47: client.api.GashaDrawResponse.commonResponse:type_name -> papicommon.Response
	498, // 48: client.api.IdolCardUpgradeLevelLimitRankResponse.commonResponse:type_name -> papicommon.Response
	498, // 49: client.api.ProduceStartBeforeLiveEvaluationResponse.commonResponse:type_name -> papicommon.Response
	20,  // 50: client.api.AuthGetConsentResponse.consents:type_name -> client.api.Consent
	498, // 51: client.api.AuthGetConsentResponse.commonResponse:type_name -> papicommon.Response
	425, // 52: client.api.ExchangeExecuteResponse.exchangeItem:type_name -> client.api.ExchangeItem
	497, // 53: client.api.ExchangeExecuteResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 54: client.api.ExchangeExecuteResponse.commonResponse:type_name -> papicommon.Response
	497, // 55: client.api.TowerReceiveLayerCountRewardResponse.result:type_name -> pcommon.RewardResult
	498, // 56: client.api.TowerReceiveLayerCountRewardResponse.commonResponse:type_name -> papicommon.Response
	498, // 57: client.api.TutorialProgressResponse.commonResponse:type_name -> papicommon.Response
	498, // 58: client.api.WorkStartResponse.commonResponse:type_name -> papicommon.Response
	498, // 59: client.api.GuildEstablishResponse.commonResponse:type_name -> papicommon.Response
	513, // 60: client.api.ProduceUpdateSupportCardDeck.produceType:type_name -> penum.ProduceType
	514, // 61: client.api.ProduceUpdateSupportCardDeck.recommendType:type_name -> penum.DeckRecommendType
	515, // 62: client.api.ProduceStepAuditionEndExamBattleRequest.result:type_name -> pcommon.ExamBattleResult
	516, // 63: client.api.ProduceStepAuditionEndExamBattleRequest.turnEndLogs:type_name -> pcommon.ExamTurnEndLog
	498, // 64: client.api.ProduceRetireResponse.commonResponse:type_name -> papicommon.Response
	328, // 65: client.api.DefaultGashaProbability.probability:type_name -> client.api.GashaProbability
	328, // 66: client.api.DefaultGashaProbability.fixProbability:type_name -> client.api.GashaProbability
	498, // 67: client.api.NoticeUpdateDetailTimeResponse.commonResponse:type_name -> papicommon.Response
	449, // 68: client.api.PvpRateListHistoryResponse.histories:type_name -> client.api.PvpRateListHistoryResponse.PvpRateHistory
	498, // 69: client.api.PvpRateListHistoryResponse.commonResponse:type_name -> papicommon.Response
	498, // 70: client.api.TutorialSetNameResponse.commonResponse:type_name -> papicommon.Response
	284, // 71: client.api.ExchangeListResponse.exchanges:type_name -> client.api.ExchangeInfo
	498, // 72: client.api.ExchangeListResponse.commonResponse:type_name -> papicommon.Response
	497, // 73: client.api.GashaDrawResult.result:type_name -> pcommon.RewardResult
	497, // 74: client.api.GashaDrawResult.providedResult:type_name -> pcommon.RewardResult
	497, // 75: client.api.GashaDrawResult.cardBonusRewardResults:type_name -> pcommon.RewardResult
	504, // 76: client.api.InviteUser.profile:type_name -> pcommon.SimpleProfile
	517, // 77: client.api.InviteUser.friendStatusType:type_name -> penum.FriendStatusType
	511, // 78: client.api.TicketExchangeItem.rewards:type_name -> pcommon.Reward
	511, // 79: client.api.ProduceHighScoreReward.reward:type_name -> pcommon.Reward
	518, // 80: client.api.GuildEditDetailRequest.activityPolicyType:type_name -> penum.GuildActivityPolicyType
	511, // 81: client.api.PvpRateRankReward.rewards:type_name -> pcommon.Reward
	518, // 82: client.api.GuildEstablishRequest.activityPolicyType:type_name -> penum.GuildActivityPolicyType
	497, // 83: client.api.TowerReceiveTotalClearRankRewardResponse.result:type_name -> pcommon.RewardResult
	498, // 84: client.api.TowerReceiveTotalClearRankRewardResponse.commonResponse:type_name -> papicommon.Response
	504, // 85: client.api.GuildMemberInfo.profile:type_name -> pcommon.SimpleProfile
	519, // 86: client.api.GuildMemberInfo.roleType:type_name -> penum.GuildRoleType
	501, // 87: client.api.ProduceActivateEffectResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 88: client.api.ProduceActivateEffectResponse.commonResponse:type_name -> papicommon.Response
	497, // 89: client.api.ShopPurchaseResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 90: client.api.ShopPurchaseResponse.commonResponse:type_name -> papicommon.Response
	450, // 91: client.api.GiftListHistoryResponse.userGiftHistories:type_name -> client.api.GiftListHistoryResponse.UserGiftHistory
	498, // 92: client.api.GiftListHistoryResponse.commonResponse:type_name -> papicommon.Response
	451, // 93: client.api.MeishiListResponse.meishiList:type_name -> client.api.MeishiListResponse.MeishiInfo
	498, // 94: client.api.MeishiListResponse.commonResponse:type_name -> papicommon.Response
	520, // 95: client.api.GuildInfo.achievement:type_name -> pcommon.Achievement
	518, // 96: client.api.GuildInfo.activityPolicyType:type_name -> penum.GuildActivityPolicyType
	521, // 97: client.api.GuildInfo.memberCountRangeType:type_name -> penum.GuildSearchMemberCountRangeType
	498, // 98: client.api.MemoryUpdateTagSettingResponse.commonResponse:type_name -> papicommon.Response
	452, // 99: client.api.ProduceHighScoreRankingResponse.selfRank:type_name -> client.api.ProduceHighScoreRankingResponse.Rank
	452, // 100: client.api.ProduceHighScoreRankingResponse.ranks:type_name -> client.api.ProduceHighScoreRankingResponse.Rank
	498, // 101: client.api.ProduceHighScoreRankingResponse.commonResponse:type_name -> papicommon.Response
	453, // 102: client.api.AuthSendConsentRequest.consents:type_name -> client.api.AuthSendConsentRequest.Consent
	522, // 103: client.api.CoinGashaResetBoxResponse.coinGasha:type_name -> pcommon.CoinGasha
	498, // 104: client.api.CoinGashaResetBoxResponse.commonResponse:type_name -> papicommon.Response
	22,  // 105: client.api.ProduceRankingResponse.ranks:type_name -> client.api.ProduceRank
	505, // 106: client.api.ProduceRankingResponse.selfGrade:type_name -> penum.ResultGrade
	498, // 107: client.api.ProduceRankingResponse.commonResponse:type_name -> papicommon.Response
	523, // 108: client.api.PvpRateEndRequest.stages:type_name -> pcommon.ExamBattleAutoStageResult
	524, // 109: client.api.ProduceStepLessonEndRequest.examEndResult:type_name -> pcommon.ProduceExamEndResult
	516, // 110: client.api.ProduceStepLessonEndRequest.turnEndLogs:type_name -> pcommon.ExamTurnEndLog
	525, // 111: client.api.PvpRateStartRequest.rivalType:type_name -> penum.PvpRateRivalType
	526, // 112: client.api.UserGetResponse.userData:type_name -> papicommon.UserData
	514, // 113: client.api.TowerUpdateMemoryDeckRequest.recommendType:type_name -> penum.DeckRecommendType
	498, // 114: client.api.ItemUseActionPointRecoveryResponse.commonResponse:type_name -> papicommon.Response
	498, // 115: client.api.GashaSelectPickupResponse.commonResponse:type_name -> papicommon.Response
	454, // 116: client.api.MeishiUpdateRequest.meishiBase:type_name -> client.api.MeishiUpdateRequest.MeishiBase
	455, // 117: client.api.MeishiUpdateRequest.objects:type_name -> client.api.MeishiUpdateRequest.Object
	498, // 118: client.api.GuildRequestDonationResponse.commonResponse:type_name -> papicommon.Response
	498, // 119: client.api.HomeSetCharactersResponse.commonResponse:type_name -> papicommon.Response
	498, // 120: client.api.PhotoCreateResponse.commonResponse:type_name -> papicommon.Response
	456, // 121: client.api.GuildTopResponse.homeInfo:type_name -> client.api.GuildTopResponse.HomeInfo
	72,  // 122: client.api.GuildTopResponse.list:type_name -> client.api.GuildInfo
	72,  // 123: client.api.GuildTopResponse.joinRequestList:type_name -> client.api.GuildInfo
	527, // 124: client.api.GuildTopResponse.notificationType:type_name -> penum.GuildNotificationType
	498, // 125: client.api.GuildTopResponse.commonResponse:type_name -> papicommon.Response
	459, // 126: client.api.SystemCheckResponse.maintenanceInfo:type_name -> client.api.SystemCheckResponse.MaintenanceInfo
	458, // 127: client.api.SystemCheckResponse.reviewInfo:type_name -> client.api.SystemCheckResponse.ReviewInfo
	498, // 128: client.api.GuildEditLeaderMessageResponse.commonResponse:type_name -> papicommon.Response
	498, // 129: client.api.MediaPlayResponse.commonResponse:type_name -> papicommon.Response
	498, // 130: client.api.MeishiReportXPostMissionResponse.commonResponse:type_name -> papicommon.Response
	498, // 131: client.api.AuthUnlinkResponse.commonResponse:type_name -> papicommon.Response
	498, // 132: client.api.GashaGetPrecautionResponse.commonResponse:type_name -> papicommon.Response
	72,  // 133: client.api.GuildGetResponse.info:type_name -> client.api.GuildInfo
	498, // 134: client.api.GuildGetResponse.commonResponse:type_name -> papicommon.Response
	498, // 135: client.api.GuildChangeLeaderResponse.commonResponse:type_name -> papicommon.Response
	498, // 136: client.api.ProduceUpdateMemoryDeckResponse.commonResponse:type_name -> papicommon.Response
	460, // 137: client.api.ShopTopResponse.shopList:type_name -> client.api.ShopTopResponse.Shop
	528, // 138: client.api.ShopTopResponse.shopItemList:type_name -> pmaster.ShopItem
	506, // 139: client.api.ShopTopResponse.startupNotifications:type_name -> pcommon.StartupNotification
	498, // 140: client.api.ShopTopResponse.commonResponse:type_name -> papicommon.Response
	214, // 141: client.api.WorkFinishResponse.finishResults:type_name -> client.api.WorkFinishResult
	498, // 142: client.api.WorkFinishResponse.commonResponse:type_name -> papicommon.Response
	497, // 143: client.api.GiftOpenResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 144: client.api.GiftOpenResponse.commonResponse:type_name -> papicommon.Response
	515, // 145: client.api.TowerEndRequest.result:type_name -> pcommon.ExamBattleResult
	516, // 146: client.api.TowerEndRequest.turnEndLogs:type_name -> pcommon.ExamTurnEndLog
	511, // 147: client.api.IdolCardProbability.rewards:type_name -> pcommon.Reward
	284, // 148: client.api.ExchangeResetResponse.exchange:type_name -> client.api.ExchangeInfo
	498, // 149: client.api.ExchangeResetResponse.commonResponse:type_name -> papicommon.Response
	511, // 150: client.api.GashaGetPointExchangeResponse.expireReward:type_name -> pcommon.Reward
	461, // 151: client.api.GashaGetPointExchangeResponse.exchangeResources:type_name -> client.api.GashaGetPointExchangeResponse.ExchangeResource
	498, // 152: client.api.GashaGetPointExchangeResponse.commonResponse:type_name -> papicommon.Response
	124, // 153: client.api.ProduceUpdateMemoryDeckRequest.decks:type_name -> client.api.ProduceUpdateMemoryDeck
	513, // 154: client.api.ProduceUpdateMemoryDeck.produceType:type_name -> penum.ProduceType
	514, // 155: client.api.ProduceUpdateMemoryDeck.recommendType:type_name -> penum.DeckRecommendType
	498, // 156: client.api.MovieCreateResponse.commonResponse:type_name -> papicommon.Response
	434, // 157: client.api.NoticeGetResponse.info:type_name -> client.api.NoticeInfo
	498, // 158: client.api.NoticeGetResponse.commonResponse:type_name -> papicommon.Response
	462, // 159: client.api.ProduceListRentalMemoryResponse.memories:type_name -> client.api.ProduceListRentalMemoryResponse.RentalMemory
	498, // 160: client.api.ProduceListRentalMemoryResponse.commonResponse:type_name -> papicommon.Response
	46,  // 161: client.api.StepUpGashaProbability.defaultGashaProbability:type_name -> client.api.DefaultGashaProbability
	529, // 162: client.api.HomeEnterResponse.homeBanners:type_name -> pcommon.HomeBanner
	530, // 163: client.api.HomeEnterResponse.homeNavigations:type_name -> pcommon.HomeNavigation
	463, // 164: client.api.HomeEnterResponse.featureMaintenances:type_name -> client.api.HomeEnterResponse.FeatureMaintenance
	531, // 165: client.api.HomeEnterResponse.gashas:type_name -> pcommon.Gasha
	532, // 166: client.api.HomeEnterResponse.pvpRateSeasonTop:type_name -> papicommon.PvpRateSeasonTop
	533, // 167: client.api.HomeEnterResponse.events:type_name -> pcommon.Event
	534, // 168: client.api.HomeEnterResponse.shopItemLabelType:type_name -> penum.ShopItemLabelType
	498, // 169: client.api.HomeEnterResponse.commonResponse:type_name -> papicommon.Response
	498, // 170: client.api.MeishiFollowResponse.commonResponse:type_name -> papicommon.Response
	464, // 171: client.api.ProduceRankingTopResponse.rankings:type_name -> client.api.ProduceRankingTopResponse.Ranking
	498, // 172: client.api.ProduceRankingTopResponse.commonResponse:type_name -> papicommon.Response
	498, // 173: client.api.LoginBonusConfirmResponse.commonResponse:type_name -> papicommon.Response
	93,  // 174: client.api.ProfileGetResponse.birthday:type_name -> client.api.ProfileBirthday
	517, // 175: client.api.ProfileGetResponse.friendStatus:type_name -> penum.FriendStatusType
	465, // 176: client.api.ProfileGetResponse.produceRecords:type_name -> client.api.ProfileGetResponse.ProduceRecord
	535, // 177: client.api.ProfileGetResponse.pvpRateGrade:type_name -> penum.PvpRateGrade
	536, // 178: client.api.ProfileGetResponse.supportCard:type_name -> pcommon.SupportCard
	500, // 179: client.api.ProfileGetResponse.memory:type_name -> pcommon.Memory
	537, // 180: client.api.ProfileGetResponse.meishi:type_name -> pcommon.Meishi
	498, // 181: client.api.ProfileGetResponse.commonResponse:type_name -> papicommon.Response
	518, // 182: client.api.GuildSearchRequest.activityPolicyTypes:type_name -> penum.GuildActivityPolicyType
	521, // 183: client.api.GuildSearchRequest.memberCountRangeTypes:type_name -> penum.GuildSearchMemberCountRangeType
	501, // 184: client.api.ProduceStepLessonEndResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 185: client.api.ProduceStepLessonEndResponse.commonResponse:type_name -> papicommon.Response
	498, // 186: client.api.ProfileUpdateCommentResponse.commonResponse:type_name -> papicommon.Response
	500, // 187: client.api.TutorialProduceResultResponse.memory:type_name -> pcommon.Memory
	498, // 188: client.api.TutorialProduceResultResponse.commonResponse:type_name -> papicommon.Response
	498, // 189: client.api.GiftCountResponse.commonResponse:type_name -> papicommon.Response
	498, // 190: client.api.StoryUnlockResponse.commonResponse:type_name -> papicommon.Response
	498, // 191: client.api.ProduceStepAuditionEndExamBattleResponse.commonResponse:type_name -> papicommon.Response
	233, // 192: client.api.ProduceHighScoreResult.rankRewards:type_name -> client.api.ProduceHighScoreRankReward
	231, // 193: client.api.ProduceHighScoreResult.characters:type_name -> client.api.ProduceHighScoreCharacter
	504, // 194: client.api.PvpRateRankingUser.profile:type_name -> pcommon.SimpleProfile
	195, // 195: client.api.PvpRateRankingUser.formations:type_name -> client.api.PvpRateUnitStageFormation
	498, // 196: client.api.PhotoDeleteResponse.commonResponse:type_name -> papicommon.Response
	538, // 197: client.api.SupportCardUpgradeLevelLimitRankRequest.afterRank:type_name -> penum.SupportCardLevelLimitRank
	539, // 198: client.api.WorkSkipRequest.type:type_name -> penum.WorkType
	466, // 199: client.api.SeminarEndExamRequest.turns:type_name -> client.api.SeminarEndExamRequest.Turn
	498, // 200: client.api.StoryReadProduceStoryResponse.commonResponse:type_name -> papicommon.Response
	498, // 201: client.api.GuildCancelJoinRequestResponse.commonResponse:type_name -> papicommon.Response
	501, // 202: client.api.ProduceStepLessonStartResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 203: client.api.ProduceStepLessonStartResponse.commonResponse:type_name -> papicommon.Response
	501, // 204: client.api.ProduceStepAuditionStartResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 205: client.api.ProduceStepAuditionStartResponse.commonResponse:type_name -> papicommon.Response
	467, // 206: client.api.TowerGetLayerResponse.exams:type_name -> client.api.TowerGetLayerResponse.Exam
	498, // 207: client.api.TowerGetLayerResponse.commonResponse:type_name -> papicommon.Response
	469, // 208: client.api.TowerListLayersResponse.layers:type_name -> client.api.TowerListLayersResponse.TowerLayer
	498, // 209: client.api.TowerListLayersResponse.commonResponse:type_name -> papicommon.Response
	137, // 210: client.api.GuildUpdateLeaderMessageReactionResponse.reactionList:type_name -> client.api.GuildReactionInfo
	498, // 211: client.api.GuildUpdateLeaderMessageReactionResponse.commonResponse:type_name -> papicommon.Response
	498, // 212: client.api.TutorialCheckBeforeLiveProduceEvaluationResponse.commonResponse:type_name -> papicommon.Response
	498, // 213: client.api.MemoryExchangeResponse.commonResponse:type_name -> papicommon.Response
	498, // 214: client.api.ProfileUpdateBirthdayResponse.commonResponse:type_name -> papicommon.Response
	498, // 215: client.api.AuthAgreeTermsResponse.commonResponse:type_name -> papicommon.Response
	540, // 216: client.api.ProduceStepPresentReceiveResponse.providedRewards:type_name -> pcommon.ProduceRewardResult
	501, // 217: client.api.ProduceStepPresentReceiveResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 218: client.api.ProduceStepPresentReceiveResponse.commonResponse:type_name -> papicommon.Response
	501, // 219: client.api.ProduceDiscardDrinkResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 220: client.api.ProduceDiscardDrinkResponse.commonResponse:type_name -> papicommon.Response
	497, // 221: client.api.PvpRateEndResponse.playReward:type_name -> pcommon.RewardResult
	377, // 222: client.api.PvpRateEndResponse.rateRewards:type_name -> client.api.PvpRateRateReward
	498, // 223: client.api.PvpRateEndResponse.commonResponse:type_name -> papicommon.Response
	43,  // 224: client.api.ProduceUpdateSupportCardDeckRequest.decks:type_name -> client.api.ProduceUpdateSupportCardDeck
	540, // 225: client.api.TutorialProduceStepPresentReceiveResponse.providedRewards:type_name -> pcommon.ProduceRewardResult
	498, // 226: client.api.TutorialProduceStepPresentReceiveResponse.commonResponse:type_name -> papicommon.Response
	498, // 227: client.api.TutorialUnlockFeatureResponse.commonResponse:type_name -> papicommon.Response
	498, // 228: client.api.MemoryUpdateProtectionResponse.commonResponse:type_name -> papicommon.Response
	498, // 229: client.api.ProduceUpdateSupportCardDeckResponse.commonResponse:type_name -> papicommon.Response
	541, // 230: client.api.PvpRateUnitStageFormation.stage:type_name -> penum.PvpRateStageType
	470, // 231: client.api.PvpRateUnitStageFormation.slots:type_name -> client.api.PvpRateUnitStageFormation.Slot
	157, // 232: client.api.PvpRateListRankingResponse.users:type_name -> client.api.PvpRateRankingUser
	157, // 233: client.api.PvpRateListRankingResponse.self:type_name -> client.api.PvpRateRankingUser
	498, // 234: client.api.PvpRateListRankingResponse.commonResponse:type_name -> papicommon.Response
	214, // 235: client.api.WorkTopResponse.finishResults:type_name -> client.api.WorkFinishResult
	498, // 236: client.api.WorkTopResponse.commonResponse:type_name -> papicommon.Response
	471, // 237: client.api.HomeSetCharactersRequest.characters:type_name -> client.api.HomeSetCharactersRequest.HomeCharacter
	498, // 238: client.api.FriendFollowResponse.commonResponse:type_name -> papicommon.Response
	537, // 239: client.api.MeishiGetResponse.meishi:type_name -> pcommon.Meishi
	498, // 240: client.api.MeishiGetResponse.commonResponse:type_name -> papicommon.Response
	498, // 241: client.api.MusicSendBuyActionLogResponse.commonResponse:type_name -> papicommon.Response
	542, // 242: client.api.ProduceTopResponse.campaigns:type_name -> pcommon.ProduceCampaign
	543, // 243: client.api.ProduceTopResponse.storyEventType:type_name -> penum.StoryEventType
	544, // 244: client.api.ProduceTopResponse.storyEventBonus:type_name -> pcommon.StoryEventBonus
	498, // 245: client.api.ProduceTopResponse.commonResponse:type_name -> papicommon.Response
	535, // 246: client.api.PvpRateSeasonResult.beforeGrade:type_name -> penum.PvpRateGrade
	535, // 247: client.api.PvpRateSeasonResult.afterGrade:type_name -> penum.PvpRateGrade
	511, // 248: client.api.PvpRateSeasonResult.rewards:type_name -> pcommon.Reward
	498, // 249: client.api.StartupConfirmResponse.commonResponse:type_name -> papicommon.Response
	498, // 250: client.api.TutorialProduceNextResponse.commonResponse:type_name -> papicommon.Response
	498, // 251: client.api.CostumeSetResponse.commonResponse:type_name -> papicommon.Response
	498, // 252: client.api.GuildDismissResponse.commonResponse:type_name -> papicommon.Response
	498, // 253: client.api.TutorialReadDearnessStoryResponse.commonResponse:type_name -> papicommon.Response
	539, // 254: client.api.WorkFinishResult.type:type_name -> penum.WorkType
	497, // 255: client.api.WorkFinishResult.rewardResults:type_name -> pcommon.RewardResult
	545, // 256: client.api.SupportCardRarityProbability.rarity:type_name -> penum.SupportCardRarity
	302, // 257: client.api.SupportCardRarityProbability.probabilities:type_name -> client.api.SupportCardProbability
	498, // 258: client.api.MovieDeleteResponse.commonResponse:type_name -> papicommon.Response
	498, // 259: client.api.ItemSellResponse.commonResponse:type_name -> papicommon.Response
	546, // 260: client.api.AuthAgreeTermsRequest.types:type_name -> penum.TermsType
	497, // 261: client.api.MissionReceiveGroupResponse.results:type_name -> pcommon.RewardResult
	498, // 262: client.api.MissionReceiveGroupResponse.commonResponse:type_name -> papicommon.Response
	501, // 263: client.api.ProduceNextResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 264: client.api.ProduceNextResponse.commonResponse:type_name -> papicommon.Response
	547, // 265: client.api.IdolCardUpgradePotentialRankRequest.afterRank:type_name -> penum.IdolCardPotentialRank
	498, // 266: client.api.ProduceRerollSelectProduceCardResponse.commonResponse:type_name -> papicommon.Response
	233, // 267: client.api.ProduceHighScoreCharacter.rankRewards:type_name -> client.api.ProduceHighScoreRankReward
	522, // 268: client.api.CoinGashaGetResponse.coinGasha:type_name -> pcommon.CoinGasha
	498, // 269: client.api.CoinGashaGetResponse.commonResponse:type_name -> papicommon.Response
	511, // 270: client.api.ProduceHighScoreRankReward.rewards:type_name -> pcommon.Reward
	497, // 271: client.api.TowerEndResponse.results:type_name -> pcommon.RewardResult
	498, // 272: client.api.TowerEndResponse.commonResponse:type_name -> papicommon.Response
	498, // 273: client.api.TutorialProduceStepAuditionEndResponse.commonResponse:type_name -> papicommon.Response
	498, // 274: client.api.AuthLinkBandaiNamcoIdResponse.commonResponse:type_name -> papicommon.Response
	46,  // 275: client.api.GashaGetProbabilityResponse.probability:type_name -> client.api.DefaultGashaProbability
	498, // 276: client.api.GashaGetProbabilityResponse.commonResponse:type_name -> papicommon.Response
	548, // 277: client.api.NoticeFetchListRequest.category:type_name -> penum.NoticeCategory
	57,  // 278: client.api.ProduceHighScoreGetResponse.highScoreRewards:type_name -> client.api.ProduceHighScoreReward
	233, // 279: client.api.ProduceHighScoreGetResponse.rankRewards:type_name -> client.api.ProduceHighScoreRankReward
	231, // 280: client.api.ProduceHighScoreGetResponse.characters:type_name -> client.api.ProduceHighScoreCharacter
	156, // 281: client.api.ProduceHighScoreGetResponse.result:type_name -> client.api.ProduceHighScoreResult
	506, // 282: client.api.ProduceHighScoreGetResponse.startupNotifications:type_name -> pcommon.StartupNotification
	498, // 283: client.api.ProduceHighScoreGetResponse.commonResponse:type_name -> papicommon.Response
	540, // 284: client.api.ProduceStepShopBuyResponse.providedRewards:type_name -> pcommon.ProduceRewardResult
	501, // 285: client.api.ProduceStepShopBuyResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 286: client.api.ProduceStepShopBuyResponse.commonResponse:type_name -> papicommon.Response
	472, // 287: client.api.AuthLoginResponse.terms:type_name -> client.api.AuthLoginResponse.Term
	20,  // 288: client.api.AuthLoginResponse.consents:type_name -> client.api.Consent
	533, // 289: client.api.MissionListEventResponse.events:type_name -> pcommon.Event
	498, // 290: client.api.MissionListEventResponse.commonResponse:type_name -> papicommon.Response
	497, // 291: client.api.MissionReceiveResponse.results:type_name -> pcommon.RewardResult
	497, // 292: client.api.MissionReceiveResponse.missionPointResults:type_name -> pcommon.RewardResult
	474, // 293: client.api.MissionReceiveResponse.masterAchievementProgressResults:type_name -> client.api.MissionReceiveResponse.MasterAchievementProgressResult
	549, // 294: client.api.MissionReceiveResponse.mainTaskResults:type_name -> pmaster.Mission
	498, // 295: client.api.MissionReceiveResponse.commonResponse:type_name -> papicommon.Response
	498, // 296: client.api.ProduceEndBeforeLiveEvaluationResponse.commonResponse:type_name -> papicommon.Response
	498, // 297: client.api.TutorialProduceStepLessonEndResponse.commonResponse:type_name -> papicommon.Response
	550, // 298: client.api.GiftListHistoryRequest.filters:type_name -> penum.GiftFilterType
	476, // 299: client.api.MissionReceiveRequest.missions:type_name -> client.api.MissionReceiveRequest.Mission
	475, // 300: client.api.MissionReceiveRequest.missionPoints:type_name -> client.api.MissionReceiveRequest.MissionPoint
	551, // 301: client.api.GuildApplyJoinRequestRequest.routeType:type_name -> penum.GuildJoinRequestRouteType
	498, // 302: client.api.TutorialSkipResponse.commonResponse:type_name -> papicommon.Response
	477, // 303: client.api.ProduceListRentalSupportCardResponse.supportCards:type_name -> client.api.ProduceListRentalSupportCardResponse.RentalSupportCard
	477, // 304: client.api.ProduceListRentalSupportCardResponse.suggestionSupportCards:type_name -> client.api.ProduceListRentalSupportCardResponse.RentalSupportCard
	477, // 305: client.api.ProduceListRentalSupportCardResponse.npcSupportCards:type_name -> client.api.ProduceListRentalSupportCardResponse.RentalSupportCard
	498, // 306: client.api.ProduceListRentalSupportCardResponse.commonResponse:type_name -> papicommon.Response
	552, // 307: client.api.TowerStartResponse.produceCards:type_name -> pcommon.ProduceCard
	498, // 308: client.api.TowerStartResponse.commonResponse:type_name -> papicommon.Response
	553, // 309: client.api.TutorialUnlockFeatureRequest.type:type_name -> penum.TutorialType
	539, // 310: client.api.WorkStopRequest.type:type_name -> penum.WorkType
	498, // 311: client.api.GuildApproveJoinRequestResponse.commonResponse:type_name -> papicommon.Response
	554, // 312: client.api.PvpRateUpdateUserPvpRateUnitRequest.stageFormations:type_name -> pcommon.PvpRateSetupUnitStageFormation
	514, // 313: client.api.PvpRateUpdateUserPvpRateUnitRequest.recommendType:type_name -> penum.DeckRecommendType
	555, // 314: client.api.ProduceStepEventResponse.memoryRewardResults:type_name -> pcommon.ProduceMemoryRewardResult
	501, // 315: client.api.ProduceStepEventResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 316: client.api.ProduceStepEventResponse.commonResponse:type_name -> papicommon.Response
	556, // 317: client.api.ProduceHistoryResponse.produceHistory:type_name -> pcommon.ProduceHistory
	498, // 318: client.api.ProduceHistoryResponse.commonResponse:type_name -> papicommon.Response
	498, // 319: client.api.ShopCancelPurchaseTransactionResponse.commonResponse:type_name -> papicommon.Response
	478, // 320: client.api.SupportCardExchangeRequest.parameters:type_name -> client.api.SupportCardExchangeRequest.Parameter
	46,  // 321: client.api.GashaGetSelectPickupProbabilityResponse.probability:type_name -> client.api.DefaultGashaProbability
	498, // 322: client.api.GashaGetSelectPickupProbabilityResponse.commonResponse:type_name -> papicommon.Response
	480, // 323: client.api.ProduceStartRequest.supportCards:type_name -> client.api.ProduceStartRequest.SupportCard
	479, // 324: client.api.ProduceStartRequest.memories:type_name -> client.api.ProduceStartRequest.Memory
	501, // 325: client.api.ProduceStepPresentStartResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 326: client.api.ProduceStepPresentStartResponse.commonResponse:type_name -> papicommon.Response
	72,  // 327: client.api.GuildSearchResponse.list:type_name -> client.api.GuildInfo
	498, // 328: client.api.GuildSearchResponse.commonResponse:type_name -> papicommon.Response
	498, // 329: client.api.HomeConfirmBanWarningResponse.commonResponse:type_name -> papicommon.Response
	498, // 330: client.api.MusicSendActionLogResponse.commonResponse:type_name -> papicommon.Response
	498, // 331: client.api.WorkStopResponse.commonResponse:type_name -> papicommon.Response
	557, // 332: client.api.ExchangeInfo.exchangeType:type_name -> penum.ExchangeType
	558, // 333: client.api.ExchangeInfo.consumptionResourceType:type_name -> penum.ResourceType
	425, // 334: client.api.ExchangeInfo.items:type_name -> client.api.ExchangeItem
	534, // 335: client.api.ShopItem.labelTypes:type_name -> penum.ShopItemLabelType
	54,  // 336: client.api.GashaDrawStepUpResponse.drawResults:type_name -> client.api.GashaDrawResult
	510, // 337: client.api.GashaDrawStepUpResponse.gashaButton:type_name -> pcommon.GashaButton
	559, // 338: client.api.GashaDrawStepUpResponse.nextGashaStepUp:type_name -> pcommon.GashaStepUp
	511, // 339: client.api.GashaDrawStepUpResponse.bonusRewards:type_name -> pcommon.Reward
	512, // 340: client.api.GashaDrawStepUpResponse.gashaPoint:type_name -> pcommon.GashaPoint
	498, // 341: client.api.GashaDrawStepUpResponse.commonResponse:type_name -> papicommon.Response
	498, // 342: client.api.ProduceViewPictureBookLiveResponse.commonResponse:type_name -> papicommon.Response
	498, // 343: client.api.GuildLeaveResponse.commonResponse:type_name -> papicommon.Response
	498, // 344: client.api.NoticeUpdateCategoryTimeResponse.commonResponse:type_name -> papicommon.Response
	555, // 345: client.api.ProduceStepAuditionEndResponse.memoryRewardResults:type_name -> pcommon.ProduceMemoryRewardResult
	501, // 346: client.api.ProduceStepAuditionEndResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 347: client.api.ProduceStepAuditionEndResponse.commonResponse:type_name -> papicommon.Response
	418, // 348: client.api.FriendListResponse.friendList:type_name -> client.api.FriendInfo
	418, // 349: client.api.FriendListResponse.followerList:type_name -> client.api.FriendInfo
	418, // 350: client.api.FriendListResponse.suggestionList:type_name -> client.api.FriendInfo
	498, // 351: client.api.FriendListResponse.commonResponse:type_name -> papicommon.Response
	498, // 352: client.api.GuildRejectJoinRequestResponse.commonResponse:type_name -> papicommon.Response
	498, // 353: client.api.ProfileUpdateSupportCardResponse.commonResponse:type_name -> papicommon.Response
	497, // 354: client.api.ProduceReadDearnessStoryResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 355: client.api.ProduceReadDearnessStoryResponse.commonResponse:type_name -> papicommon.Response
	498, // 356: client.api.ProduceReadAdvResponse.commonResponse:type_name -> papicommon.Response
	511, // 357: client.api.SupportCardProbability.rewards:type_name -> pcommon.Reward
	498, // 358: client.api.GuildApplyJoinRequestResponse.commonResponse:type_name -> papicommon.Response
	498, // 359: client.api.MeishiUnfollowResponse.commonResponse:type_name -> papicommon.Response
	531, // 360: client.api.GashaListResponse.gashas:type_name -> pcommon.Gasha
	498, // 361: client.api.GashaListResponse.commonResponse:type_name -> papicommon.Response
	560, // 362: client.api.PvpRateStartResponse.examBattleAutoRequest:type_name -> pcommon.ExamBattleAutoRequest
	195, // 363: client.api.PvpRateStartResponse.selfFormations:type_name -> client.api.PvpRateUnitStageFormation
	399, // 364: client.api.PvpRateStartResponse.rival:type_name -> client.api.PvpRateRival
	498, // 365: client.api.PvpRateStartResponse.commonResponse:type_name -> papicommon.Response
	498, // 366: client.api.ProduceCheckProgressResponse.commonResponse:type_name -> papicommon.Response
	498, // 367: client.api.SupportCardExchangeResponse.commonResponse:type_name -> papicommon.Response
	498, // 368: client.api.FriendDeleteFollowerResponse.commonResponse:type_name -> papicommon.Response
	512, // 369: client.api.GashaExchangePointResponse.gashaPoint:type_name -> pcommon.GashaPoint
	498, // 370: client.api.GashaExchangePointResponse.commonResponse:type_name -> papicommon.Response
	139, // 371: client.api.DonationRequest.donationList:type_name -> client.api.GuildDonationInfo
	284, // 372: client.api.ExchangeGetResponse.exchange:type_name -> client.api.ExchangeInfo
	498, // 373: client.api.ExchangeGetResponse.commonResponse:type_name -> papicommon.Response
	498, // 374: client.api.SupportCardUpgradeLevelLimitRankResponse.commonResponse:type_name -> papicommon.Response
	501, // 375: client.api.ProduceUseDrinkResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 376: client.api.SupportCardEnhanceResponse.commonResponse:type_name -> papicommon.Response
	498, // 377: client.api.ShopCheckPurchaseJewelResponse.commonResponse:type_name -> papicommon.Response
	214, // 378: client.api.WorkSkipResponse.finishResult:type_name -> client.api.WorkFinishResult
	498, // 379: client.api.WorkSkipResponse.commonResponse:type_name -> papicommon.Response
	481, // 380: client.api.MeishiListFollowResponse.follows:type_name -> client.api.MeishiListFollowResponse.Follow
	498, // 381: client.api.MeishiListFollowResponse.commonResponse:type_name -> papicommon.Response
	498, // 382: client.api.SeminarEndExamResponse.commonResponse:type_name -> papicommon.Response
	533, // 383: client.api.HomeListEventResponse.events:type_name -> pcommon.Event
	498, // 384: client.api.HomeListEventResponse.commonResponse:type_name -> papicommon.Response
	498, // 385: client.api.FriendUnFollowResponse.commonResponse:type_name -> papicommon.Response
	142, // 386: client.api.GashaProbability.gashaRarityProbabilities:type_name -> client.api.GashaRarityProbability
	7,   // 387: client.api.GashaProbability.idolCardRarityProbabilities:type_name -> client.api.IdolCardRarityProbability
	217, // 388: client.api.GashaProbability.supportCardRarityProbabilities:type_name -> client.api.SupportCardRarityProbability
	497, // 389: client.api.StoryReadResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 390: client.api.StoryReadResponse.commonResponse:type_name -> papicommon.Response
	398, // 391: client.api.CoinGashaDrawResponse.drawResults:type_name -> client.api.CoinGashaDrawResult
	497, // 392: client.api.CoinGashaDrawResponse.drawCountRewardResults:type_name -> pcommon.RewardResult
	522, // 393: client.api.CoinGashaDrawResponse.coinGasha:type_name -> pcommon.CoinGasha
	498, // 394: client.api.CoinGashaDrawResponse.commonResponse:type_name -> papicommon.Response
	55,  // 395: client.api.InvitationListInviteUserResponse.list:type_name -> client.api.InviteUser
	498, // 396: client.api.InvitationListInviteUserResponse.commonResponse:type_name -> papicommon.Response
	498, // 397: client.api.MeishiDeleteResponse.commonResponse:type_name -> papicommon.Response
	498, // 398: client.api.MeishiSetResponse.commonResponse:type_name -> papicommon.Response
	498, // 399: client.api.MissionExchangePassPointResponse.commonResponse:type_name -> papicommon.Response
	498, // 400: client.api.GuildDissolveResponse.commonResponse:type_name -> papicommon.Response
	498, // 401: client.api.InvitationEnterInvitationCodeResponse.commonResponse:type_name -> papicommon.Response
	501, // 402: client.api.ProduceStepRefreshResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 403: client.api.ProduceStepRefreshResponse.commonResponse:type_name -> papicommon.Response
	560, // 404: client.api.PvpRatePlayTestResponse.examBattleAutoRequest:type_name -> pcommon.ExamBattleAutoRequest
	195, // 405: client.api.PvpRatePlayTestResponse.selfFormations:type_name -> client.api.PvpRateUnitStageFormation
	498, // 406: client.api.PvpRatePlayTestResponse.commonResponse:type_name -> papicommon.Response
	497, // 407: client.api.ShopRecoverPurchaseJewelResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 408: client.api.ShopRecoverPurchaseJewelResponse.commonResponse:type_name -> papicommon.Response
	482, // 409: client.api.StoryEventTopResponse.motions:type_name -> client.api.StoryEventTopResponse.Motion
	543, // 410: client.api.StoryEventTopResponse.storyEventType:type_name -> penum.StoryEventType
	544, // 411: client.api.StoryEventTopResponse.storyEventBonus:type_name -> pcommon.StoryEventBonus
	522, // 412: client.api.StoryEventTopResponse.boxGasha:type_name -> pcommon.CoinGasha
	547, // 413: client.api.StoryEventTopResponse.maxIdolCardPotentialRank:type_name -> penum.IdolCardPotentialRank
	561, // 414: client.api.StoryEventTopResponse.storyEventPointRewards:type_name -> pcommon.StoryEventPointReward
	506, // 415: client.api.StoryEventTopResponse.startupNotifications:type_name -> pcommon.StartupNotification
	498, // 416: client.api.StoryEventTopResponse.commonResponse:type_name -> papicommon.Response
	498, // 417: client.api.GuildEditDetailResponse.commonResponse:type_name -> papicommon.Response
	562, // 418: client.api.IdolCardUpgradeLevelLimitRankRequest.afterRank:type_name -> penum.IdolCardLevelLimitRank
	56,  // 419: client.api.TicketExchangeListItemsResponse.items:type_name -> client.api.TicketExchangeItem
	498, // 420: client.api.TicketExchangeListItemsResponse.commonResponse:type_name -> papicommon.Response
	498, // 421: client.api.ProduceReportGuildMissionResponse.commonResponse:type_name -> papicommon.Response
	563, // 422: client.api.HealthCheckResponse.status:type_name -> penum.ServingStatus
	498, // 423: client.api.IdolCardUpgradePotentialRankResponse.commonResponse:type_name -> papicommon.Response
	498, // 424: client.api.IdolCardChangeSkinResponse.commonResponse:type_name -> papicommon.Response
	498, // 425: client.api.ProfileUpdateMemoryResponse.commonResponse:type_name -> papicommon.Response
	498, // 426: client.api.PvpRateUpdateUserPvpRateUnitResponse.commonResponse:type_name -> papicommon.Response
	498, // 427: client.api.ShopRegisterPurchaseTransactionResponse.commonResponse:type_name -> papicommon.Response
	418, // 428: client.api.FriendListSuggestionResponse.list:type_name -> client.api.FriendInfo
	498, // 429: client.api.FriendListSuggestionResponse.commonResponse:type_name -> papicommon.Response
	498, // 430: client.api.MissionUrlTransitionResponse.commonResponse:type_name -> papicommon.Response
	434, // 431: client.api.NoticeFetchListResponse.list:type_name -> client.api.NoticeInfo
	498, // 432: client.api.NoticeFetchListResponse.commonResponse:type_name -> papicommon.Response
	54,  // 433: client.api.GashaDrawSelectPickupResponse.drawResults:type_name -> client.api.GashaDrawResult
	510, // 434: client.api.GashaDrawSelectPickupResponse.gashaButton:type_name -> pcommon.GashaButton
	511, // 435: client.api.GashaDrawSelectPickupResponse.bonusRewards:type_name -> pcommon.Reward
	512, // 436: client.api.GashaDrawSelectPickupResponse.gashaPoint:type_name -> pcommon.GashaPoint
	498, // 437: client.api.GashaDrawSelectPickupResponse.commonResponse:type_name -> papicommon.Response
	498, // 438: client.api.MeishiUpdateResponse.commonResponse:type_name -> papicommon.Response
	483, // 439: client.api.TowerTopResponse.towers:type_name -> client.api.TowerTopResponse.Tower
	511, // 440: client.api.TowerTopResponse.nextReward:type_name -> pcommon.Reward
	498, // 441: client.api.TowerTopResponse.commonResponse:type_name -> papicommon.Response
	72,  // 442: client.api.GuildListJoinRequestResponse.list:type_name -> client.api.GuildInfo
	498, // 443: client.api.GuildListJoinRequestResponse.commonResponse:type_name -> papicommon.Response
	564, // 444: client.api.TowerListLayerPlayerHistoriesResponse.histories:type_name -> pcommon.TowerLayerHistory
	498, // 445: client.api.TowerListLayerPlayerHistoriesResponse.commonResponse:type_name -> papicommon.Response
	511, // 446: client.api.PvpRateRateReward.reward:type_name -> pcommon.Reward
	484, // 447: client.api.GiftListResponse.userGifts:type_name -> client.api.GiftListResponse.UserGift
	498, // 448: client.api.GiftListResponse.commonResponse:type_name -> papicommon.Response
	204, // 449: client.api.PvpRateInitializeResponse.previousSeasonResult:type_name -> client.api.PvpRateSeasonResult
	498, // 450: client.api.PvpRateInitializeResponse.commonResponse:type_name -> papicommon.Response
	56,  // 451: client.api.TicketExchangeExecuteResponse.item:type_name -> client.api.TicketExchangeItem
	497, // 452: client.api.TicketExchangeExecuteResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 453: client.api.TicketExchangeExecuteResponse.commonResponse:type_name -> papicommon.Response
	497, // 454: client.api.ProduceResultResponse.rewardResults:type_name -> pcommon.RewardResult
	565, // 455: client.api.ProduceResultResponse.storyEventProduceResult:type_name -> pcommon.StoryEventProduceResult
	486, // 456: client.api.ProduceResultResponse.highScoreUpdateResult:type_name -> client.api.ProduceResultResponse.HighScoreUpdateResult
	498, // 457: client.api.ProduceResultResponse.commonResponse:type_name -> papicommon.Response
	522, // 458: client.api.CoinGashaListResponse.coinGashas:type_name -> pcommon.CoinGasha
	498, // 459: client.api.CoinGashaListResponse.commonResponse:type_name -> papicommon.Response
	498, // 460: client.api.MoneyReceiveResponse.commonResponse:type_name -> papicommon.Response
	313, // 461: client.api.GuildListDonationRequestResponse.requestList:type_name -> client.api.DonationRequest
	62,  // 462: client.api.GuildListDonationRequestResponse.memberList:type_name -> client.api.GuildMemberInfo
	498, // 463: client.api.GuildListDonationRequestResponse.commonResponse:type_name -> papicommon.Response
	497, // 464: client.api.TutorialReceiveIdolCardResponse.results:type_name -> pcommon.RewardResult
	498, // 465: client.api.TutorialReceiveIdolCardResponse.commonResponse:type_name -> papicommon.Response
	566, // 466: client.api.ProduceNextRequest.stepType:type_name -> penum.ProduceStepType
	501, // 467: client.api.ProduceStepShopEndResponse.effectResults:type_name -> pcommon.ProduceEffectResult
	498, // 468: client.api.ProduceStepShopEndResponse.commonResponse:type_name -> papicommon.Response
	548, // 469: client.api.NoticeUpdateCategoryTimeRequest.categories:type_name -> penum.NoticeCategory
	487, // 470: client.api.StartupConfirmRequest.notifications:type_name -> client.api.StartupConfirmRequest.Notification
	498, // 471: client.api.AuthSendConsentResponse.commonResponse:type_name -> papicommon.Response
	497, // 472: client.api.CoinGashaDrawResult.result:type_name -> pcommon.RewardResult
	497, // 473: client.api.CoinGashaDrawResult.providedResult:type_name -> pcommon.RewardResult
	497, // 474: client.api.CoinGashaDrawResult.cardBonusRewardResults:type_name -> pcommon.RewardResult
	504, // 475: client.api.PvpRateRival.profile:type_name -> pcommon.SimpleProfile
	525, // 476: client.api.PvpRateRival.rivalType:type_name -> penum.PvpRateRivalType
	195, // 477: client.api.PvpRateRival.formations:type_name -> client.api.PvpRateUnitStageFormation
	497, // 478: client.api.MissionReceiveGroupAllResponse.groupResults:type_name -> pcommon.RewardResult
	497, // 479: client.api.MissionReceiveGroupAllResponse.results:type_name -> pcommon.RewardResult
	498, // 480: client.api.MissionReceiveGroupAllResponse.commonResponse:type_name -> papicommon.Response
	498, // 481: client.api.TutorialProduceStepAuditionExamEndResponse.commonResponse:type_name -> papicommon.Response
	498, // 482: client.api.ProduceChangeCostumeResponse.commonResponse:type_name -> papicommon.Response
	511, // 483: client.api.PvpRateGetResponse.playReward:type_name -> pcommon.Reward
	377, // 484: client.api.PvpRateGetResponse.rateRewards:type_name -> client.api.PvpRateRateReward
	59,  // 485: client.api.PvpRateGetResponse.rankRewards:type_name -> client.api.PvpRateRankReward
	535, // 486: client.api.PvpRateGetResponse.grade:type_name -> penum.PvpRateGrade
	537, // 487: client.api.PvpRateGetResponse.meishi:type_name -> pcommon.Meishi
	399, // 488: client.api.PvpRateGetResponse.rivals:type_name -> client.api.PvpRateRival
	560, // 489: client.api.PvpRateGetResponse.examBattleAutoRequest:type_name -> pcommon.ExamBattleAutoRequest
	195, // 490: client.api.PvpRateGetResponse.selfFormations:type_name -> client.api.PvpRateUnitStageFormation
	399, // 491: client.api.PvpRateGetResponse.currentRival:type_name -> client.api.PvpRateRival
	498, // 492: client.api.PvpRateGetResponse.commonResponse:type_name -> papicommon.Response
	489, // 493: client.api.MasterGetResponse.masterTag:type_name -> client.api.MasterGetResponse.MasterTag
	498, // 494: client.api.ProduceStepAuditionRefreshResponse.commonResponse:type_name -> papicommon.Response
	497, // 495: client.api.StoryReadDearnessStoryResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 496: client.api.StoryReadDearnessStoryResponse.commonResponse:type_name -> papicommon.Response
	498, // 497: client.api.TowerCheckResponse.commonResponse:type_name -> papicommon.Response
	511, // 498: client.api.GashaSelectPickupRequest.pickupRewards:type_name -> pcommon.Reward
	566, // 499: client.api.SeminarGetExamResponse.stepType:type_name -> penum.ProduceStepType
	567, // 500: client.api.SeminarGetExamResponse.examBattleParameterTypes:type_name -> penum.ProduceParameterType
	552, // 501: client.api.SeminarGetExamResponse.produceCards:type_name -> pcommon.ProduceCard
	491, // 502: client.api.SeminarGetExamResponse.turnNavigations:type_name -> client.api.SeminarGetExamResponse.TurnNavigation
	492, // 503: client.api.SeminarGetExamResponse.failureNavigations:type_name -> client.api.SeminarGetExamResponse.FailureNavigation
	498, // 504: client.api.SeminarGetExamResponse.commonResponse:type_name -> papicommon.Response
	498, // 505: client.api.CharacterCheckRosterResponse.commonResponse:type_name -> papicommon.Response
	504, // 506: client.api.FriendInfo.profile:type_name -> pcommon.SimpleProfile
	493, // 507: client.api.FriendInfo.supportCard:type_name -> client.api.FriendInfo.SupportCard
	500, // 508: client.api.FriendInfo.memory:type_name -> pcommon.Memory
	62,  // 509: client.api.GuildListMemberResponse.list:type_name -> client.api.GuildMemberInfo
	62,  // 510: client.api.GuildListMemberResponse.joinRequestList:type_name -> client.api.GuildMemberInfo
	498, // 511: client.api.GuildListMemberResponse.commonResponse:type_name -> papicommon.Response
	498, // 512: client.api.TowerUpdateMemoryDeckResponse.commonResponse:type_name -> papicommon.Response
	539, // 513: client.api.WorkStartRequest.type:type_name -> penum.WorkType
	511, // 514: client.api.ExchangeItem.reward:type_name -> pcommon.Reward
	494, // 515: client.api.ExchangeItem.consumptionResources:type_name -> client.api.ExchangeItem.ConsumptionResource
	498, // 516: client.api.IdolCardReleaseResponse.commonResponse:type_name -> papicommon.Response
	498, // 517: client.api.MissionReceivePassResponse.commonResponse:type_name -> papicommon.Response
	498, // 518: client.api.PhotoUpdateProtectionResponse.commonResponse:type_name -> papicommon.Response
	498, // 519: client.api.ProduceContinueResponse.commonResponse:type_name -> papicommon.Response
	528, // 520: client.api.ShopListItemsResponse.list:type_name -> pmaster.ShopItem
	498, // 521: client.api.ShopListItemsResponse.commonResponse:type_name -> papicommon.Response
	496, // 522: client.api.GashaExpirePointResponse.gashaPoints:type_name -> client.api.GashaExpirePointResponse.GashaPoint
	497, // 523: client.api.GashaExpirePointResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 524: client.api.GashaExpirePointResponse.commonResponse:type_name -> papicommon.Response
	548, // 525: client.api.NoticeInfo.category:type_name -> penum.NoticeCategory
	568, // 526: client.api.NoticeInfo.type:type_name -> penum.NoticeType
	498, // 527: client.api.PvpRatePlayExamBattleResponse.commonResponse:type_name -> papicommon.Response
	497, // 528: client.api.ShopPurchaseJewelResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 529: client.api.ShopPurchaseJewelResponse.commonResponse:type_name -> papicommon.Response
	498, // 530: client.api.ShopRegisterBirthdayResponse.commonResponse:type_name -> papicommon.Response
	553, // 531: client.api.TutorialProgressRequest.type:type_name -> penum.TutorialType
	497, // 532: client.api.ItemExchangeIdolCardPieceResponse.rewardResults:type_name -> pcommon.RewardResult
	498, // 533: client.api.ItemExchangeIdolCardPieceResponse.commonResponse:type_name -> papicommon.Response
	511, // 534: client.api.SeminarListExamResponse.Exam.rewards:type_name -> pcommon.Reward
	444, // 535: client.api.SeminarListExamResponse.ExamGroup.exams:type_name -> client.api.SeminarListExamResponse.Exam
	569, // 536: client.api.LoginBonusCheckResponse.Info.type:type_name -> penum.LoginBonusType
	511, // 537: client.api.LoginBonusCheckResponse.Info.rewards:type_name -> pcommon.Reward
	511, // 538: client.api.LoginBonusCheckResponse.TotalInfo.reward:type_name -> pcommon.Reward
	511, // 539: client.api.LoginBonusCheckResponse.TotalInfo.nextReward:type_name -> pcommon.Reward
	195, // 540: client.api.PvpRateListHistoryResponse.PvpRateHistory.selfFormations:type_name -> client.api.PvpRateUnitStageFormation
	195, // 541: client.api.PvpRateListHistoryResponse.PvpRateHistory.rivalFormations:type_name -> client.api.PvpRateUnitStageFormation
	558, // 542: client.api.GiftListHistoryResponse.UserGiftHistory.resourceType:type_name -> penum.ResourceType
	537, // 543: client.api.MeishiListResponse.MeishiInfo.meishi:type_name -> pcommon.Meishi
	505, // 544: client.api.ProduceHighScoreRankingResponse.Rank.grade:type_name -> penum.ResultGrade
	504, // 545: client.api.ProduceHighScoreRankingResponse.Rank.profile:type_name -> pcommon.SimpleProfile
	502, // 546: client.api.AuthSendConsentRequest.Consent.consentType:type_name -> penum.ConsentType
	503, // 547: client.api.AuthSendConsentRequest.Consent.agreementType:type_name -> penum.ConsentAgreementType
	570, // 548: client.api.MeishiUpdateRequest.Object.objectType:type_name -> penum.MeishiObjectType
	520, // 549: client.api.GuildTopResponse.HomeInfo.achievement:type_name -> pcommon.Achievement
	518, // 550: client.api.GuildTopResponse.HomeInfo.activityPolicyType:type_name -> penum.GuildActivityPolicyType
	137, // 551: client.api.GuildTopResponse.HomeInfo.leaderMessageReactionList:type_name -> client.api.GuildReactionInfo
	62,  // 552: client.api.GuildTopResponse.HomeInfo.memberList:type_name -> client.api.GuildMemberInfo
	62,  // 553: client.api.GuildTopResponse.HomeInfo.joinRequestList:type_name -> client.api.GuildMemberInfo
	313, // 554: client.api.GuildTopResponse.HomeInfo.donationRequestList:type_name -> client.api.DonationRequest
	457, // 555: client.api.GuildTopResponse.HomeInfo.receivedDonationInfo:type_name -> client.api.GuildTopResponse.HomeInfo.ReceivedDonationInfo
	139, // 556: client.api.GuildTopResponse.HomeInfo.ReceivedDonationInfo.donationList:type_name -> client.api.GuildDonationInfo
	528, // 557: client.api.ShopTopResponse.Shop.shopItems:type_name -> pmaster.ShopItem
	511, // 558: client.api.GashaGetPointExchangeResponse.ExchangeResource.rewards:type_name -> pcommon.Reward
	504, // 559: client.api.ProduceListRentalMemoryResponse.RentalMemory.profile:type_name -> pcommon.SimpleProfile
	500, // 560: client.api.ProduceListRentalMemoryResponse.RentalMemory.memory:type_name -> pcommon.Memory
	571, // 561: client.api.HomeEnterResponse.FeatureMaintenance.type:type_name -> penum.FeatureMaintenanceType
	22,  // 562: client.api.ProduceRankingTopResponse.Ranking.topRanks:type_name -> client.api.ProduceRank
	505, // 563: client.api.ProduceRankingTopResponse.Ranking.selfHighestGrade:type_name -> penum.ResultGrade
	513, // 564: client.api.ProfileGetResponse.ProduceRecord.produceType:type_name -> penum.ProduceType
	572, // 565: client.api.TowerGetLayerResponse.Exam.examEffectType:type_name -> penum.ProduceExamEffectType
	573, // 566: client.api.TowerListLayersResponse.TowerLayerRank.examTriggerCounts:type_name -> pcommon.ExamTriggerCount
	511, // 567: client.api.TowerListLayersResponse.TowerLayerRank.reward:type_name -> pcommon.Reward
	468, // 568: client.api.TowerListLayersResponse.TowerLayer.ranks:type_name -> client.api.TowerListLayersResponse.TowerLayerRank
	511, // 569: client.api.TowerListLayersResponse.TowerLayer.rewards:type_name -> pcommon.Reward
	500, // 570: client.api.PvpRateUnitStageFormation.Slot.mainMemory:type_name -> pcommon.Memory
	500, // 571: client.api.PvpRateUnitStageFormation.Slot.subMemory:type_name -> pcommon.Memory
	574, // 572: client.api.HomeSetCharactersRequest.HomeCharacter.homeType:type_name -> penum.HomeType
	546, // 573: client.api.AuthLoginResponse.Term.type:type_name -> penum.TermsType
	473, // 574: client.api.MissionReceiveResponse.MasterAchievementProgressResult.masterAchievementProgresses:type_name -> client.api.MissionReceiveResponse.MasterAchievementProgress
	504, // 575: client.api.ProduceListRentalSupportCardResponse.RentalSupportCard.profile:type_name -> pcommon.SimpleProfile
	538, // 576: client.api.ProduceListRentalSupportCardResponse.RentalSupportCard.levelLimitRank:type_name -> penum.SupportCardLevelLimitRank
	537, // 577: client.api.MeishiListFollowResponse.Follow.meishi:type_name -> pcommon.Meishi
	575, // 578: client.api.StoryEventTopResponse.Motion.motionType:type_name -> penum.StoryEventMotionType
	558, // 579: client.api.GiftListResponse.UserGift.resourceType:type_name -> penum.ResourceType
	511, // 580: client.api.ProduceResultResponse.HighScoreReward.reward:type_name -> pcommon.Reward
	485, // 581: client.api.ProduceResultResponse.HighScoreUpdateResult.highScoreRewards:type_name -> client.api.ProduceResultResponse.HighScoreReward
	488, // 582: client.api.MasterGetResponse.MasterTag.masterTagPacks:type_name -> client.api.MasterGetResponse.MasterTagPack
	576, // 583: client.api.SeminarGetExamResponse.TurnNavigationStep.navigationType:type_name -> penum.TutorialNavigationType
	577, // 584: client.api.SeminarGetExamResponse.TurnNavigation.fieldStatusCheckType:type_name -> penum.ProduceExamTriggerCheckType
	578, // 585: client.api.SeminarGetExamResponse.TurnNavigation.fieldStatusType:type_name -> penum.ProduceExamFieldStatusType
	490, // 586: client.api.SeminarGetExamResponse.TurnNavigation.steps:type_name -> client.api.SeminarGetExamResponse.TurnNavigationStep
	552, // 587: client.api.SeminarGetExamResponse.FailureNavigation.produceCards1:type_name -> pcommon.ProduceCard
	552, // 588: client.api.SeminarGetExamResponse.FailureNavigation.produceCards2:type_name -> pcommon.ProduceCard
	538, // 589: client.api.FriendInfo.SupportCard.levelLimitRank:type_name -> penum.SupportCardLevelLimitRank
	511, // 590: client.api.GashaExpirePointResponse.GashaPoint.reward:type_name -> pcommon.Reward
	495, // 591: client.api.GashaExpirePointResponse.GashaPoint.gashaBanners:type_name -> client.api.GashaExpirePointResponse.GashaBanner
	405, // 592: client.api.System.Check:input_type -> client.api.SystemCheckRequest
	416, // 593: client.api.Auth.Login:input_type -> client.api.AuthLoginRequest
	0,   // 594: client.api.Master.Get:input_type -> client.api.Empty
	0,   // 595: client.api.User.Get:input_type -> client.api.Empty
	0,   // 596: client.api.Home.Login:input_type -> client.api.Empty
	0,   // 597: client.api.Home.Enter:input_type -> client.api.Empty
	0,   // 598: client.api.LoginBonus.Check:input_type -> client.api.Empty
	0,   // 599: client.api.LoginBonus.Confirm:input_type -> client.api.Empty
	99,  // 600: client.api.System.Check:output_type -> client.api.SystemCheckResponse
	245, // 601: client.api.Auth.Login:output_type -> client.api.AuthLoginResponse
	408, // 602: client.api.Master.Get:output_type -> client.api.MasterGetResponse
	84,  // 603: client.api.User.Get:output_type -> client.api.UserGetResponse
	26,  // 604: client.api.Home.Login:output_type -> client.api.HomeLoginResponse
	132, // 605: client.api.Home.Enter:output_type -> client.api.HomeEnterResponse
	24,  // 606: client.api.LoginBonus.Check:output_type -> client.api.LoginBonusCheckResponse
	140, // 607: client.api.LoginBonus.Confirm:output_type -> client.api.LoginBonusConfirmResponse
	600, // [600:608] is the sub-list for method output_type
	592, // [592:600] is the sub-list for method input_type
	592, // [592:592] is the sub-list for extension type_name
	592, // [592:592] is the sub-list for extension extendee
	0,   // [0:592] is the sub-list for field type_name
}

func init() { file_papi_proto_init() }
func file_papi_proto_init() {
	if File_papi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_papi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketExchangeExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetPrecautionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDonateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CostumeCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardRarityProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStepAuditionExamEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarListExamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildReceiveDonationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeListAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepShopStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerListLayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetProbabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetStepUpProbabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBonusCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendUnFollowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationReceiveInvitationPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoUpdateNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepPresentEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CostumeSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaDrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardUpgradeLevelLimitRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStartBeforeLiveEvaluationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthGetConsentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeExecuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerReceiveLayerCountRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceReadAdvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEstablishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceUpdateSupportCardDeck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionEndExamBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRetireResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultGashaProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendFollowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeUpdateDetailTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateListHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialSetNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaDrawResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketExchangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEditDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEstablishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerReceiveTotalClearRankRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceActivateEffectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepPresentEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchaseTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialSkipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftListHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryUpdateTagSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSendConsentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaResetBoxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceEndBeforeLiveEvaluationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateSupportCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepLessonEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardChangeSkinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchaseJewelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerUpdateMemoryDeckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseActionPointRecoveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaSelectPickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryEventTopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRankingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileBirthday); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDonateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRequestDonationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSetCharactersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEditLeaderMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaPlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiReportXPostMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceViewPictureBookLiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUnlinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetPrecautionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepPresentReceiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChangeLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceUpdateMemoryDeckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryUnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFinishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetStepUpProbabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRegisterPurchaseTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetPointExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceUpdateMemoryDeckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceUpdateMemoryDeck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceListRentalMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialReadDearnessStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepUpGashaProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRequestDonationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeEnterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerReceiveTotalClearRankRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiFollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionExchangePassPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStartBeforeLiveEvaluationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildReactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRankingTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDonationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBonusConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerReceiveLayerCountRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaRarityProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepLessonEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryReadDearnessStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStepPresentReceiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceDiscardDrinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryUnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCancelJoinRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionEndExamBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateRankingUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardUpgradeLevelLimitRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationReceiveInvitationPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkSkipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarEndExamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryReadProduceStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCancelJoinRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionUrlTransitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepLessonStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerGetLayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerListLayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildUpdateLeaderMessageReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryUpdateProtectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialCheckBeforeLiveProduceEvaluationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepShopEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateBirthdayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CostumeCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicSendActionLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthAgreeTermsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryReadProduceStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepPresentReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceDiscardDrinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceUpdateSupportCardDeckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStepPresentReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialUnlockFeatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildUpdateLeaderMessageReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryUpdateProtectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceUpdateSupportCardDeckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateUnitStageFormation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateListRankingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSetCharactersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendFollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicSendBuyActionLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthMigrateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateSeasonResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartupConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceCheckProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoUpdateNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CostumeSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarGetExamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDismissResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialReadDearnessStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFinishResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCheckPurchaseJewelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardRarityProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceGrowthResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRankingTopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthAgreeTermsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceChangeCostumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardUpgradePotentialRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialReceiveIdolCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialSetNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRerollSelectProduceCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStepAuditionEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLinkBandaiNamcoIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaDrawStepUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetProbabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeFetchListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepShopBuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceActivateEffectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceReadDearnessStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRejectJoinRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionListEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceReportGuildMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaExchangePointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceEndBeforeLiveEvaluationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiUnfollowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardEnhanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStepLessonEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftListHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildApplyJoinRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialSkipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreRankingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceListRentalSupportCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopListItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseActionPointRecoveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialUnlockFeatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildApproveJoinRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceivePassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateUpdateUserPvpRateUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCancelPurchaseTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetSelectPickupProbabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepPresentStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeConfirmBanWarningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicSendActionLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkStopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepShopBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaDrawStepUpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceViewPictureBookLiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicSendBuyActionLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildLeaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[290].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[291].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[292].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeUpdateCategoryTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[293].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepLessonStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[294].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[295].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLinkBandaiNamcoIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[296].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[297].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildRejectJoinRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[298].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterCheckRosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[299].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateSupportCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[300].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceReadDearnessStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[301].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceReadAdvResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[302].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[303].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildApplyJoinRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[304].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiUnfollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[305].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[306].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiReportXPostMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[307].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[308].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPrepareMigrationBandaiNamcoIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[309].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceCheckProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[310].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[311].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendDeleteFollowerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[312].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaExchangePointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[313].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[314].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRecoverPurchaseJewelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[315].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[316].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardUpgradeLevelLimitRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[317].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPrepareMigrationBandaiNamcoIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[318].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceUseDrinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[319].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardEnhanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[320].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopCheckPurchaseJewelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[321].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkSkipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[322].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[323].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthMigrateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[324].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiListFollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[325].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarEndExamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[326].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeListEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[327].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendUnFollowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[328].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaProbability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[329].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[330].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaDrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[331].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendDeleteFollowerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[332].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationListInviteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[333].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[334].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[335].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionExchangePassPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[336].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateGetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[337].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetSelectPickupProbabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[338].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[339].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDissolveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[340].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationEnterInvitationCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[341].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepRefreshResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[342].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRatePlayTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[343].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRecoverPurchaseJewelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[344].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryEventTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[345].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[346].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[347].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEditDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[348].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[349].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaDrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[350].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStepLessonEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[351].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardUpgradeLevelLimitRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[352].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemExchangeIdolCardPieceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[353].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketExchangeListItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[354].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[355].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveGroupAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[356].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceReportGuildMissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[357].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRerollSelectProduceCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[358].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRegisterBirthdayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[359].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildDismissRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[360].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[361].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardUpgradePotentialRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[362].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardChangeSkinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[363].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[364].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateUpdateUserPvpRateUnitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[365].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRegisterPurchaseTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[366].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaResetBoxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[367].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendListSuggestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[368].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaDrawSelectPickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[369].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionUrlTransitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[370].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChangeLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[371].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeFetchListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[372].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaDrawSelectPickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[373].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[374].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[375].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildListJoinRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[376].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerListLayerPlayerHistoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[377].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateRateReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[378].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaDrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[379].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[380].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionRefreshRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[381].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateInitializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[382].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoUpdateProtectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[383].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketExchangeExecuteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[384].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[385].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[386].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildEditLeaderMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[387].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoneyReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[388].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryUpdateTagSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[389].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerListLayerPlayerHistoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[390].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildListDonationRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[391].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialReceiveIdolCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[392].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[393].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepShopEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[394].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeUpdateCategoryTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[395].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartupConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[396].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketExchangeListItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[397].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSendConsentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[398].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinGashaDrawResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[399].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateRival); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[400].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildApproveJoinRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[401].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveGroupAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[402].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepPresentStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[403].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProduceStepAuditionExamEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[404].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceChangeCostumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[405].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[406].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[407].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationEnterInvitationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[408].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[409].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionRefreshResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[410].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryReadDearnessStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[411].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetPointExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[412].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[413].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaSelectPickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[414].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceContinueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[415].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarGetExamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[416].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[417].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterCheckRosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[418].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[419].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerGetLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[420].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepShopStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[421].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepAuditionEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[422].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildListMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[423].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerUpdateMemoryDeckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[424].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[425].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[426].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[427].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdolCardReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[428].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[429].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceivePassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[430].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoUpdateProtectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[431].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceContinueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[432].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopListItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[433].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaExpirePointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[434].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[435].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeUpdateDetailTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[436].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStepRefreshRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[437].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRatePlayExamBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[438].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopPurchaseJewelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[439].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopRegisterBirthdayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[440].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TutorialProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[441].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemExchangeIdolCardPieceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[442].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiFollowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[443].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateBirthdayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[444].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarListExamResponse_Exam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[445].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarListExamResponse_ExamGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[446].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBonusCheckResponse_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[447].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBonusCheckResponse_TotalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[448].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeLoginResponse_FriendResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[449].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateListHistoryResponse_PvpRateHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[450].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftListHistoryResponse_UserGiftHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[451].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiListResponse_MeishiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[452].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceHighScoreRankingResponse_Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[453].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSendConsentRequest_Consent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[454].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiUpdateRequest_MeishiBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[455].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiUpdateRequest_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[456].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTopResponse_HomeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[457].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildTopResponse_HomeInfo_ReceivedDonationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[458].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckResponse_ReviewInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[459].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCheckResponse_MaintenanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[460].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopTopResponse_Shop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[461].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaGetPointExchangeResponse_ExchangeResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[462].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceListRentalMemoryResponse_RentalMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[463].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeEnterResponse_FeatureMaintenance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[464].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceRankingTopResponse_Ranking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[465].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileGetResponse_ProduceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[466].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarEndExamRequest_Turn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[467].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerGetLayerResponse_Exam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[468].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerListLayersResponse_TowerLayerRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[469].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerListLayersResponse_TowerLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[470].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PvpRateUnitStageFormation_Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[471].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeSetCharactersRequest_HomeCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[472].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLoginResponse_Term); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[473].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveResponse_MasterAchievementProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[474].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveResponse_MasterAchievementProgressResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[475].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveRequest_MissionPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[476].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionReceiveRequest_Mission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[477].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceListRentalSupportCardResponse_RentalSupportCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[478].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportCardExchangeRequest_Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[479].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStartRequest_Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[480].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceStartRequest_SupportCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[481].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeishiListFollowResponse_Follow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[482].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryEventTopResponse_Motion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[483].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TowerTopResponse_Tower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[484].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiftListResponse_UserGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[485].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceResultResponse_HighScoreReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[486].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProduceResultResponse_HighScoreUpdateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[487].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartupConfirmRequest_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[488].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterGetResponse_MasterTagPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[489].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterGetResponse_MasterTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[490].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarGetExamResponse_TurnNavigationStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[491].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarGetExamResponse_TurnNavigation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[492].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeminarGetExamResponse_FailureNavigation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[493].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo_SupportCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[494].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeItem_ConsumptionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[495].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaExpirePointResponse_GashaBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_papi_proto_msgTypes[496].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GashaExpirePointResponse_GashaPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_papi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   497,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_papi_proto_goTypes,
		DependencyIndexes: file_papi_proto_depIdxs,
		MessageInfos:      file_papi_proto_msgTypes,
	}.Build()
	File_papi_proto = out.File
	file_papi_proto_rawDesc = nil
	file_papi_proto_goTypes = nil
	file_papi_proto_depIdxs = nil
}

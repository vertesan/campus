package main

import (
  "fmt"
  "os"
  "testing"
  "vertesan/campus/analyser"
  "vertesan/campus/network"
  "vertesan/campus/network/rpc"
  "vertesan/campus/octo"
  "vertesan/campus/proto/papi"
  "vertesan/campus/utils"

  "google.golang.org/protobuf/encoding/protojson"
  "google.golang.org/protobuf/proto"
)

func TestDecryptOctoList(t *testing.T) {
  fs, err := os.Open("cache/octorespon.bin")
  if err != nil {
    panic(err)
  }
  db, err := octo.DecryptOctoList(fs, 0)
  if err != nil {
    panic(err)
  }
  utils.UNUSED(db)
}

func TestLogin(t *testing.T) {
  manager := &network.NetworkManager{}
  manager.Login()
}

func TestAnalyze(t *testing.T) {
  analyser.Analyze()
}

func TestSerialize(t *testing.T) {
  req := &papi.SystemCheckRequest{}
  req.IdToken = "abcd1234zxcv0987"
  msgBytes, err := proto.Marshal(req)
  if err != nil {
    t.Fatalf("Failed to marshal wired format message. %s", err)
  }
  raw := rpc.Serialize(msgBytes)
  fmt.Printf("%X\n", raw)
  desData := rpc.Deserialize(raw)
  desIns := &papi.SystemCheckRequest{}
  proto.Unmarshal(desData, desIns)
  fmt.Printf("%s\n", desIns.IdToken)
}

func TestDeserializeFile(t *testing.T) {
  fileName := "End"
  raw, err := os.ReadFile("cache/" + fileName)
  if err != nil {
    panic(err)
  }
  bodyBytes := rpc.Deserialize(raw[5:])
  var pb papi.ProduceEndResponse
  if err := proto.Unmarshal(bodyBytes, &pb); err != nil {
    t.Fatalf("Cannot unmarshal message. %s", err)
  }
  marshalOptions := protojson.MarshalOptions{
    Multiline:         true,
    AllowPartial:      false,
    UseProtoNames:     true,
    UseEnumNumbers:    false,
    EmitUnpopulated:   true,
    EmitDefaultValues: false,
  }
  jsonBytes, err := marshalOptions.Marshal(&pb)
  if err != nil {
    panic(err)
  }
  if err := os.WriteFile("cache/"+fileName+".json", jsonBytes, 0644); err != nil {
    panic(err)
  }
}

func TestDeserialize(t *testing.T) {
  bodyBytes := rpc.Deserialize(deserializeTestData)
  var response papi.SystemCheckResponse
  if err := proto.Unmarshal(bodyBytes, &response); err != nil {
    t.Fatalf("Cannot unmarshal message. %s", err)
  }
  fmt.Print(response.OctoHost)
}

var (
  deserializeTestData = []byte{
    0x00, 0x00, 0x00, 0x00, 0xE8, 0x06, 0x00, 0x00, 0x04, 0x4B, 0x78, 0x62, 0x41, 0x44, 0x0D, 0xC1,
    0x1C, 0x02, 0x75, 0x11, 0x5E, 0xDE, 0x6F, 0x76, 0x82, 0x10, 0xF1, 0xA0, 0x65, 0xF7, 0x16, 0x2D,
    0x13, 0x4C, 0x26, 0x2A, 0x50, 0xBF, 0xCE, 0x8D, 0x83, 0xA7, 0x8A, 0xFA, 0xB0, 0x4D, 0x92, 0xD7,
    0xB7, 0x9B, 0xAE, 0x0E, 0x29, 0x4F, 0x8C, 0x79, 0x8F, 0xD9, 0xC2, 0x78, 0x3C, 0x9D, 0x0A, 0x02,
    0x04, 0x01, 0x9C, 0xC0, 0x32, 0x91, 0x70, 0x9F, 0x29, 0x39, 0x05, 0xB6, 0x98, 0xE7, 0xC2, 0xDF,
    0x08, 0xBE, 0x83, 0x82, 0x36, 0x94, 0xA3, 0x8C, 0xC0, 0x17, 0x67, 0x84, 0xAC, 0xDD, 0x98, 0x38,
    0x61, 0x1E, 0x24, 0xE4, 0x79, 0x2E, 0xE8, 0x65, 0x6E, 0x19, 0xD9, 0x17, 0x17, 0x98, 0x52, 0x10,
    0x23, 0x3C, 0x47, 0x9D, 0x12, 0x64, 0xB8, 0xD8, 0xF4, 0xBB, 0x1D, 0xE8, 0x63, 0xAB, 0x46, 0xFA,
    0xC6, 0x90, 0x14, 0x06, 0xC9, 0x4A, 0x40, 0x00, 0x4D, 0x04, 0xDB, 0x11, 0x7E, 0x67, 0x18, 0xA1,
    0xA5, 0xDC, 0x2A, 0x5E, 0x33, 0xD0, 0x30, 0xE4, 0xD8, 0xCA, 0x81, 0xA2, 0x77, 0x87, 0x2F, 0x69,
    0x53, 0x77, 0xAA, 0x0C, 0x2E, 0x32, 0xC2, 0x24, 0x48, 0x79, 0xD9, 0xCA, 0xCA, 0xA0, 0xE5, 0x5E,
    0xE7, 0x06, 0x7C, 0x9A, 0x97, 0xBB, 0xB9, 0x8F, 0x23, 0xCE, 0x3F, 0x92, 0x50, 0x70, 0xFA, 0xAA,
    0x79, 0x88, 0x36, 0x7D, 0x77, 0x3F, 0x99, 0x83, 0xE1, 0x8A, 0xF7, 0x3E, 0x82, 0xFA, 0x62, 0x95,
    0x43, 0xFE, 0xE3, 0xE2, 0xAA, 0xEC, 0x56, 0x87, 0xD8, 0x24, 0xDD, 0x76, 0x4C, 0x2F, 0x94, 0xB0,
    0xC6, 0x3B, 0x33, 0x6F, 0x79, 0x8A, 0xB6, 0x1A, 0x09, 0x64, 0xD5, 0x3B, 0x80,
  }
)
